{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ng2-modal-module.min.js","webpack:///webpack/bootstrap 096a9b07c28120374708","webpack:///./index.ts","webpack:///./~/@angular/core/bundles/core.umd.js","webpack:///./~/rx-pubsub/dist/rx-pubsub.min.js","webpack:///./~/rxjs/Subscription.js","webpack:///./~/rxjs/symbol/rxSubscriber.js","webpack:///./~/rxjs/util/root.js","webpack:///./~/@angular/common/bundles/common.umd.js","webpack:///./~/rxjs/Observable.js","webpack:///./~/rxjs/Observer.js","webpack:///./~/rxjs/Subscriber.js","webpack:///./~/rxjs/symbol/observable.js","webpack:///./~/rxjs/util/errorObject.js","webpack:///./~/rxjs/util/isFunction.js","webpack:///./~/smart-extend/lib/browser.js","webpack:///./src/components/modal-window/modal-window.component.ts","webpack:///./src/services/modal-window.service.ts","webpack:///./~/@angular/platform-browser/bundles/platform-browser.umd.js","webpack:///./~/rxjs/Subject.js","webpack:///./~/rxjs/SubjectSubscription.js","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js","webpack:///./~/rxjs/util/UnsubscriptionError.js","webpack:///./~/rxjs/util/isArray.js","webpack:///./~/rxjs/util/isObject.js","webpack:///./~/rxjs/util/toSubscriber.js","webpack:///./~/rxjs/util/tryCatch.js","webpack:///./~/component-injector/src/component-injector.ts","webpack:///./~/trust-html-pipe/src/trust-html.pipe.ts","webpack:///./src/modal.module.ts","webpack:///(webpack)/buildin/module.js","webpack:///./~/xdom-util/dist/xdom-util.min.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","modal_module_1","ModalModule","modal_window_service_1","ModalWindowService","modal_window_component_1","ModalWindowComponent","global","rxjs_symbol_observable","rxjs_Subject","rxjs_Observable","scheduleMicroTask","fn","Zone","current","getTypeNameForDebugging","type","isPresent","obj","isBlank","stringify","token","overriddenName","name","res","toString","newLineIndex","indexOf","substring","looseIdentical","b","isNaN","isJsObject","o","print","console","log","warn","getSymbolIterator","_symbolIterator","Symbol","iterator","keys","getOwnPropertyNames","Map","prototype","length","key","isPrimitive","extractAnnotation","annotation","hasOwnProperty","applyParams","fnOrArray","String","Function","Number","Array","Error","isArray","annotations","annoLength","paramsAnnotations","ii","paramAnnotations","push","j","Reflect","defineMetadata","Class","clsDef","constructor","undefined","proto","extends","create","constructorName","_nextClassId","makeDecorator","props","parentClass","chainFn","DecoratorFactory","objOrType","getOwnMetadata","metaCtor","annotationInstance","chainAnnotation","TypeDecorator","cls","makeMetadataCtor","annotationCls","_this","args","_i","arguments","forEach","prop","argVal","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","apply","_a","bind","concat","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","findFirstClosedCycle","constructResolvingPath","reversed","slice","reverse","tokenStrs","map","k","join","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","parentCtor","resolveReflectiveFactory","provider","factoryFn","resolvedDeps","useClass","reflector","_dependenciesFor","useExisting","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","get","useFactory","constructDependencies","deps","useValue","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","provide","multi","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","values","normalizedProvidersMap","existing","multiProvider","MixingMultiProvidersWithRegularProvidersError","resolvedFactories","set","resolvedProvider","Type","InvalidProviderError","typeOrFunc","dependencies","params_1","t","_extractToken","params","some","NoAnnotationError","metadata","optional","Inject","_createDependency","visibility","paramMetadata","Optional","Self","SkipSelf","_mapProviders","injector","_providers","getProviderAtIndex","isListLikeIterable","areIterablesEqual","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","item","isPromise","then","isObservable","$$observable","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","_throwError","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","devModeEqual","createRenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderComponentType","nextRenderComponentTypeId","addToArray","e","array","interpolate","valueCount","constAndInterp","result","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","checkBinding","throwOnChange","oldValue","newValue","ExpressionChangedAfterItHasBeenCheckedError","castByValue","input","pureProxy1","v0","UNINITIALIZED","p0","pureProxy2","v1","p1","pureProxy3","v2","p2","pureProxy4","v3","p3","pureProxy5","v4","p4","pureProxy6","v5","p5","pureProxy7","v6","p6","pureProxy8","v7","p7","pureProxy9","v8","p8","pureProxy10","v9","p9","setBindingDebugInfoForChanges","renderer","el","changes","setBindingDebugInfo","currentValue","camelCaseToDashCase","replace","CAMEL_CASE_REGEXP","toLowerCase","createRenderElement","parentElement","attrs","debugInfo","createElement","setElementAttribute","selectOrCreateRenderHostElement","elementName","rootSelectorOrNode","hostElement","selectRootElement","VERSION","full","subscribeToRenderElement","view","element","eventNamesAndTargets","listener","disposables","createEmptyInlineArray","eventName","eventTarget","disposable","listenGlobal","listen","disposeInlineArray","noop","InlineArray2","InlineArray4","InlineArray8","InlineArray16","InlineArrayDynamic","detectWTF","wtf","trace","events","createScope","signature","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","marker","OpaqueToken","extraProviders","getPlatform","ReflectiveInjector","resolveAndCreate","assertPlatform","requiredToken","platform","destroyPlatform","destroy","_callAndReportToErrorHandler","errorHandler","callback","catch","handleError","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","_reflector","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","animate","timing","stylesEntry","EMPTY_STYLE","AnimationStyleMetadata","AnimationAnimateMetadata","group","steps","AnimationGroupMetadata","sequence","AnimationSequenceMetadata","style","tokens","offset","entry","entryOffset","parseFloat","state","stateNameExpr","AnimationStateDeclarationMetadata","keyframes","AnimationKeyframesSequenceMetadata","transition","stateChangeExpr","animationData","AnimationStateTransitionMetadata","trigger","animation","AnimationEntryMetadata","prepareFinalAnimationStyles","previousStyles","newStyles","nullValue","finalStyles","AUTO_STYLE","balanceAnimationKeyframes","collectedStyles","finalStateStyles","limit","firstKeyframe","flatenedFirstKeyframeStyles","flattenStyles","extraFirstKeyframeStyles","hasExtraFirstStyles","keyframeCollectedStyles","StringMapWrapper","merge","finalKeyframe","flatenedFinalKeyframeStyles","extraFinalKeyframeStyles","hasExtraFinalStyles","collectAndResolveStyles","clearStyles","collection","stylesObj","FILL_STYLE_FLAG","renderStyles","setElementStyle","_recursePlayers","player","collectedPlayers","AnimationGroupPlayer","AnimationSequencePlayer","players","globalScope","window","WorkerGlobalScope","self","global$1","assert","condition","Injectable","Host","_desc","decorators","ctorParameters","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","Query","ContentChildren","first","isViewQuery","descendants","read","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","selector","inputs","outputs","host","exportAs","queries","Component","viewProviders","changeDetection","template","styleUrls","interpolation","entryComponents","Pipe","pure","Input","Output","HostBinding","HostListener","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","LIFECYCLE_HOOKS_VALUES","ngOnChanges","ngOnInit","ngDoCheck","ngOnDestroy","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","declarations","imports","bootstrap","schemas","ViewEncapsulation","Emulated","Native","None","ViewMetadata","_b","Version","split","enumerable","configurable","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","notFoundValue","Injector","NULL","__extends$1","__extends","d","__","BaseError","_super","message","nativeError","_nativeError","stack","WrappedError","error","originalError","AbstractProviderError","constructResolvingMessage","injectors","addKey","NoProviderError","CyclicDependencyError","InstantiationError","originalException","originalStack","_genMessage","parameter","OutOfBoundsError","provider1","provider2","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","has","newKey","size","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","_ownParameters","exec","tsickleCtorParams","ctorParam","fill","_ownAnnotations","ownAnnotations","parentAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resolveIdentifier","moduleUrl","runtime","resolveEnum","enumIdentifier","ReflectorReader","identifier","__extends$2","Reflector","reflectionCapabilities","updateCapabilities","caps","UNDEFINED","resolve","parent","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","resolveAndCreateChild","createChildFromResolved","resolveAndInstantiate","instantiateResolved","_parent","_constructionCounter","len","keyIds","objs","_getByKey","inj","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","dep","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","displayName","ErrorHandler","rethrowError","_console","_findOriginalError","_findOriginalStack","context","_findContext","_extractMessage","m1","m2","_c","equals","k1","k2","ListWrapper","findLast","arr","removeAll","list","items","splice","remove","flatten","reduce","flat","flatItem","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","asyncInitPromises","initResult","_donePromise","Promise","all","APP_ID","APP_ID_RANDOM_PROVIDER","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","__extends$4","ComponentStillLoadingError","compType","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getNgContentSelectors","component","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","createCompiler","options","ElementRef","__extends$6","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","NgZone","enableLongStackTrace","_hasPendingMicrotasks","_hasPendingMacrotasks","_isStable","_nesting","_onUnstable","_onMicrotaskEmpty","_onStable","_onErrorEvents","assertZonePatched","outer","inner","fork","forkInnerZoneWithAngularBehavior","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runGuarded","runOutsideAngular","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","source","invoke","onHasTask","hasTaskState","hasTask","change","setHasMicrotask","microTask","setHasMacrotask","macroTask","onHandleError","triggerError","hasMicrotasks","hasMacrotasks","AnimationQueue","_zone","entries","enqueue","flush","_triggerAnimations","shift","hasStarted","play","DefaultIterableDifferFactory","supports","cdRef","trackByFn","DefaultIterableDiffer","trackByIdentity","_trackByFn","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","forEachItem","record","_next","forEachOperation","nextIt","nextRemove","currentIndex","adjPreviousIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","check","onDestroy","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","CollectionChangeRecord","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","previous","additions","moves","removals","identityChanges","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","afterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","records","oldSeqRecord","lastOldSeqRecord","lastNewSeqRecord","seqChanged","_forEach","newSeqRecord","_maybeAddToChanges","_removeFromSeq","KeyValueChangeRecord","_addToAdditions","_isInRemovals","_removeFromRemovals","previousValue","lastRecord","rec","_addToChanges","IterableDiffers","factories","copied","extend","find","iterable","f","KeyValueDiffers","kv","WrappedValue","wrapped","wrap","ValueUnwrapper","hasWrappedValue","unwrap","reset","SimpleChange","isFirstChange","ChangeDetectorRef","markForCheck","detach","detectChanges","checkNoChanges","reattach","keyValDiff","iterableDiff","RenderDebugInfo","providerTokens","references","Renderer","selectorOrNode","createViewRoot","createTemplateAnchor","createText","projectNodes","nodes","attachViewAfter","viewRootNodes","detachView","destroyView","viewAllNodes","renderElement","setElementProperty","propertyName","propertyValue","attributeName","attributeValue","setElementClass","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode","text","startingStyles","duration","delay","easing","previousPlayers","RootRenderer","renderComponent","componentType","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Sanitizer","sanitize","__extends$7","currValue","msg","ViewWrappedError","ViewDestroyedError","details","ViewUtils","_renderer","sanitizer","animationQueue","renderComponentType","EMPTY_ARRAY","EMPTY_MAP","InlineArray0","_v0","_v1","_v2","_v3","_v4","_v5","_v6","_v7","_v8","_v9","_v10","_v11","_v12","_v13","_v14","_v15","_values","EMPTY_INLINE_ARRAY","view_utils","freeze","__extends$5","ComponentRef","location","instance","hostView","changeDetectorRef","ComponentRef_","_index","_parentView","_nativeElement","_component","ref","detachAndDestroy","ComponentFactory","_viewClass","_componentType","projectableNodes","vu","createHostView","__extends$8","NoComponentFactoryError","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_factories","wtfEnabled","wtfCreateScope","wtfLeave","s","r","wtfStartTimeRange","wtfEndTimeRange","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","onUnstable","onStable","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","isStable","hasPendingMacrotasks","pop","whenStable","getPendingRequestCount","findBindings","using","exactMatch","findProviders","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","__extends$3","NgProbeToken","bootstrapModuleFactory","moduleFactory","bootstrapModule","compilerOptions","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","_bootstrapModuleFactoryWithZone","ngZone","ngZoneInjector","moduleRef","exceptionHandler","onError","initStatus","donePromise","_moduleDoBootstrap","_bootstrapModuleWithZone","componentFactoryCallback","compilerFactory","compiler","appRef","ApplicationRef","bootstrapFactories","compFactory","ngDoBootstrap","componentFactory","tick","componentTypes","components","attachView","viewCount","ApplicationRef_","_exceptionHandler","_componentFactoryResolver","_initStatus","_testabilityRegistry","_testability","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","onMicrotaskEmpty","viewRef","internalView","attachToAppRef","componentOrFactory","compRef","_unloadComponent","_loadComponent","componentRef","listeners","_tickScope","__extends$9","NgModuleRef","componentFactoryResolver","NgModuleFactory","_injectorClass","_moduleType","parentInjector","_UNDEFINED","NgModuleInjector","createInternal","getInternal","destroyInternal","NgModuleFactoryLoader","load","path","QueryList","_dirty","_results","_emitter","filter","toArray","notifyOnChanges","setDirty","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","offlineMode","loadFactory","loadAndCompile","System","import","factoryClassSuffix","__extends$10","TemplateRef","elementRef","createEmbeddedView","TemplateRef_","_nodeIndex","createEmbeddedViewInternal","ViewContainerRef","templateRef","createComponent","insert","move","ViewContainerRef_","_element","_createComponentInContainerScope","_insertScope","_removeScope","_detachScope","nestedViews","views","contextInjector","viewRef_","moveView","__extends$11","ViewRef","EmbeddedViewRef","rootNodes","ViewRef_","_view","_originalMode","cdMode","flatRootNodes","markPathToRootAsCheckOnce","__extends$12","EventListener","DebugNode","_debugInfo","addChild","attributes","classes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","previousChildren","nextChildren","newChild","query","results","queryAll","queryAllNodes","triggerEventHandler","eventObj","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ApplicationModule","ANY_STATE","DEFAULT_STATE","EMPTY_STATE","_players","_onDoneFns","_onStartFns","_finished","_started","parentPlayer","count","total","_onFinish","onDone","onStart","pause","restart","finish","setPosition","getPosition","min","AnimationKeyframe","AnimationPlayer","NoOpAnimationPlayer","_currentIndex","_onNext","start","_activePlayer","__extends$13","definitions","AnimationStateMetadata","AnimationMetadata","timings","AnimationWithStepsMetadata","_steps","AnimationStyles","AnimationTransitionEvent","fromState","toState","totalTime","phaseName","AnimationTransition","_player","_fromState","_toState","_totalTime","_createEvent","DebugDomRootRenderer","_delegate","componentProto","DebugDomRenderer","nativeEl","debugEl","comment","debugParent","debugElement_1","debugNode","debugViewRootNodes_1","rootNode","ViewType","HOST","COMPONENT","EMBEDDED","StaticNodeDebugInfo","componentToken","refTokens","DebugContext","_tplRow","_tplCol","staticNodeDebugInfos","staticNodeInfo","_staticNodeInfo","componentView","parentView","allNodes","varValues","refs_1","refName","varValue","refToken","injectorGet","ViewAnimationMap","_map","_allPlayers","animationName","playersByAnimation","findAllPlayersByElement","existingEntry","getAllPlayers","targetPlayer","AnimationViewContext","_animationQueue","onAllActiveAnimationsDone","activeAnimationPlayers","queueAnimation","getAnimationPlayers","currentPlayer","__extends$15","ElementInjector","__extends$14","_scope_check","EMPTY_CONTEXT","UNDEFINED$1","AppView","clazz","viewUtils","parentIndex","declaredViewContainer","numberOfChecks","_directRenderer","directRenderer","_animationContext","hostInjector","_hasExternalHostElement","_hostInjector","_hostProjectableNodes","templateNodeIndex","lastRootNode","dirtyParentQueriesInternal","nodeIndex","injectorGetInternal","notFoundResult","viewContainer","detachInternal","_renderDetach","projectedViews","visitRootNodesInternal","attachAfter","prevView","_renderAttach","moveAfter","prevNode","nextSibling","insertBefore","appendChild","ngContentIndex","visitProjectedNodes","cb","visitProjectableNodesInternal","internalDetectChanges","throwDestroyedError","detectChangesInternal","markAsCheckOnce","eventHandler","DebugAppView","_currentDebugContext","_resetDebug","_rethrowWithContext","debug","rowNum","colNum","superHandler","event","ViewContainer","detectChangesInNestedViews","destroyNestedViews","visitNestedViewRootNodes","mapNestedViews","nestedViewClass","nestedView","projectedView","viewIndex","__core_private__","n","publish","getSubjectByEventName","isCallback","subscribeOnce","unsubscribe","unsubscribeAll","dispose","hasSubscribers","observers","getEvents","getSubjects","ReplaySubject","RxPubSub","h","UnsubscriptionError","errors","u","closed","_parents","_subscriptions","_unsubscribe","l","isFunction","y","tryCatch","errorObject","isObject","w","EMPTY","_addParent","Subscription","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","empty","rxSubscriber","_error","_complete","_unsubscribeAndRecycle","Subscriber","_parentSubscriber","_context","__tryOrSetError","__tryOrUnsub","for","$$rxSubscriber","_isScalar","_subscribe","lift","operator","toSubscriber","_trySubscribe","Rx","observable","Observable","subject","subscriber","SubjectSubscription","ObjectUnsubscribedError","kind","hasValue","observe","do","accept","toObservable","of","throw","createNext","undefinedValueNotification","createError","createComplete","completeNotification","Notification","POSITIVE_INFINITY","scheduler","_events","_bufferSize","_windowTime","_getNow","_trimBufferThenGetEvents","hasError","ObserveOnSubscriber","thrownError","queue","now","time","max","SchedulerAction","schedule","Date","Scheduler","SubjectSubscriber","asObservable","AnonymousSubject","observeOn","ObserveOnOperator","dispatch","notification","scheduleMessage","ObserveOnMessage","Action","work","pending","recycleAsyncId","requestAsyncId","setInterval","clearInterval","execute","_execute","actions","AsyncAction","active","scheduled","AsyncScheduler","QueueAction","QueueScheduler","getSymbolObservable","flattenUnsubscriptionErrors","errs","UnsubscriptionError_1","isArray_1","isObject_1","isFunction_1","tryCatch_1","errorObject_1","hasErrors","trial","sub","teardown","subscription","tmp","subscriptions","subscriptionIndex","root_1","__window","__self","__global","_root","_angular_core","_stripBaseHref","baseHref","url","startsWith","_stripIndexHtml","getPluralCategory","cases","ngLocalization","getPluralCase","nLike","parseInt","nDecimal","abs","lang","Plural","One","Other","Zero","Two","Few","Many","digitModifier","date","hourClockExtractor","hourExtractor","intlDateFormat","Intl","DateTimeFormat","format","timeZoneGetter","timezone","hour","hour12","timeZoneName","hour12Modify","digitCondition","nameCondition","combine","assign","datePartGetterFactory","ret","dateFormatter","PATTERN_ALIASES","cacheKey","parts","DATE_FORMATTER_CACHE","match","DATE_FORMATS_SPLIT","part","DATE_FORMATS","partToTime","isBlank$1","isDate","valueOf","isoStringToDate","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","toInt","ms","round","str","formatNumber","pipe","digits","currency","currencyAsSymbol","NumberWrapper","isNumeric","InvalidPipeArgumentError","minInt","minFraction","maxFraction","NumberFormatStyle","Currency","_NUMBER_FORMAT_REGEXP","parseIntAutoRadix","NumberFormatter","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","PlatformLocation","getBaseHrefFromDOM","onPopState","onHashChange","replaceState","title","pushState","forward","back","LOCATION_INITIALIZED","LocationStrategy","includeHash","prepareExternalUrl","internal","queryParams","getBaseHref","APP_BASE_HREF","_global","Location","platformStrategy","_subject","_platformStrategy","browserBaseHref","_baseHref","stripTrailingSlash","ev","normalize","isCurrentPathEqualTo","normalizeQueryParams","go","onNext","onThrow","onReturn","joinWithSlash","end","slashes","endsWith","HashLocationStrategy","_platformLocation","hash","pathname","PathLocationStrategy","href","search","externalUrl","NgLocalization","NgLocaleLocalization","_locale","plural","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_initialClasses","_applyInitialClasses","_applyClasses","_rawClass","_cleanupClasses","_iterableDiffer","_keyValueDiffer","_applyIterableChanges","_applyKeyValueChanges","rawClassVal","_toggleClass","isCleanup","klass","Set","enabled","trim","ngClass","NgForRow","$implicit","even","NgFor","_viewContainer","_template","_differs","_cdr","_differ","JSON","ngForTrackBy","ngForOf","_applyChanges","insertTuples","adjustedPreviousIndex","tuple","RecordViewTuple","_perViewChange","ilen","ngForTemplate","NgIf","_hasView","ngIf","SwitchView","_viewContainerRef","_templateRef","_created","enforceState","created","NgSwitch","_defaultUsed","_caseCount","_lastCaseCheckIndex","_lastCasesMatched","_ngSwitch","_updateDefaultCases","_addCase","_addDefault","_defaultViews","_matchCase","matched","useDefault","defaultView","ngSwitch","NgSwitchCase","ngSwitchCase","NgSwitchDefault","NgPlural","_localization","_caseViews","_switchValue","_updateView","addCase","switchView","_clearViews","_activateView","_activeView","ngPlural","NgPluralCase","isANumber","NgStyle","_ngStyle","_setStyle","nameAndUnit","unit","ngStyle","NgTemplateOutlet","_viewRef","ngOutletContext","ngTemplateOutlet","COMMON_DIRECTIVES","ObservableStrategy","createSubscription","async","updateLatestValue","PromiseStrategy","_promiseStrategy","_observableStrategy","AsyncPipe","_ref","_latestValue","_latestReturnedValue","_subscription","_obj","_strategy","_dispose","transform","_selectStrategy","_updateLatestValue","Decimal","Percent","num","currencyDisplay","NumberFormat","yMMMdjms","yMdjm","yMMMMEEEEd","yMMMMd","yMMMd","yMd","jms","jm","yyyy","yy","MMMM","MMM","MM","M","LLLL","L","dd","HH","H","hh","jj","mm","ss","sss","EEEE","EEE","EE","E","Z","z","ww","G","GG","GGG","GGGG","DateFormatter","pattern","ISO8601_DATE_REGEX","DatePipe","test","val","_ALIASES","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","_INTERPOLATION_REGEXP","I18nPluralPipe","pluralMap","I18nSelectPipe","mapping","JsonPipe","LowerCasePipe","DecimalPipe","PercentPipe","CurrencyPipe","currencyCode","symbolDisplay","SlicePipe","UpperCasePipe","toUpperCase","COMMON_PIPES","CommonModule","toSubscriber_1","observable_1","observerOrNext","sink","PromiseCtor","reject","Subscription_1","Observer_1","rxSubscriber_1","destinationOrNext","SafeSubscriber","wrappedComplete","x","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","g","isBase","defineProperties","deep","own","allowNull","nullDeletes","clone","notDeep","deepOnly","notKeys","globalTransform","transforms","globalFilter","filters","q","__decorate","desc","getOwnPropertyDescriptor","decorate","__metadata","core_1","rx_pubsub_1","xdom_util_1","component_injector_1","pubsub","componentInjector","animationClass","showModalClass","bodyOpenModalClass","defaultButtonsProperties","visible","cancel","label","success","defaultProperties","show","hide","componentSelector","componentInputs","htmlContent","overlayClick","customClass","buttons","subscribeToEvent","resetInjectedComponent","cancelAction","successAction","modalDom","modalWindow","XDomUtil","hasClass","addClass","body","document","querySelector","removeClass","eventSubscriber","data","initModal","setProperties","injectedComponentRef","injectComponent","setComponentProperties","resetModalEventSubscriber","inject","injectContainer","ComponentInjector","showModal","modalId","hideModal","resetEventsSubscribers","eventsList","_angular_common","core","setValueOnPath","name_1","getDOM","_DOM","setRootDomAdapter","adapter","_computeStyle","getComputedStyle","_copyKeyframeStyles","_populateStyles","defaultStyles","filterWebAnimationPlayerFn","WebAnimationsPlayer","getBaseElementHref","baseElement","getAttribute","relativePath","urlParsingNode","setAttribute","charAt","parseCookieValue","cookieStr","encodeURIComponent","cookie","eqIndex","cookieName","cookieValue","decodeURIComponent","supportsState","history","moveNodesAfterSibling","sibling","appendNodes","decoratePreventDefault","allowDefaultBehavior","preventDefault","shimContentAttribute","componentShortId","CONTENT_ATTR","COMPONENT_REGEX","shimHostAttribute","HOST_ATTR","compId","isNamespaced","splitNamespace","NS_PREFIX_RE","inspectNativeElement","_createConditionalRootRenderer","rootRenderer","extraTokens","coreTokens","_createRootRenderer","setGlobalVar","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","CORE_TOKENS","_ngProbeTokensToMap","sanitizeUrl","SAFE_URL_PATTERN","DATA_URL_PATTERN","sanitizeSrcset","srcset","getInertElement","inertElement","DOM","templateEl","doc","createHtmlDocument","html","tagSet","tags","sets","sets_1","encodeEntities","SURROGATE_PAIR_REGEXP","hi","charCodeAt","low","NON_ALPHANUMERIC_REGEXP","stripCustomNsAttrs","attributeMap","_","attrName","removeAttribute","childNodesAsList","isElementNode","sanitizeHtml","unsafeHtmlInput","containerEl","unsafeHtml","mXSSAttempts","parsedHtml","setInnerHTML","defaultDoc","documentMode","getInnerHTML","SanitizingHtmlSerializer","safeHtml","sanitizeChildren","getTemplateContent","parent_1","sanitizedSomething","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeStyle","urlMatch","URL_RE","SAFE_STYLE_VALUE","initDomAdapter","BrowserDomAdapter","makeCurrent","BrowserGetTestability","_document","_resolveDefaultAnimationDriver","supportsWebAnimation","WebAnimationsDriver","AnimationDriver","NOOP","enableDebugTools","ng","AngularTools","disableDebugTools","profiler","NoOpAnimationDriver","DomAdapter","resourceLoaderType","hasProperty","setProperty","getProperty","logError","logGroup","logGroupEnd","_attrToPropMap","parse","templateHtml","querySelectorAll","on","evt","onAndCancel","dispatchEvent","createMouseEvent","eventType","createEvent","isPrevented","getOuterHTML","nodeName","nodeValue","content","firstChild","clearNodes","replaceChild","newNode","oldNode","insertAllBefore","insertAfter","getText","getValue","setValue","getChecked","setChecked","createComment","createTemplate","tagName","createElementNS","ns","createTextNode","createScriptTag","attrValue","createStyleElement","css","createShadowRoot","getShadowRoot","getHost","getDistributedNodes","getElementsByClassName","getElementsByTagName","classList","setStyle","removeStyle","getStyle","hasStyle","hasAttribute","attribute","hasAttributeNS","getAttributeNS","setAttributeNS","removeAttributeNS","templateAwareRoot","getBoundingClientRect","getTitle","setTitle","newTitle","elementMatches","isTemplateElement","isTextNode","isCommentNode","hasShadowRoot","isShadowRoot","importIntoDoc","adoptNode","getHref","getEventKey","resolveAndSetHref","baseUrl","supportsDOMEvents","supportsNativeShadowDOM","getGlobalEventTarget","getHistory","getLocation","resetBaseElement","getUserAgent","setData","getData","performanceNow","getAnimationPrefix","getTransitionEnd","supportsAnimation","supportsCookies","getCookie","setCookie","_initialized","_duration","_captureStyles","formattedKeyframe","previousStyleProps","startingKeyframe_1","missingStyleProps_1","_loop_1","kf","_triggerWebAnimation","_finalKeyframe","_resetDomPlayerState","addEventListener","currentTime","formattedSteps","startingStyleLookup","keyframe","playerOptions","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","class","innerHtml","readonly","tabindex","DOM_KEY_LOCATION_NUMPAD","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","F","I","J","K","N","O","`","","groupEnd","removeEventListener","initEvent","defaultPrevented","innerHTML","HTMLTemplateElement","outerHTML","oldChild","textContent","checked","shadowRoot","cloneNode","contains","stylename","elAttrs","attrib","implementation","createHTMLDocument","top","bottom","left","right","width","height","HTMLElement","msMatchesSelector","webkitMatchesSelector","nodeType","Node","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","DocumentFragment","importNode","keyIdentifier","navigator","userAgent","performance","getTime","BrowserPlatformLocation","_init","_location","_history","newPath","getAngularTestability","getAllAngularTestabilities","getAllAngularRootElements","whenAllStable","testabilities","didWork","decrement","didWork_","Title","DOCUMENT","EVENT_MANAGER_PLUGINS","EventManager","plugins","_eventNameToPlugin","manager","_plugins","handler","plugin","_findPluginFor","addGlobalEventListener","getZone","plugin_1","EventManagerPlugin","SharedStylesHost","_stylesSet","addStyles","onStylesAdded","getAllStyles","DomSharedStylesHost","_doc","_hostNodes","_styleNodes","head","_addStylesToHost","styleEl","addHost","hostNode","removeHost","styleNode","NAMESPACE_URIS","xlink","svg","xhtml","TEMPLATE_COMMENT_TEXT","TEMPLATE_BINDINGS_EXP","DomRootRenderer","eventManager","sharedStylesHost","animationDriver","appId","registeredComponents","DomRenderer","DomRootRenderer_","_eventManager","DIRECT_DOM_RENDERER","refNode","_rootRenderer","_animationDriver","styleShimId","_styles","_contentAttr","_hostAttr","nsAndName","nodesParent","attrNs","attrNameWithoutNs","existingBindings","parsedBindings","COMPONENT_VARIABLE","ELEMENT_PROBE_PROVIDERS","DomEventsPlugin","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HAMMER_GESTURE_CONFIG","HammerGestureConfig","overrides","buildHammer","mc","Hammer","enable","HammerGesturesPlugin","isCustomEvent","zone","off","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","buf","startElement","chars","endElement","lower","VALUES","TRANSFORMATION_FNS","COLOR_FNS","GRADIENTS","CSS3_FNS","FN_ARGS","RegExp","DomSanitizer","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl","ctx","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","SafeStyleImpl","SafeScriptImpl","SafeResourceUrlImpl","SafeUrlImpl","expectedType","SafeValueImpl","getTypeName","INTERNAL_BROWSER_PLATFORM_PROVIDERS","BROWSER_SANITIZATION_PROVIDERS","platformBrowser","BrowserModule","parentModule","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","timeChangeDetection","profileName","isProfilerAvailable","profile","toFixed","By","debugElement","directive","__platform_browser_private__","Observable_1","Subscriber_1","ObjectUnsubscribedError_1","SubjectSubscription_1","copy","subscriberIndex","nextOrObserver","tryCatcher","tryCatchTarget","resolver","container","injectedComponent","getComponentFactory","injectComponentFactory","property","factoryClass","platform_browser_1","TrustHtmlPipe","htmlString","common_1","trust_html_pipe_1","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"ng2-modal-module.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar modal_module_1 = __webpack_require__(27);\r\n\texports.ModalModule = modal_module_1.ModalModule;\r\n\tvar modal_window_service_1 = __webpack_require__(15);\r\n\texports.ModalWindowService = modal_window_service_1.ModalWindowService;\r\n\tvar modal_window_component_1 = __webpack_require__(14);\r\n\texports.ModalWindowComponent = modal_window_component_1.ModalWindowComponent;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.4.10\n\t * (c) 2010-2017 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(10), __webpack_require__(17), __webpack_require__(7)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/symbol/observable', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.rxjs_symbol_observable,global.Rx,global.Rx));\n\t}(this, function (exports,rxjs_symbol_observable,rxjs_Subject,rxjs_Observable) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = (self);\n\t        }\n\t        else {\n\t            globalScope = (global);\n\t        }\n\t    }\n\t    else {\n\t        globalScope = (window);\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function scheduleMicroTask(fn) {\n\t        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var /** @type {?} */ global$1 = globalScope;\n\t    /**\n\t     * @param {?} type\n\t     * @return {?}\n\t     */\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @return {?}\n\t     */\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return \"\" + token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return \"\" + token.name;\n\t        }\n\t        var /** @type {?} */ res = token.toString();\n\t        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @return {?}\n\t     */\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    /**\n\t     * @param {?} o\n\t     * @return {?}\n\t     */\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function print(obj) {\n\t        // tslint:disable-next-line:no-console\n\t        console.log(obj);\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function warn(obj) {\n\t        console.warn(obj);\n\t    }\n\t    var /** @type {?} */ _symbolIterator = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (((globalScope)).Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n\t                    var /** @type {?} */ key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        ((Map)).prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    var /** @type {?} */ _nextClassId = 0;\n\t    var /** @type {?} */ Reflect = global$1.Reflect;\n\t    /**\n\t     * @param {?} annotation\n\t     * @return {?}\n\t     */\n\t    function extractAnnotation(annotation) {\n\t        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n\t            // it is a decorator, extract annotation\n\t            annotation = annotation.annotation;\n\t        }\n\t        return annotation;\n\t    }\n\t    /**\n\t     * @param {?} fnOrArray\n\t     * @param {?} key\n\t     * @return {?}\n\t     */\n\t    function applyParams(fnOrArray, key) {\n\t        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n\t            fnOrArray === Number || fnOrArray === Array) {\n\t            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n\t        }\n\t        if (typeof fnOrArray === 'function') {\n\t            return fnOrArray;\n\t        }\n\t        if (Array.isArray(fnOrArray)) {\n\t            var /** @type {?} */ annotations = fnOrArray;\n\t            var /** @type {?} */ annoLength = annotations.length - 1;\n\t            var /** @type {?} */ fn = fnOrArray[annoLength];\n\t            if (typeof fn !== 'function') {\n\t                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n\t            }\n\t            if (annoLength != fn.length) {\n\t                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n\t            }\n\t            var /** @type {?} */ paramsAnnotations = [];\n\t            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n\t                var /** @type {?} */ paramAnnotations = [];\n\t                paramsAnnotations.push(paramAnnotations);\n\t                var /** @type {?} */ annotation = annotations[i];\n\t                if (Array.isArray(annotation)) {\n\t                    for (var /** @type {?} */ j = 0; j < annotation.length; j++) {\n\t                        paramAnnotations.push(extractAnnotation(annotation[j]));\n\t                    }\n\t                }\n\t                else if (typeof annotation === 'function') {\n\t                    paramAnnotations.push(extractAnnotation(annotation));\n\t                }\n\t                else {\n\t                    paramAnnotations.push(annotation);\n\t                }\n\t            }\n\t            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n\t            return fn;\n\t        }\n\t        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n\t    }\n\t    /**\n\t     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n\t     *\n\t     * ## Basic Example\n\t     *\n\t     * ```\n\t     * var Greeter = ng.Class({\n\t     *   constructor: function(name) {\n\t     *     this.name = name;\n\t     *   },\n\t     *\n\t     *   greet: function() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class Greeter {\n\t     *   constructor(name) {\n\t     *     this.name = name;\n\t     *   }\n\t     *\n\t     *   greet() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * or equivalent to ES5:\n\t     *\n\t     * ```\n\t     * var Greeter = function (name) {\n\t     *   this.name = name;\n\t     * }\n\t     *\n\t     * Greeter.prototype.greet = function () {\n\t     *   alert('Hello ' + this.name + '!');\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with parameter annotations\n\t     *\n\t     * ```\n\t     * var MyService = ng.Class({\n\t     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n\t     *     ...\n\t     *   }]\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class MyService {\n\t     *   constructor(name: string, \\@Optional() myService: Service) {\n\t     *     ...\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with inheritance\n\t     *\n\t     * ```\n\t     * var Shape = ng.Class({\n\t     *   constructor: (color) {\n\t     *     this.color = color;\n\t     *   }\n\t     * });\n\t     *\n\t     * var Square = ng.Class({\n\t     *   extends: Shape,\n\t     *   constructor: function(color, size) {\n\t     *     Shape.call(this, color);\n\t     *     this.size = size;\n\t     *   }\n\t     * });\n\t     * ```\n\t     * \\@stable\n\t     * @param {?} clsDef\n\t     * @return {?}\n\t     */\n\t    function Class(clsDef) {\n\t        var /** @type {?} */ constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\t        var /** @type {?} */ proto = constructor.prototype;\n\t        if (clsDef.hasOwnProperty('extends')) {\n\t            if (typeof clsDef.extends === 'function') {\n\t                ((constructor)).prototype = proto =\n\t                    Object.create(((clsDef.extends)).prototype);\n\t            }\n\t            else {\n\t                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n\t            }\n\t        }\n\t        for (var key in clsDef) {\n\t            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n\t                proto[key] = applyParams(clsDef[key], key);\n\t            }\n\t        }\n\t        if (this && this.annotations instanceof Array) {\n\t            Reflect.defineMetadata('annotations', this.annotations, constructor);\n\t        }\n\t        var /** @type {?} */ constructorName = constructor['name'];\n\t        if (!constructorName || constructorName === 'constructor') {\n\t            ((constructor))['overriddenName'] = \"class\" + _nextClassId++;\n\t        }\n\t        return (constructor);\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} props\n\t     * @param {?=} parentClass\n\t     * @param {?=} chainFn\n\t     * @return {?}\n\t     */\n\t    function makeDecorator(name, props, parentClass, chainFn) {\n\t        if (chainFn === void 0) { chainFn = null; }\n\t        var /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n\t        /**\n\t         * @param {?} objOrType\n\t         * @return {?}\n\t         */\n\t        function DecoratorFactory(objOrType) {\n\t            if (!(Reflect && Reflect.getOwnMetadata)) {\n\t                throw 'reflect-metadata shim is required when using class decorators';\n\t            }\n\t            if (this instanceof DecoratorFactory) {\n\t                metaCtor.call(this, objOrType);\n\t                return this;\n\t            }\n\t            var /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n\t            var /** @type {?} */ chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n\t            chainAnnotation.push(annotationInstance);\n\t            var /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n\t                var /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n\t                annotations.push(annotationInstance);\n\t                Reflect.defineMetadata('annotations', annotations, cls);\n\t                return cls;\n\t            });\n\t            TypeDecorator.annotations = chainAnnotation;\n\t            TypeDecorator.Class = Class;\n\t            if (chainFn)\n\t                chainFn(TypeDecorator);\n\t            return TypeDecorator;\n\t        }\n\t        if (parentClass) {\n\t            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ((DecoratorFactory)).annotationCls = DecoratorFactory;\n\t        return DecoratorFactory;\n\t    }\n\t    /**\n\t     * @param {?} props\n\t     * @return {?}\n\t     */\n\t    function makeMetadataCtor(props) {\n\t        return function ctor() {\n\t            var _this = this;\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            props.forEach(function (prop, i) {\n\t                var /** @type {?} */ argVal = args[i];\n\t                if (Array.isArray(prop)) {\n\t                    // plain parameter\n\t                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n\t                }\n\t                else {\n\t                    for (var propName in prop) {\n\t                        _this[propName] =\n\t                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n\t                    }\n\t                }\n\t            });\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} props\n\t     * @param {?=} parentClass\n\t     * @return {?}\n\t     */\n\t    function makeParamDecorator(name, props, parentClass) {\n\t        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n\t        /**\n\t         * @param {...?} args\n\t         * @return {?}\n\t         */\n\t        function ParamDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof ParamDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var /** @type {?} */ annotationInstance = new ((_a = ((ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n\t            ((ParamDecorator)).annotation = annotationInstance;\n\t            return ParamDecorator;\n\t            /**\n\t             * @param {?} cls\n\t             * @param {?} unusedKey\n\t             * @param {?} index\n\t             * @return {?}\n\t             */\n\t            function ParamDecorator(cls, unusedKey, index) {\n\t                var /** @type {?} */ parameters = Reflect.getOwnMetadata('parameters', cls) || [];\n\t                // there might be gaps if some in between parameters do not have annotations.\n\t                // we pad with nulls.\n\t                while (parameters.length <= index) {\n\t                    parameters.push(null);\n\t                }\n\t                parameters[index] = parameters[index] || [];\n\t                parameters[index].push(annotationInstance);\n\t                Reflect.defineMetadata('parameters', parameters, cls);\n\t                return cls;\n\t            }\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n\t        return ParamDecoratorFactory;\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} props\n\t     * @param {?=} parentClass\n\t     * @return {?}\n\t     */\n\t    function makePropDecorator(name, props, parentClass) {\n\t        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n\t        /**\n\t         * @param {...?} args\n\t         * @return {?}\n\t         */\n\t        function PropDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof PropDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var /** @type {?} */ decoratorInstance = new ((_a = ((PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n\t            return function PropDecorator(target, name) {\n\t                var /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n\t                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n\t                meta[name].unshift(decoratorInstance);\n\t                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n\t            };\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n\t        return PropDecoratorFactory;\n\t    }\n\t\n\t    /**\n\t     * Inject decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Inject = makeParamDecorator('Inject', [['token', undefined]]);\n\t    /**\n\t     * Optional decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Optional = makeParamDecorator('Optional', []);\n\t    /**\n\t     * Injectable decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Injectable = (makeDecorator('Injectable', []));\n\t    /**\n\t     * Self decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Self = makeParamDecorator('Self', []);\n\t    /**\n\t     * SkipSelf decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ SkipSelf = makeParamDecorator('SkipSelf', []);\n\t    /**\n\t     * Host decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Host = makeParamDecorator('Host', []);\n\t\n\t    var OpaqueToken = (function () {\n\t        /**\n\t         * @param {?} _desc\n\t         */\n\t        function OpaqueToken(_desc) {\n\t            this._desc = _desc;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n\t        OpaqueToken.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        OpaqueToken.ctorParameters = function () { return [\n\t            null,\n\t        ]; };\n\t        return OpaqueToken;\n\t    }());\n\t\n\t    /**\n\t     * This token can be used to create a virtual provider that will populate the\n\t     * `entryComponents` fields of components and ng modules based on its `useValue`.\n\t     * All components that are referenced in the `useValue` value (either directly\n\t     * or in a nested array or map) will be added to the `entryComponents` property.\n\t     *\n\t     * ### Example\n\t     * The following example shows how the router can populate the `entryComponents`\n\t     * field of an NgModule based on the router configuration which refers\n\t     * to components.\n\t     *\n\t     * ```typescript\n\t     * // helper function inside the router\n\t     * function provideRoutes(routes) {\n\t     *   return [\n\t     *     {provide: ROUTES, useValue: routes},\n\t     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n\t     *   ];\n\t     * }\n\t     *\n\t     * // user code\n\t     * let routes = [\n\t     *   {path: '/root', component: RootComp},\n\t     *   {path: '/teams', component: TeamsComp}\n\t     * ];\n\t     *\n\t     * @NgModule({\n\t     *   providers: [provideRoutes(routes)]\n\t     * })\n\t     * class ModuleWithRoutes {}\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n\t    /**\n\t     * Attribute decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n\t    /**\n\t     * Base class for query metadata.\n\t     *\n\t     * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n\t     * more information.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var Query = (function () {\n\t        function Query() {\n\t        }\n\t        return Query;\n\t    }());\n\t    /**\n\t     * ContentChildren decorator and metadata.\n\t     *\n\t     *  @stable\n\t     *  @Annotation\n\t     */\n\t    var /** @type {?} */ ContentChildren = (makePropDecorator('ContentChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: false,\n\t            descendants: false,\n\t            read: undefined,\n\t        }\n\t    ], Query));\n\t    /**\n\t     * ContentChild decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ ContentChild = makePropDecorator('ContentChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: false,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * ViewChildren decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ ViewChildren = makePropDecorator('ViewChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * ViewChild decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ ViewChild = makePropDecorator('ViewChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t\n\t    var ChangeDetectionStrategy = {};\n\t    ChangeDetectionStrategy.OnPush = 0;\n\t    ChangeDetectionStrategy.Default = 1;\n\t    ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\n\t    ChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\t    var ChangeDetectorStatus = {};\n\t    ChangeDetectorStatus.CheckOnce = 0;\n\t    ChangeDetectorStatus.Checked = 1;\n\t    ChangeDetectorStatus.CheckAlways = 2;\n\t    ChangeDetectorStatus.Detached = 3;\n\t    ChangeDetectorStatus.Errored = 4;\n\t    ChangeDetectorStatus.Destroyed = 5;\n\t    ChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\t    /**\n\t     * @param {?} changeDetectionStrategy\n\t     * @return {?}\n\t     */\n\t    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n\t        return isBlank(changeDetectionStrategy) ||\n\t            changeDetectionStrategy === ChangeDetectionStrategy.Default;\n\t    }\n\t\n\t    /**\n\t     * Directive decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Directive = (makeDecorator('Directive', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        providers: undefined,\n\t        exportAs: undefined,\n\t        queries: undefined\n\t    }));\n\t    /**\n\t     * Component decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Component = (makeDecorator('Component', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        exportAs: undefined,\n\t        moduleId: undefined,\n\t        providers: undefined,\n\t        viewProviders: undefined,\n\t        changeDetection: ChangeDetectionStrategy.Default,\n\t        queries: undefined,\n\t        templateUrl: undefined,\n\t        template: undefined,\n\t        styleUrls: undefined,\n\t        styles: undefined,\n\t        animations: undefined,\n\t        encapsulation: undefined,\n\t        interpolation: undefined,\n\t        entryComponents: undefined\n\t    }, Directive));\n\t    /**\n\t     * Pipe decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Pipe = (makeDecorator('Pipe', {\n\t        name: undefined,\n\t        pure: true,\n\t    }));\n\t    /**\n\t     * Input decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * Output decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n\t    /**\n\t     * HostListener decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var LifecycleHooks = {};\n\t    LifecycleHooks.OnInit = 0;\n\t    LifecycleHooks.OnDestroy = 1;\n\t    LifecycleHooks.DoCheck = 2;\n\t    LifecycleHooks.OnChanges = 3;\n\t    LifecycleHooks.AfterContentInit = 4;\n\t    LifecycleHooks.AfterContentChecked = 5;\n\t    LifecycleHooks.AfterViewInit = 6;\n\t    LifecycleHooks.AfterViewChecked = 7;\n\t    LifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\n\t    LifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\n\t    LifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\n\t    LifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\n\t    LifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\n\t    LifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\n\t    LifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\n\t    LifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\n\t    var /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n\t        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n\t        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n\t        LifecycleHooks.AfterViewChecked\n\t    ];\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n\t     *\n\t     * \\@description\n\t     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n\t     * and content children are checked if at least one of them has changed.\n\t     * The `changes` parameter contains the changed properties.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var OnChanges = (function () {\n\t        function OnChanges() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        OnChanges.prototype.ngOnChanges = function (changes) { };\n\t        return OnChanges;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n\t     * initialized.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n\t     *\n\t     * \\@description\n\t     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n\t     * first time, and before any of its children have been checked. It is invoked only once when the\n\t     * directive is instantiated.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var OnInit = (function () {\n\t        function OnInit() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        OnInit.prototype.ngOnInit = function () { };\n\t        return OnInit;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n\t     *\n\t     * \\@description\n\t     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n\t     * algorithm. The default change detection algorithm looks for differences by comparing\n\t     * bound-property values by reference across change detection runs.\n\t     *\n\t     * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n\t     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n\t     * detector detects changes.\n\t     *\n\t     * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n\t     * for collections.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var DoCheck = (function () {\n\t        function DoCheck() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DoCheck.prototype.ngDoCheck = function () { };\n\t        return DoCheck;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n\t     *\n\t     * \\@description\n\t     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n\t     * instance is destroyed.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var OnDestroy = (function () {\n\t        function OnDestroy() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        OnDestroy.prototype.ngOnDestroy = function () { };\n\t        return OnDestroy;\n\t    }());\n\t    /**\n\t     *\n\t     * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n\t     * initialized.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterContentInit = (function () {\n\t        function AfterContentInit() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterContentInit.prototype.ngAfterContentInit = function () { };\n\t        return AfterContentInit;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterContentChecked = (function () {\n\t        function AfterContentChecked() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterContentChecked.prototype.ngAfterContentChecked = function () { };\n\t        return AfterContentChecked;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n\t     * initialized.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterViewInit = (function () {\n\t        function AfterViewInit() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterViewInit.prototype.ngAfterViewInit = function () { };\n\t        return AfterViewInit;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterViewChecked = (function () {\n\t        function AfterViewChecked() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterViewChecked.prototype.ngAfterViewChecked = function () { };\n\t        return AfterViewChecked;\n\t    }());\n\t\n\t    /**\n\t     * Defines a schema that will allow:\n\t     * - any non-Angular elements with a `-` in their name,\n\t     * - any properties on elements with a `-` in their name which is the common rule for custom\n\t     * elements.\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA = {\n\t        name: 'custom-elements'\n\t    };\n\t    /**\n\t     * Defines a schema that will allow any property on any element.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ NO_ERRORS_SCHEMA = {\n\t        name: 'no-errors-schema'\n\t    };\n\t    /**\n\t     * NgModule decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ NgModule = (makeDecorator('NgModule', {\n\t        providers: undefined,\n\t        declarations: undefined,\n\t        imports: undefined,\n\t        exports: undefined,\n\t        entryComponents: undefined,\n\t        bootstrap: undefined,\n\t        schemas: undefined,\n\t        id: undefined,\n\t    }));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var ViewEncapsulation = {};\n\t    ViewEncapsulation.Emulated = 0;\n\t    ViewEncapsulation.Native = 1;\n\t    ViewEncapsulation.None = 2;\n\t    ViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\n\t    ViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\n\t    ViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\t    /**\n\t     * Metadata properties available for configuring Views.\n\t     *\n\t     * For details on the `\\@Component` annotation, see {\\@link Component}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * \\@Component({\n\t     *   selector: 'greet',\n\t     *   template: 'Hello {{name}}!',\n\t     * })\n\t     * class Greet {\n\t     *   name: string;\n\t     *\n\t     *   constructor() {\n\t     *     this.name = 'World';\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @deprecated Use Component instead.\n\t     *\n\t     * {\\@link Component}\n\t     */\n\t    var ViewMetadata = (function () {\n\t        /**\n\t         * @param {?=} __0\n\t         */\n\t        function ViewMetadata(_a) {\n\t            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n\t            this.templateUrl = templateUrl;\n\t            this.template = template;\n\t            this.styleUrls = styleUrls;\n\t            this.styles = styles;\n\t            this.encapsulation = encapsulation;\n\t            this.animations = animations;\n\t            this.interpolation = interpolation;\n\t        }\n\t        return ViewMetadata;\n\t    }());\n\t\n\t    /**\n\t     * \\@whatItDoes Represents the version of Angular\n\t     *\n\t     * \\@stable\n\t     */\n\t    var Version = (function () {\n\t        /**\n\t         * @param {?} full\n\t         */\n\t        function Version(full) {\n\t            this.full = full;\n\t        }\n\t        Object.defineProperty(Version.prototype, \"major\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.full.split('.')[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(Version.prototype, \"minor\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.full.split('.')[1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(Version.prototype, \"patch\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.full.split('.').slice(2).join('.'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return Version;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new Version('2.4.10');\n\t\n\t    /**\n\t     * Allows to refer to references which are not yet defined.\n\t     *\n\t     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n\t     * DI is declared,\n\t     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n\t     * yet defined.\n\t     *\n\t     * ### Example\n\t     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n\t     * \\@experimental\n\t     * @param {?} forwardRefFn\n\t     * @return {?}\n\t     */\n\t    function forwardRef(forwardRefFn) {\n\t        ((forwardRefFn)).__forward_ref__ = forwardRef;\n\t        ((forwardRefFn)).toString = function () { return stringify(this()); };\n\t        return (((forwardRefFn)));\n\t    }\n\t    /**\n\t     * Lazily retrieves the reference value from a forwardRef.\n\t     *\n\t     * Acts as the identity function when given a non-forward-ref value.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n\t     *\n\t     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n\t     *\n\t     * See: {\\@link forwardRef}\n\t     * \\@experimental\n\t     * @param {?} type\n\t     * @return {?}\n\t     */\n\t    function resolveForwardRef(type) {\n\t        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n\t            type.__forward_ref__ === forwardRef) {\n\t            return ((type))();\n\t        }\n\t        else {\n\t            return type;\n\t        }\n\t    }\n\t\n\t    var /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\n\t    var /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t    var _NullInjector = (function () {\n\t        function _NullInjector() {\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        _NullInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n\t            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n\t                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n\t            }\n\t            return notFoundValue;\n\t        };\n\t        return _NullInjector;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Injector interface\n\t     * \\@howToUse\n\t     * ```\n\t     * const injector: Injector = ...;\n\t     * injector.get(...);\n\t     * ```\n\t     *\n\t     * \\@description\n\t     * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n\t     *\n\t     * `Injector` returns itself when given `Injector` as a token:\n\t     * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var Injector = (function () {\n\t        function Injector() {\n\t        }\n\t        /**\n\t         * Retrieves an instance from the injector based on the provided token.\n\t         * If not found:\n\t         * - Throws {\\@link NoProviderError} if no `notFoundValue` that is not equal to\n\t         * Injector.THROW_IF_NOT_FOUND is given\n\t         * - Returns the `notFoundValue` otherwise\n\t         * @abstract\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        Injector.prototype.get = function (token, notFoundValue) { };\n\t        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t        Injector.NULL = new _NullInjector();\n\t        return Injector;\n\t    }());\n\t\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends$1(BaseError, _super);\n\t        /**\n\t         * @param {?} message\n\t         */\n\t        function BaseError(message) {\n\t            _super.call(this, message);\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            // TODO(bradfordcsmith): Remove this hack when\n\t            //     google/closure-compiler/issues/2102 is fixed.\n\t            var nativeError = new Error(message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.message; },\n\t            /**\n\t             * @param {?} message\n\t             * @return {?}\n\t             */\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return ((this._nativeError)).stack; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) { ((this._nativeError)).stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends$1(WrappedError, _super);\n\t        /**\n\t         * @param {?} message\n\t         * @param {?} error\n\t         */\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @param {?} keys\n\t     * @return {?}\n\t     */\n\t    function findFirstClosedCycle(keys) {\n\t        var /** @type {?} */ res = [];\n\t        for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n\t            if (res.indexOf(keys[i]) > -1) {\n\t                res.push(keys[i]);\n\t                return res;\n\t            }\n\t            res.push(keys[i]);\n\t        }\n\t        return res;\n\t    }\n\t    /**\n\t     * @param {?} keys\n\t     * @return {?}\n\t     */\n\t    function constructResolvingPath(keys) {\n\t        if (keys.length > 1) {\n\t            var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n\t            var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n\t            return ' (' + tokenStrs.join(' -> ') + ')';\n\t        }\n\t        return '';\n\t    }\n\t    /**\n\t     * Base class for all errors arising from misconfigured providers.\n\t     * \\@stable\n\t     */\n\t    var AbstractProviderError = (function (_super) {\n\t        __extends(AbstractProviderError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         * @param {?} constructResolvingMessage\n\t         */\n\t        function AbstractProviderError(injector, key, constructResolvingMessage) {\n\t            _super.call(this, 'DI Error');\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t            this.constructResolvingMessage = constructResolvingMessage;\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        }\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         * @return {?}\n\t         */\n\t        AbstractProviderError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        };\n\t        return AbstractProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n\t     * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b:B) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var NoProviderError = (function (_super) {\n\t        __extends(NoProviderError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         */\n\t        function NoProviderError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                var first = stringify(keys[0].token);\n\t                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return NoProviderError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when dependencies form a cycle.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n\t     *\n\t     * ```typescript\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n\t     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n\t     * ]);\n\t     *\n\t     * expect(() => injector.get(\"one\")).toThrowError();\n\t     * ```\n\t     *\n\t     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n\t     * \\@stable\n\t     */\n\t    var CyclicDependencyError = (function (_super) {\n\t        __extends(CyclicDependencyError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         */\n\t        function CyclicDependencyError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return CyclicDependencyError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when a constructing type returns with an Error.\n\t     *\n\t     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n\t     * this object to be instantiated.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor() {\n\t     *     throw new Error('message');\n\t     *   }\n\t     * }\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t     * try {\n\t     *   injector.get(A);\n\t     * } catch (e) {\n\t     *   expect(e instanceof InstantiationError).toBe(true);\n\t     *   expect(e.originalException.message).toEqual(\"message\");\n\t     *   expect(e.originalStack).toBeDefined();\n\t     * }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var InstantiationError = (function (_super) {\n\t        __extends(InstantiationError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} originalException\n\t         * @param {?} originalStack\n\t         * @param {?} key\n\t         */\n\t        function InstantiationError(injector, originalException, originalStack, key) {\n\t            _super.call(this, 'DI Error', originalException);\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t        }\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         * @return {?}\n\t         */\n\t        InstantiationError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t        };\n\t        Object.defineProperty(InstantiationError.prototype, \"message\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ first = stringify(this.keys[0].token);\n\t                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.keys[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return InstantiationError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n\t     * creation.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var InvalidProviderError = (function (_super) {\n\t        __extends(InvalidProviderError, _super);\n\t        /**\n\t         * @param {?} provider\n\t         */\n\t        function InvalidProviderError(provider) {\n\t            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n\t        }\n\t        return InvalidProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when the class has no annotation information.\n\t     *\n\t     * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n\t     * need to be injected into the constructor.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     *\n\t     * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n\t     *\n\t     * ```typescript\n\t     * class B {}\n\t     *\n\t     * class A {\n\t     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var NoAnnotationError = (function (_super) {\n\t        __extends(NoAnnotationError, _super);\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} params\n\t         */\n\t        function NoAnnotationError(typeOrFunc, params) {\n\t            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n\t        }\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} params\n\t         * @return {?}\n\t         */\n\t        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n\t            var /** @type {?} */ signature = [];\n\t            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n\t                var /** @type {?} */ parameter = params[i];\n\t                if (!parameter || parameter.length == 0) {\n\t                    signature.push('?');\n\t                }\n\t                else {\n\t                    signature.push(parameter.map(stringify).join(' '));\n\t                }\n\t            }\n\t            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n\t                signature.join(', ') + '). ' +\n\t                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n\t                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n\t        };\n\t        return NoAnnotationError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when getting an object by index.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {}\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t     *\n\t     * expect(() => injector.getAt(100)).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var OutOfBoundsError = (function (_super) {\n\t        __extends(OutOfBoundsError, _super);\n\t        /**\n\t         * @param {?} index\n\t         */\n\t        function OutOfBoundsError(index) {\n\t            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n\t        }\n\t        return OutOfBoundsError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when a multi provider and a regular provider are bound to the same token.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\n\t     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n\t     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n\t     * ])).toThrowError();\n\t     * ```\n\t     */\n\t    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n\t        __extends(MixingMultiProvidersWithRegularProvidersError, _super);\n\t        /**\n\t         * @param {?} provider1\n\t         * @param {?} provider2\n\t         */\n\t        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n\t            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n\t                provider2.toString());\n\t        }\n\t        return MixingMultiProvidersWithRegularProvidersError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n\t     *\n\t     * Keys have:\n\t     * - a system-wide unique `id`.\n\t     * - a `token`.\n\t     *\n\t     * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n\t     * the\n\t     * injector to store created objects in a more efficient way.\n\t     *\n\t     * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n\t     * resolving\n\t     * providers.\n\t     * \\@experimental\n\t     */\n\t    var ReflectiveKey = (function () {\n\t        /**\n\t         * Private\n\t         * @param {?} token\n\t         * @param {?} id\n\t         */\n\t        function ReflectiveKey(token, id) {\n\t            this.token = token;\n\t            this.id = id;\n\t            if (!token) {\n\t                throw new Error('Token must be defined!');\n\t            }\n\t        }\n\t        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n\t            /**\n\t             * Returns a stringified token.\n\t             * @return {?}\n\t             */\n\t            get: function () { return stringify(this.token); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Retrieves a `Key` for a token.\n\t         * @param {?} token\n\t         * @return {?}\n\t         */\n\t        ReflectiveKey.get = function (token) {\n\t            return _globalKeyRegistry.get(resolveForwardRef(token));\n\t        };\n\t        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n\t            /**\n\t             * @return {?} the number of keys registered in the system.\n\t             */\n\t            get: function () { return _globalKeyRegistry.numberOfKeys; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ReflectiveKey;\n\t    }());\n\t    /**\n\t     * \\@internal\n\t     */\n\t    var KeyRegistry = (function () {\n\t        function KeyRegistry() {\n\t            this._allKeys = new Map();\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @return {?}\n\t         */\n\t        KeyRegistry.prototype.get = function (token) {\n\t            if (token instanceof ReflectiveKey)\n\t                return token;\n\t            if (this._allKeys.has(token)) {\n\t                return this._allKeys.get(token);\n\t            }\n\t            var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n\t            this._allKeys.set(token, newKey);\n\t            return newKey;\n\t        };\n\t        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._allKeys.size; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return KeyRegistry;\n\t    }());\n\t    var /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Represents a type that a Component or other object is instances of.\n\t     *\n\t     * @description\n\t     *\n\t     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n\t     * the `MyCustomComponent` constructor function.\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ Type = Function;\n\t    /**\n\t     * @param {?} v\n\t     * @return {?}\n\t     */\n\t    function isType(v) {\n\t        return typeof v === 'function';\n\t    }\n\t\n\t    /**\n\t     * Attention: This regex has to hold even if the code is minified!\n\t     */\n\t    var /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{\\s*(\"use strict\";)?\\s*(return\\s+)?\\S+\\.apply\\(this,\\s*arguments\\)/;\n\t    var ReflectionCapabilities = (function () {\n\t        /**\n\t         * @param {?=} reflect\n\t         */\n\t        function ReflectionCapabilities(reflect) {\n\t            this._reflect = reflect || global$1.Reflect;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n\t        /**\n\t         * @param {?} t\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            return new (t.bind.apply(t, [void 0].concat(args)))();\n\t        }; };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} paramTypes\n\t         * @param {?} paramAnnotations\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n\t            var /** @type {?} */ result;\n\t            if (typeof paramTypes === 'undefined') {\n\t                result = new Array(paramAnnotations.length);\n\t            }\n\t            else {\n\t                result = new Array(paramTypes.length);\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < result.length; i++) {\n\t                // TS outputs Object for parameters without types, while Traceur omits\n\t                // the annotations. For now we preserve the Traceur behavior to aid\n\t                // migration, but this can be revisited.\n\t                if (typeof paramTypes === 'undefined') {\n\t                    result[i] = [];\n\t                }\n\t                else if (paramTypes[i] != Object) {\n\t                    result[i] = [paramTypes[i]];\n\t                }\n\t                else {\n\t                    result[i] = [];\n\t                }\n\t                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n\t                    result[i] = result[i].concat(paramAnnotations[i]);\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} parentCtor\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n\t            // If we have no decorators, we only have function.length as metadata.\n\t            // In that case, to detect whether a child class declared an own constructor or not,\n\t            // we need to look inside of that constructor to check whether it is\n\t            // just calling the parent.\n\t            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n\t            // that sets 'design:paramtypes' to []\n\t            // if a class inherits from another class but has no ctor declared itself.\n\t            if (DELEGATE_CTOR.exec(type.toString())) {\n\t                return null;\n\t            }\n\t            // Prefer the direct API.\n\t            if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n\t                return ((type)).parameters;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            var /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n\t            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n\t                // Newer tsickle uses a function closure\n\t                // Retain the non-function case for compatibility with older tsickle\n\t                var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n\t                var /** @type {?} */ paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n\t                var /** @type {?} */ paramAnnotations = ctorParameters.map(function (ctorParam) {\n\t                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n\t                });\n\t                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (isPresent(this._reflect) && isPresent(this._reflect.getOwnMetadata)) {\n\t                var /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n\t                var /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n\t                if (paramTypes || paramAnnotations) {\n\t                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t                }\n\t            }\n\t            // If a class has no decorators, at least create metadata\n\t            // based on function.length.\n\t            // Note: We know that this is a real constructor as we checked\n\t            // the content of the constructor above.\n\t            return new Array(((type.length))).fill(undefined);\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.parameters = function (type) {\n\t            // Note: only report metadata if we have at least one class decorator\n\t            // to stay in sync with the static reflector.\n\t            if (!isType(type)) {\n\t                return [];\n\t            }\n\t            var /** @type {?} */ parentCtor = getParentCtor(type);\n\t            var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n\t            if (!parameters && parentCtor !== Object) {\n\t                parameters = this.parameters(parentCtor);\n\t            }\n\t            return parameters || [];\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} parentCtor\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n\t            // Prefer the direct API.\n\t            if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n\t                var /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n\t                if (typeof annotations === 'function' && annotations.annotations) {\n\t                    annotations = annotations.annotations;\n\t                }\n\t                return annotations;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n\t                return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getOwnMetadata) {\n\t                return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n\t            if (!isType(typeOrFunc)) {\n\t                return [];\n\t            }\n\t            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n\t            var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n\t            var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n\t            return parentAnnotations.concat(ownAnnotations);\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} parentCtor\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n\t            // Prefer the direct API.\n\t            if (((typeOrFunc)).propMetadata &&\n\t                ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n\t                var /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n\t                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n\t                    propMetadata = propMetadata.propMetadata;\n\t                }\n\t                return propMetadata;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (((typeOrFunc)).propDecorators &&\n\t                ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n\t                var /** @type {?} */ propDecorators_1 = ((typeOrFunc)).propDecorators;\n\t                var /** @type {?} */ propMetadata_1 = ({});\n\t                Object.keys(propDecorators_1).forEach(function (prop) {\n\t                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n\t                });\n\t                return propMetadata_1;\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getOwnMetadata) {\n\t                return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n\t            if (!isType(typeOrFunc)) {\n\t                return {};\n\t            }\n\t            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n\t            var /** @type {?} */ propMetadata = {};\n\t            if (parentCtor !== Object) {\n\t                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n\t                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n\t                    propMetadata[propName] = parentPropMetadata_1[propName];\n\t                });\n\t            }\n\t            var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n\t            if (ownPropMetadata) {\n\t                Object.keys(ownPropMetadata).forEach(function (propName) {\n\t                    var /** @type {?} */ decorators = [];\n\t                    if (propMetadata.hasOwnProperty(propName)) {\n\t                        decorators.push.apply(decorators, propMetadata[propName]);\n\t                    }\n\t                    decorators.push.apply(decorators, ownPropMetadata[propName]);\n\t                    propMetadata[propName] = decorators;\n\t                });\n\t            }\n\t            return propMetadata;\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} lcProperty\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return type instanceof Type && lcProperty in type.prototype;\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.getter = function (name) { return ((new Function('o', 'return o.' + name + ';'))); };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.setter = function (name) {\n\t            return ((new Function('o', 'v', 'return o.' + name + ' = v;')));\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.method = function (name) {\n\t            var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n\t            return ((new Function('o', 'args', functionBody)));\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.importUri = function (type) {\n\t            // StaticSymbol\n\t            if (typeof type === 'object' && type['filePath']) {\n\t                return type['filePath'];\n\t            }\n\t            // Runtime type\n\t            return \"./\" + stringify(type);\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} moduleUrl\n\t         * @param {?} runtime\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n\t        /**\n\t         * @param {?} enumIdentifier\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n\t        return ReflectionCapabilities;\n\t    }());\n\t    /**\n\t     * @param {?} decoratorInvocations\n\t     * @return {?}\n\t     */\n\t    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n\t        if (!decoratorInvocations) {\n\t            return [];\n\t        }\n\t        return decoratorInvocations.map(function (decoratorInvocation) {\n\t            var /** @type {?} */ decoratorType = decoratorInvocation.type;\n\t            var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n\t            var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n\t            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} ctor\n\t     * @return {?}\n\t     */\n\t    function getParentCtor(ctor) {\n\t        var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n\t        var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n\t        // Note: We always use `Object` as the null value\n\t        // to simplify checking later on.\n\t        return parentCtor || Object;\n\t    }\n\t\n\t    /**\n\t     * Provides read-only access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     * @abstract\n\t     */\n\t    var ReflectorReader = (function () {\n\t        function ReflectorReader() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.parameters = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.annotations = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.propMetadata = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.importUri = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @param {?} moduleUrl\n\t         * @param {?} runtime\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} identifier\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.resolveEnum = function (identifier, name) { };\n\t        return ReflectorReader;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var Reflector = (function (_super) {\n\t        __extends$2(Reflector, _super);\n\t        /**\n\t         * @param {?} reflectionCapabilities\n\t         */\n\t        function Reflector(reflectionCapabilities) {\n\t            _super.call(this);\n\t            this.reflectionCapabilities = reflectionCapabilities;\n\t        }\n\t        /**\n\t         * @param {?} caps\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.parameters = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.parameters(typeOrFunc);\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.annotations = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.annotations(typeOrFunc);\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.propMetadata = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} lcProperty\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} moduleUrl\n\t         * @param {?} runtime\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n\t            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n\t        };\n\t        /**\n\t         * @param {?} identifier\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.resolveEnum = function (identifier, name) {\n\t            return this.reflectionCapabilities.resolveEnum(identifier, name);\n\t        };\n\t        return Reflector;\n\t    }(ReflectorReader));\n\t\n\t    /**\n\t     * The {@link Reflector} used internally in Angular to access metadata\n\t     * about symbols.\n\t     */\n\t    var /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n\t\n\t    /**\n\t     * `Dependency` is used by the framework to extend DI.\n\t     * This is internal to Angular and should not be used directly.\n\t     */\n\t    var ReflectiveDependency = (function () {\n\t        /**\n\t         * @param {?} key\n\t         * @param {?} optional\n\t         * @param {?} visibility\n\t         */\n\t        function ReflectiveDependency(key, optional, visibility) {\n\t            this.key = key;\n\t            this.optional = optional;\n\t            this.visibility = visibility;\n\t        }\n\t        /**\n\t         * @param {?} key\n\t         * @return {?}\n\t         */\n\t        ReflectiveDependency.fromKey = function (key) {\n\t            return new ReflectiveDependency(key, false, null);\n\t        };\n\t        return ReflectiveDependency;\n\t    }());\n\t    var /** @type {?} */ _EMPTY_LIST = [];\n\t    var ResolvedReflectiveProvider_ = (function () {\n\t        /**\n\t         * @param {?} key\n\t         * @param {?} resolvedFactories\n\t         * @param {?} multiProvider\n\t         */\n\t        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n\t            this.key = key;\n\t            this.resolvedFactories = resolvedFactories;\n\t            this.multiProvider = multiProvider;\n\t        }\n\t        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.resolvedFactories[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ResolvedReflectiveProvider_;\n\t    }());\n\t    /**\n\t     * An internal resolved representation of a factory function created by resolving {\\@link\n\t     * Provider}.\n\t     * \\@experimental\n\t     */\n\t    var ResolvedReflectiveFactory = (function () {\n\t        /**\n\t         * @param {?} factory\n\t         * @param {?} dependencies\n\t         */\n\t        function ResolvedReflectiveFactory(factory, dependencies) {\n\t            this.factory = factory;\n\t            this.dependencies = dependencies;\n\t        }\n\t        return ResolvedReflectiveFactory;\n\t    }());\n\t    /**\n\t     * Resolve a single provider.\n\t     * @param {?} provider\n\t     * @return {?}\n\t     */\n\t    function resolveReflectiveFactory(provider) {\n\t        var /** @type {?} */ factoryFn;\n\t        var /** @type {?} */ resolvedDeps;\n\t        if (provider.useClass) {\n\t            var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n\t            factoryFn = reflector.factory(useClass);\n\t            resolvedDeps = _dependenciesFor(useClass);\n\t        }\n\t        else if (provider.useExisting) {\n\t            factoryFn = function (aliasInstance) { return aliasInstance; };\n\t            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n\t        }\n\t        else if (provider.useFactory) {\n\t            factoryFn = provider.useFactory;\n\t            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n\t        }\n\t        else {\n\t            factoryFn = function () { return provider.useValue; };\n\t            resolvedDeps = _EMPTY_LIST;\n\t        }\n\t        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n\t    }\n\t    /**\n\t     * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n\t     *\n\t     * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n\t     * convenience provider syntax.\n\t     * @param {?} provider\n\t     * @return {?}\n\t     */\n\t    function resolveReflectiveProvider(provider) {\n\t        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n\t    }\n\t    /**\n\t     * Resolve a list of Providers.\n\t     * @param {?} providers\n\t     * @return {?}\n\t     */\n\t    function resolveReflectiveProviders(providers) {\n\t        var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n\t        var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n\t        var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n\t        return Array.from(resolvedProviderMap.values());\n\t    }\n\t    /**\n\t     * Merges a list of ResolvedProviders into a list where\n\t     * each key is contained exactly once and multi providers\n\t     * have been merged.\n\t     * @param {?} providers\n\t     * @param {?} normalizedProvidersMap\n\t     * @return {?}\n\t     */\n\t    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n\t        for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n\t            var /** @type {?} */ provider = providers[i];\n\t            var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n\t            if (existing) {\n\t                if (provider.multiProvider !== existing.multiProvider) {\n\t                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n\t                }\n\t                if (provider.multiProvider) {\n\t                    for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n\t                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n\t                    }\n\t                }\n\t                else {\n\t                    normalizedProvidersMap.set(provider.key.id, provider);\n\t                }\n\t            }\n\t            else {\n\t                var /** @type {?} */ resolvedProvider = void 0;\n\t                if (provider.multiProvider) {\n\t                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n\t                }\n\t                else {\n\t                    resolvedProvider = provider;\n\t                }\n\t                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n\t            }\n\t        }\n\t        return normalizedProvidersMap;\n\t    }\n\t    /**\n\t     * @param {?} providers\n\t     * @param {?} res\n\t     * @return {?}\n\t     */\n\t    function _normalizeProviders(providers, res) {\n\t        providers.forEach(function (b) {\n\t            if (b instanceof Type) {\n\t                res.push({ provide: b, useClass: b });\n\t            }\n\t            else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n\t                res.push(/** @type {?} */ (b));\n\t            }\n\t            else if (b instanceof Array) {\n\t                _normalizeProviders(b, res);\n\t            }\n\t            else {\n\t                throw new InvalidProviderError(b);\n\t            }\n\t        });\n\t        return res;\n\t    }\n\t    /**\n\t     * @param {?} typeOrFunc\n\t     * @param {?} dependencies\n\t     * @return {?}\n\t     */\n\t    function constructDependencies(typeOrFunc, dependencies) {\n\t        if (!dependencies) {\n\t            return _dependenciesFor(typeOrFunc);\n\t        }\n\t        else {\n\t            var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n\t            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} typeOrFunc\n\t     * @return {?}\n\t     */\n\t    function _dependenciesFor(typeOrFunc) {\n\t        var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\t        if (!params)\n\t            return [];\n\t        if (params.some(function (p) { return p == null; })) {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n\t    }\n\t    /**\n\t     * @param {?} typeOrFunc\n\t     * @param {?} metadata\n\t     * @param {?} params\n\t     * @return {?}\n\t     */\n\t    function _extractToken(typeOrFunc, metadata, params) {\n\t        var /** @type {?} */ token = null;\n\t        var /** @type {?} */ optional = false;\n\t        if (!Array.isArray(metadata)) {\n\t            if (metadata instanceof Inject) {\n\t                return _createDependency(metadata.token, optional, null);\n\t            }\n\t            else {\n\t                return _createDependency(metadata, optional, null);\n\t            }\n\t        }\n\t        var /** @type {?} */ visibility = null;\n\t        for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n\t            var /** @type {?} */ paramMetadata = metadata[i];\n\t            if (paramMetadata instanceof Type) {\n\t                token = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Inject) {\n\t                token = paramMetadata.token;\n\t            }\n\t            else if (paramMetadata instanceof Optional) {\n\t                optional = true;\n\t            }\n\t            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n\t                visibility = paramMetadata;\n\t            }\n\t        }\n\t        token = resolveForwardRef(token);\n\t        if (token != null) {\n\t            return _createDependency(token, optional, visibility);\n\t        }\n\t        else {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @param {?} optional\n\t     * @param {?} visibility\n\t     * @return {?}\n\t     */\n\t    function _createDependency(token, optional, visibility) {\n\t        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n\t    }\n\t\n\t    // Threshold for the dynamic version\n\t    var /** @type {?} */ UNDEFINED = new Object();\n\t    /**\n\t     * A ReflectiveDependency injection container used for instantiating objects and resolving\n\t     * dependencies.\n\t     *\n\t     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n\t     * constructor dependencies.\n\t     *\n\t     * In typical use, application code asks for the dependencies in the constructor and they are\n\t     * resolved by the `Injector`.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n\t     *\n\t     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n\t     *\n\t     * ```typescript\n\t     * \\@Injectable()\n\t     * class Engine {\n\t     * }\n\t     *\n\t     * \\@Injectable()\n\t     * class Car {\n\t     *   constructor(public engine:Engine) {}\n\t     * }\n\t     *\n\t     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t     * var car = injector.get(Car);\n\t     * expect(car instanceof Car).toBe(true);\n\t     * expect(car.engine instanceof Engine).toBe(true);\n\t     * ```\n\t     *\n\t     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n\t     * resolve all of the object's dependencies automatically.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ReflectiveInjector = (function () {\n\t        function ReflectiveInjector() {\n\t        }\n\t        /**\n\t         * Turns an array of provider definitions into an array of resolved providers.\n\t         *\n\t         * A resolution is a process of flattening multiple nested arrays and converting individual\n\t         * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n\t         *\n\t         * expect(providers.length).toEqual(2);\n\t         *\n\t         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n\t         * expect(providers[0].key.displayName).toBe(\"Car\");\n\t         * expect(providers[0].dependencies.length).toEqual(1);\n\t         * expect(providers[0].factory).toBeDefined();\n\t         *\n\t         * expect(providers[1].key.displayName).toBe(\"Engine\");\n\t         * });\n\t         * ```\n\t         *\n\t         * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.resolve = function (providers) {\n\t            return resolveReflectiveProviders(providers);\n\t        };\n\t        /**\n\t         * Resolves an array of providers and creates an injector from those providers.\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `fromResolvedProviders`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {\\@link Injector#resolve} and {\\@link Injector#fromResolvedProviders}.\n\t         * @param {?} providers\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n\t        };\n\t        /**\n\t         * Creates an injector from previously resolved providers.\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n\t         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         * \\@experimental\n\t         * @param {?} providers\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            return new ReflectiveInjector_(providers, parent);\n\t        };\n\t        /**\n\t         * Parent of this injector.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n\t         *\n\t         * ```typescript\n\t         * var parent = ReflectiveInjector.resolveAndCreate([]);\n\t         * var child = parent.resolveAndCreateChild([]);\n\t         * expect(child.parent).toBe(parent);\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.parent = function () { };\n\t        /**\n\t         * Resolves an array of providers and creates a child injector from those providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n\t         * var child = parent.resolveAndCreateChild([ChildProvider]);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `createChildFromResolved`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {\\@link Injector#resolve} and {\\@link Injector#createChildFromResolved}.\n\t         * @abstract\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n\t        /**\n\t         * Creates a child injector from previously resolved providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n\t         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n\t         *\n\t         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n\t         * var child = parent.createChildFromResolved(childProviders);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         * @abstract\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n\t        /**\n\t         * Resolves a provider and instantiates an object in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         *\n\t         * var car = injector.resolveAndInstantiate(Car);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n\t         * ```\n\t         * @abstract\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n\t        /**\n\t         * Instantiates an object using a resolved provider in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n\t         * var car = injector.instantiateResolved(carProvider);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n\t         * ```\n\t         * @abstract\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n\t        return ReflectiveInjector;\n\t    }());\n\t    var ReflectiveInjector_ = (function () {\n\t        /**\n\t         * Private\n\t         * @param {?} _providers\n\t         * @param {?=} _parent\n\t         */\n\t        function ReflectiveInjector_(_providers, _parent) {\n\t            if (_parent === void 0) { _parent = null; }\n\t            /** @internal */\n\t            this._constructionCounter = 0;\n\t            this._providers = _providers;\n\t            this._parent = _parent;\n\t            var len = _providers.length;\n\t            this.keyIds = new Array(len);\n\t            this.objs = new Array(len);\n\t            for (var i = 0; i < len; i++) {\n\t                this.keyIds[i] = _providers[i].key.id;\n\t                this.objs[i] = UNDEFINED;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n\t        };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n\t            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return this.createChildFromResolved(ResolvedReflectiveProviders);\n\t        };\n\t        /**\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n\t            var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n\t            inj._parent = this;\n\t            return inj;\n\t        };\n\t        /**\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n\t            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n\t        };\n\t        /**\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n\t            if (index < 0 || index >= this._providers.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this._providers[index];\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._new = function (provider) {\n\t            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n\t                throw new CyclicDependencyError(this, provider.key);\n\t            }\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n\t        /**\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n\t            if (provider.multiProvider) {\n\t                var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n\t                for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n\t                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n\t                }\n\t                return res;\n\t            }\n\t            else {\n\t                return this._instantiate(provider, provider.resolvedFactories[0]);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} provider\n\t         * @param {?} ResolvedReflectiveFactory\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n\t            var _this = this;\n\t            var /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\t            var /** @type {?} */ deps;\n\t            try {\n\t                deps =\n\t                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n\t            }\n\t            catch (e) {\n\t                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n\t                    e.addKey(this, provider.key);\n\t                }\n\t                throw e;\n\t            }\n\t            var /** @type {?} */ obj;\n\t            try {\n\t                obj = factory.apply(void 0, deps);\n\t            }\n\t            catch (e) {\n\t                throw new InstantiationError(this, e, e.stack, provider.key);\n\t            }\n\t            return obj;\n\t        };\n\t        /**\n\t         * @param {?} dep\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n\t            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n\t        };\n\t        /**\n\t         * @param {?} key\n\t         * @param {?} visibility\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n\t            if (key === INJECTOR_KEY) {\n\t                return this;\n\t            }\n\t            if (visibility instanceof Self) {\n\t                return this._getByKeySelf(key, notFoundValue);\n\t            }\n\t            else {\n\t                return this._getByKeyDefault(key, notFoundValue, visibility);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} keyId\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n\t            for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n\t                if (this.keyIds[i] === keyId) {\n\t                    if (this.objs[i] === UNDEFINED) {\n\t                        this.objs[i] = this._new(this._providers[i]);\n\t                    }\n\t                    return this.objs[i];\n\t                }\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} key\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n\t            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n\t                return notFoundValue;\n\t            }\n\t            else {\n\t                throw new NoProviderError(this, key);\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} key\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n\t            var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n\t            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} key\n\t         * @param {?} notFoundValue\n\t         * @param {?} visibility\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n\t            var /** @type {?} */ inj;\n\t            if (visibility instanceof SkipSelf) {\n\t                inj = this._parent;\n\t            }\n\t            else {\n\t                inj = this;\n\t            }\n\t            while (inj instanceof ReflectiveInjector_) {\n\t                var /** @type {?} */ inj_ = (inj);\n\t                var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n\t                if (obj !== UNDEFINED)\n\t                    return obj;\n\t                inj = inj_._parent;\n\t            }\n\t            if (inj !== null) {\n\t                return inj.get(key.token, notFoundValue);\n\t            }\n\t            else {\n\t                return this._throwOrNull(key, notFoundValue);\n\t            }\n\t        };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n\t                    .join(', ');\n\t                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n\t        return ReflectiveInjector_;\n\t    }());\n\t    var /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n\t    /**\n\t     * @param {?} injector\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function _mapProviders(injector, fn) {\n\t        var /** @type {?} */ res = new Array(injector._providers.length);\n\t        for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n\t            res[i] = fn(injector.getProviderAtIndex(i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * \\@whatItDoes Provides a hook for centralized exception handling.\n\t     *\n\t     * \\@description\n\t     *\n\t     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n\t     * intercept error handling, write a custom exception handler that replaces this default as\n\t     * appropriate for your app.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * class MyErrorHandler implements ErrorHandler {\n\t     *   handleError(error) {\n\t     *     // do something with the exception\n\t     *   }\n\t     * }\n\t     *\n\t     * \\@NgModule({\n\t     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n\t     * })\n\t     * class MyModule {}\n\t     * ```\n\t     *\n\t     * \\@stable\n\t     */\n\t    var ErrorHandler = (function () {\n\t        /**\n\t         * @param {?=} rethrowError\n\t         */\n\t        function ErrorHandler(rethrowError) {\n\t            if (rethrowError === void 0) { rethrowError = true; }\n\t            /**\n\t             * @internal\n\t             */\n\t            this._console = console;\n\t            this.rethrowError = rethrowError;\n\t        }\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype.handleError = function (error) {\n\t            var /** @type {?} */ originalError = this._findOriginalError(error);\n\t            var /** @type {?} */ originalStack = this._findOriginalStack(error);\n\t            var /** @type {?} */ context = this._findContext(error);\n\t            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n\t            if (originalError) {\n\t                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n\t            }\n\t            if (originalStack) {\n\t                this._console.error('ORIGINAL STACKTRACE:');\n\t                this._console.error(originalStack);\n\t            }\n\t            if (context) {\n\t                this._console.error('ERROR CONTEXT:');\n\t                this._console.error(context);\n\t            }\n\t            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n\t            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n\t            if (this.rethrowError)\n\t                throw error;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._extractMessage = function (error) {\n\t            return error instanceof Error ? error.message : error.toString();\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._findContext = function (error) {\n\t            if (error) {\n\t                return error.context ? error.context :\n\t                    this._findContext(((error)).originalError);\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._findOriginalError = function (error) {\n\t            var /** @type {?} */ e = ((error)).originalError;\n\t            while (e && ((e)).originalError) {\n\t                e = ((e)).originalError;\n\t            }\n\t            return e;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._findOriginalStack = function (error) {\n\t            if (!(error instanceof Error))\n\t                return null;\n\t            var /** @type {?} */ e = error;\n\t            var /** @type {?} */ stack = e.stack;\n\t            while (e instanceof Error && ((e)).originalError) {\n\t                e = ((e)).originalError;\n\t                if (e instanceof Error && e.stack) {\n\t                    stack = e.stack;\n\t                }\n\t            }\n\t            return stack;\n\t        };\n\t        return ErrorHandler;\n\t    }());\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var /** @type {?} */ m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var /** @type {?} */ k1 = Object.keys(m1);\n\t            var /** @type {?} */ k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n\t                var /** @type {?} */ key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} arr\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        ListWrapper.findLast = function (arr, condition) {\n\t            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n\t                if (condition(arr[i])) {\n\t                    return arr[i];\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} items\n\t         * @return {?}\n\t         */\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n\t                var /** @type {?} */ index = list.indexOf(items[i]);\n\t                if (index > -1) {\n\t                    list.splice(index, 1);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        ListWrapper.remove = function (list, el) {\n\t            var /** @type {?} */ index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        /**\n\t         * @param {?} a\n\t         * @param {?} b\n\t         * @return {?}\n\t         */\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @return {?}\n\t         */\n\t        ListWrapper.flatten = function (list) {\n\t            return list.reduce(function (flat, item) {\n\t                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t                return ((flat)).concat(flatItem);\n\t            }, []);\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @param {?} comparator\n\t     * @return {?}\n\t     */\n\t    function areIterablesEqual(a, b, comparator) {\n\t        var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n\t        var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\t        while (true) {\n\t            var /** @type {?} */ item1 = iterator1.next();\n\t            var /** @type {?} */ item2 = iterator2.next();\n\t            if (item1.done && item2.done)\n\t                return true;\n\t            if (item1.done || item2.done)\n\t                return false;\n\t            if (!comparator(item1.value, item2.value))\n\t                return false;\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function iterateListLike(obj, fn) {\n\t        if (Array.isArray(obj)) {\n\t            for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n\t                fn(obj[i]);\n\t            }\n\t        }\n\t        else {\n\t            var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n\t            var /** @type {?} */ item = void 0;\n\t            while (!((item = iterator.next()).done)) {\n\t                fn(item.value);\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Determine if the argument is shaped like a Promise\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPromise(obj) {\n\t        // allow any Promise/A+ compliant thenable.\n\t        // It's up to the caller to ensure that obj.then conforms to the spec\n\t        return !!obj && typeof obj.then === 'function';\n\t    }\n\t    /**\n\t     * Determine if the argument is an Observable\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isObservable(obj) {\n\t        return !!(obj && obj[rxjs_symbol_observable.$$observable]);\n\t    }\n\t\n\t    /**\n\t     * A function that will be executed when an application is initialized.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_INITIALIZER = new OpaqueToken('Application Initializer');\n\t    /**\n\t     * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var ApplicationInitStatus = (function () {\n\t        /**\n\t         * @param {?} appInits\n\t         */\n\t        function ApplicationInitStatus(appInits) {\n\t            var _this = this;\n\t            this._done = false;\n\t            var asyncInitPromises = [];\n\t            if (appInits) {\n\t                for (var i = 0; i < appInits.length; i++) {\n\t                    var initResult = appInits[i]();\n\t                    if (isPromise(initResult)) {\n\t                        asyncInitPromises.push(initResult);\n\t                    }\n\t                }\n\t            }\n\t            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n\t            if (asyncInitPromises.length === 0) {\n\t                this._done = true;\n\t            }\n\t        }\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._done; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._donePromise; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ApplicationInitStatus.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationInitStatus.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n\t        ]; };\n\t        return ApplicationInitStatus;\n\t    }());\n\t\n\t    /**\n\t     * A DI Token representing a unique string id assigned to the application by Angular and used\n\t     * primarily for prefixing application attributes and CSS styles when\n\t     * {@link ViewEncapsulation#Emulated} is being used.\n\t     *\n\t     * If you need to avoid randomly generated value to be used as an application id, you can provide\n\t     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n\t     * using this token.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_ID = new OpaqueToken('AppId');\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _appIdRandomProviderFactory() {\n\t        return \"\" + _randomChar() + _randomChar() + _randomChar();\n\t    }\n\t    /**\n\t     * Providers that will generate a random APP_ID_TOKEN.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n\t        provide: APP_ID,\n\t        useFactory: _appIdRandomProviderFactory,\n\t        deps: /** @type {?} */ ([]),\n\t    };\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _randomChar() {\n\t        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n\t    }\n\t    /**\n\t     * A function that will be executed when a platform is initialized.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n\t    /**\n\t     * All callbacks provided via this token will be called for every component that is bootstrapped.\n\t     * Signature of the callback:\n\t     *\n\t     * `(componentRef: ComponentRef) => void`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n\t    /**\n\t     * A token which indicates the root directory of the application\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\t\n\t    var Console = (function () {\n\t        function Console() {\n\t        }\n\t        /**\n\t         * @param {?} message\n\t         * @return {?}\n\t         */\n\t        Console.prototype.log = function (message) { print(message); };\n\t        /**\n\t         * @param {?} message\n\t         * @return {?}\n\t         */\n\t        Console.prototype.warn = function (message) { warn(message); };\n\t        Console.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Console.ctorParameters = function () { return []; };\n\t        return Console;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a component is still being loaded in a synchronous compile.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var ComponentStillLoadingError = (function (_super) {\n\t        __extends$4(ComponentStillLoadingError, _super);\n\t        /**\n\t         * @param {?} compType\n\t         */\n\t        function ComponentStillLoadingError(compType) {\n\t            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n\t            this.compType = compType;\n\t        }\n\t        return ComponentStillLoadingError;\n\t    }(BaseError));\n\t    /**\n\t     * Combination of NgModuleFactory and ComponentFactorys.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var ModuleWithComponentFactories = (function () {\n\t        /**\n\t         * @param {?} ngModuleFactory\n\t         * @param {?} componentFactories\n\t         */\n\t        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n\t            this.ngModuleFactory = ngModuleFactory;\n\t            this.componentFactories = componentFactories;\n\t        }\n\t        return ModuleWithComponentFactories;\n\t    }());\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _throwError() {\n\t        throw new Error(\"Runtime compiler is not loaded\");\n\t    }\n\t    /**\n\t     * Low-level service for running the angular compiler during runtime\n\t     * to create {\\@link ComponentFactory}s, which\n\t     * can later be used to create and render a Component instance.\n\t     *\n\t     * Each `\\@NgModule` provides an own `Compiler` to its injector,\n\t     * that will use the directives/pipes of the ng module for compilation\n\t     * of components.\n\t     * \\@stable\n\t     */\n\t    var Compiler = (function () {\n\t        function Compiler() {\n\t        }\n\t        /**\n\t         * Compiles the given NgModule and all of its components. All templates of the components listed\n\t         * in `entryComponents`\n\t         * have to be inlined. Otherwise throws a {\\@link ComponentStillLoadingError}.\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Compiles the given NgModule and all of its components\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Same as {\\@link compileModuleSync} but also creates ComponentFactories for all components.\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Same as {\\@link compileModuleAsync} but also creates ComponentFactories for all components.\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n\t         * the template of the given component.\n\t         * This is used by the `upgrade` library to compile the appropriate transclude content\n\t         * in the Angular 1 wrapper component.\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.getNgContentSelectors = function (component) { throw _throwError(); };\n\t        /**\n\t         * Clears all caches.\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.clearCache = function () { };\n\t        /**\n\t         * Clears the cache for the given component/ngModule.\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.clearCacheFor = function (type) { };\n\t        Compiler.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Compiler.ctorParameters = function () { return []; };\n\t        return Compiler;\n\t    }());\n\t    /**\n\t     * Token to provide CompilerOptions in the platform injector.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n\t    /**\n\t     * A factory for creating a Compiler\n\t     *\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var CompilerFactory = (function () {\n\t        function CompilerFactory() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        CompilerFactory.prototype.createCompiler = function (options) { };\n\t        return CompilerFactory;\n\t    }());\n\t\n\t    var ElementRef = (function () {\n\t        /**\n\t         * @param {?} nativeElement\n\t         */\n\t        function ElementRef(nativeElement) {\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        return ElementRef;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * \\@Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * \\@stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$6(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         * @param {?=} isAsync\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        /**\n\t         * @param {?=} generatorOrNext\n\t         * @param {?=} error\n\t         * @param {?=} complete\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var /** @type {?} */ schedulerFn;\n\t            var /** @type {?} */ errorFn = function (err) { return null; };\n\t            var /** @type {?} */ completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * An injectable service for executing work inside or outside of the Angular zone.\n\t     *\n\t     * The most common use of this service is to optimize performance when starting a work consisting of\n\t     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n\t     * Angular. Such tasks can be kicked off via {\\@link runOutsideAngular} and if needed, these tasks\n\t     * can reenter the Angular zone via {\\@link run}.\n\t     *\n\t     * <!-- TODO: add/fix links to:\n\t     *   - docs explaining zones and the use of zones in Angular and change-detection\n\t     *   - link to runOutsideAngular/run (throughout this file!)\n\t     *   -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Component, NgZone} from '\\@angular/core';\n\t     * import {NgIf} from '\\@angular/common';\n\t     *\n\t     * \\@Component({\n\t     *   selector: 'ng-zone-demo'.\n\t     *   template: `\n\t     *     <h2>Demo: NgZone</h2>\n\t     *\n\t     *     <p>Progress: {{progress}}%</p>\n\t     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n\t     *\n\t     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n\t     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n\t     *   `,\n\t     * })\n\t     * export class NgZoneDemo {\n\t     *   progress: number = 0;\n\t     *   label: string;\n\t     *\n\t     *   constructor(private _ngZone: NgZone) {}\n\t     *\n\t     *   // Loop inside the Angular zone\n\t     *   // so the UI DOES refresh after each setTimeout cycle\n\t     *   processWithinAngularZone() {\n\t     *     this.label = 'inside';\n\t     *     this.progress = 0;\n\t     *     this._increaseProgress(() => console.log('Inside Done!'));\n\t     *   }\n\t     *\n\t     *   // Loop outside of the Angular zone\n\t     *   // so the UI DOES NOT refresh after each setTimeout cycle\n\t     *   processOutsideOfAngularZone() {\n\t     *     this.label = 'outside';\n\t     *     this.progress = 0;\n\t     *     this._ngZone.runOutsideAngular(() => {\n\t     *       this._increaseProgress(() => {\n\t     *       // reenter the Angular zone and display done\n\t     *       this._ngZone.run(() => {console.log('Outside Done!') });\n\t     *     }}));\n\t     *   }\n\t     *\n\t     *   _increaseProgress(doneCallback: () => void) {\n\t     *     this.progress += 1;\n\t     *     console.log(`Current progress: ${this.progress}%`);\n\t     *\n\t     *     if (this.progress < 100) {\n\t     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n\t     *     } else {\n\t     *       doneCallback();\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgZone = (function () {\n\t        /**\n\t         * @param {?} __0\n\t         */\n\t        function NgZone(_a) {\n\t            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n\t            this._hasPendingMicrotasks = false;\n\t            this._hasPendingMacrotasks = false;\n\t            this._isStable = true;\n\t            this._nesting = 0;\n\t            this._onUnstable = new EventEmitter(false);\n\t            this._onMicrotaskEmpty = new EventEmitter(false);\n\t            this._onStable = new EventEmitter(false);\n\t            this._onErrorEvents = new EventEmitter(false);\n\t            if (typeof Zone == 'undefined') {\n\t                throw new Error('Angular requires Zone.js prolyfill.');\n\t            }\n\t            Zone.assertZonePatched();\n\t            this.outer = this.inner = Zone.current;\n\t            if (Zone['wtfZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n\t            }\n\t            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n\t            }\n\t            this.forkInnerZoneWithAngularBehavior();\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.assertInAngularZone = function () {\n\t            if (!NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to be in Angular Zone, but it is not!');\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.assertNotInAngularZone = function () {\n\t            if (NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to not be in Angular Zone, but it is!');\n\t            }\n\t        };\n\t        /**\n\t         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n\t         * outside of the Angular zone (typically started via {\\@link runOutsideAngular}).\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * within the Angular zone.\n\t         *\n\t         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n\t        /**\n\t         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n\t         * rethrown.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n\t        /**\n\t         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n\t         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * outside of the Angular zone.\n\t         *\n\t         * Use {\\@link run} to reenter the Angular zone and do work that updates the application model.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n\t        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n\t            /**\n\t             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onUnstable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n\t            /**\n\t             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n\t             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n\t             * For this reason this event can fire multiple times per VM Turn.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onMicrotaskEmpty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onStable\", {\n\t            /**\n\t             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n\t             * implies we are about to relinquish VM turn.\n\t             * This event gets called just once.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onError\", {\n\t            /**\n\t             * Notify that an error has been delivered.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onErrorEvents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"isStable\", {\n\t            /**\n\t             * Whether there are no outstanding microtasks or macrotasks.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._isStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._hasPendingMicrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._hasPendingMacrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.checkStable = function () {\n\t            var _this = this;\n\t            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n\t                try {\n\t                    this._nesting++;\n\t                    this._onMicrotaskEmpty.emit(null);\n\t                }\n\t                finally {\n\t                    this._nesting--;\n\t                    if (!this._hasPendingMicrotasks) {\n\t                        try {\n\t                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n\t                        }\n\t                        finally {\n\t                            this._isStable = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n\t            var _this = this;\n\t            this.inner = this.inner.fork({\n\t                name: 'angular',\n\t                properties: /** @type {?} */ ({ 'isAngularZone': true }),\n\t                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onHasTask: function (delegate, current, target, hasTaskState) {\n\t                    delegate.hasTask(target, hasTaskState);\n\t                    if (current === target) {\n\t                        // We are only interested in hasTask events which originate from our zone\n\t                        // (A child hasTask event is not interesting to us)\n\t                        if (hasTaskState.change == 'microTask') {\n\t                            _this.setHasMicrotask(hasTaskState.microTask);\n\t                        }\n\t                        else if (hasTaskState.change == 'macroTask') {\n\t                            _this.setHasMacrotask(hasTaskState.macroTask);\n\t                        }\n\t                    }\n\t                },\n\t                onHandleError: function (delegate, current, target, error) {\n\t                    delegate.handleError(target, error);\n\t                    _this.triggerError(error);\n\t                    return false;\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.onEnter = function () {\n\t            this._nesting++;\n\t            if (this._isStable) {\n\t                this._isStable = false;\n\t                this._onUnstable.emit(null);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.onLeave = function () {\n\t            this._nesting--;\n\t            this.checkStable();\n\t        };\n\t        /**\n\t         * @param {?} hasMicrotasks\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n\t            this._hasPendingMicrotasks = hasMicrotasks;\n\t            this.checkStable();\n\t        };\n\t        /**\n\t         * @param {?} hasMacrotasks\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n\t        return NgZone;\n\t    }());\n\t\n\t    var AnimationQueue = (function () {\n\t        /**\n\t         * @param {?} _zone\n\t         */\n\t        function AnimationQueue(_zone) {\n\t            this._zone = _zone;\n\t            this.entries = [];\n\t        }\n\t        /**\n\t         * @param {?} player\n\t         * @return {?}\n\t         */\n\t        AnimationQueue.prototype.enqueue = function (player) { this.entries.push(player); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationQueue.prototype.flush = function () {\n\t            var _this = this;\n\t            // given that each animation player may set aside\n\t            // microtasks and rely on DOM-based events, this\n\t            // will cause Angular to run change detection after\n\t            // each request. This sidesteps the issue. If a user\n\t            // hooks into an animation via (@anim.start) or (@anim.done)\n\t            // then those methods will automatically trigger change\n\t            // detection by wrapping themselves inside of a zone\n\t            if (this.entries.length) {\n\t                this._zone.runOutsideAngular(function () {\n\t                    // this code is wrapped into a single promise such that the\n\t                    // onStart and onDone player callbacks are triggered outside\n\t                    // of the digest cycle of animations\n\t                    Promise.resolve(null).then(function () { return _this._triggerAnimations(); });\n\t                });\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationQueue.prototype._triggerAnimations = function () {\n\t            NgZone.assertNotInAngularZone();\n\t            while (this.entries.length) {\n\t                var /** @type {?} */ player = this.entries.shift();\n\t                // in the event that an animation throws an error then we do\n\t                // not want to re-run animations on any previous animations\n\t                // if they have already been kicked off beforehand\n\t                if (!player.hasStarted()) {\n\t                    player.play();\n\t                }\n\t            }\n\t        };\n\t        AnimationQueue.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        AnimationQueue.ctorParameters = function () { return [\n\t            { type: NgZone, },\n\t        ]; };\n\t        return AnimationQueue;\n\t    }());\n\t\n\t    var DefaultIterableDifferFactory = (function () {\n\t        function DefaultIterableDifferFactory() {\n\t        }\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n\t        /**\n\t         * @param {?} cdRef\n\t         * @param {?=} trackByFn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n\t            return new DefaultIterableDiffer(trackByFn);\n\t        };\n\t        return DefaultIterableDifferFactory;\n\t    }());\n\t    var /** @type {?} */ trackByIdentity = function (index, item) { return item; };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var DefaultIterableDiffer = (function () {\n\t        /**\n\t         * @param {?=} _trackByFn\n\t         */\n\t        function DefaultIterableDiffer(_trackByFn) {\n\t            this._trackByFn = _trackByFn;\n\t            this._length = null;\n\t            this._collection = null;\n\t            this._linkedRecords = null;\n\t            this._unlinkedRecords = null;\n\t            this._previousItHead = null;\n\t            this._itHead = null;\n\t            this._itTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._movesHead = null;\n\t            this._movesTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t            this._identityChangesHead = null;\n\t            this._identityChangesTail = null;\n\t            this._trackByFn = this._trackByFn || trackByIdentity;\n\t        }\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._collection; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._itHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n\t            var /** @type {?} */ nextIt = this._itHead;\n\t            var /** @type {?} */ nextRemove = this._removalsHead;\n\t            var /** @type {?} */ addRemoveOffset = 0;\n\t            var /** @type {?} */ moveOffsets = null;\n\t            while (nextIt || nextRemove) {\n\t                // Figure out which is the next record to process\n\t                // Order: remove, add, move\n\t                var /** @type {?} */ record = !nextRemove ||\n\t                    nextIt &&\n\t                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n\t                    nextIt :\n\t                    nextRemove;\n\t                var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n\t                var /** @type {?} */ currentIndex = record.currentIndex;\n\t                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n\t                if (record === nextRemove) {\n\t                    addRemoveOffset--;\n\t                    nextRemove = nextRemove._nextRemoved;\n\t                }\n\t                else {\n\t                    nextIt = nextIt._next;\n\t                    if (record.previousIndex == null) {\n\t                        addRemoveOffset++;\n\t                    }\n\t                    else {\n\t                        // INVARIANT:  currentIndex < previousIndex\n\t                        if (!moveOffsets)\n\t                            moveOffsets = [];\n\t                        var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n\t                        var /** @type {?} */ localCurrentIndex = currentIndex - addRemoveOffset;\n\t                        if (localMovePreviousIndex != localCurrentIndex) {\n\t                            for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n\t                                var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n\t                                var /** @type {?} */ index = offset + i;\n\t                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n\t                                    moveOffsets[i] = offset + 1;\n\t                                }\n\t                            }\n\t                            var /** @type {?} */ previousIndex = record.previousIndex;\n\t                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n\t                        }\n\t                    }\n\t                }\n\t                if (adjPreviousIndex !== currentIndex) {\n\t                    fn(record, adjPreviousIndex, currentIndex);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} collection\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.diff = function (collection) {\n\t            if (isBlank(collection))\n\t                collection = [];\n\t            if (!isListLikeIterable(collection)) {\n\t                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n\t            }\n\t            if (this.check(collection)) {\n\t                return this;\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.onDestroy = function () { };\n\t        /**\n\t         * @param {?} collection\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.check = function (collection) {\n\t            var _this = this;\n\t            this._reset();\n\t            var /** @type {?} */ record = this._itHead;\n\t            var /** @type {?} */ mayBeDirty = false;\n\t            var /** @type {?} */ index;\n\t            var /** @type {?} */ item;\n\t            var /** @type {?} */ itemTrackBy;\n\t            if (Array.isArray(collection)) {\n\t                var /** @type {?} */ list = collection;\n\t                this._length = collection.length;\n\t                for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n\t                    item = list[index_1];\n\t                    itemTrackBy = this._trackByFn(index_1, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = this._mismatch(record, item, itemTrackBy, index_1);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                }\n\t            }\n\t            else {\n\t                index = 0;\n\t                iterateListLike(collection, function (item /** TODO #9100 */) {\n\t                    itemTrackBy = _this._trackByFn(index, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = _this._mismatch(record, item, itemTrackBy, index);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            _this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                    index++;\n\t                });\n\t                this._length = index;\n\t            }\n\t            this._truncate(record);\n\t            this._collection = collection;\n\t            return this.isDirty;\n\t        };\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._additionsHead !== null || this._movesHead !== null ||\n\t                    this._removalsHead !== null || this._identityChangesHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Reset the state of the change objects to show no changes. This means set previousKey to\n\t         * currentKey, and clear all of the queues (additions, moves, removals).\n\t         * Set the previousIndexes of moved and added items to their currentIndexes\n\t         * Reset the list of additions, moves and removals\n\t         *\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var /** @type {?} */ record = void 0;\n\t                var /** @type {?} */ nextRecord = void 0;\n\t                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                    record.previousIndex = record.currentIndex;\n\t                }\n\t                this._additionsHead = this._additionsTail = null;\n\t                for (record = this._movesHead; record !== null; record = nextRecord) {\n\t                    record.previousIndex = record.currentIndex;\n\t                    nextRecord = record._nextMoved;\n\t                }\n\t                this._movesHead = this._movesTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t                this._identityChangesHead = this._identityChangesTail = null;\n\t            }\n\t        };\n\t        /**\n\t         * This is the core function which handles differences between collections.\n\t         *\n\t         * - `record` is the record which we saw at this position last time. If null then it is a new\n\t         *   item.\n\t         * - `item` is the current item in the collection\n\t         * - `index` is the position of the item in the collection\n\t         *\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} item\n\t         * @param {?} itemTrackBy\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n\t            // The previous record after which we will append the current one.\n\t            var /** @type {?} */ previousRecord;\n\t            if (record === null) {\n\t                previousRecord = this._itTail;\n\t            }\n\t            else {\n\t                previousRecord = record._prev;\n\t                // Remove the record from the collection since we know it does not match the item.\n\t                this._remove(record);\n\t            }\n\t            // Attempt to see if we have seen the item before.\n\t            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n\t            if (record !== null) {\n\t                // We have seen this before, we need to move it forward in the collection.\n\t                // But first we need to check if identity changed, so we can update in view if necessary\n\t                if (!looseIdentical(record.item, item))\n\t                    this._addIdentityChange(record, item);\n\t                this._moveAfter(record, previousRecord, index);\n\t            }\n\t            else {\n\t                // Never seen it, check evicted list.\n\t                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t                if (record !== null) {\n\t                    // It is an item which we have evicted earlier: reinsert it back into the list.\n\t                    // But first we need to check if identity changed, so we can update in view if necessary\n\t                    if (!looseIdentical(record.item, item))\n\t                        this._addIdentityChange(record, item);\n\t                    this._reinsertAfter(record, previousRecord, index);\n\t                }\n\t                else {\n\t                    // It is a new item: add it.\n\t                    record =\n\t                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n\t                }\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n\t         *\n\t         * Use case: `[a, a]` => `[b, a, a]`\n\t         *\n\t         * If we did not have this check then the insertion of `b` would:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) leave `a` at index `1` as is. <-- this is wrong!\n\t         *   3) reinsert `a` at index 2. <-- this is wrong!\n\t         *\n\t         * The correct behavior is:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) reinsert `a` at index 1.\n\t         *   3) move `a` at from `1` to `2`.\n\t         *\n\t         *\n\t         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n\t         * have already been removed:\n\t         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n\t         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n\t         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n\t         * at the end.\n\t         *\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} item\n\t         * @param {?} itemTrackBy\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n\t            var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t            if (reinsertRecord !== null) {\n\t                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n\t            }\n\t            else if (record.currentIndex != index) {\n\t                record.currentIndex = index;\n\t                this._addToMoves(record, index);\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * Get rid of any excess {\\@link CollectionChangeRecord}s from the previous collection\n\t         *\n\t         * - `record` The first excess {\\@link CollectionChangeRecord}.\n\t         *\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._truncate = function (record) {\n\t            // Anything after that needs to be removed;\n\t            while (record !== null) {\n\t                var /** @type {?} */ nextRecord = record._next;\n\t                this._addToRemovals(this._unlink(record));\n\t                record = nextRecord;\n\t            }\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.clear();\n\t            }\n\t            if (this._additionsTail !== null) {\n\t                this._additionsTail._nextAdded = null;\n\t            }\n\t            if (this._movesTail !== null) {\n\t                this._movesTail._nextMoved = null;\n\t            }\n\t            if (this._itTail !== null) {\n\t                this._itTail._next = null;\n\t            }\n\t            if (this._removalsTail !== null) {\n\t                this._removalsTail._nextRemoved = null;\n\t            }\n\t            if (this._identityChangesTail !== null) {\n\t                this._identityChangesTail._nextIdentityChange = null;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.remove(record);\n\t            }\n\t            var /** @type {?} */ prev = record._prevRemoved;\n\t            var /** @type {?} */ next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n\t            this._unlink(record);\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n\t            this._insertAfter(record, prevRecord, index);\n\t            if (this._additionsTail === null) {\n\t                // todo(vicb)\n\t                // assert(this._additionsHead === null);\n\t                this._additionsTail = this._additionsHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_additionsTail._nextAdded === null);\n\t                // assert(record._nextAdded === null);\n\t                this._additionsTail = this._additionsTail._nextAdded = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n\t            // todo(vicb)\n\t            // assert(record != prevRecord);\n\t            // assert(record._next === null);\n\t            // assert(record._prev === null);\n\t            var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n\t            // todo(vicb)\n\t            // assert(next != record);\n\t            // assert(prevRecord != record);\n\t            record._next = next;\n\t            record._prev = prevRecord;\n\t            if (next === null) {\n\t                this._itTail = record;\n\t            }\n\t            else {\n\t                next._prev = record;\n\t            }\n\t            if (prevRecord === null) {\n\t                this._itHead = record;\n\t            }\n\t            else {\n\t                prevRecord._next = record;\n\t            }\n\t            if (this._linkedRecords === null) {\n\t                this._linkedRecords = new _DuplicateMap();\n\t            }\n\t            this._linkedRecords.put(record);\n\t            record.currentIndex = index;\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._remove = function (record) {\n\t            return this._addToRemovals(this._unlink(record));\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._unlink = function (record) {\n\t            if (this._linkedRecords !== null) {\n\t                this._linkedRecords.remove(record);\n\t            }\n\t            var /** @type {?} */ prev = record._prev;\n\t            var /** @type {?} */ next = record._next;\n\t            // todo(vicb)\n\t            // assert((record._prev = null) === null);\n\t            // assert((record._next = null) === null);\n\t            if (prev === null) {\n\t                this._itHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            if (next === null) {\n\t                this._itTail = prev;\n\t            }\n\t            else {\n\t                next._prev = prev;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} toIndex\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n\t            // todo(vicb)\n\t            // assert(record._nextMoved === null);\n\t            if (record.previousIndex === toIndex) {\n\t                return record;\n\t            }\n\t            if (this._movesTail === null) {\n\t                // todo(vicb)\n\t                // assert(_movesHead === null);\n\t                this._movesTail = this._movesHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_movesTail._nextMoved === null);\n\t                this._movesTail = this._movesTail._nextMoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._unlinkedRecords === null) {\n\t                this._unlinkedRecords = new _DuplicateMap();\n\t            }\n\t            this._unlinkedRecords.put(record);\n\t            record.currentIndex = null;\n\t            record._nextRemoved = null;\n\t            if (this._removalsTail === null) {\n\t                // todo(vicb)\n\t                // assert(_removalsHead === null);\n\t                this._removalsTail = this._removalsHead = record;\n\t                record._prevRemoved = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_removalsTail._nextRemoved === null);\n\t                // assert(record._nextRemoved === null);\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = this._removalsTail._nextRemoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} item\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n\t            record.item = item;\n\t            if (this._identityChangesTail === null) {\n\t                this._identityChangesTail = this._identityChangesHead = record;\n\t            }\n\t            else {\n\t                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.toString = function () {\n\t            var /** @type {?} */ list = [];\n\t            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n\t            var /** @type {?} */ previous = [];\n\t            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n\t            var /** @type {?} */ additions = [];\n\t            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n\t            var /** @type {?} */ moves = [];\n\t            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n\t            var /** @type {?} */ removals = [];\n\t            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n\t            var /** @type {?} */ identityChanges = [];\n\t            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n\t            return 'collection: ' + list.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'moves: ' + moves.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n' +\n\t                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n\t        };\n\t        return DefaultIterableDiffer;\n\t    }());\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var CollectionChangeRecord = (function () {\n\t        /**\n\t         * @param {?} item\n\t         * @param {?} trackById\n\t         */\n\t        function CollectionChangeRecord(item, trackById) {\n\t            this.item = item;\n\t            this.trackById = trackById;\n\t            this.currentIndex = null;\n\t            this.previousIndex = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._prev = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._prevDup = null;\n\t            /** @internal */\n\t            this._nextDup = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextMoved = null;\n\t            /** @internal */\n\t            this._nextIdentityChange = null;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        CollectionChangeRecord.prototype.toString = function () {\n\t            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n\t                stringify(this.item) + '[' +\n\t                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n\t        };\n\t        return CollectionChangeRecord;\n\t    }());\n\t    var _DuplicateItemRecordList = (function () {\n\t        function _DuplicateItemRecordList() {\n\t            /** @internal */\n\t            this._head = null;\n\t            /** @internal */\n\t            this._tail = null;\n\t        }\n\t        /**\n\t         * Append the record to the list of duplicates.\n\t         *\n\t         * Note: by design all records in the list of duplicates hold the same value in record.item.\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateItemRecordList.prototype.add = function (record) {\n\t            if (this._head === null) {\n\t                this._head = this._tail = record;\n\t                record._nextDup = null;\n\t                record._prevDup = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(record.item ==  _head.item ||\n\t                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n\t                this._tail._nextDup = record;\n\t                record._prevDup = this._tail;\n\t                record._nextDup = null;\n\t                this._tail = record;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} trackById\n\t         * @param {?} afterIndex\n\t         * @return {?}\n\t         */\n\t        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._head; record !== null; record = record._nextDup) {\n\t                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n\t                    looseIdentical(record.trackById, trackById)) {\n\t                    return record;\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * Remove one {\\@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * Returns whether the list of duplicates is empty.\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateItemRecordList.prototype.remove = function (record) {\n\t            // todo(vicb)\n\t            // assert(() {\n\t            //  // verify that the record being removed is in the list.\n\t            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n\t            //    if (identical(cursor, record)) return true;\n\t            //  }\n\t            //  return false;\n\t            //});\n\t            var /** @type {?} */ prev = record._prevDup;\n\t            var /** @type {?} */ next = record._nextDup;\n\t            if (prev === null) {\n\t                this._head = next;\n\t            }\n\t            else {\n\t                prev._nextDup = next;\n\t            }\n\t            if (next === null) {\n\t                this._tail = prev;\n\t            }\n\t            else {\n\t                next._prevDup = prev;\n\t            }\n\t            return this._head === null;\n\t        };\n\t        return _DuplicateItemRecordList;\n\t    }());\n\t    var _DuplicateMap = (function () {\n\t        function _DuplicateMap() {\n\t            this.map = new Map();\n\t        }\n\t        /**\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.put = function (record) {\n\t            var /** @type {?} */ key = record.trackById;\n\t            var /** @type {?} */ duplicates = this.map.get(key);\n\t            if (!duplicates) {\n\t                duplicates = new _DuplicateItemRecordList();\n\t                this.map.set(key, duplicates);\n\t            }\n\t            duplicates.add(record);\n\t        };\n\t        /**\n\t         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n\t         * have already iterated over, we use the afterIndex to pretend it is not there.\n\t         *\n\t         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n\t         * have any more `a`s needs to return the last `a` not the first or second.\n\t         * @param {?} trackById\n\t         * @param {?=} afterIndex\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n\t            if (afterIndex === void 0) { afterIndex = null; }\n\t            var /** @type {?} */ key = trackById;\n\t            var /** @type {?} */ recordList = this.map.get(key);\n\t            return recordList ? recordList.get(trackById, afterIndex) : null;\n\t        };\n\t        /**\n\t         * Removes a {\\@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * The list of duplicates also is removed from the map if it gets empty.\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.remove = function (record) {\n\t            var /** @type {?} */ key = record.trackById;\n\t            var /** @type {?} */ recordList = this.map.get(key);\n\t            // Remove the list of duplicates when it gets empty\n\t            if (recordList.remove(record)) {\n\t                this.map.delete(key);\n\t            }\n\t            return record;\n\t        };\n\t        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.map.size === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n\t        return _DuplicateMap;\n\t    }());\n\t    /**\n\t     * @param {?} item\n\t     * @param {?} addRemoveOffset\n\t     * @param {?} moveOffsets\n\t     * @return {?}\n\t     */\n\t    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n\t        var /** @type {?} */ previousIndex = item.previousIndex;\n\t        if (previousIndex === null)\n\t            return previousIndex;\n\t        var /** @type {?} */ moveOffset = 0;\n\t        if (moveOffsets && previousIndex < moveOffsets.length) {\n\t            moveOffset = moveOffsets[previousIndex];\n\t        }\n\t        return previousIndex + addRemoveOffset + moveOffset;\n\t    }\n\t\n\t    var DefaultKeyValueDifferFactory = (function () {\n\t        function DefaultKeyValueDifferFactory() {\n\t        }\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n\t        /**\n\t         * @param {?} cdRef\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n\t        return DefaultKeyValueDifferFactory;\n\t    }());\n\t    var DefaultKeyValueDiffer = (function () {\n\t        function DefaultKeyValueDiffer() {\n\t            this._records = new Map();\n\t            this._mapHead = null;\n\t            this._previousMapHead = null;\n\t            this._changesHead = null;\n\t            this._changesTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t        }\n\t        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._additionsHead !== null || this._changesHead !== null ||\n\t                    this._removalsHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} map\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.diff = function (map) {\n\t            if (!map) {\n\t                map = new Map();\n\t            }\n\t            else if (!(map instanceof Map || isJsObject(map))) {\n\t                throw new Error(\"Error trying to diff '\" + map + \"'\");\n\t            }\n\t            return this.check(map) ? this : null;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n\t        /**\n\t         * @param {?} map\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.check = function (map) {\n\t            var _this = this;\n\t            this._reset();\n\t            var /** @type {?} */ records = this._records;\n\t            var /** @type {?} */ oldSeqRecord = this._mapHead;\n\t            var /** @type {?} */ lastOldSeqRecord = null;\n\t            var /** @type {?} */ lastNewSeqRecord = null;\n\t            var /** @type {?} */ seqChanged = false;\n\t            this._forEach(map, function (value, key) {\n\t                var /** @type {?} */ newSeqRecord;\n\t                if (oldSeqRecord && key === oldSeqRecord.key) {\n\t                    newSeqRecord = oldSeqRecord;\n\t                    _this._maybeAddToChanges(newSeqRecord, value);\n\t                }\n\t                else {\n\t                    seqChanged = true;\n\t                    if (oldSeqRecord !== null) {\n\t                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n\t                        _this._addToRemovals(oldSeqRecord);\n\t                    }\n\t                    if (records.has(key)) {\n\t                        newSeqRecord = records.get(key);\n\t                        _this._maybeAddToChanges(newSeqRecord, value);\n\t                    }\n\t                    else {\n\t                        newSeqRecord = new KeyValueChangeRecord(key);\n\t                        records.set(key, newSeqRecord);\n\t                        newSeqRecord.currentValue = value;\n\t                        _this._addToAdditions(newSeqRecord);\n\t                    }\n\t                }\n\t                if (seqChanged) {\n\t                    if (_this._isInRemovals(newSeqRecord)) {\n\t                        _this._removeFromRemovals(newSeqRecord);\n\t                    }\n\t                    if (lastNewSeqRecord == null) {\n\t                        _this._mapHead = newSeqRecord;\n\t                    }\n\t                    else {\n\t                        lastNewSeqRecord._next = newSeqRecord;\n\t                    }\n\t                }\n\t                lastOldSeqRecord = oldSeqRecord;\n\t                lastNewSeqRecord = newSeqRecord;\n\t                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n\t            });\n\t            this._truncate(lastOldSeqRecord, oldSeqRecord);\n\t            return this.isDirty;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var /** @type {?} */ record = void 0;\n\t                // Record the state of the mapping\n\t                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                this._changesHead = this._changesTail = null;\n\t                this._additionsHead = this._additionsTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} lastRecord\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n\t            while (record !== null) {\n\t                if (lastRecord === null) {\n\t                    this._mapHead = null;\n\t                }\n\t                else {\n\t                    lastRecord._next = null;\n\t                }\n\t                var /** @type {?} */ nextRecord = record._next;\n\t                this._addToRemovals(record);\n\t                lastRecord = record;\n\t                record = nextRecord;\n\t            }\n\t            for (var /** @type {?} */ rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n\t                rec.previousValue = rec.currentValue;\n\t                rec.currentValue = null;\n\t                this._records.delete(rec.key);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} record\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n\t            if (!looseIdentical(newValue, record.currentValue)) {\n\t                record.previousValue = record.currentValue;\n\t                record.currentValue = newValue;\n\t                this._addToChanges(record);\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n\t            return record === this._removalsHead || record._nextRemoved !== null ||\n\t                record._prevRemoved !== null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._removalsHead === null) {\n\t                this._removalsHead = this._removalsTail = record;\n\t            }\n\t            else {\n\t                this._removalsTail._nextRemoved = record;\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = record;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} prev\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n\t            var /** @type {?} */ next = record._next;\n\t            if (prev === null) {\n\t                this._mapHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            record._next = null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n\t            var /** @type {?} */ prev = record._prevRemoved;\n\t            var /** @type {?} */ next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            record._prevRemoved = record._nextRemoved = null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n\t            if (this._additionsHead === null) {\n\t                this._additionsHead = this._additionsTail = record;\n\t            }\n\t            else {\n\t                this._additionsTail._nextAdded = record;\n\t                this._additionsTail = record;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n\t            if (this._changesHead === null) {\n\t                this._changesHead = this._changesTail = record;\n\t            }\n\t            else {\n\t                this._changesTail._nextChanged = record;\n\t                this._changesTail = record;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.toString = function () {\n\t            var /** @type {?} */ items = [];\n\t            var /** @type {?} */ previous = [];\n\t            var /** @type {?} */ changes = [];\n\t            var /** @type {?} */ additions = [];\n\t            var /** @type {?} */ removals = [];\n\t            var /** @type {?} */ record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                items.push(stringify(record));\n\t            }\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                previous.push(stringify(record));\n\t            }\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                changes.push(stringify(record));\n\t            }\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                additions.push(stringify(record));\n\t            }\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                removals.push(stringify(record));\n\t            }\n\t            return 'map: ' + items.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'changes: ' + changes.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n';\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} obj\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n\t            if (obj instanceof Map) {\n\t                obj.forEach(fn);\n\t            }\n\t            else {\n\t                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n\t            }\n\t        };\n\t        return DefaultKeyValueDiffer;\n\t    }());\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var KeyValueChangeRecord = (function () {\n\t        /**\n\t         * @param {?} key\n\t         */\n\t        function KeyValueChangeRecord(key) {\n\t            this.key = key;\n\t            this.previousValue = null;\n\t            this.currentValue = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextChanged = null;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        KeyValueChangeRecord.prototype.toString = function () {\n\t            return looseIdentical(this.previousValue, this.currentValue) ?\n\t                stringify(this.key) :\n\t                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n\t                    stringify(this.currentValue) + ']');\n\t        };\n\t        return KeyValueChangeRecord;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n\t     * \\@stable\n\t     */\n\t    var IterableDiffers = (function () {\n\t        /**\n\t         * @param {?} factories\n\t         */\n\t        function IterableDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        /**\n\t         * @param {?} factories\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        IterableDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var /** @type {?} */ copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new IterableDiffers(factories);\n\t            }\n\t            else {\n\t                return new IterableDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n\t         * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n\t         * {\\@link IterableDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t         * which will only be applied to the injector for this component and its children.\n\t         * This step is all that's required to make a new {\\@link IterableDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * \\@Component({\n\t         *   viewProviders: [\n\t         *     IterableDiffers.extend([new ImmutableListDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         * @param {?} factories\n\t         * @return {?}\n\t         */\n\t        IterableDiffers.extend = function (factories) {\n\t            return {\n\t                provide: IterableDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n\t                    }\n\t                    return IterableDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} iterable\n\t         * @return {?}\n\t         */\n\t        IterableDiffers.prototype.find = function (iterable) {\n\t            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n\t            }\n\t        };\n\t        return IterableDiffers;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n\t     * \\@stable\n\t     */\n\t    var KeyValueDiffers = (function () {\n\t        /**\n\t         * @param {?} factories\n\t         */\n\t        function KeyValueDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        /**\n\t         * @param {?} factories\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        KeyValueDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var /** @type {?} */ copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t            else {\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n\t         * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n\t         * {\\@link KeyValueDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t         * which will only be applied to the injector for this component and its children.\n\t         * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * \\@Component({\n\t         *   viewProviders: [\n\t         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         * @param {?} factories\n\t         * @return {?}\n\t         */\n\t        KeyValueDiffers.extend = function (factories) {\n\t            return {\n\t                provide: KeyValueDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n\t                    }\n\t                    return KeyValueDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} kv\n\t         * @return {?}\n\t         */\n\t        KeyValueDiffers.prototype.find = function (kv) {\n\t            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n\t            }\n\t        };\n\t        return KeyValueDiffers;\n\t    }());\n\t\n\t    var /** @type {?} */ UNINITIALIZED = {\n\t        toString: function () { return 'CD_INIT_VALUE'; }\n\t    };\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @return {?}\n\t     */\n\t    function devModeEqual(a, b) {\n\t        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n\t            return areIterablesEqual(a, b, devModeEqual);\n\t        }\n\t        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n\t            return true;\n\t        }\n\t        else {\n\t            return looseIdentical(a, b);\n\t        }\n\t    }\n\t    /**\n\t     * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n\t     * reference\n\t     * has not changed.\n\t     *\n\t     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```\n\t     * if (this._latestValue === this._latestReturnedValue) {\n\t     *    return this._latestReturnedValue;\n\t     *  } else {\n\t     *    this._latestReturnedValue = this._latestValue;\n\t     *    return WrappedValue.wrap(this._latestValue); // this will force update\n\t     *  }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var WrappedValue = (function () {\n\t        /**\n\t         * @param {?} wrapped\n\t         */\n\t        function WrappedValue(wrapped) {\n\t            this.wrapped = wrapped;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n\t        return WrappedValue;\n\t    }());\n\t    /**\n\t     * Helper class for unwrapping WrappedValue s\n\t     */\n\t    var ValueUnwrapper = (function () {\n\t        function ValueUnwrapper() {\n\t            this.hasWrappedValue = false;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        ValueUnwrapper.prototype.unwrap = function (value) {\n\t            if (value instanceof WrappedValue) {\n\t                this.hasWrappedValue = true;\n\t                return value.wrapped;\n\t            }\n\t            return value;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n\t        return ValueUnwrapper;\n\t    }());\n\t    /**\n\t     * Represents a basic change from a previous to a new value.\n\t     * \\@stable\n\t     */\n\t    var SimpleChange = (function () {\n\t        /**\n\t         * @param {?} previousValue\n\t         * @param {?} currentValue\n\t         */\n\t        function SimpleChange(previousValue, currentValue) {\n\t            this.previousValue = previousValue;\n\t            this.currentValue = currentValue;\n\t        }\n\t        /**\n\t         * Check whether the new value is the first value assigned.\n\t         * @return {?}\n\t         */\n\t        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n\t        return SimpleChange;\n\t    }());\n\t\n\t    /**\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ChangeDetectorRef = (function () {\n\t        function ChangeDetectorRef() {\n\t        }\n\t        /**\n\t         * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on OnPush components -->\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Component({\n\t         *   selector: 'cmp',\n\t         *   changeDetection: ChangeDetectionStrategy.OnPush,\n\t         *   template: `Number of ticks: {{numberOfTicks}}`\n\t         * })\n\t         * class Cmp {\n\t         *   numberOfTicks = 0;\n\t         *\n\t         *   constructor(ref: ChangeDetectorRef) {\n\t         *     setInterval(() => {\n\t         *       this.numberOfTicks ++\n\t         *       // the following is required, otherwise the view will not be updated\n\t         *       this.ref.markForCheck();\n\t         *     }, 1000);\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'app',\n\t         *   changeDetection: ChangeDetectionStrategy.OnPush,\n\t         *   template: `\n\t         *     <cmp><cmp>\n\t         *   `,\n\t         * })\n\t         * class App {\n\t         * }\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.markForCheck = function () { };\n\t        /**\n\t         * Detaches the change detector from the change detector tree.\n\t         *\n\t         * The detached change detector will not be checked until it is reattached.\n\t         *\n\t         * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n\t         * local change\n\t         * detection checks.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n\t         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n\t         *\n\t         * ### Example\n\t         *\n\t         * The following example defines a component with a large list of readonly data.\n\t         * Imagine the data changes constantly, many times per second. For performance reasons,\n\t         * we want to check and update the list every five seconds. We can do that by detaching\n\t         * the component's change detector and doing a local check every five seconds.\n\t         *\n\t         * ```typescript\n\t         * class DataProvider {\n\t         *   // in a real application the returned data will be different every time\n\t         *   get data() {\n\t         *     return [1,2,3,4,5];\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'giant-list',\n\t         *   template: `\n\t         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n\t         *   `,\n\t         * })\n\t         * class GiantList {\n\t         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n\t         *     ref.detach();\n\t         *     setInterval(() => {\n\t         *       this.ref.detectChanges();\n\t         *     }, 5000);\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'app',\n\t         *   providers: [DataProvider],\n\t         *   template: `\n\t         *     <giant-list><giant-list>\n\t         *   `,\n\t         * })\n\t         * class App {\n\t         * }\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.detach = function () { };\n\t        /**\n\t         * Checks the change detector and its children.\n\t         *\n\t         * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n\t         * change detection\n\t         * checks.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n\t         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n\t         *\n\t         * ### Example\n\t         *\n\t         * The following example defines a component with a large list of readonly data.\n\t         * Imagine, the data changes constantly, many times per second. For performance reasons,\n\t         * we want to check and update the list every five seconds.\n\t         *\n\t         * We can do that by detaching the component's change detector and doing a local change detection\n\t         * check\n\t         * every five seconds.\n\t         *\n\t         * See {\\@link ChangeDetectorRef#detach} for more information.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.detectChanges = function () { };\n\t        /**\n\t         * Checks the change detector and its children, and throws if any changes are detected.\n\t         *\n\t         * This is used in development mode to verify that running change detection doesn't introduce\n\t         * other changes.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.checkNoChanges = function () { };\n\t        /**\n\t         * Reattach the change detector to the change detector tree.\n\t         *\n\t         * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n\t         * checked during the next change detection run.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n\t         *\n\t         * The following example creates a component displaying `live` data. The component will detach\n\t         * its change detector from the main change detector tree when the component's live property\n\t         * is set to false.\n\t         *\n\t         * ```typescript\n\t         * class DataProvider {\n\t         *   data = 1;\n\t         *\n\t         *   constructor() {\n\t         *     setInterval(() => {\n\t         *       this.data = this.data * 2;\n\t         *     }, 500);\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'live-data',\n\t         *   inputs: ['live'],\n\t         *   template: 'Data: {{dataProvider.data}}'\n\t         * })\n\t         * class LiveData {\n\t         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n\t         *\n\t         *   set live(value) {\n\t         *     if (value)\n\t         *       this.ref.reattach();\n\t         *     else\n\t         *       this.ref.detach();\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'app',\n\t         *   providers: [DataProvider],\n\t         *   template: `\n\t         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n\t         *     <live-data [live]=\"live\"><live-data>\n\t         *   `,\n\t         * })\n\t         * class App {\n\t         *   live = true;\n\t         * }\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.reattach = function () { };\n\t        return ChangeDetectorRef;\n\t    }());\n\t\n\t    /**\n\t     * Structural diffing for `Object`s and `Map`s.\n\t     */\n\t    var /** @type {?} */ keyValDiff = [new DefaultKeyValueDifferFactory()];\n\t    /**\n\t     * Structural diffing for `Iterable` types such as `Array`s.\n\t     */\n\t    var /** @type {?} */ iterableDiff = [new DefaultIterableDifferFactory()];\n\t    var /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\t    var /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var RenderComponentType = (function () {\n\t        /**\n\t         * @param {?} id\n\t         * @param {?} templateUrl\n\t         * @param {?} slotCount\n\t         * @param {?} encapsulation\n\t         * @param {?} styles\n\t         * @param {?} animations\n\t         */\n\t        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n\t            this.id = id;\n\t            this.templateUrl = templateUrl;\n\t            this.slotCount = slotCount;\n\t            this.encapsulation = encapsulation;\n\t            this.styles = styles;\n\t            this.animations = animations;\n\t        }\n\t        return RenderComponentType;\n\t    }());\n\t    /**\n\t     * @abstract\n\t     */\n\t    var RenderDebugInfo = (function () {\n\t        function RenderDebugInfo() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.injector = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.component = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.providerTokens = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.references = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.context = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.source = function () { };\n\t        return RenderDebugInfo;\n\t    }());\n\t    /**\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var Renderer = (function () {\n\t        function Renderer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} selectorOrNode\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?} name\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} hostElement\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createViewRoot = function (hostElement) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?} value\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.detachView = function (viewRootNodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} hostElement\n\t         * @param {?} viewAllNodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.listen = function (renderElement, name, callback) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} target\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.listenGlobal = function (target, name, callback) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} attributeName\n\t         * @param {?} attributeValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n\t        /**\n\t         * Used only in debug mode to serialize property changes to dom nodes as attributes.\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} className\n\t         * @param {?} isAdd\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} methodName\n\t         * @param {?=} args\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderNode\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setText = function (renderNode, text) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n\t        return Renderer;\n\t    }());\n\t    /**\n\t     * Injectable service that provides a low-level interface for modifying the UI.\n\t     *\n\t     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n\t     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n\t     * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n\t     * respectively.\n\t     *\n\t     * If you are implementing a custom renderer, you must implement this interface.\n\t     *\n\t     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var RootRenderer = (function () {\n\t        function RootRenderer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} componentType\n\t         * @return {?}\n\t         */\n\t        RootRenderer.prototype.renderComponent = function (componentType) { };\n\t        return RootRenderer;\n\t    }());\n\t\n\t    var SecurityContext = {};\n\t    SecurityContext.NONE = 0;\n\t    SecurityContext.HTML = 1;\n\t    SecurityContext.STYLE = 2;\n\t    SecurityContext.SCRIPT = 3;\n\t    SecurityContext.URL = 4;\n\t    SecurityContext.RESOURCE_URL = 5;\n\t    SecurityContext[SecurityContext.NONE] = \"NONE\";\n\t    SecurityContext[SecurityContext.HTML] = \"HTML\";\n\t    SecurityContext[SecurityContext.STYLE] = \"STYLE\";\n\t    SecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\n\t    SecurityContext[SecurityContext.URL] = \"URL\";\n\t    SecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\t    /**\n\t     * Sanitizer is used by the views to sanitize potentially dangerous values.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var Sanitizer = (function () {\n\t        function Sanitizer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} context\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        Sanitizer.prototype.sanitize = function (context, value) { };\n\t        return Sanitizer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * An error thrown if application changes model breaking the top-down data flow.\n\t     *\n\t     * This exception is only thrown in dev mode.\n\t     *\n\t     * <!-- TODO: Add a link once the dev mode option is configurable -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * \\@Component({\n\t     *   selector: 'parent',\n\t     *   template: '<child [prop]=\"parentProp\"></child>',\n\t     * })\n\t     * class Parent {\n\t     *   parentProp = 'init';\n\t     * }\n\t     *\n\t     * \\@Directive({selector: 'child', inputs: ['prop']})\n\t     * class Child {\n\t     *   constructor(public parent: Parent) {}\n\t     *\n\t     *   set prop(v) {\n\t     *     // this updates the parent property, which is disallowed during change detection\n\t     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n\t     *     this.parent.parentProp = 'updated';\n\t     *   }\n\t     * }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n\t        __extends$7(ExpressionChangedAfterItHasBeenCheckedError, _super);\n\t        /**\n\t         * @param {?} oldValue\n\t         * @param {?} currValue\n\t         */\n\t        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n\t            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n\t            if (oldValue === UNINITIALIZED) {\n\t                msg +=\n\t                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n\t                        \" Has it been created in a change detection hook ?\";\n\t            }\n\t            _super.call(this, msg);\n\t        }\n\t        return ExpressionChangedAfterItHasBeenCheckedError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when an exception was raised during view creation, change detection or destruction.\n\t     *\n\t     * This error wraps the original exception to attach additional contextual information that can\n\t     * be useful for debugging.\n\t     * \\@stable\n\t     */\n\t    var ViewWrappedError = (function (_super) {\n\t        __extends$7(ViewWrappedError, _super);\n\t        /**\n\t         * @param {?} originalError\n\t         * @param {?} context\n\t         */\n\t        function ViewWrappedError(originalError, context) {\n\t            _super.call(this, \"Error in \" + context.source, originalError);\n\t            this.context = context;\n\t        }\n\t        return ViewWrappedError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when a destroyed view is used.\n\t     *\n\t     * This error indicates a bug in the framework.\n\t     *\n\t     * This is an internal Angular error.\n\t     * \\@stable\n\t     */\n\t    var ViewDestroyedError = (function (_super) {\n\t        __extends$7(ViewDestroyedError, _super);\n\t        /**\n\t         * @param {?} details\n\t         */\n\t        function ViewDestroyedError(details) {\n\t            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n\t        }\n\t        return ViewDestroyedError;\n\t    }(BaseError));\n\t\n\t    var ViewUtils = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} sanitizer\n\t         * @param {?} animationQueue\n\t         */\n\t        function ViewUtils(_renderer, sanitizer, animationQueue) {\n\t            this._renderer = _renderer;\n\t            this.animationQueue = animationQueue;\n\t            this.sanitizer = sanitizer;\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @param {?} renderComponentType\n\t         * @return {?}\n\t         */\n\t        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n\t            return this._renderer.renderComponent(renderComponentType);\n\t        };\n\t        ViewUtils.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ViewUtils.ctorParameters = function () { return [\n\t            { type: RootRenderer, },\n\t            { type: Sanitizer, },\n\t            { type: AnimationQueue, },\n\t        ]; };\n\t        return ViewUtils;\n\t    }());\n\t    var /** @type {?} */ nextRenderComponentTypeId = 0;\n\t    /**\n\t     * @param {?} templateUrl\n\t     * @param {?} slotCount\n\t     * @param {?} encapsulation\n\t     * @param {?} styles\n\t     * @param {?} animations\n\t     * @return {?}\n\t     */\n\t    function createRenderComponentType(templateUrl, slotCount, encapsulation, styles, animations) {\n\t        return new RenderComponentType(\"\" + nextRenderComponentTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n\t    }\n\t    /**\n\t     * @param {?} e\n\t     * @param {?} array\n\t     * @return {?}\n\t     */\n\t    function addToArray(e, array) {\n\t        array.push(e);\n\t    }\n\t    /**\n\t     * @param {?} valueCount\n\t     * @param {?} constAndInterp\n\t     * @return {?}\n\t     */\n\t    function interpolate(valueCount, constAndInterp) {\n\t        var /** @type {?} */ result = '';\n\t        for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n\t            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n\t        }\n\t        return result + constAndInterp[valueCount * 2];\n\t    }\n\t    /**\n\t     * @param {?} valueCount\n\t     * @param {?} c0\n\t     * @param {?} a1\n\t     * @param {?} c1\n\t     * @param {?=} a2\n\t     * @param {?=} c2\n\t     * @param {?=} a3\n\t     * @param {?=} c3\n\t     * @param {?=} a4\n\t     * @param {?=} c4\n\t     * @param {?=} a5\n\t     * @param {?=} c5\n\t     * @param {?=} a6\n\t     * @param {?=} c6\n\t     * @param {?=} a7\n\t     * @param {?=} c7\n\t     * @param {?=} a8\n\t     * @param {?=} c8\n\t     * @param {?=} a9\n\t     * @param {?=} c9\n\t     * @return {?}\n\t     */\n\t    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n\t        switch (valueCount) {\n\t            case 1:\n\t                return c0 + _toStringWithNull(a1) + c1;\n\t            case 2:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n\t            case 3:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3;\n\t            case 4:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4;\n\t            case 5:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n\t            case 6:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n\t            case 7:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7;\n\t            case 8:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n\t            case 9:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n\t            default:\n\t                throw new Error(\"Does not support more than 9 expressions\");\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} v\n\t     * @return {?}\n\t     */\n\t    function _toStringWithNull(v) {\n\t        return v != null ? v.toString() : '';\n\t    }\n\t    /**\n\t     * @param {?} throwOnChange\n\t     * @param {?} oldValue\n\t     * @param {?} newValue\n\t     * @return {?}\n\t     */\n\t    function checkBinding(throwOnChange, oldValue, newValue) {\n\t        if (throwOnChange) {\n\t            if (!devModeEqual(oldValue, newValue)) {\n\t                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n\t            }\n\t            return false;\n\t        }\n\t        else {\n\t            return !looseIdentical(oldValue, newValue);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} input\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function castByValue(input, value) {\n\t        return (input);\n\t    }\n\t    var /** @type {?} */ EMPTY_ARRAY = [];\n\t    var /** @type {?} */ EMPTY_MAP = {};\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy1(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0 = UNINITIALIZED;\n\t        return function (p0) {\n\t            if (!looseIdentical(v0, p0)) {\n\t                v0 = p0;\n\t                result = fn(p0);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy2(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0 = UNINITIALIZED;\n\t        var /** @type {?} */ v1 = UNINITIALIZED;\n\t        return function (p0, p1) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                result = fn(p0, p1);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy3(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0 = UNINITIALIZED;\n\t        var /** @type {?} */ v1 = UNINITIALIZED;\n\t        var /** @type {?} */ v2 = UNINITIALIZED;\n\t        return function (p0, p1, p2) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                result = fn(p0, p1, p2);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy4(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3;\n\t        v0 = v1 = v2 = v3 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                result = fn(p0, p1, p2, p3);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy5(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4;\n\t        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                result = fn(p0, p1, p2, p3, p4);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy6(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                result = fn(p0, p1, p2, p3, p4, p5);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy7(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy8(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy9(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy10(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8, /** @type {?} */ v9;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n\t                !looseIdentical(v9, p9)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                v9 = p9;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} el\n\t     * @param {?} changes\n\t     * @return {?}\n\t     */\n\t    function setBindingDebugInfoForChanges(renderer, el, changes) {\n\t        Object.keys(changes).forEach(function (propName) {\n\t            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} el\n\t     * @param {?} propName\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function setBindingDebugInfo(renderer, el, propName, value) {\n\t        try {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n\t        }\n\t        catch (e) {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n\t        }\n\t    }\n\t    var /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n\t    /**\n\t     * @param {?} input\n\t     * @return {?}\n\t     */\n\t    function camelCaseToDashCase(input) {\n\t        return input.replace(CAMEL_CASE_REGEXP, function () {\n\t            var m = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                m[_i - 0] = arguments[_i];\n\t            }\n\t            return '-' + m[1].toLowerCase();\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} parentElement\n\t     * @param {?} name\n\t     * @param {?} attrs\n\t     * @param {?=} debugInfo\n\t     * @return {?}\n\t     */\n\t    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n\t        var /** @type {?} */ el = renderer.createElement(parentElement, name, debugInfo);\n\t        for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n\t            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n\t        }\n\t        return el;\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} elementName\n\t     * @param {?} attrs\n\t     * @param {?} rootSelectorOrNode\n\t     * @param {?=} debugInfo\n\t     * @return {?}\n\t     */\n\t    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n\t        var /** @type {?} */ hostElement;\n\t        if (isPresent(rootSelectorOrNode)) {\n\t            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n\t            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n\t                renderer.setElementAttribute(hostElement, attrs.get(i), attrs.get(i + 1));\n\t            }\n\t            renderer.setElementAttribute(hostElement, 'ng-version', VERSION.full);\n\t        }\n\t        else {\n\t            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n\t        }\n\t        return hostElement;\n\t    }\n\t    /**\n\t     * @param {?} view\n\t     * @param {?} element\n\t     * @param {?} eventNamesAndTargets\n\t     * @param {?} listener\n\t     * @return {?}\n\t     */\n\t    function subscribeToRenderElement(view, element, eventNamesAndTargets, listener) {\n\t        var /** @type {?} */ disposables = createEmptyInlineArray(eventNamesAndTargets.length / 2);\n\t        for (var /** @type {?} */ i = 0; i < eventNamesAndTargets.length; i += 2) {\n\t            var /** @type {?} */ eventName = eventNamesAndTargets.get(i);\n\t            var /** @type {?} */ eventTarget = eventNamesAndTargets.get(i + 1);\n\t            var /** @type {?} */ disposable = void 0;\n\t            if (eventTarget) {\n\t                disposable = view.renderer.listenGlobal(eventTarget, eventName, listener.bind(view, eventTarget + \":\" + eventName));\n\t            }\n\t            else {\n\t                disposable = view.renderer.listen(element, eventName, listener.bind(view, eventName));\n\t            }\n\t            disposables.set(i / 2, disposable);\n\t        }\n\t        return disposeInlineArray.bind(null, disposables);\n\t    }\n\t    /**\n\t     * @param {?} disposables\n\t     * @return {?}\n\t     */\n\t    function disposeInlineArray(disposables) {\n\t        for (var /** @type {?} */ i = 0; i < disposables.length; i++) {\n\t            disposables.get(i)();\n\t        }\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function noop() { }\n\t    /**\n\t     * @param {?} length\n\t     * @return {?}\n\t     */\n\t    function createEmptyInlineArray(length) {\n\t        var /** @type {?} */ ctor;\n\t        if (length <= 2) {\n\t            ctor = InlineArray2;\n\t        }\n\t        else if (length <= 4) {\n\t            ctor = InlineArray4;\n\t        }\n\t        else if (length <= 8) {\n\t            ctor = InlineArray8;\n\t        }\n\t        else if (length <= 16) {\n\t            ctor = InlineArray16;\n\t        }\n\t        else {\n\t            ctor = InlineArrayDynamic;\n\t        }\n\t        return new ctor(length);\n\t    }\n\t    var InlineArray0 = (function () {\n\t        function InlineArray0() {\n\t            this.length = 0;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray0.prototype.get = function (index) { return undefined; };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray0.prototype.set = function (index, value) { };\n\t        return InlineArray0;\n\t    }());\n\t    var InlineArray2 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         */\n\t        function InlineArray2(length, _v0, _v1) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray2.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray2.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray2;\n\t    }());\n\t    var InlineArray4 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         * @param {?=} _v2\n\t         * @param {?=} _v3\n\t         */\n\t        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray4.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray4.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray4;\n\t    }());\n\t    var InlineArray8 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         * @param {?=} _v2\n\t         * @param {?=} _v3\n\t         * @param {?=} _v4\n\t         * @param {?=} _v5\n\t         * @param {?=} _v6\n\t         * @param {?=} _v7\n\t         */\n\t        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray8.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray8.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t                case 4:\n\t                    this._v4 = value;\n\t                    break;\n\t                case 5:\n\t                    this._v5 = value;\n\t                    break;\n\t                case 6:\n\t                    this._v6 = value;\n\t                    break;\n\t                case 7:\n\t                    this._v7 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray8;\n\t    }());\n\t    var InlineArray16 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         * @param {?=} _v2\n\t         * @param {?=} _v3\n\t         * @param {?=} _v4\n\t         * @param {?=} _v5\n\t         * @param {?=} _v6\n\t         * @param {?=} _v7\n\t         * @param {?=} _v8\n\t         * @param {?=} _v9\n\t         * @param {?=} _v10\n\t         * @param {?=} _v11\n\t         * @param {?=} _v12\n\t         * @param {?=} _v13\n\t         * @param {?=} _v14\n\t         * @param {?=} _v15\n\t         */\n\t        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t            this._v8 = _v8;\n\t            this._v9 = _v9;\n\t            this._v10 = _v10;\n\t            this._v11 = _v11;\n\t            this._v12 = _v12;\n\t            this._v13 = _v13;\n\t            this._v14 = _v14;\n\t            this._v15 = _v15;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray16.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                case 8:\n\t                    return this._v8;\n\t                case 9:\n\t                    return this._v9;\n\t                case 10:\n\t                    return this._v10;\n\t                case 11:\n\t                    return this._v11;\n\t                case 12:\n\t                    return this._v12;\n\t                case 13:\n\t                    return this._v13;\n\t                case 14:\n\t                    return this._v14;\n\t                case 15:\n\t                    return this._v15;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray16.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t                case 4:\n\t                    this._v4 = value;\n\t                    break;\n\t                case 5:\n\t                    this._v5 = value;\n\t                    break;\n\t                case 6:\n\t                    this._v6 = value;\n\t                    break;\n\t                case 7:\n\t                    this._v7 = value;\n\t                    break;\n\t                case 8:\n\t                    this._v8 = value;\n\t                    break;\n\t                case 9:\n\t                    this._v9 = value;\n\t                    break;\n\t                case 10:\n\t                    this._v10 = value;\n\t                    break;\n\t                case 11:\n\t                    this._v11 = value;\n\t                    break;\n\t                case 12:\n\t                    this._v12 = value;\n\t                    break;\n\t                case 13:\n\t                    this._v13 = value;\n\t                    break;\n\t                case 14:\n\t                    this._v14 = value;\n\t                    break;\n\t                case 15:\n\t                    this._v15 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray16;\n\t    }());\n\t    var InlineArrayDynamic = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {...?} values\n\t         */\n\t        function InlineArrayDynamic(length) {\n\t            var values = [];\n\t            for (var _i = 1; _i < arguments.length; _i++) {\n\t                values[_i - 1] = arguments[_i];\n\t            }\n\t            this.length = length;\n\t            this._values = values;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArrayDynamic.prototype.set = function (index, value) { this._values[index] = value; };\n\t        return InlineArrayDynamic;\n\t    }());\n\t    var /** @type {?} */ EMPTY_INLINE_ARRAY = new InlineArray0();\n\t\n\t\n\t    var view_utils = Object.freeze({\n\t        ViewUtils: ViewUtils,\n\t        createRenderComponentType: createRenderComponentType,\n\t        addToArray: addToArray,\n\t        interpolate: interpolate,\n\t        inlineInterpolate: inlineInterpolate,\n\t        checkBinding: checkBinding,\n\t        castByValue: castByValue,\n\t        EMPTY_ARRAY: EMPTY_ARRAY,\n\t        EMPTY_MAP: EMPTY_MAP,\n\t        pureProxy1: pureProxy1,\n\t        pureProxy2: pureProxy2,\n\t        pureProxy3: pureProxy3,\n\t        pureProxy4: pureProxy4,\n\t        pureProxy5: pureProxy5,\n\t        pureProxy6: pureProxy6,\n\t        pureProxy7: pureProxy7,\n\t        pureProxy8: pureProxy8,\n\t        pureProxy9: pureProxy9,\n\t        pureProxy10: pureProxy10,\n\t        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n\t        setBindingDebugInfo: setBindingDebugInfo,\n\t        createRenderElement: createRenderElement,\n\t        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n\t        subscribeToRenderElement: subscribeToRenderElement,\n\t        noop: noop,\n\t        InlineArray2: InlineArray2,\n\t        InlineArray4: InlineArray4,\n\t        InlineArray8: InlineArray8,\n\t        InlineArray16: InlineArray16,\n\t        InlineArrayDynamic: InlineArrayDynamic,\n\t        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n\t    });\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n\t     *\n\t     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n\t     * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n\t     * method.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ComponentRef = (function () {\n\t        function ComponentRef() {\n\t        }\n\t        /**\n\t         * Location of the Host Element of this Component Instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.location = function () { };\n\t        /**\n\t         * The injector on which the component instance exists.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.injector = function () { };\n\t        /**\n\t         * The instance of the Component.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.instance = function () { };\n\t        /**\n\t         * The {\\@link ViewRef} of the Host View of this Component instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.hostView = function () { };\n\t        /**\n\t         * The {\\@link ChangeDetectorRef} of the Component instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.changeDetectorRef = function () { };\n\t        /**\n\t         * The component type.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.componentType = function () { };\n\t        /**\n\t         * Destroys the component instance and all of the data structures associated with it.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.destroy = function () { };\n\t        /**\n\t         * Allows to register a callback that will be called when the component is destroyed.\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.onDestroy = function (callback) { };\n\t        return ComponentRef;\n\t    }());\n\t    var ComponentRef_ = (function (_super) {\n\t        __extends$5(ComponentRef_, _super);\n\t        /**\n\t         * @param {?} _index\n\t         * @param {?} _parentView\n\t         * @param {?} _nativeElement\n\t         * @param {?} _component\n\t         */\n\t        function ComponentRef_(_index, _parentView, _nativeElement, _component) {\n\t            _super.call(this);\n\t            this._index = _index;\n\t            this._parentView = _parentView;\n\t            this._nativeElement = _nativeElement;\n\t            this._component = _component;\n\t        }\n\t        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ElementRef(this._nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parentView.injector(this._index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._component; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return (this._component.constructor); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ComponentRef_.prototype.destroy = function () { this._parentView.detachAndDestroy(); };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n\t        return ComponentRef_;\n\t    }(ComponentRef));\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var ComponentFactory = (function () {\n\t        /**\n\t         * @param {?} selector\n\t         * @param {?} _viewClass\n\t         * @param {?} _componentType\n\t         */\n\t        function ComponentFactory(selector, _viewClass, _componentType) {\n\t            this.selector = selector;\n\t            this._viewClass = _viewClass;\n\t            this._componentType = _componentType;\n\t        }\n\t        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._componentType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Creates a new component.\n\t         * @param {?} injector\n\t         * @param {?=} projectableNodes\n\t         * @param {?=} rootSelectorOrNode\n\t         * @return {?}\n\t         */\n\t        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n\t            var /** @type {?} */ vu = injector.get(ViewUtils);\n\t            if (!projectableNodes) {\n\t                projectableNodes = [];\n\t            }\n\t            var /** @type {?} */ hostView = new this._viewClass(vu, null, null, null);\n\t            return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n\t        };\n\t        return ComponentFactory;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var NoComponentFactoryError = (function (_super) {\n\t        __extends$8(NoComponentFactoryError, _super);\n\t        /**\n\t         * @param {?} component\n\t         */\n\t        function NoComponentFactoryError(component) {\n\t            _super.call(this, \"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n\t            this.component = component;\n\t        }\n\t        return NoComponentFactoryError;\n\t    }(BaseError));\n\t    var _NullComponentFactoryResolver = (function () {\n\t        function _NullComponentFactoryResolver() {\n\t        }\n\t        /**\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            throw new NoComponentFactoryError(component);\n\t        };\n\t        return _NullComponentFactoryResolver;\n\t    }());\n\t    /**\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ComponentFactoryResolver = (function () {\n\t        function ComponentFactoryResolver() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n\t        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n\t        return ComponentFactoryResolver;\n\t    }());\n\t    var CodegenComponentFactoryResolver = (function () {\n\t        /**\n\t         * @param {?} factories\n\t         * @param {?} _parent\n\t         */\n\t        function CodegenComponentFactoryResolver(factories, _parent) {\n\t            this._parent = _parent;\n\t            this._factories = new Map();\n\t            for (var i = 0; i < factories.length; i++) {\n\t                var factory = factories[i];\n\t                this._factories.set(factory.componentType, factory);\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            var /** @type {?} */ result = this._factories.get(component);\n\t            if (!result) {\n\t                result = this._parent.resolveComponentFactory(component);\n\t            }\n\t            return result;\n\t        };\n\t        return CodegenComponentFactoryResolver;\n\t    }());\n\t\n\t    var /** @type {?} */ trace;\n\t    var /** @type {?} */ events;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function detectWTF() {\n\t        var /** @type {?} */ wtf = ((global$1) /** TODO #9100 */)['wtf'];\n\t        if (wtf) {\n\t            trace = wtf['trace'];\n\t            if (trace) {\n\t                events = trace['events'];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    /**\n\t     * @param {?} signature\n\t     * @param {?=} flags\n\t     * @return {?}\n\t     */\n\t    function createScope(signature, flags) {\n\t        if (flags === void 0) { flags = null; }\n\t        return events.createScope(signature, flags);\n\t    }\n\t    /**\n\t     * @param {?} scope\n\t     * @param {?=} returnValue\n\t     * @return {?}\n\t     */\n\t    function leave(scope, returnValue) {\n\t        trace.leaveScope(scope, returnValue);\n\t        return returnValue;\n\t    }\n\t    /**\n\t     * @param {?} rangeType\n\t     * @param {?} action\n\t     * @return {?}\n\t     */\n\t    function startTimeRange(rangeType, action) {\n\t        return trace.beginTimeRange(rangeType, action);\n\t    }\n\t    /**\n\t     * @param {?} range\n\t     * @return {?}\n\t     */\n\t    function endTimeRange(range) {\n\t        trace.endTimeRange(range);\n\t    }\n\t\n\t    /**\n\t     * True if WTF is enabled.\n\t     */\n\t    var /** @type {?} */ wtfEnabled = detectWTF();\n\t    /**\n\t     * @param {?=} arg0\n\t     * @param {?=} arg1\n\t     * @return {?}\n\t     */\n\t    function noopScope(arg0, arg1) {\n\t        return null;\n\t    }\n\t    /**\n\t     * Create trace scope.\n\t     *\n\t     * Scopes must be strictly nested and are analogous to stack frames, but\n\t     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n\t     * nesting. You may want to use\n\t     * [Event\n\t     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n\t     * as they are defined in WTF.\n\t     *\n\t     * Used to mark scope entry. The return value is used to leave the scope.\n\t     *\n\t     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n\t     *\n\t     *     someMethod() {\n\t     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n\t     *        // DO SOME WORK HERE\n\t     *        return wtfLeave(s, 123); // Return value 123\n\t     *     }\n\t     *\n\t     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n\t     * negatively impact the performance of your application. For this reason we recommend that\n\t     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n\t     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n\t     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n\t     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n\t     * an exception is expected during normal execution while profiling.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n\t    /**\n\t     * Used to mark end of Scope.\n\t     *\n\t     * - `scope` to end.\n\t     * - `returnValue` (optional) to be passed to the WTF.\n\t     *\n\t     * Returns the `returnValue for easy chaining.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n\t    /**\n\t     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n\t     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n\t     * enabled.\n\t     *\n\t     *     someMethod() {\n\t     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n\t     *        var future = new Future.delay(5).then((_) {\n\t     *          wtfEndTimeRange(s);\n\t     *        });\n\t     *     }\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n\t    /**\n\t     * Ends a async time range operation.\n\t     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n\t     * enabled.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\t\n\t    /**\n\t     * The Testability service provides testing hooks that can be accessed from\n\t     * the browser and by services such as Protractor. Each bootstrapped Angular\n\t     * application on the page will have an instance of Testability.\n\t     * \\@experimental\n\t     */\n\t    var Testability = (function () {\n\t        /**\n\t         * @param {?} _ngZone\n\t         */\n\t        function Testability(_ngZone) {\n\t            this._ngZone = _ngZone;\n\t            /** @internal */\n\t            this._pendingCount = 0;\n\t            /** @internal */\n\t            this._isZoneStable = true;\n\t            /**\n\t             * Whether any work was done since the last 'whenStable' callback. This is\n\t             * useful to detect if this could have potentially destabilized another\n\t             * component while it is stabilizing.\n\t             * @internal\n\t             */\n\t            this._didWork = false;\n\t            /** @internal */\n\t            this._callbacks = [];\n\t            this._watchAngularEvents();\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        Testability.prototype._watchAngularEvents = function () {\n\t            var _this = this;\n\t            this._ngZone.onUnstable.subscribe({\n\t                next: function () {\n\t                    _this._didWork = true;\n\t                    _this._isZoneStable = false;\n\t                }\n\t            });\n\t            this._ngZone.runOutsideAngular(function () {\n\t                _this._ngZone.onStable.subscribe({\n\t                    next: function () {\n\t                        NgZone.assertNotInAngularZone();\n\t                        scheduleMicroTask(function () {\n\t                            _this._isZoneStable = true;\n\t                            _this._runCallbacksIfReady();\n\t                        });\n\t                    }\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.increasePendingRequestCount = function () {\n\t            this._pendingCount += 1;\n\t            this._didWork = true;\n\t            return this._pendingCount;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.decreasePendingRequestCount = function () {\n\t            this._pendingCount -= 1;\n\t            if (this._pendingCount < 0) {\n\t                throw new Error('pending async requests below zero');\n\t            }\n\t            this._runCallbacksIfReady();\n\t            return this._pendingCount;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.isStable = function () {\n\t            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        Testability.prototype._runCallbacksIfReady = function () {\n\t            var _this = this;\n\t            if (this.isStable()) {\n\t                // Schedules the call backs in a new frame so that it is always async.\n\t                scheduleMicroTask(function () {\n\t                    while (_this._callbacks.length !== 0) {\n\t                        (_this._callbacks.pop())(_this._didWork);\n\t                    }\n\t                    _this._didWork = false;\n\t                });\n\t            }\n\t            else {\n\t                // Not Ready\n\t                this._didWork = true;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.whenStable = function (callback) {\n\t            this._callbacks.push(callback);\n\t            this._runCallbacksIfReady();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n\t        /**\n\t         * @deprecated use findProviders\n\t         * @param {?} using\n\t         * @param {?} provider\n\t         * @param {?} exactMatch\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        /**\n\t         * @param {?} using\n\t         * @param {?} provider\n\t         * @param {?} exactMatch\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Testability.ctorParameters = function () { return [\n\t            { type: NgZone, },\n\t        ]; };\n\t        return Testability;\n\t    }());\n\t    /**\n\t     * A global registry of {\\@link Testability} instances for specific elements.\n\t     * \\@experimental\n\t     */\n\t    var TestabilityRegistry = (function () {\n\t        function TestabilityRegistry() {\n\t            /** @internal */\n\t            this._applications = new Map();\n\t            _testabilityGetter.addToWindow(this);\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?} testability\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n\t            this._applications.set(token, testability);\n\t        };\n\t        /**\n\t         * @param {?} elem\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n\t        /**\n\t         * @param {?} elem\n\t         * @param {?=} findInAncestors\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n\t            if (findInAncestors === void 0) { findInAncestors = true; }\n\t            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n\t        };\n\t        TestabilityRegistry.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        TestabilityRegistry.ctorParameters = function () { return []; };\n\t        return TestabilityRegistry;\n\t    }());\n\t    var _NoopGetTestability = (function () {\n\t        function _NoopGetTestability() {\n\t        }\n\t        /**\n\t         * @param {?} registry\n\t         * @return {?}\n\t         */\n\t        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n\t        /**\n\t         * @param {?} registry\n\t         * @param {?} elem\n\t         * @param {?} findInAncestors\n\t         * @return {?}\n\t         */\n\t        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            return null;\n\t        };\n\t        return _NoopGetTestability;\n\t    }());\n\t    /**\n\t     * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n\t     * \\@experimental\n\t     * @param {?} getter\n\t     * @return {?}\n\t     */\n\t    function setTestabilityGetter(getter) {\n\t        _testabilityGetter = getter;\n\t    }\n\t    var /** @type {?} */ _testabilityGetter = new _NoopGetTestability();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ _devMode = true;\n\t    var /** @type {?} */ _runModeLocked = false;\n\t    var /** @type {?} */ _platform;\n\t    /**\n\t     * Disable Angular's development mode, which turns off assertions and other\n\t     * checks within the framework.\n\t     *\n\t     * One important assertion this disables verifies that a change detection pass\n\t     * does not result in additional changes to any bindings (also known as\n\t     * unidirectional data flow).\n\t     *\n\t     * \\@stable\n\t     * @return {?}\n\t     */\n\t    function enableProdMode() {\n\t        if (_runModeLocked) {\n\t            throw new Error('Cannot enable prod mode after platform setup.');\n\t        }\n\t        _devMode = false;\n\t    }\n\t    /**\n\t     * Returns whether Angular is in development mode. After called once,\n\t     * the value is locked and won't change any more.\n\t     *\n\t     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @return {?}\n\t     */\n\t    function isDevMode() {\n\t        _runModeLocked = true;\n\t        return _devMode;\n\t    }\n\t    /**\n\t     * A token for third-party components that can register themselves with NgProbe.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgProbeToken = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} token\n\t         */\n\t        function NgProbeToken(name, token) {\n\t            this.name = name;\n\t            this.token = token;\n\t        }\n\t        return NgProbeToken;\n\t    }());\n\t    /**\n\t     * Creates a platform.\n\t     * Platforms have to be eagerly created via this function.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @param {?} injector\n\t     * @return {?}\n\t     */\n\t    function createPlatform(injector) {\n\t        if (_platform && !_platform.destroyed) {\n\t            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n\t        }\n\t        _platform = injector.get(PlatformRef);\n\t        var /** @type {?} */ inits = (injector.get(PLATFORM_INITIALIZER, null));\n\t        if (inits)\n\t            inits.forEach(function (init) { return init(); });\n\t        return _platform;\n\t    }\n\t    /**\n\t     * Creates a factory for a platform\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @param {?} parentPlatformFactory\n\t     * @param {?} name\n\t     * @param {?=} providers\n\t     * @return {?}\n\t     */\n\t    function createPlatformFactory(parentPlatformFactory, name, providers) {\n\t        if (providers === void 0) { providers = []; }\n\t        var /** @type {?} */ marker = new OpaqueToken(\"Platform: \" + name);\n\t        return function (extraProviders) {\n\t            if (extraProviders === void 0) { extraProviders = []; }\n\t            if (!getPlatform()) {\n\t                if (parentPlatformFactory) {\n\t                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n\t                }\n\t                else {\n\t                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n\t                }\n\t            }\n\t            return assertPlatform(marker);\n\t        };\n\t    }\n\t    /**\n\t     * Checks that there currently is a platform\n\t     * which contains the given token as a provider.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @param {?} requiredToken\n\t     * @return {?}\n\t     */\n\t    function assertPlatform(requiredToken) {\n\t        var /** @type {?} */ platform = getPlatform();\n\t        if (!platform) {\n\t            throw new Error('No platform exists!');\n\t        }\n\t        if (!platform.injector.get(requiredToken, null)) {\n\t            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n\t        }\n\t        return platform;\n\t    }\n\t    /**\n\t     * Destroy the existing platform.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @return {?}\n\t     */\n\t    function destroyPlatform() {\n\t        if (_platform && !_platform.destroyed) {\n\t            _platform.destroy();\n\t        }\n\t    }\n\t    /**\n\t     * Returns the current platform.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @return {?}\n\t     */\n\t    function getPlatform() {\n\t        return _platform && !_platform.destroyed ? _platform : null;\n\t    }\n\t    /**\n\t     * The Angular platform is the entry point for Angular on a web page. Each page\n\t     * has exactly one platform, and services (such as reflection) which are common\n\t     * to every Angular application running on the page are bound in its scope.\n\t     *\n\t     * A page's platform is initialized implicitly when {\\@link bootstrap}() is called, or\n\t     * explicitly by calling {\\@link createPlatform}().\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var PlatformRef = (function () {\n\t        function PlatformRef() {\n\t        }\n\t        /**\n\t         * Creates an instance of an `\\@NgModule` for the given platform\n\t         * for offline compilation.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * my_module.ts:\n\t         *\n\t         * \\@NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * main.ts:\n\t         * import {MyModuleNgFactory} from './my_module.ngfactory';\n\t         * import {platformBrowser} from '\\@angular/platform-browser';\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n\t         * ```\n\t         *\n\t         * \\@experimental APIs related to application bootstrap are currently under review.\n\t         * @abstract\n\t         * @param {?} moduleFactory\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) { };\n\t        /**\n\t         * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * \\@NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n\t         * ```\n\t         * \\@stable\n\t         * @abstract\n\t         * @param {?} moduleType\n\t         * @param {?=} compilerOptions\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) { };\n\t        /**\n\t         * Register a listener to be called when the platform is disposed.\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.onDestroy = function (callback) { };\n\t        /**\n\t         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n\t         * every Angular application on the page and provides singleton providers.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.injector = function () { };\n\t        /**\n\t         * Destroy the Angular platform and all Angular applications on the page.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.destroy = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.destroyed = function () { };\n\t        return PlatformRef;\n\t    }());\n\t    /**\n\t     * @param {?} errorHandler\n\t     * @param {?} callback\n\t     * @return {?}\n\t     */\n\t    function _callAndReportToErrorHandler(errorHandler, callback) {\n\t        try {\n\t            var /** @type {?} */ result = callback();\n\t            if (isPromise(result)) {\n\t                return result.catch(function (e) {\n\t                    errorHandler.handleError(e);\n\t                    // rethrow as the exception handler might not do it\n\t                    throw e;\n\t                });\n\t            }\n\t            return result;\n\t        }\n\t        catch (e) {\n\t            errorHandler.handleError(e);\n\t            // rethrow as the exception handler might not do it\n\t            throw e;\n\t        }\n\t    }\n\t    var PlatformRef_ = (function (_super) {\n\t        __extends$3(PlatformRef_, _super);\n\t        /**\n\t         * @param {?} _injector\n\t         */\n\t        function PlatformRef_(_injector) {\n\t            _super.call(this);\n\t            this._injector = _injector;\n\t            this._modules = [];\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error('The platform has already been destroyed!');\n\t            }\n\t            this._modules.slice().forEach(function (module) { return module.destroy(); });\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t            this._destroyed = true;\n\t        };\n\t        /**\n\t         * @param {?} moduleFactory\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n\t        };\n\t        /**\n\t         * @param {?} moduleFactory\n\t         * @param {?} ngZone\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n\t            var _this = this;\n\t            // Note: We need to create the NgZone _before_ we instantiate the module,\n\t            // as instantiating the module creates some providers eagerly.\n\t            // So we create a mini parent injector that just contains the new NgZone and\n\t            // pass that as parent to the NgModuleFactory.\n\t            if (!ngZone)\n\t                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n\t            // Attention: Don't use ApplicationRef.run here,\n\t            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n\t            return ngZone.run(function () {\n\t                var /** @type {?} */ ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n\t                var /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n\t                var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n\t                if (!exceptionHandler) {\n\t                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n\t                }\n\t                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n\t                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n\t                return _callAndReportToErrorHandler(exceptionHandler, function () {\n\t                    var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n\t                    return initStatus.donePromise.then(function () {\n\t                        _this._moduleDoBootstrap(moduleRef);\n\t                        return moduleRef;\n\t                    });\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} moduleType\n\t         * @param {?=} compilerOptions\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n\t        };\n\t        /**\n\t         * @param {?} moduleType\n\t         * @param {?=} compilerOptions\n\t         * @param {?} ngZone\n\t         * @param {?=} componentFactoryCallback\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n\t            var _this = this;\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n\t            var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\t            // ugly internal api hack: generate host component factories for all declared components and\n\t            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n\t            // factories.\n\t            if (componentFactoryCallback) {\n\t                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n\t                    .then(function (_a) {\n\t                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n\t                    componentFactoryCallback(componentFactories);\n\t                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n\t                });\n\t            }\n\t            return compiler.compileModuleAsync(moduleType)\n\t                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n\t        };\n\t        /**\n\t         * @param {?} moduleRef\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n\t            var /** @type {?} */ appRef = moduleRef.injector.get(ApplicationRef);\n\t            if (moduleRef.bootstrapFactories.length > 0) {\n\t                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n\t            }\n\t            else if (moduleRef.instance.ngDoBootstrap) {\n\t                moduleRef.instance.ngDoBootstrap(appRef);\n\t            }\n\t            else {\n\t                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n\t                    \"Please define one of these.\");\n\t            }\n\t            this._modules.push(moduleRef);\n\t        };\n\t        PlatformRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PlatformRef_.ctorParameters = function () { return [\n\t            { type: Injector, },\n\t        ]; };\n\t        return PlatformRef_;\n\t    }(PlatformRef));\n\t    /**\n\t     * A reference to an Angular application running on a page.\n\t     *\n\t     * For more about Angular applications, see the documentation for {\\@link bootstrap}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ApplicationRef = (function () {\n\t        function ApplicationRef() {\n\t        }\n\t        /**\n\t         * Bootstrap a new component at the root level of the application.\n\t         *\n\t         * ### Bootstrap process\n\t         *\n\t         * When bootstrapping a new root component into an application, Angular mounts the\n\t         * specified application component onto DOM elements identified by the [componentType]'s\n\t         * selector and kicks off automatic change detection to finish initializing the component.\n\t         *\n\t         * ### Example\n\t         * {\\@example core/ts/platform/platform.ts region='longform'}\n\t         * @abstract\n\t         * @param {?} componentFactory\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.bootstrap = function (componentFactory) { };\n\t        /**\n\t         * Invoke this method to explicitly process change detection and its side-effects.\n\t         *\n\t         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n\t         * further changes are detected. If additional changes are picked up during this second cycle,\n\t         * bindings in the app have side-effects that cannot be resolved in a single change detection\n\t         * pass.\n\t         * In this case, Angular throws an error, since an Angular application can only have one change\n\t         * detection pass during which all change detection must complete.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.tick = function () { };\n\t        /**\n\t         * Get a list of component types registered to this application.\n\t         * This list is populated even before the component is created.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.componentTypes = function () { };\n\t        /**\n\t         * Get a list of components registered to this application.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.components = function () { };\n\t        /**\n\t         * Attaches a view so that it will be dirty checked.\n\t         * The view will be automatically detached when it is destroyed.\n\t         * This will throw if the view is already attached to a ViewContainer.\n\t         * @abstract\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.attachView = function (view) { };\n\t        /**\n\t         * Detaches a view from dirty checking again.\n\t         * @abstract\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.detachView = function (view) { };\n\t        /**\n\t         * Returns the number of attached views.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.viewCount = function () { };\n\t        return ApplicationRef;\n\t    }());\n\t    var ApplicationRef_ = (function (_super) {\n\t        __extends$3(ApplicationRef_, _super);\n\t        /**\n\t         * @param {?} _zone\n\t         * @param {?} _console\n\t         * @param {?} _injector\n\t         * @param {?} _exceptionHandler\n\t         * @param {?} _componentFactoryResolver\n\t         * @param {?} _initStatus\n\t         * @param {?} _testabilityRegistry\n\t         * @param {?} _testability\n\t         */\n\t        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._zone = _zone;\n\t            this._console = _console;\n\t            this._injector = _injector;\n\t            this._exceptionHandler = _exceptionHandler;\n\t            this._componentFactoryResolver = _componentFactoryResolver;\n\t            this._initStatus = _initStatus;\n\t            this._testabilityRegistry = _testabilityRegistry;\n\t            this._testability = _testability;\n\t            this._bootstrapListeners = [];\n\t            this._rootComponents = [];\n\t            this._rootComponentTypes = [];\n\t            this._views = [];\n\t            this._runningTick = false;\n\t            this._enforceNoNewChanges = false;\n\t            this._enforceNoNewChanges = isDevMode();\n\t            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n\t        }\n\t        /**\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.attachView = function (viewRef) {\n\t            var /** @type {?} */ view = ((viewRef)).internalView;\n\t            this._views.push(view);\n\t            view.attachToAppRef(this);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.detachView = function (viewRef) {\n\t            var /** @type {?} */ view = ((viewRef)).internalView;\n\t            ListWrapper.remove(this._views, view);\n\t            view.detach();\n\t        };\n\t        /**\n\t         * @param {?} componentOrFactory\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n\t            var _this = this;\n\t            if (!this._initStatus.done) {\n\t                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n\t            }\n\t            var /** @type {?} */ componentFactory;\n\t            if (componentOrFactory instanceof ComponentFactory) {\n\t                componentFactory = componentOrFactory;\n\t            }\n\t            else {\n\t                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n\t            }\n\t            this._rootComponentTypes.push(componentFactory.componentType);\n\t            var /** @type {?} */ compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n\t            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n\t            var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n\t            if (testability) {\n\t                compRef.injector.get(TestabilityRegistry)\n\t                    .registerApplication(compRef.location.nativeElement, testability);\n\t            }\n\t            this._loadComponent(compRef);\n\t            if (isDevMode()) {\n\t                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n\t            }\n\t            return compRef;\n\t        };\n\t        /**\n\t         * @param {?} componentRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n\t            this.attachView(componentRef.hostView);\n\t            this.tick();\n\t            this._rootComponents.push(componentRef);\n\t            // Get the listeners lazily to prevent DI cycles.\n\t            var /** @type {?} */ listeners = (this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n\t                .concat(this._bootstrapListeners));\n\t            listeners.forEach(function (listener) { return listener(componentRef); });\n\t        };\n\t        /**\n\t         * @param {?} componentRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n\t            this.detachView(componentRef.hostView);\n\t            ListWrapper.remove(this._rootComponents, componentRef);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.tick = function () {\n\t            if (this._runningTick) {\n\t                throw new Error('ApplicationRef.tick is called recursively');\n\t            }\n\t            var /** @type {?} */ scope = ApplicationRef_._tickScope();\n\t            try {\n\t                this._runningTick = true;\n\t                this._views.forEach(function (view) { return view.ref.detectChanges(); });\n\t                if (this._enforceNoNewChanges) {\n\t                    this._views.forEach(function (view) { return view.ref.checkNoChanges(); });\n\t                }\n\t            }\n\t            finally {\n\t                this._runningTick = false;\n\t                wtfLeave(scope);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.ngOnDestroy = function () {\n\t            // TODO(alxhub): Dispose of the NgZone.\n\t            this._views.slice().forEach(function (view) { return view.destroy(); });\n\t        };\n\t        Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._views.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._rootComponentTypes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._rootComponents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n\t        ApplicationRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationRef_.ctorParameters = function () { return [\n\t            { type: NgZone, },\n\t            { type: Console, },\n\t            { type: Injector, },\n\t            { type: ErrorHandler, },\n\t            { type: ComponentFactoryResolver, },\n\t            { type: ApplicationInitStatus, },\n\t            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n\t            { type: Testability, decorators: [{ type: Optional },] },\n\t        ]; };\n\t        return ApplicationRef_;\n\t    }(ApplicationRef));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n\t     *\n\t     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n\t     * NgModule Instance.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var NgModuleRef = (function () {\n\t        function NgModuleRef() {\n\t        }\n\t        /**\n\t         * The injector that contains all of the providers of the NgModule.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.injector = function () { };\n\t        /**\n\t         * The ComponentFactoryResolver to get hold of the ComponentFactories\n\t         * declared in the `entryComponents` property of the module.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.componentFactoryResolver = function () { };\n\t        /**\n\t         * The NgModule instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.instance = function () { };\n\t        /**\n\t         * Destroys the module instance and all of the data structures associated with it.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.destroy = function () { };\n\t        /**\n\t         * Allows to register a callback that will be called when the module is destroyed.\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.onDestroy = function (callback) { };\n\t        return NgModuleRef;\n\t    }());\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var NgModuleFactory = (function () {\n\t        /**\n\t         * @param {?} _injectorClass\n\t         * @param {?} _moduleType\n\t         */\n\t        function NgModuleFactory(_injectorClass, _moduleType) {\n\t            this._injectorClass = _injectorClass;\n\t            this._moduleType = _moduleType;\n\t        }\n\t        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._moduleType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} parentInjector\n\t         * @return {?}\n\t         */\n\t        NgModuleFactory.prototype.create = function (parentInjector) {\n\t            if (!parentInjector) {\n\t                parentInjector = Injector.NULL;\n\t            }\n\t            var /** @type {?} */ instance = new this._injectorClass(parentInjector);\n\t            instance.create();\n\t            return instance;\n\t        };\n\t        return NgModuleFactory;\n\t    }());\n\t    var /** @type {?} */ _UNDEFINED = new Object();\n\t    /**\n\t     * @abstract\n\t     */\n\t    var NgModuleInjector = (function (_super) {\n\t        __extends$9(NgModuleInjector, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} factories\n\t         * @param {?} bootstrapFactories\n\t         */\n\t        function NgModuleInjector(parent, factories, bootstrapFactories) {\n\t            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n\t            this.parent = parent;\n\t            this.bootstrapFactories = bootstrapFactories;\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.createInternal = function () { };\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            if (token === Injector || token === ComponentFactoryResolver) {\n\t                return this;\n\t            }\n\t            var /** @type {?} */ result = this.getInternal(token, _UNDEFINED);\n\t            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n\t        };\n\t        /**\n\t         * @abstract\n\t         * @param {?} token\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.getInternal = function (token, notFoundValue) { };\n\t        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n\t            }\n\t            this._destroyed = true;\n\t            this.destroyInternal();\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.destroyInternal = function () { };\n\t        return NgModuleInjector;\n\t    }(CodegenComponentFactoryResolver));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Used to load ng module factories.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var NgModuleFactoryLoader = (function () {\n\t        function NgModuleFactoryLoader() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        NgModuleFactoryLoader.prototype.load = function (path) { };\n\t        return NgModuleFactoryLoader;\n\t    }());\n\t    var /** @type {?} */ moduleFactories = new Map();\n\t    /**\n\t     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n\t     * \\@experimental\n\t     * @param {?} id\n\t     * @param {?} factory\n\t     * @return {?}\n\t     */\n\t    function registerModuleFactory(id, factory) {\n\t        var /** @type {?} */ existing = moduleFactories.get(id);\n\t        if (existing) {\n\t            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n\t        }\n\t        moduleFactories.set(id, factory);\n\t    }\n\t    /**\n\t     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n\t     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n\t     * cannot be found.\n\t     * \\@experimental\n\t     * @param {?} id\n\t     * @return {?}\n\t     */\n\t    function getModuleFactory(id) {\n\t        var /** @type {?} */ factory = moduleFactories.get(id);\n\t        if (!factory)\n\t            throw new Error(\"No module with ID \" + id + \" loaded\");\n\t        return factory;\n\t    }\n\t\n\t    /**\n\t     * An unmodifiable list of items that Angular keeps up to date when the state\n\t     * of the application changes.\n\t     *\n\t     * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n\t     *\n\t     * Implements an iterable interface, therefore it can be used in both ES6\n\t     * javascript `for (var i of items)` loops as well as in Angular templates with\n\t     * `*ngFor=\"let i of myList\"`.\n\t     *\n\t     * Changes can be observed by subscribing to the changes `Observable`.\n\t     *\n\t     * NOTE: In the future this class will implement an `Observable` interface.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n\t     * ```typescript\n\t     * \\@Component({...})\n\t     * class Container {\n\t     *   \\@ViewChildren(Item) items:QueryList<Item>;\n\t     * }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var QueryList = (function () {\n\t        function QueryList() {\n\t            this._dirty = true;\n\t            this._results = [];\n\t            this._emitter = new EventEmitter();\n\t        }\n\t        Object.defineProperty(QueryList.prototype, \"changes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._emitter; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"length\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._results.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"first\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._results[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"last\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._results[this.length - 1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * See\n\t         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n\t        /**\n\t         * See\n\t         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.filter = function (fn) {\n\t            return this._results.filter(fn);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.find = function (fn) { return this._results.find(fn); };\n\t        /**\n\t         * See\n\t         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n\t         * @param {?} fn\n\t         * @param {?} init\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.reduce = function (fn, init) {\n\t            return this._results.reduce(fn, init);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n\t        /**\n\t         * See\n\t         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.some = function (fn) {\n\t            return this._results.some(fn);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.toArray = function () { return this._results.slice(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype[getSymbolIterator()] = function () { return ((this._results))[getSymbolIterator()](); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.toString = function () { return this._results.toString(); };\n\t        /**\n\t         * @param {?} res\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.reset = function (res) {\n\t            this._results = ListWrapper.flatten(res);\n\t            this._dirty = false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n\t        /**\n\t         * internal\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.setDirty = function () { this._dirty = true; };\n\t        Object.defineProperty(QueryList.prototype, \"dirty\", {\n\t            /**\n\t             * internal\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._dirty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return QueryList;\n\t    }());\n\t\n\t    var /** @type {?} */ _SEPARATOR = '#';\n\t    var /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\n\t    /**\n\t     * Configuration for SystemJsNgModuleLoader.\n\t     * token.\n\t     *\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var SystemJsNgModuleLoaderConfig = (function () {\n\t        function SystemJsNgModuleLoaderConfig() {\n\t        }\n\t        return SystemJsNgModuleLoaderConfig;\n\t    }());\n\t    var /** @type {?} */ DEFAULT_CONFIG = {\n\t        factoryPathPrefix: '',\n\t        factoryPathSuffix: '.ngfactory',\n\t    };\n\t    /**\n\t     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n\t     * \\@experimental\n\t     */\n\t    var SystemJsNgModuleLoader = (function () {\n\t        /**\n\t         * @param {?} _compiler\n\t         * @param {?=} config\n\t         */\n\t        function SystemJsNgModuleLoader(_compiler, config) {\n\t            this._compiler = _compiler;\n\t            this._config = config || DEFAULT_CONFIG;\n\t        }\n\t        /**\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        SystemJsNgModuleLoader.prototype.load = function (path) {\n\t            var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n\t            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n\t        };\n\t        /**\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n\t            var _this = this;\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t            }\n\t            return System.import(module)\n\t                .then(function (module) { return module[exportName]; })\n\t                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n\t                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n\t        };\n\t        /**\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t                factoryClassSuffix = '';\n\t            }\n\t            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n\t                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n\t                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n\t        };\n\t        SystemJsNgModuleLoader.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SystemJsNgModuleLoader.ctorParameters = function () { return [\n\t            { type: Compiler, },\n\t            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n\t        ]; };\n\t        return SystemJsNgModuleLoader;\n\t    }());\n\t    /**\n\t     * @param {?} value\n\t     * @param {?} modulePath\n\t     * @param {?} exportName\n\t     * @return {?}\n\t     */\n\t    function checkNotEmpty(value, modulePath, exportName) {\n\t        if (!value) {\n\t            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n\t        }\n\t        return value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n\t     *\n\t     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n\t     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n\t     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n\t     * `TemplateRef` from a Component or a Directive via {\\@link Query}.\n\t     *\n\t     * To instantiate Embedded Views based on a Template, use\n\t     * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n\t     * View Container.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var TemplateRef = (function () {\n\t        function TemplateRef() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        TemplateRef.prototype.elementRef = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        TemplateRef.prototype.createEmbeddedView = function (context) { };\n\t        return TemplateRef;\n\t    }());\n\t    var TemplateRef_ = (function (_super) {\n\t        __extends$10(TemplateRef_, _super);\n\t        /**\n\t         * @param {?} _parentView\n\t         * @param {?} _nodeIndex\n\t         * @param {?} _nativeElement\n\t         */\n\t        function TemplateRef_(_parentView, _nodeIndex, _nativeElement) {\n\t            _super.call(this);\n\t            this._parentView = _parentView;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._nativeElement = _nativeElement;\n\t        }\n\t        /**\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        TemplateRef_.prototype.createEmbeddedView = function (context) {\n\t            var /** @type {?} */ view = this._parentView.createEmbeddedViewInternal(this._nodeIndex);\n\t            view.create(context || ({}));\n\t            return view.ref;\n\t        };\n\t        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ElementRef(this._nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef_;\n\t    }(TemplateRef));\n\t\n\t    /**\n\t     * Represents a container where one or more Views can be attached.\n\t     *\n\t     * The container can contain two kinds of Views. Host Views, created by instantiating a\n\t     * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n\t     * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n\t     *\n\t     * The location of the View Container within the containing View is specified by the Anchor\n\t     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n\t     * have a single View Container.\n\t     *\n\t     * Root elements of Views attached to this container become siblings of the Anchor Element in\n\t     * the Rendered View.\n\t     *\n\t     * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n\t     * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ViewContainerRef = (function () {\n\t        function ViewContainerRef() {\n\t        }\n\t        /**\n\t         * Anchor element that specifies the location of this container in the containing View.\n\t         * <!-- TODO: rename to anchorElement -->\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.element = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.injector = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.parentInjector = function () { };\n\t        /**\n\t         * Destroys all Views in this container.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.clear = function () { };\n\t        /**\n\t         * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n\t         * @abstract\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.get = function (index) { };\n\t        /**\n\t         * Returns the number of Views currently attached to this container.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.length = function () { };\n\t        /**\n\t         * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n\t         * into this container at the specified `index`.\n\t         *\n\t         * If `index` is not specified, the new View will be inserted as the last View in the container.\n\t         *\n\t         * Returns the {\\@link ViewRef} for the newly created View.\n\t         * @abstract\n\t         * @param {?} templateRef\n\t         * @param {?=} context\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) { };\n\t        /**\n\t         * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n\t         * specified `index`.\n\t         *\n\t         * The component is instantiated using its {\\@link ComponentFactory} which can be\n\t         * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n\t         *\n\t         * If `index` is not specified, the new View will be inserted as the last View in the container.\n\t         *\n\t         * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n\t         *\n\t         * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n\t         * @abstract\n\t         * @param {?} componentFactory\n\t         * @param {?=} index\n\t         * @param {?=} injector\n\t         * @param {?=} projectableNodes\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) { };\n\t        /**\n\t         * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n\t         *\n\t         * If `index` is not specified, the new View will be inserted as the last View in the container.\n\t         *\n\t         * Returns the inserted {\\@link ViewRef}.\n\t         * @abstract\n\t         * @param {?} viewRef\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.insert = function (viewRef, index) { };\n\t        /**\n\t         * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n\t         *\n\t         * Returns the inserted {\\@link ViewRef}.\n\t         * @abstract\n\t         * @param {?} viewRef\n\t         * @param {?} currentIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.move = function (viewRef, currentIndex) { };\n\t        /**\n\t         * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n\t         * `-1` if this container doesn't contain the View.\n\t         * @abstract\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.indexOf = function (viewRef) { };\n\t        /**\n\t         * Destroys a View attached to this container at the specified `index`.\n\t         *\n\t         * If `index` is not specified, the last View in the container will be removed.\n\t         * @abstract\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.remove = function (index) { };\n\t        /**\n\t         * Use along with {\\@link #insert} to move a View within the current container.\n\t         *\n\t         * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n\t         * @abstract\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.detach = function (index) { };\n\t        return ViewContainerRef;\n\t    }());\n\t    var ViewContainerRef_ = (function () {\n\t        /**\n\t         * @param {?} _element\n\t         */\n\t        function ViewContainerRef_(_element) {\n\t            this._element = _element;\n\t            /** @internal */\n\t            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n\t            /** @internal */\n\t            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n\t            /** @internal */\n\t            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n\t            /** @internal */\n\t            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ views = this._element.nestedViews;\n\t                return isPresent(views) ? views.length : 0;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._element.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._element.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._element.parentInjector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} templateRef\n\t         * @param {?=} context\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n\t            if (context === void 0) { context = null; }\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context);\n\t            this.insert(viewRef, index);\n\t            return viewRef;\n\t        };\n\t        /**\n\t         * @param {?} componentFactory\n\t         * @param {?=} index\n\t         * @param {?=} injector\n\t         * @param {?=} projectableNodes\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n\t            if (index === void 0) { index = -1; }\n\t            if (injector === void 0) { injector = null; }\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            var /** @type {?} */ s = this._createComponentInContainerScope();\n\t            var /** @type {?} */ contextInjector = injector || this._element.parentInjector;\n\t            var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n\t            this.insert(componentRef.hostView, index);\n\t            return wtfLeave(s, componentRef);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ s = this._insertScope();\n\t            if (index == -1)\n\t                index = this.length;\n\t            var /** @type {?} */ viewRef_ = (viewRef);\n\t            this._element.attachView(viewRef_.internalView, index);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @param {?} currentIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n\t            var /** @type {?} */ s = this._insertScope();\n\t            if (currentIndex == -1)\n\t                return;\n\t            var /** @type {?} */ viewRef_ = (viewRef);\n\t            this._element.moveView(viewRef_.internalView, currentIndex);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n\t            return this.length ? this._element.nestedViews.indexOf(((viewRef)).internalView) :\n\t                -1;\n\t        };\n\t        /**\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.remove = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ s = this._removeScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var /** @type {?} */ view = this._element.detachView(index);\n\t            view.destroy();\n\t            // view is intentionally not returned to the client.\n\t            wtfLeave(s);\n\t        };\n\t        /**\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.detach = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ s = this._detachScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var /** @type {?} */ view = this._element.detachView(index);\n\t            return wtfLeave(s, view.ref);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.clear = function () {\n\t            for (var /** @type {?} */ i = this.length - 1; i >= 0; i--) {\n\t                this.remove(i);\n\t            }\n\t        };\n\t        return ViewContainerRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ViewRef = (function (_super) {\n\t        __extends$11(ViewRef, _super);\n\t        function ViewRef() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * Destroys the view and all of the data structures associated with it.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewRef.prototype.destroy = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewRef.prototype.destroyed = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ViewRef.prototype.onDestroy = function (callback) { };\n\t        return ViewRef;\n\t    }(ChangeDetectorRef));\n\t    /**\n\t     * Represents an Angular View.\n\t     *\n\t     * <!-- TODO: move the next two paragraphs to the dev guide -->\n\t     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n\t     * Elements which are created and destroyed together.\n\t     *\n\t     * Properties of elements in a View can change, but the structure (number and order) of elements in\n\t     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n\t     * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n\t     * <!-- /TODO -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * Given this template...\n\t     *\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * We have two {\\@link TemplateRef}s:\n\t     *\n\t     * Outer {\\@link TemplateRef}:\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * Inner {\\@link TemplateRef}:\n\t     * ```\n\t     *   <li>{{item}}</li>\n\t     * ```\n\t     *\n\t     * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n\t     *\n\t     * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n\t     *\n\t     * ```\n\t     * <!-- ViewRef: outer-0 -->\n\t     * Count: 2\n\t     * <ul>\n\t     *   <template view-container-ref></template>\n\t     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n\t     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n\t     * </ul>\n\t     * <!-- /ViewRef: outer-0 -->\n\t     * ```\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var EmbeddedViewRef = (function (_super) {\n\t        __extends$11(EmbeddedViewRef, _super);\n\t        function EmbeddedViewRef() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        EmbeddedViewRef.prototype.context = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        EmbeddedViewRef.prototype.rootNodes = function () { };\n\t        return EmbeddedViewRef;\n\t    }(ViewRef));\n\t    var ViewRef_ = (function () {\n\t        /**\n\t         * @param {?} _view\n\t         * @param {?} animationQueue\n\t         */\n\t        function ViewRef_(_view, animationQueue) {\n\t            this._view = _view;\n\t            this.animationQueue = animationQueue;\n\t            this._view = _view;\n\t            this._originalMode = this._view.cdMode;\n\t        }\n\t        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.flatRootNodes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"context\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.detectChanges = function () {\n\t            this._view.detectChanges(false);\n\t            this.animationQueue.flush();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.reattach = function () {\n\t            this._view.cdMode = this._originalMode;\n\t            this.markForCheck();\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.onDestroy = function (callback) {\n\t            if (!this._view.disposables) {\n\t                this._view.disposables = [];\n\t            }\n\t            this._view.disposables.push(callback);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.destroy = function () { this._view.detachAndDestroy(); };\n\t        return ViewRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var EventListener = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         */\n\t        function EventListener(name, callback) {\n\t            this.name = name;\n\t            this.callback = callback;\n\t        }\n\t        ;\n\t        return EventListener;\n\t    }());\n\t    /**\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugNode = (function () {\n\t        /**\n\t         * @param {?} nativeNode\n\t         * @param {?} parent\n\t         * @param {?} _debugInfo\n\t         */\n\t        function DebugNode(nativeNode, parent, _debugInfo) {\n\t            this._debugInfo = _debugInfo;\n\t            this.nativeNode = nativeNode;\n\t            if (parent && parent instanceof DebugElement) {\n\t                parent.addChild(this);\n\t            }\n\t            else {\n\t                this.parent = null;\n\t            }\n\t            this.listeners = [];\n\t        }\n\t        Object.defineProperty(DebugNode.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.injector : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.component : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"context\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.context : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"references\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._debugInfo ? this._debugInfo.references : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.providerTokens : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"source\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.source : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugNode;\n\t    }());\n\t    /**\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugElement = (function (_super) {\n\t        __extends$12(DebugElement, _super);\n\t        /**\n\t         * @param {?} nativeNode\n\t         * @param {?} parent\n\t         * @param {?} _debugInfo\n\t         */\n\t        function DebugElement(nativeNode, parent, _debugInfo) {\n\t            _super.call(this, nativeNode, parent, _debugInfo);\n\t            this.properties = {};\n\t            this.attributes = {};\n\t            this.classes = {};\n\t            this.styles = {};\n\t            this.childNodes = [];\n\t            this.nativeElement = nativeNode;\n\t        }\n\t        /**\n\t         * @param {?} child\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.addChild = function (child) {\n\t            if (child) {\n\t                this.childNodes.push(child);\n\t                child.parent = this;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} child\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.removeChild = function (child) {\n\t            var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n\t            if (childIndex !== -1) {\n\t                child.parent = null;\n\t                this.childNodes.splice(childIndex, 1);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} child\n\t         * @param {?} newChildren\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n\t            var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n\t            if (siblingIndex !== -1) {\n\t                var /** @type {?} */ previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n\t                var /** @type {?} */ nextChildren = this.childNodes.slice(siblingIndex + 1);\n\t                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n\t                for (var /** @type {?} */ i = 0; i < newChildren.length; ++i) {\n\t                    var /** @type {?} */ newChild = newChildren[i];\n\t                    if (newChild.parent) {\n\t                        newChild.parent.removeChild(newChild);\n\t                    }\n\t                    newChild.parent = this;\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} predicate\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.query = function (predicate) {\n\t            var /** @type {?} */ results = this.queryAll(predicate);\n\t            return results[0] || null;\n\t        };\n\t        /**\n\t         * @param {?} predicate\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.queryAll = function (predicate) {\n\t            var /** @type {?} */ matches = [];\n\t            _queryElementChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        /**\n\t         * @param {?} predicate\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.queryAllNodes = function (predicate) {\n\t            var /** @type {?} */ matches = [];\n\t            _queryNodeChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        Object.defineProperty(DebugElement.prototype, \"children\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} eventName\n\t         * @param {?} eventObj\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n\t            this.listeners.forEach(function (listener) {\n\t                if (listener.name == eventName) {\n\t                    listener.callback(eventObj);\n\t                }\n\t            });\n\t        };\n\t        return DebugElement;\n\t    }(DebugNode));\n\t    /**\n\t     * \\@experimental\n\t     * @param {?} debugEls\n\t     * @return {?}\n\t     */\n\t    function asNativeElements(debugEls) {\n\t        return debugEls.map(function (el) { return el.nativeElement; });\n\t    }\n\t    /**\n\t     * @param {?} element\n\t     * @param {?} predicate\n\t     * @param {?} matches\n\t     * @return {?}\n\t     */\n\t    function _queryElementChildren(element, predicate, matches) {\n\t        element.childNodes.forEach(function (node) {\n\t            if (node instanceof DebugElement) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                _queryElementChildren(node, predicate, matches);\n\t            }\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} parentNode\n\t     * @param {?} predicate\n\t     * @param {?} matches\n\t     * @return {?}\n\t     */\n\t    function _queryNodeChildren(parentNode, predicate, matches) {\n\t        if (parentNode instanceof DebugElement) {\n\t            parentNode.childNodes.forEach(function (node) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                if (node instanceof DebugElement) {\n\t                    _queryNodeChildren(node, predicate, matches);\n\t                }\n\t            });\n\t        }\n\t    }\n\t    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n\t    var /** @type {?} */ _nativeNodeToDebugNode = new Map();\n\t    /**\n\t     * \\@experimental\n\t     * @param {?} nativeNode\n\t     * @return {?}\n\t     */\n\t    function getDebugNode(nativeNode) {\n\t        return _nativeNodeToDebugNode.get(nativeNode);\n\t    }\n\t    /**\n\t     * @param {?} node\n\t     * @return {?}\n\t     */\n\t    function indexDebugNode(node) {\n\t        _nativeNodeToDebugNode.set(node.nativeNode, node);\n\t    }\n\t    /**\n\t     * @param {?} node\n\t     * @return {?}\n\t     */\n\t    function removeDebugNodeFromIndex(node) {\n\t        _nativeNodeToDebugNode.delete(node.nativeNode);\n\t    }\n\t\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _reflector() {\n\t        return reflector;\n\t    }\n\t    var /** @type {?} */ _CORE_PLATFORM_PROVIDERS = [\n\t        PlatformRef_,\n\t        { provide: PlatformRef, useExisting: PlatformRef_ },\n\t        { provide: Reflector, useFactory: _reflector, deps: [] },\n\t        { provide: ReflectorReader, useExisting: Reflector },\n\t        TestabilityRegistry,\n\t        Console,\n\t    ];\n\t    /**\n\t     * This platform has to be included in any other platform\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\t\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var /** @type {?} */ LOCALE_ID = new OpaqueToken('LocaleId');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var /** @type {?} */ TRANSLATIONS = new OpaqueToken('Translations');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var /** @type {?} */ TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\t\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _iterableDiffersFactory() {\n\t        return defaultIterableDiffers;\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _keyValueDiffersFactory() {\n\t        return defaultKeyValueDiffers;\n\t    }\n\t    /**\n\t     * @param {?=} locale\n\t     * @return {?}\n\t     */\n\t    function _localeFactory(locale) {\n\t        return locale || 'en-US';\n\t    }\n\t    /**\n\t     * This module includes the providers of \\@angular/core that are needed\n\t     * to bootstrap components via `ApplicationRef`.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var ApplicationModule = (function () {\n\t        function ApplicationModule() {\n\t        }\n\t        ApplicationModule.decorators = [\n\t            { type: NgModule, args: [{\n\t                        providers: [\n\t                            ApplicationRef_,\n\t                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n\t                            ApplicationInitStatus,\n\t                            Compiler,\n\t                            APP_ID_RANDOM_PROVIDER,\n\t                            ViewUtils,\n\t                            AnimationQueue,\n\t                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n\t                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n\t                            {\n\t                                provide: LOCALE_ID,\n\t                                useFactory: _localeFactory,\n\t                                deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n\t                            },\n\t                        ]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationModule.ctorParameters = function () { return []; };\n\t        return ApplicationModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n\t    var /** @type {?} */ ANY_STATE = '*';\n\t    var /** @type {?} */ DEFAULT_STATE = '*';\n\t    var /** @type {?} */ EMPTY_STATE = 'void';\n\t\n\t    var AnimationGroupPlayer = (function () {\n\t        /**\n\t         * @param {?} _players\n\t         */\n\t        function AnimationGroupPlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            var count = 0;\n\t            var total = this._players.length;\n\t            if (total == 0) {\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else {\n\t                this._players.forEach(function (player) {\n\t                    player.parentPlayer = _this;\n\t                    player.onDone(function () {\n\t                        if (++count >= total) {\n\t                            _this._onFinish();\n\t                        }\n\t                    });\n\t                });\n\t            }\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._players.forEach(function (player) { return player.play(); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._onFinish();\n\t                this._players.forEach(function (player) { return player.destroy(); });\n\t                this._destroyed = true;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.reset = function () {\n\t            this._players.forEach(function (player) { return player.reset(); });\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.setPosition = function (p) {\n\t            this._players.forEach(function (player) { player.setPosition(p); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.getPosition = function () {\n\t            var /** @type {?} */ min = 0;\n\t            this._players.forEach(function (player) {\n\t                var /** @type {?} */ p = player.getPosition();\n\t                min = Math.min(p, min);\n\t            });\n\t            return min;\n\t        };\n\t        Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._players; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationGroupPlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * `AnimationKeyframe` consists of a series of styles (contained within {\\@link AnimationStyles\n\t     * `AnimationStyles`})\n\t     * and an offset value indicating when those styles are applied within the `duration/delay/easing`\n\t     * timings.\n\t     * `AnimationKeyframe` is mostly an internal class which is designed to be used alongside {\\@link\n\t     * Renderer#animate-anchor `Renderer.animate`}.\n\t     *\n\t     * \\@experimental Animation support is experimental\n\t     */\n\t    var AnimationKeyframe = (function () {\n\t        /**\n\t         * @param {?} offset\n\t         * @param {?} styles\n\t         */\n\t        function AnimationKeyframe(offset, styles) {\n\t            this.offset = offset;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationKeyframe;\n\t    }());\n\t\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationPlayer = (function () {\n\t        function AnimationPlayer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.onDone = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.onStart = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.init = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.hasStarted = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.play = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.pause = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.restart = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.finish = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.destroy = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.reset = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.setPosition = function (p) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.getPosition = function () { };\n\t        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            /**\n\t             * @param {?} player\n\t             * @return {?}\n\t             */\n\t            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationPlayer;\n\t    }());\n\t    var NoOpAnimationPlayer = (function () {\n\t        function NoOpAnimationPlayer() {\n\t            var _this = this;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            scheduleMicroTask(function () { return _this._onFinish(); });\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype._onFinish = function () {\n\t            this._onDoneFns.forEach(function (fn) { return fn(); });\n\t            this._onDoneFns = [];\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.init = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.play = function () {\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t            }\n\t            this._started = true;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.pause = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.restart = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.destroy = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.reset = function () { };\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.setPosition = function (p) { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n\t        return NoOpAnimationPlayer;\n\t    }());\n\t\n\t    var AnimationSequencePlayer = (function () {\n\t        /**\n\t         * @param {?} _players\n\t         */\n\t        function AnimationSequencePlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._currentIndex = 0;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            this._players.forEach(function (player) { player.parentPlayer = _this; });\n\t            this._onNext(false);\n\t        }\n\t        /**\n\t         * @param {?} start\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype._onNext = function (start) {\n\t            var _this = this;\n\t            if (this._finished)\n\t                return;\n\t            if (this._players.length == 0) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else if (this._currentIndex >= this._players.length) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                this._onFinish();\n\t            }\n\t            else {\n\t                var /** @type {?} */ player = this._players[this._currentIndex++];\n\t                player.onDone(function () { return _this._onNext(true); });\n\t                this._activePlayer = player;\n\t                if (start) {\n\t                    player.play();\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._activePlayer.play();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.restart = function () {\n\t            this.reset();\n\t            if (this._players.length > 0) {\n\t                this._players[0].restart();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.reset = function () {\n\t            this._players.forEach(function (player) { return player.reset(); });\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._onFinish();\n\t                this._players.forEach(function (player) { return player.destroy(); });\n\t                this._destroyed = true;\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.setPosition = function (p) { this._players[0].setPosition(p); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n\t        Object.defineProperty(AnimationSequencePlayer.prototype, \"players\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._players; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationSequencePlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$13 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var /** @type {?} */ AUTO_STYLE = '*';\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link trigger trigger\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationEntryMetadata = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} definitions\n\t         */\n\t        function AnimationEntryMetadata(name, definitions) {\n\t            this.name = name;\n\t            this.definitions = definitions;\n\t        }\n\t        return AnimationEntryMetadata;\n\t    }());\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationStateMetadata = (function () {\n\t        function AnimationStateMetadata() {\n\t        }\n\t        return AnimationStateMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link state state animation\n\t     * function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateDeclarationMetadata = (function (_super) {\n\t        __extends$13(AnimationStateDeclarationMetadata, _super);\n\t        /**\n\t         * @param {?} stateNameExpr\n\t         * @param {?} styles\n\t         */\n\t        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n\t            _super.call(this);\n\t            this.stateNameExpr = stateNameExpr;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStateDeclarationMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the\n\t     * {\\@link transition transition animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateTransitionMetadata = (function (_super) {\n\t        __extends$13(AnimationStateTransitionMetadata, _super);\n\t        /**\n\t         * @param {?} stateChangeExpr\n\t         * @param {?} steps\n\t         */\n\t        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n\t            _super.call(this);\n\t            this.stateChangeExpr = stateChangeExpr;\n\t            this.steps = steps;\n\t        }\n\t        return AnimationStateTransitionMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationMetadata = (function () {\n\t        function AnimationMetadata() {\n\t        }\n\t        return AnimationMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link keyframes keyframes\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationKeyframesSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n\t        /**\n\t         * @param {?} steps\n\t         */\n\t        function AnimationKeyframesSequenceMetadata(steps) {\n\t            _super.call(this);\n\t            this.steps = steps;\n\t        }\n\t        return AnimationKeyframesSequenceMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link style style animation\n\t     * function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationStyleMetadata = (function (_super) {\n\t        __extends$13(AnimationStyleMetadata, _super);\n\t        /**\n\t         * @param {?} styles\n\t         * @param {?=} offset\n\t         */\n\t        function AnimationStyleMetadata(styles, offset) {\n\t            if (offset === void 0) { offset = null; }\n\t            _super.call(this);\n\t            this.styles = styles;\n\t            this.offset = offset;\n\t        }\n\t        return AnimationStyleMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link animate animate\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationAnimateMetadata = (function (_super) {\n\t        __extends$13(AnimationAnimateMetadata, _super);\n\t        /**\n\t         * @param {?} timings\n\t         * @param {?} styles\n\t         */\n\t        function AnimationAnimateMetadata(timings, styles) {\n\t            _super.call(this);\n\t            this.timings = timings;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationAnimateMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationWithStepsMetadata = (function (_super) {\n\t        __extends$13(AnimationWithStepsMetadata, _super);\n\t        function AnimationWithStepsMetadata() {\n\t            _super.call(this);\n\t        }\n\t        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationWithStepsMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link sequence sequence\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationSequenceMetadata, _super);\n\t        /**\n\t         * @param {?} _steps\n\t         */\n\t        function AnimationSequenceMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationSequenceMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link group group animation\n\t     * function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationGroupMetadata = (function (_super) {\n\t        __extends$13(AnimationGroupMetadata, _super);\n\t        /**\n\t         * @param {?} _steps\n\t         */\n\t        function AnimationGroupMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationGroupMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n\t     * amount of\n\t     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n\t     * used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link transition\n\t     * transition}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `animate` function accepts two input parameters: `timing` and `styles`:\n\t     *\n\t     * - `timing` is a string based value that can be a combination of a duration with optional\n\t     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n\t     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n\t     * delay=100, easing=ease-out`.\n\t     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n\t     * form.\n\t     * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n\t     * keyframes keyframes}.\n\t     * If left empty then the styles from the destination state will be collected and used (this is\n\t     * useful when\n\t     * describing an animation step that will complete an animation by {\\@link\n\t     * transition#the-final-animate-call animating to the final state}).\n\t     *\n\t     * ```typescript\n\t     * // various functions for specifying timing data\n\t     * animate(500, style(...))\n\t     * animate(\"1s\", style(...))\n\t     * animate(\"100ms 0.5s\", style(...))\n\t     * animate(\"5s ease\", style(...))\n\t     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n\t     *\n\t     * // either style() of keyframes() can be used\n\t     * animate(500, style({ background: \"red\" }))\n\t     * animate(500, keyframes([\n\t     *   style({ background: \"blue\" })),\n\t     *   style({ background: \"red\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} timing\n\t     * @param {?=} styles\n\t     * @return {?}\n\t     */\n\t    function animate(timing, styles) {\n\t        if (styles === void 0) { styles = null; }\n\t        var /** @type {?} */ stylesEntry = styles;\n\t        if (!isPresent(stylesEntry)) {\n\t            var /** @type {?} */ EMPTY_STYLE = {};\n\t            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n\t        }\n\t        return new AnimationAnimateMetadata(timing, stylesEntry);\n\t    }\n\t    /**\n\t     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n\t     * are useful when a series of styles must be animated/closed off\n\t     * at different statrting/ending times.\n\t     *\n\t     * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once all of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `group` animation function can either consist\n\t     * of {\\@link style style} or {\\@link animate animate} function calls. Each call to `style()` or\n\t     * `animate()`\n\t     * within a group will be executed instantly (use {\\@link keyframes keyframes} or a\n\t     * {\\@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n\t     * time).\n\t     *\n\t     * ```typescript\n\t     * group([\n\t     *   animate(\"1s\", { background: \"black\" }))\n\t     *   animate(\"2s\", { color: \"white\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function group(steps) {\n\t        return new AnimationGroupMetadata(steps);\n\t    }\n\t    /**\n\t     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n\t     * by default when an array is passed as animation data into {\\@link transition transition}.)\n\t     *\n\t     * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once each of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * To perform animation styling in parallel with other animation steps then\n\t     * have a look at the {\\@link group group} animation function.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `sequence` animation function can either consist\n\t     * of {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply\n\t     * the\n\t     * provided styling data immediately while a call to `animate()` will apply its styling\n\t     * data over a given time depending on its timing data.\n\t     *\n\t     * ```typescript\n\t     * sequence([\n\t     *   style({ opacity: 0 })),\n\t     *   animate(\"1s\", { opacity: 1 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function sequence(steps) {\n\t        return new AnimationSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `style` declares a key/value object containing CSS properties/styles that can then\n\t     * be used for {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as\n\t     * styling data for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n\t     * pairs to be defined.\n\t     *\n\t     * ```typescript\n\t     * // string values are used for css properties\n\t     * style({ background: \"red\", color: \"blue\" })\n\t     *\n\t     * // numerical (pixel) values are also supported\n\t     * style({ width: 100, height: 0 })\n\t     * ```\n\t     *\n\t     * #### Auto-styles (using `*`)\n\t     *\n\t     * When an asterix (`*`) character is used as a value then it will be detected from the element\n\t     * being animated\n\t     * and applied as animation data when the animation starts.\n\t     *\n\t     * This feature proves useful for a state depending on layout and/or environment factors; in such\n\t     * cases\n\t     * the styles are calculated just before the animation starts.\n\t     *\n\t     * ```typescript\n\t     * // the steps below will animate from 0 to the\n\t     * // actual height of the element\n\t     * style({ height: 0 }),\n\t     * animate(\"1s\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} tokens\n\t     * @return {?}\n\t     */\n\t    function style(tokens) {\n\t        var /** @type {?} */ input;\n\t        var /** @type {?} */ offset = null;\n\t        if (typeof tokens === 'string') {\n\t            input = [(tokens)];\n\t        }\n\t        else {\n\t            if (Array.isArray(tokens)) {\n\t                input = (tokens);\n\t            }\n\t            else {\n\t                input = [(tokens)];\n\t            }\n\t            input.forEach(function (entry) {\n\t                var /** @type {?} */ entryOffset = ((entry) /** TODO #9100 */)['offset'];\n\t                if (isPresent(entryOffset)) {\n\t                    offset = offset == null ? parseFloat(entryOffset) : offset;\n\t                }\n\t            });\n\t        }\n\t        return new AnimationStyleMetadata(input, offset);\n\t    }\n\t    /**\n\t     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `state` declares an animation state within the given trigger. When a state is\n\t     * active within a component then its associated styles will persist on\n\t     * the element that the trigger is attached to (even when the animation ends).\n\t     *\n\t     * To animate between states, have a look at the animation {\\@link transition transition}\n\t     * DSL function. To register states to an animation trigger please have a look\n\t     * at the {\\@link trigger trigger} function.\n\t     *\n\t     * #### The `void` state\n\t     *\n\t     * The `void` state value is a reserved word that angular uses to determine when the element is not\n\t     * apart\n\t     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n\t     * associated element\n\t     * is void).\n\t     *\n\t     * #### The `*` (default) state\n\t     *\n\t     * The `*` state (when styled) is a fallback state that will be used if\n\t     * the state that is being animated is not declared within the trigger.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `state` will declare an animation state with its associated styles\n\t     * within the given trigger.\n\t     *\n\t     * - `stateNameExpr` can be one or more state names separated by commas.\n\t     * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n\t     * the state\n\t     * has been reached.\n\t     *\n\t     * ```typescript\n\t     * // \"void\" is a reserved name for a state and is used to represent\n\t     * // the state in which an element is detached from from the application.\n\t     * state(\"void\", style({ height: 0 }))\n\t     *\n\t     * // user-defined states\n\t     * state(\"closed\", style({ height: 0 }))\n\t     * state(\"open, visible\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} stateNameExpr\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function state(stateNameExpr, styles) {\n\t        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n\t    }\n\t    /**\n\t     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n\t     * by an `offset` value.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n\t     * animation function. Instead of applying animations from where they are\n\t     * currently to their destination, keyframes can describe how each style entry is applied\n\t     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n\t     *\n\t     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n\t     * what percentage of the animate time the styles will be applied.\n\t     *\n\t     * ```typescript\n\t     * // the provided offset values describe when each backgroundColor value is applied.\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\", offset: 0 }),\n\t     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n\t     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n\t     *   style({ backgroundColor: \"black\", offset: 1 })\n\t     * ]))\n\t     * ```\n\t     *\n\t     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n\t     * will\n\t     * be calculated automatically.\n\t     *\n\t     * ```typescript\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\" }) // offset = 0\n\t     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n\t     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n\t     *   style({ backgroundColor: \"black\" }) // offset = 1\n\t     * ]))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function keyframes(steps) {\n\t        return new AnimationKeyframesSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n\t     * provided\n\t     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n\t     * which consists\n\t     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n\t     *\n\t     * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n\t     * to animate to\n\t     * a state value and persist its styles then one or more {\\@link state animation states} is expected\n\t     * to be defined.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n\t     * what the\n\t     * previous state is and what the current state has become. In other words, if a transition is\n\t     * defined that\n\t     * matches the old/current state criteria then the associated animation will be triggered.\n\t     *\n\t     * ```typescript\n\t     * // all transition/state changes are defined within an animation trigger\n\t     * trigger(\"myAnimationTrigger\", [\n\t     *   // if a state is defined then its styles will be persisted when the\n\t     *   // animation has fully completed itself\n\t     *   state(\"on\", style({ background: \"green\" })),\n\t     *   state(\"off\", style({ background: \"grey\" })),\n\t     *\n\t     *   // a transition animation that will be kicked off when the state value\n\t     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n\t     *   transition(\"on => off\", animate(500)),\n\t     *\n\t     *   // it is also possible to do run the same animation for both directions\n\t     *   transition(\"on <=> off\", animate(500)),\n\t     *\n\t     *   // or to define multiple states pairs separated by commas\n\t     *   transition(\"on => off, off => void\", animate(500)),\n\t     *\n\t     *   // this is a catch-all state change for when an element is inserted into\n\t     *   // the page and the destination state is unknown\n\t     *   transition(\"void => *\", [\n\t     *     style({ opacity: 0 }),\n\t     *     animate(500)\n\t     *   ]),\n\t     *\n\t     *   // this will capture a state change between any states\n\t     *   transition(\"* => *\", animate(\"1s 0s\")),\n\t     * ])\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * #### The final `animate` call\n\t     *\n\t     * If the final step within the transition steps is a call to `animate()` that **only**\n\t     * uses a timing value with **no style data** then it will be automatically used as the final\n\t     * animation\n\t     * arc for the element to animate itself to the final state. This involves an automatic mix of\n\t     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n\t     * applied state to be presented correctly.\n\t     *\n\t     * ```\n\t     * // start off by hiding the element, but make sure that it animates properly to whatever state\n\t     * // is currently active for \"myAnimationTrigger\"\n\t     * transition(\"void => *\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500)\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Transition Aliases (`:enter` and `:leave`)\n\t     *\n\t     * Given that enter (insertion) and leave (removal) animations are so common,\n\t     * the `transition` function accepts both `:enter` and `:leave` values which\n\t     * are aliases for the `void => *` and `* => void` state changes.\n\t     *\n\t     * ```\n\t     * transition(\":enter\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500, style({ opacity: 1 }))\n\t     * ])\n\t     * transition(\":leave\", [\n\t     *   animate(500, style({ opacity: 0 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} stateChangeExpr\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function transition(stateChangeExpr, steps) {\n\t        var /** @type {?} */ animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n\t        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n\t    }\n\t    /**\n\t     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n\t     * transition transition}\n\t     * entries that will be evaluated when the expression bound to the trigger changes.\n\t     *\n\t     * Triggers are registered within the component annotation data under the\n\t     * {\\@link Component#animations-anchor animations section}. An animation trigger can\n\t     * be placed on an element within a template by referencing the name of the\n\t     * trigger followed by the expression value that the trigger is bound to\n\t     * (in the form of `[\\@triggerName]=\"expression\"`.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `trigger` will create an animation trigger reference based on the provided `name` value.\n\t     * The provided `animation` value is expected to be an array consisting of {\\@link state state} and\n\t     * {\\@link transition transition}\n\t     * declarations.\n\t     *\n\t     * ```typescript\n\t     * \\@Component({\n\t     *   selector: 'my-component',\n\t     *   templateUrl: 'my-component-tpl.html',\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *       state(...),\n\t     *       state(...),\n\t     *       transition(...),\n\t     *       transition(...)\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   myStatusExp = \"something\";\n\t     * }\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} name\n\t     * @param {?} animation\n\t     * @return {?}\n\t     */\n\t    function trigger(name, animation) {\n\t        return new AnimationEntryMetadata(name, animation);\n\t    }\n\t\n\t    /**\n\t     * @param {?} previousStyles\n\t     * @param {?} newStyles\n\t     * @param {?=} nullValue\n\t     * @return {?}\n\t     */\n\t    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n\t        if (nullValue === void 0) { nullValue = null; }\n\t        var /** @type {?} */ finalStyles = {};\n\t        Object.keys(newStyles).forEach(function (prop) {\n\t            var /** @type {?} */ value = newStyles[prop];\n\t            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n\t        });\n\t        Object.keys(previousStyles).forEach(function (prop) {\n\t            if (!isPresent(finalStyles[prop])) {\n\t                finalStyles[prop] = nullValue;\n\t            }\n\t        });\n\t        return finalStyles;\n\t    }\n\t    /**\n\t     * @param {?} collectedStyles\n\t     * @param {?} finalStateStyles\n\t     * @param {?} keyframes\n\t     * @return {?}\n\t     */\n\t    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n\t        var /** @type {?} */ limit = keyframes.length - 1;\n\t        var /** @type {?} */ firstKeyframe = keyframes[0];\n\t        // phase 1: copy all the styles from the first keyframe into the lookup map\n\t        var /** @type {?} */ flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n\t        var /** @type {?} */ extraFirstKeyframeStyles = {};\n\t        var /** @type {?} */ hasExtraFirstStyles = false;\n\t        Object.keys(collectedStyles).forEach(function (prop) {\n\t            var /** @type {?} */ value = (collectedStyles[prop]);\n\t            // if the style is already defined in the first keyframe then\n\t            // we do not replace it.\n\t            if (!flatenedFirstKeyframeStyles[prop]) {\n\t                flatenedFirstKeyframeStyles[prop] = value;\n\t                extraFirstKeyframeStyles[prop] = value;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        var /** @type {?} */ keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n\t        // phase 2: normalize the final keyframe\n\t        var /** @type {?} */ finalKeyframe = keyframes[limit];\n\t        finalKeyframe.styles.styles.unshift(finalStateStyles);\n\t        var /** @type {?} */ flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n\t        var /** @type {?} */ extraFinalKeyframeStyles = {};\n\t        var /** @type {?} */ hasExtraFinalStyles = false;\n\t        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n\t                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFinalStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFinalStyles) {\n\t            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n\t        }\n\t        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n\t                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFirstStyles) {\n\t            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n\t        }\n\t        collectAndResolveStyles(collectedStyles, [finalStateStyles]);\n\t        return keyframes;\n\t    }\n\t    /**\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function clearStyles(styles) {\n\t        var /** @type {?} */ finalStyles = {};\n\t        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n\t        return finalStyles;\n\t    }\n\t    /**\n\t     * @param {?} collection\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function collectAndResolveStyles(collection, styles) {\n\t        return styles.map(function (entry) {\n\t            var /** @type {?} */ stylesObj = {};\n\t            Object.keys(entry).forEach(function (prop) {\n\t                var /** @type {?} */ value = entry[prop];\n\t                if (value == FILL_STYLE_FLAG) {\n\t                    value = collection[prop];\n\t                    if (!isPresent(value)) {\n\t                        value = AUTO_STYLE;\n\t                    }\n\t                }\n\t                collection[prop] = value;\n\t                stylesObj[prop] = value;\n\t            });\n\t            return stylesObj;\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} element\n\t     * @param {?} renderer\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function renderStyles(element, renderer, styles) {\n\t        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n\t    }\n\t    /**\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function flattenStyles(styles) {\n\t        var /** @type {?} */ finalStyles = {};\n\t        styles.forEach(function (entry) {\n\t            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = (entry[prop]); });\n\t        });\n\t        return finalStyles;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * `AnimationStyles` consists of a collection of key/value maps containing CSS-based style data\n\t     * that can either be used as initial styling data or apart of a series of keyframes within an\n\t     * animation.\n\t     * This class is mostly internal, and it is designed to be used alongside\n\t     * {\\@link AnimationKeyframe `AnimationKeyframe`} and {\\@link Renderer#animate-anchor\n\t     * `Renderer.animate`}.\n\t     *\n\t     * \\@experimental Animation support is experimental\n\t     */\n\t    var AnimationStyles = (function () {\n\t        /**\n\t         * @param {?} styles\n\t         */\n\t        function AnimationStyles(styles) {\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStyles;\n\t    }());\n\t\n\t    /**\n\t     * An instance of this class is returned as an event parameter when an animation\n\t     * callback is captured for an animation either during the start or done phase.\n\t     *\n\t     * ```typescript\n\t     * \\@Component({\n\t     *   host: {\n\t     *     '[\\@myAnimationTrigger]': 'someExpression',\n\t     *     '(\\@myAnimationTrigger.start)': 'captureStartEvent($event)',\n\t     *     '(\\@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n\t     *   },\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *        // ...\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   someExpression: any = false;\n\t     *   captureStartEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     *\n\t     *   captureDoneEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationTransitionEvent = (function () {\n\t        /**\n\t         * @param {?} __0\n\t         */\n\t        function AnimationTransitionEvent(_a) {\n\t            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n\t            this.fromState = fromState;\n\t            this.toState = toState;\n\t            this.totalTime = totalTime;\n\t            this.phaseName = phaseName;\n\t        }\n\t        return AnimationTransitionEvent;\n\t    }());\n\t\n\t    var AnimationTransition = (function () {\n\t        /**\n\t         * @param {?} _player\n\t         * @param {?} _fromState\n\t         * @param {?} _toState\n\t         * @param {?} _totalTime\n\t         */\n\t        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n\t            this._player = _player;\n\t            this._fromState = _fromState;\n\t            this._toState = _toState;\n\t            this._totalTime = _totalTime;\n\t        }\n\t        /**\n\t         * @param {?} phaseName\n\t         * @return {?}\n\t         */\n\t        AnimationTransition.prototype._createEvent = function (phaseName) {\n\t            return new AnimationTransitionEvent({\n\t                fromState: this._fromState,\n\t                toState: this._toState,\n\t                totalTime: this._totalTime,\n\t                phaseName: phaseName\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        AnimationTransition.prototype.onStart = function (callback) {\n\t            var _this = this;\n\t            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('start')); }, 'player.onStart'));\n\t            this._player.onStart(fn);\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        AnimationTransition.prototype.onDone = function (callback) {\n\t            var _this = this;\n\t            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('done')); }, 'player.onDone'));\n\t            this._player.onDone(fn);\n\t        };\n\t        return AnimationTransition;\n\t    }());\n\t\n\t    var DebugDomRootRenderer = (function () {\n\t        /**\n\t         * @param {?} _delegate\n\t         */\n\t        function DebugDomRootRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        /**\n\t         * @param {?} componentProto\n\t         * @return {?}\n\t         */\n\t        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n\t        };\n\t        return DebugDomRootRenderer;\n\t    }());\n\t    var DebugDomRenderer = (function () {\n\t        /**\n\t         * @param {?} _delegate\n\t         */\n\t        function DebugDomRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        /**\n\t         * @param {?} selectorOrNode\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var /** @type {?} */ nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugElement(nativeEl, null, debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} name\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n\t            var /** @type {?} */ nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n\t            debugEl.name = name;\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var /** @type {?} */ comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return comment;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} value\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var /** @type {?} */ text = this._delegate.createText(parentElement, value, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return text;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            var /** @type {?} */ debugParent = getDebugNode(parentElement);\n\t            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n\t                var /** @type {?} */ debugElement_1 = debugParent;\n\t                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n\t            }\n\t            this._delegate.projectNodes(parentElement, nodes);\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n\t            var /** @type {?} */ debugNode = getDebugNode(node);\n\t            if (isPresent(debugNode)) {\n\t                var /** @type {?} */ debugParent = debugNode.parent;\n\t                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n\t                    var /** @type {?} */ debugViewRootNodes_1 = [];\n\t                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes_1.push(getDebugNode(rootNode)); });\n\t                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes_1);\n\t                }\n\t            }\n\t            this._delegate.attachViewAfter(node, viewRootNodes);\n\t        };\n\t        /**\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            viewRootNodes.forEach(function (node) {\n\t                var /** @type {?} */ debugNode = getDebugNode(node);\n\t                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n\t                    debugNode.parent.removeChild(debugNode);\n\t                }\n\t            });\n\t            this._delegate.detachView(viewRootNodes);\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @param {?} viewAllNodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            viewAllNodes = viewAllNodes || [];\n\t            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n\t            this._delegate.destroyView(hostElement, viewAllNodes);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl)) {\n\t                debugEl.listeners.push(new EventListener(name, callback));\n\t            }\n\t            return this._delegate.listen(renderElement, name, callback);\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._delegate.listenGlobal(target, name, callback);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.properties[propertyName] = propertyValue;\n\t            }\n\t            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} attributeName\n\t         * @param {?} attributeValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.attributes[attributeName] = attributeValue;\n\t            }\n\t            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} className\n\t         * @param {?} isAdd\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.classes[className] = isAdd;\n\t            }\n\t            this._delegate.setElementClass(renderElement, className, isAdd);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.styles[styleName] = styleValue;\n\t            }\n\t            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} methodName\n\t         * @param {?=} args\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            this._delegate.invokeElementMethod(renderElement, methodName, args);\n\t        };\n\t        /**\n\t         * @param {?} renderNode\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n\t        };\n\t        return DebugDomRenderer;\n\t    }());\n\t\n\t    var ViewType = {};\n\t    ViewType.HOST = 0;\n\t    ViewType.COMPONENT = 1;\n\t    ViewType.EMBEDDED = 2;\n\t    ViewType[ViewType.HOST] = \"HOST\";\n\t    ViewType[ViewType.COMPONENT] = \"COMPONENT\";\n\t    ViewType[ViewType.EMBEDDED] = \"EMBEDDED\";\n\t\n\t    var StaticNodeDebugInfo = (function () {\n\t        /**\n\t         * @param {?} providerTokens\n\t         * @param {?} componentToken\n\t         * @param {?} refTokens\n\t         */\n\t        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n\t            this.providerTokens = providerTokens;\n\t            this.componentToken = componentToken;\n\t            this.refTokens = refTokens;\n\t        }\n\t        return StaticNodeDebugInfo;\n\t    }());\n\t    var DebugContext = (function () {\n\t        /**\n\t         * @param {?} _view\n\t         * @param {?} _nodeIndex\n\t         * @param {?} _tplRow\n\t         * @param {?} _tplCol\n\t         */\n\t        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._tplRow = _tplRow;\n\t            this._tplCol = _tplCol;\n\t        }\n\t        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"context\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"component\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n\t                    return this.injector.get(staticNodeInfo.componentToken);\n\t                }\n\t                return null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ componentView = this._view;\n\t                while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n\t                    componentView = (componentView.parentView);\n\t                }\n\t                return componentView.parentElement;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.injector(this._nodeIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n\t                    return this._view.allNodes[this._nodeIndex];\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n\t                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"source\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"references\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var _this = this;\n\t                var /** @type {?} */ varValues = {};\n\t                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo)) {\n\t                    var /** @type {?} */ refs_1 = staticNodeInfo.refTokens;\n\t                    Object.keys(refs_1).forEach(function (refName) {\n\t                        var /** @type {?} */ refToken = refs_1[refName];\n\t                        var /** @type {?} */ varValue;\n\t                        if (isBlank(refToken)) {\n\t                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n\t                        }\n\t                        else {\n\t                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n\t                        }\n\t                        varValues[refName] = varValue;\n\t                    });\n\t                }\n\t                return varValues;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugContext;\n\t    }());\n\t\n\t    var ViewAnimationMap = (function () {\n\t        function ViewAnimationMap() {\n\t            this._map = new Map();\n\t            this._allPlayers = [];\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.find = function (element, animationName) {\n\t            var /** @type {?} */ playersByAnimation = this._map.get(element);\n\t            if (isPresent(playersByAnimation)) {\n\t                return playersByAnimation[animationName];\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n\t            var /** @type {?} */ el = this._map.get(element);\n\t            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @param {?} player\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n\t            var /** @type {?} */ playersByAnimation = this._map.get(element);\n\t            if (!isPresent(playersByAnimation)) {\n\t                playersByAnimation = {};\n\t            }\n\t            var /** @type {?} */ existingEntry = playersByAnimation[animationName];\n\t            if (isPresent(existingEntry)) {\n\t                this.remove(element, animationName);\n\t            }\n\t            playersByAnimation[animationName] = player;\n\t            this._allPlayers.push(player);\n\t            this._map.set(element, playersByAnimation);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @param {?=} targetPlayer\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.remove = function (element, animationName, targetPlayer) {\n\t            if (targetPlayer === void 0) { targetPlayer = null; }\n\t            var /** @type {?} */ playersByAnimation = this._map.get(element);\n\t            if (playersByAnimation) {\n\t                var /** @type {?} */ player = playersByAnimation[animationName];\n\t                if (!targetPlayer || player === targetPlayer) {\n\t                    delete playersByAnimation[animationName];\n\t                    var /** @type {?} */ index = this._allPlayers.indexOf(player);\n\t                    this._allPlayers.splice(index, 1);\n\t                    if (Object.keys(playersByAnimation).length === 0) {\n\t                        this._map.delete(element);\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        return ViewAnimationMap;\n\t    }());\n\t\n\t    var AnimationViewContext = (function () {\n\t        /**\n\t         * @param {?} _animationQueue\n\t         */\n\t        function AnimationViewContext(_animationQueue) {\n\t            this._animationQueue = _animationQueue;\n\t            this._players = new ViewAnimationMap();\n\t        }\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n\t            var /** @type {?} */ activeAnimationPlayers = this._players.getAllPlayers();\n\t            // we check for the length to avoid having GroupAnimationPlayer\n\t            // issue an unnecessary microtask when zero players are passed in\n\t            if (activeAnimationPlayers.length) {\n\t                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n\t            }\n\t            else {\n\t                callback();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @param {?} player\n\t         * @return {?}\n\t         */\n\t        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n\t            var _this = this;\n\t            this._animationQueue.enqueue(player);\n\t            this._players.set(element, animationName, player);\n\t            player.onDone(function () { return _this._players.remove(element, animationName, player); });\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?=} animationName\n\t         * @return {?}\n\t         */\n\t        AnimationViewContext.prototype.getAnimationPlayers = function (element, animationName) {\n\t            if (animationName === void 0) { animationName = null; }\n\t            var /** @type {?} */ players = [];\n\t            if (animationName) {\n\t                var /** @type {?} */ currentPlayer = this._players.find(element, animationName);\n\t                if (currentPlayer) {\n\t                    _recursePlayers(currentPlayer, players);\n\t                }\n\t            }\n\t            else {\n\t                this._players.findAllPlayersByElement(element).forEach(function (player) { return _recursePlayers(player, players); });\n\t            }\n\t            return players;\n\t        };\n\t        return AnimationViewContext;\n\t    }());\n\t    /**\n\t     * @param {?} player\n\t     * @param {?} collectedPlayers\n\t     * @return {?}\n\t     */\n\t    function _recursePlayers(player, collectedPlayers) {\n\t        if ((player instanceof AnimationGroupPlayer) || (player instanceof AnimationSequencePlayer)) {\n\t            player.players.forEach(function (player) { return _recursePlayers(player, collectedPlayers); });\n\t        }\n\t        else {\n\t            collectedPlayers.push(player);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$15 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var ElementInjector = (function (_super) {\n\t        __extends$15(ElementInjector, _super);\n\t        /**\n\t         * @param {?} _view\n\t         * @param {?} _nodeIndex\n\t         */\n\t        function ElementInjector(_view, _nodeIndex) {\n\t            _super.call(this);\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ElementInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n\t        };\n\t        return ElementInjector;\n\t    }(Injector));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$14 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n\t    /**\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ EMPTY_CONTEXT = new Object();\n\t    var /** @type {?} */ UNDEFINED$1 = new Object();\n\t    /**\n\t     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n\t     *\n\t     * @abstract\n\t     */\n\t    var AppView = (function () {\n\t        /**\n\t         * @param {?} clazz\n\t         * @param {?} componentType\n\t         * @param {?} type\n\t         * @param {?} viewUtils\n\t         * @param {?} parentView\n\t         * @param {?} parentIndex\n\t         * @param {?} parentElement\n\t         * @param {?} cdMode\n\t         * @param {?=} declaredViewContainer\n\t         */\n\t        function AppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentElement, cdMode, declaredViewContainer) {\n\t            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n\t            this.clazz = clazz;\n\t            this.componentType = componentType;\n\t            this.type = type;\n\t            this.viewUtils = viewUtils;\n\t            this.parentView = parentView;\n\t            this.parentIndex = parentIndex;\n\t            this.parentElement = parentElement;\n\t            this.cdMode = cdMode;\n\t            this.declaredViewContainer = declaredViewContainer;\n\t            this.numberOfChecks = 0;\n\t            this.ref = new ViewRef_(this, viewUtils.animationQueue);\n\t            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n\t                this.renderer = viewUtils.renderComponent(componentType);\n\t            }\n\t            else {\n\t                this.renderer = parentView.renderer;\n\t            }\n\t            this._directRenderer = this.renderer.directRenderer;\n\t        }\n\t        Object.defineProperty(AppView.prototype, \"animationContext\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                if (!this._animationContext) {\n\t                    this._animationContext = new AnimationViewContext(this.viewUtils.animationQueue);\n\t                }\n\t                return this._animationContext;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"destroyed\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.create = function (context) {\n\t            this.context = context;\n\t            return this.createInternal(null);\n\t        };\n\t        /**\n\t         * @param {?} rootSelectorOrNode\n\t         * @param {?} hostInjector\n\t         * @param {?} projectableNodes\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.createHostView = function (rootSelectorOrNode, hostInjector, projectableNodes) {\n\t            this.context = (EMPTY_CONTEXT);\n\t            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n\t            this._hostInjector = hostInjector;\n\t            this._hostProjectableNodes = projectableNodes;\n\t            return this.createInternal(rootSelectorOrNode);\n\t        };\n\t        /**\n\t         * Overwritten by implementations.\n\t         * Returns the ComponentRef for the host element for ViewType.HOST.\n\t         * @param {?} rootSelectorOrNode\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n\t        /**\n\t         * Overwritten by implementations.\n\t         * @param {?} templateNodeIndex\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.createEmbeddedViewInternal = function (templateNodeIndex) { return null; };\n\t        /**\n\t         * @param {?} lastRootNode\n\t         * @param {?} allNodes\n\t         * @param {?} disposables\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.init = function (lastRootNode, allNodes, disposables) {\n\t            this.lastRootNode = lastRootNode;\n\t            this.allNodes = allNodes;\n\t            this.disposables = disposables;\n\t            if (this.type === ViewType.COMPONENT) {\n\t                this.dirtyParentQueriesInternal();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} token\n\t         * @param {?} nodeIndex\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            var /** @type {?} */ result = UNDEFINED$1;\n\t            var /** @type {?} */ view = this;\n\t            while (result === UNDEFINED$1) {\n\t                if (isPresent(nodeIndex)) {\n\t                    result = view.injectorGetInternal(token, nodeIndex, UNDEFINED$1);\n\t                }\n\t                if (result === UNDEFINED$1 && view.type === ViewType.HOST) {\n\t                    result = view._hostInjector.get(token, notFoundValue);\n\t                }\n\t                nodeIndex = view.parentIndex;\n\t                view = view.parentView;\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} token\n\t         * @param {?} nodeIndex\n\t         * @param {?} notFoundResult\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n\t            return notFoundResult;\n\t        };\n\t        /**\n\t         * @param {?} nodeIndex\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.injector = function (nodeIndex) { return new ElementInjector(this, nodeIndex); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detachAndDestroy = function () {\n\t            if (this.viewContainer) {\n\t                this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n\t            }\n\t            else if (this.appRef) {\n\t                this.appRef.detachView(this.ref);\n\t            }\n\t            else if (this._hasExternalHostElement) {\n\t                this.detach();\n\t            }\n\t            this.destroy();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.destroy = function () {\n\t            var _this = this;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                return;\n\t            }\n\t            var /** @type {?} */ hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n\t            if (this.disposables) {\n\t                for (var /** @type {?} */ i = 0; i < this.disposables.length; i++) {\n\t                    this.disposables[i]();\n\t                }\n\t            }\n\t            this.destroyInternal();\n\t            this.dirtyParentQueriesInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n\t            }\n\t            else {\n\t                this.renderer.destroyView(hostElement, this.allNodes);\n\t            }\n\t            this.cdMode = ChangeDetectorStatus.Destroyed;\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.destroyInternal = function () { };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detachInternal = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detach = function () {\n\t            var _this = this;\n\t            this.detachInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this._renderDetach(); });\n\t            }\n\t            else {\n\t                this._renderDetach();\n\t            }\n\t            if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer &&\n\t                this.declaredViewContainer.projectedViews) {\n\t                var /** @type {?} */ projectedViews = this.declaredViewContainer.projectedViews;\n\t                var /** @type {?} */ index = projectedViews.indexOf(this);\n\t                // perf: pop is faster than splice!\n\t                if (index >= projectedViews.length - 1) {\n\t                    projectedViews.pop();\n\t                }\n\t                else {\n\t                    projectedViews.splice(index, 1);\n\t                }\n\t            }\n\t            this.appRef = null;\n\t            this.viewContainer = null;\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype._renderDetach = function () {\n\t            if (this._directRenderer) {\n\t                this.visitRootNodesInternal(this._directRenderer.remove, null);\n\t            }\n\t            else {\n\t                this.renderer.detachView(this.flatRootNodes);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} appRef\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.attachToAppRef = function (appRef) {\n\t            if (this.viewContainer) {\n\t                throw new Error('This view is already attached to a ViewContainer!');\n\t            }\n\t            this.appRef = appRef;\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} prevView\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.attachAfter = function (viewContainer, prevView) {\n\t            if (this.appRef) {\n\t                throw new Error('This view is already attached directly to the ApplicationRef!');\n\t            }\n\t            this._renderAttach(viewContainer, prevView);\n\t            this.viewContainer = viewContainer;\n\t            if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n\t                if (!this.declaredViewContainer.projectedViews) {\n\t                    this.declaredViewContainer.projectedViews = [];\n\t                }\n\t                this.declaredViewContainer.projectedViews.push(this);\n\t            }\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} prevView\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.moveAfter = function (viewContainer, prevView) {\n\t            this._renderAttach(viewContainer, prevView);\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} prevView\n\t         * @return {?}\n\t         */\n\t        AppView.prototype._renderAttach = function (viewContainer, prevView) {\n\t            var /** @type {?} */ prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n\t            if (this._directRenderer) {\n\t                var /** @type {?} */ nextSibling = this._directRenderer.nextSibling(prevNode);\n\t                if (nextSibling) {\n\t                    this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n\t                }\n\t                else {\n\t                    var /** @type {?} */ parentElement = this._directRenderer.parentElement(prevNode);\n\t                    if (parentElement) {\n\t                        this.visitRootNodesInternal(this._directRenderer.appendChild, parentElement);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n\t            }\n\t        };\n\t        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ nodes = [];\n\t                this.visitRootNodesInternal(addToArray, nodes);\n\t                return nodes;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} ngContentIndex\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.projectNodes = function (parentElement, ngContentIndex) {\n\t            if (this._directRenderer) {\n\t                this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n\t            }\n\t            else {\n\t                var /** @type {?} */ nodes = [];\n\t                this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n\t                this.renderer.projectNodes(parentElement, nodes);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} ngContentIndex\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.visitProjectedNodes = function (ngContentIndex, cb, c) {\n\t            switch (this.type) {\n\t                case ViewType.EMBEDDED:\n\t                    this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n\t                    break;\n\t                case ViewType.COMPONENT:\n\t                    if (this.parentView.type === ViewType.HOST) {\n\t                        var /** @type {?} */ nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n\t                        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t                            cb(nodes[i], c);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n\t                    }\n\t                    break;\n\t            }\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.visitRootNodesInternal = function (cb, c) { };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} nodeIndex\n\t         * @param {?} ngContentIndex\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, c) { };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.dirtyParentQueriesInternal = function () { };\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.internalDetectChanges = function (throwOnChange) {\n\t            if (this.cdMode !== ChangeDetectorStatus.Detached) {\n\t                this.detectChanges(throwOnChange);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detectChanges = function (throwOnChange) {\n\t            var /** @type {?} */ s = _scope_check(this.clazz);\n\t            if (this.cdMode === ChangeDetectorStatus.Checked ||\n\t                this.cdMode === ChangeDetectorStatus.Errored)\n\t                return;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                this.throwDestroyedError('detectChanges');\n\t            }\n\t            this.detectChangesInternal(throwOnChange);\n\t            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n\t                this.cdMode = ChangeDetectorStatus.Checked;\n\t            this.numberOfChecks++;\n\t            wtfLeave(s);\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detectChangesInternal = function (throwOnChange) { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.markPathToRootAsCheckOnce = function () {\n\t            var /** @type {?} */ c = this;\n\t            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n\t                if (c.cdMode === ChangeDetectorStatus.Checked) {\n\t                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n\t                }\n\t                if (c.type === ViewType.COMPONENT) {\n\t                    c = c.parentView;\n\t                }\n\t                else {\n\t                    c = c.viewContainer ? c.viewContainer.parentView : null;\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.eventHandler = function (cb) {\n\t            return cb;\n\t        };\n\t        /**\n\t         * @param {?} details\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n\t        return AppView;\n\t    }());\n\t    var DebugAppView = (function (_super) {\n\t        __extends$14(DebugAppView, _super);\n\t        /**\n\t         * @param {?} clazz\n\t         * @param {?} componentType\n\t         * @param {?} type\n\t         * @param {?} viewUtils\n\t         * @param {?} parentView\n\t         * @param {?} parentIndex\n\t         * @param {?} parentNode\n\t         * @param {?} cdMode\n\t         * @param {?} staticNodeDebugInfos\n\t         * @param {?=} declaredViewContainer\n\t         */\n\t        function DebugAppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, staticNodeDebugInfos, declaredViewContainer) {\n\t            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n\t            _super.call(this, clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, declaredViewContainer);\n\t            this.staticNodeDebugInfos = staticNodeDebugInfos;\n\t            this._currentDebugContext = null;\n\t        }\n\t        /**\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.create = function (context) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.create.call(this, context);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} rootSelectorOrNode\n\t         * @param {?} injector\n\t         * @param {?=} projectableNodes\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.createHostView = function (rootSelectorOrNode, injector, projectableNodes) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.createHostView.call(this, rootSelectorOrNode, injector, projectableNodes);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} token\n\t         * @param {?} nodeIndex\n\t         * @param {?=} notFoundResult\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.detach = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detach.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.destroy = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.destroy.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detectChanges.call(this, throwOnChange);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n\t        /**\n\t         * @param {?} nodeIndex\n\t         * @param {?} rowNum\n\t         * @param {?} colNum\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n\t            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n\t        };\n\t        /**\n\t         * @param {?} e\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype._rethrowWithContext = function (e) {\n\t            if (!(e instanceof ViewWrappedError)) {\n\t                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n\t                    this.cdMode = ChangeDetectorStatus.Errored;\n\t                }\n\t                if (isPresent(this._currentDebugContext)) {\n\t                    throw new ViewWrappedError(e, this._currentDebugContext);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.eventHandler = function (cb) {\n\t            var _this = this;\n\t            var /** @type {?} */ superHandler = _super.prototype.eventHandler.call(this, cb);\n\t            return function (eventName, event) {\n\t                _this._resetDebug();\n\t                try {\n\t                    return superHandler.call(_this, eventName, event);\n\t                }\n\t                catch (e) {\n\t                    _this._rethrowWithContext(e);\n\t                    throw e;\n\t                }\n\t            };\n\t        };\n\t        return DebugAppView;\n\t    }(AppView));\n\t\n\t    /**\n\t     * A ViewContainer is created for elements that have a ViewContainerRef\n\t     * to keep track of the nested views.\n\t     */\n\t    var ViewContainer = (function () {\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} parentIndex\n\t         * @param {?} parentView\n\t         * @param {?} nativeElement\n\t         */\n\t        function ViewContainer(index, parentIndex, parentView, nativeElement) {\n\t            this.index = index;\n\t            this.parentIndex = parentIndex;\n\t            this.parentView = parentView;\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        Object.defineProperty(ViewContainer.prototype, \"elementRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ElementRef(this.nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"vcRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ViewContainerRef_(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"parentInjector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.parentView.injector(this.parentIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.parentView.injector(this.index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.detectChangesInNestedViews = function (throwOnChange) {\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].detectChanges(throwOnChange);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.destroyNestedViews = function () {\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].destroy();\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.visitNestedViewRootNodes = function (cb, c) {\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].visitRootNodesInternal(cb, c);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} nestedViewClass\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.mapNestedViews = function (nestedViewClass, callback) {\n\t            var /** @type {?} */ result = [];\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    var /** @type {?} */ nestedView = this.nestedViews[i];\n\t                    if (nestedView.clazz === nestedViewClass) {\n\t                        result.push(callback(nestedView));\n\t                    }\n\t                }\n\t            }\n\t            if (this.projectedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.projectedViews.length; i++) {\n\t                    var /** @type {?} */ projectedView = this.projectedViews[i];\n\t                    if (projectedView.clazz === nestedViewClass) {\n\t                        result.push(callback(projectedView));\n\t                    }\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @param {?} currentIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.moveView = function (view, currentIndex) {\n\t            var /** @type {?} */ previousIndex = this.nestedViews.indexOf(view);\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var /** @type {?} */ nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            nestedViews.splice(previousIndex, 1);\n\t            nestedViews.splice(currentIndex, 0, view);\n\t            var /** @type {?} */ prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n\t            view.moveAfter(this, prevView);\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @param {?} viewIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.attachView = function (view, viewIndex) {\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var /** @type {?} */ nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            // perf: array.push is faster than array.splice!\n\t            if (viewIndex >= nestedViews.length) {\n\t                nestedViews.push(view);\n\t            }\n\t            else {\n\t                nestedViews.splice(viewIndex, 0, view);\n\t            }\n\t            var /** @type {?} */ prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n\t            view.attachAfter(this, prevView);\n\t        };\n\t        /**\n\t         * @param {?} viewIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.detachView = function (viewIndex) {\n\t            var /** @type {?} */ view = this.nestedViews[viewIndex];\n\t            // perf: array.pop is faster than array.splice!\n\t            if (viewIndex >= this.nestedViews.length - 1) {\n\t                this.nestedViews.pop();\n\t            }\n\t            else {\n\t                this.nestedViews.splice(viewIndex, 1);\n\t            }\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            view.detach();\n\t            return view;\n\t        };\n\t        return ViewContainer;\n\t    }());\n\t\n\t    var /** @type {?} */ __core_private__ = {\n\t        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n\t        ChangeDetectorStatus: ChangeDetectorStatus,\n\t        constructDependencies: constructDependencies,\n\t        LifecycleHooks: LifecycleHooks,\n\t        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n\t        ReflectorReader: ReflectorReader,\n\t        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n\t        ComponentRef_: ComponentRef_,\n\t        ViewContainer: ViewContainer,\n\t        AppView: AppView,\n\t        DebugAppView: DebugAppView,\n\t        NgModuleInjector: NgModuleInjector,\n\t        registerModuleFactory: registerModuleFactory,\n\t        ViewType: ViewType,\n\t        view_utils: view_utils,\n\t        ViewMetadata: ViewMetadata,\n\t        DebugContext: DebugContext,\n\t        StaticNodeDebugInfo: StaticNodeDebugInfo,\n\t        devModeEqual: devModeEqual,\n\t        UNINITIALIZED: UNINITIALIZED,\n\t        ValueUnwrapper: ValueUnwrapper,\n\t        RenderDebugInfo: RenderDebugInfo,\n\t        TemplateRef_: TemplateRef_,\n\t        ReflectionCapabilities: ReflectionCapabilities,\n\t        makeDecorator: makeDecorator,\n\t        DebugDomRootRenderer: DebugDomRootRenderer,\n\t        Console: Console,\n\t        reflector: reflector,\n\t        Reflector: Reflector,\n\t        NoOpAnimationPlayer: NoOpAnimationPlayer,\n\t        AnimationPlayer: AnimationPlayer,\n\t        AnimationSequencePlayer: AnimationSequencePlayer,\n\t        AnimationGroupPlayer: AnimationGroupPlayer,\n\t        AnimationKeyframe: AnimationKeyframe,\n\t        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n\t        balanceAnimationKeyframes: balanceAnimationKeyframes,\n\t        flattenStyles: flattenStyles,\n\t        clearStyles: clearStyles,\n\t        renderStyles: renderStyles,\n\t        collectAndResolveStyles: collectAndResolveStyles,\n\t        APP_ID_RANDOM_PROVIDER: APP_ID_RANDOM_PROVIDER,\n\t        AnimationStyles: AnimationStyles,\n\t        ANY_STATE: ANY_STATE,\n\t        DEFAULT_STATE: DEFAULT_STATE,\n\t        EMPTY_STATE: EMPTY_STATE,\n\t        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n\t        ComponentStillLoadingError: ComponentStillLoadingError,\n\t        isPromise: isPromise,\n\t        isObservable: isObservable,\n\t        AnimationTransition: AnimationTransition\n\t    };\n\t\n\t    exports.createPlatform = createPlatform;\n\t    exports.assertPlatform = assertPlatform;\n\t    exports.destroyPlatform = destroyPlatform;\n\t    exports.getPlatform = getPlatform;\n\t    exports.PlatformRef = PlatformRef;\n\t    exports.ApplicationRef = ApplicationRef;\n\t    exports.enableProdMode = enableProdMode;\n\t    exports.isDevMode = isDevMode;\n\t    exports.createPlatformFactory = createPlatformFactory;\n\t    exports.NgProbeToken = NgProbeToken;\n\t    exports.APP_ID = APP_ID;\n\t    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n\t    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n\t    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n\t    exports.APP_INITIALIZER = APP_INITIALIZER;\n\t    exports.ApplicationInitStatus = ApplicationInitStatus;\n\t    exports.DebugElement = DebugElement;\n\t    exports.DebugNode = DebugNode;\n\t    exports.asNativeElements = asNativeElements;\n\t    exports.getDebugNode = getDebugNode;\n\t    exports.Testability = Testability;\n\t    exports.TestabilityRegistry = TestabilityRegistry;\n\t    exports.setTestabilityGetter = setTestabilityGetter;\n\t    exports.TRANSLATIONS = TRANSLATIONS;\n\t    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n\t    exports.LOCALE_ID = LOCALE_ID;\n\t    exports.ApplicationModule = ApplicationModule;\n\t    exports.wtfCreateScope = wtfCreateScope;\n\t    exports.wtfLeave = wtfLeave;\n\t    exports.wtfStartTimeRange = wtfStartTimeRange;\n\t    exports.wtfEndTimeRange = wtfEndTimeRange;\n\t    exports.Type = Type;\n\t    exports.EventEmitter = EventEmitter;\n\t    exports.ErrorHandler = ErrorHandler;\n\t    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n\t    exports.AnimationPlayer = AnimationPlayer;\n\t    exports.AnimationStyles = AnimationStyles;\n\t    exports.AnimationKeyframe = AnimationKeyframe;\n\t    exports.Sanitizer = Sanitizer;\n\t    exports.SecurityContext = SecurityContext;\n\t    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n\t    exports.Attribute = Attribute;\n\t    exports.ContentChild = ContentChild;\n\t    exports.ContentChildren = ContentChildren;\n\t    exports.Query = Query;\n\t    exports.ViewChild = ViewChild;\n\t    exports.ViewChildren = ViewChildren;\n\t    exports.Component = Component;\n\t    exports.Directive = Directive;\n\t    exports.HostBinding = HostBinding;\n\t    exports.HostListener = HostListener;\n\t    exports.Input = Input;\n\t    exports.Output = Output;\n\t    exports.Pipe = Pipe;\n\t    exports.AfterContentChecked = AfterContentChecked;\n\t    exports.AfterContentInit = AfterContentInit;\n\t    exports.AfterViewChecked = AfterViewChecked;\n\t    exports.AfterViewInit = AfterViewInit;\n\t    exports.DoCheck = DoCheck;\n\t    exports.OnChanges = OnChanges;\n\t    exports.OnDestroy = OnDestroy;\n\t    exports.OnInit = OnInit;\n\t    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n\t    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n\t    exports.NgModule = NgModule;\n\t    exports.ViewEncapsulation = ViewEncapsulation;\n\t    exports.Version = Version;\n\t    exports.VERSION = VERSION;\n\t    exports.Class = Class;\n\t    exports.forwardRef = forwardRef;\n\t    exports.resolveForwardRef = resolveForwardRef;\n\t    exports.Injector = Injector;\n\t    exports.ReflectiveInjector = ReflectiveInjector;\n\t    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n\t    exports.ReflectiveKey = ReflectiveKey;\n\t    exports.OpaqueToken = OpaqueToken;\n\t    exports.Inject = Inject;\n\t    exports.Optional = Optional;\n\t    exports.Injectable = Injectable;\n\t    exports.Self = Self;\n\t    exports.SkipSelf = SkipSelf;\n\t    exports.Host = Host;\n\t    exports.NgZone = NgZone;\n\t    exports.RenderComponentType = RenderComponentType;\n\t    exports.Renderer = Renderer;\n\t    exports.RootRenderer = RootRenderer;\n\t    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n\t    exports.Compiler = Compiler;\n\t    exports.CompilerFactory = CompilerFactory;\n\t    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n\t    exports.ComponentFactory = ComponentFactory;\n\t    exports.ComponentRef = ComponentRef;\n\t    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n\t    exports.ElementRef = ElementRef;\n\t    exports.NgModuleFactory = NgModuleFactory;\n\t    exports.NgModuleRef = NgModuleRef;\n\t    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n\t    exports.getModuleFactory = getModuleFactory;\n\t    exports.QueryList = QueryList;\n\t    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n\t    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n\t    exports.TemplateRef = TemplateRef;\n\t    exports.ViewContainerRef = ViewContainerRef;\n\t    exports.EmbeddedViewRef = EmbeddedViewRef;\n\t    exports.ViewRef = ViewRef;\n\t    exports.ChangeDetectionStrategy = ChangeDetectionStrategy;\n\t    exports.ChangeDetectorRef = ChangeDetectorRef;\n\t    exports.CollectionChangeRecord = CollectionChangeRecord;\n\t    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n\t    exports.IterableDiffers = IterableDiffers;\n\t    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n\t    exports.KeyValueDiffers = KeyValueDiffers;\n\t    exports.SimpleChange = SimpleChange;\n\t    exports.WrappedValue = WrappedValue;\n\t    exports.platformCore = platformCore;\n\t    exports.__core_private__ = __core_private__;\n\t    exports.AUTO_STYLE = AUTO_STYLE;\n\t    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n\t    exports.AnimationStateMetadata = AnimationStateMetadata;\n\t    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n\t    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n\t    exports.AnimationMetadata = AnimationMetadata;\n\t    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n\t    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n\t    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n\t    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n\t    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n\t    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n\t    exports.animate = animate;\n\t    exports.group = group;\n\t    exports.sequence = sequence;\n\t    exports.style = style;\n\t    exports.state = state;\n\t    exports.keyframes = keyframes;\n\t    exports.transition = transition;\n\t    exports.trigger = trigger;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! version: \"0.1.0\" */\n\t!function(t,e){if(true)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)(\"object\"==typeof exports?exports:t)[n]=r[n]}}(this,function(){return function(t){function e(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return t[n].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var r={};return e.m=t,e.c=r,e.p=\"/static/\",e(0)}([function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=r(12),i=function(){function t(){this.events={}}return t.prototype.publish=function(t,e,r){return void 0===r&&(r=1),this.getSubjectByEventName(t,r).next(e),this},t.prototype.subscribe=function(t,e,r){if(void 0===r&&(r=1),!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t,r).subscribe(e);return n},t.prototype.subscribeOnce=function(t,e){var r=this;if(!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t).subscribe(function(t){e(t),r.unsubscribe(n)});return n},t.prototype.unsubscribe=function(t){return t&&t.unsubscribe(),this},t.prototype.unsubscribeAll=function(t){return t&&t.forEach(function(t){t.unsubscribe()}),this},t.prototype.dispose=function(t){return this.events[t]?(this.getSubjectByEventName(t).unsubscribe(),delete this.events[t]):console.warn(\"The event [\"+t+\"] doesn't exist!\"),this},t.prototype.hasSubscribers=function(t){var e=!1;return this.events[t]&&this.getSubjectByEventName(t).observers.length>0&&(e=!0),e},t.prototype.getEvents=function(){return this.events},t.prototype.getSubjects=function(){return this.getEvents()},t.prototype.getSubjectByEventName=function(t,e){return void 0===e&&(e=1),this.events[t]||(this.events[t]=new n.ReplaySubject(e)),this.events[t]},t.prototype.isCallback=function(t){return!(!t||\"function\"!=typeof t)||(console.warn(\"Callback is missing! Subscription cancelled!\"),!1)},t}();e.RxPubSub=i},function(t,e,r){\"use strict\";function n(t){return t.reduce(function(t,e){return t.concat(e instanceof h.UnsubscriptionError?e.errors:e)},[])}var i=r(24),s=r(25),o=r(10),c=r(27),u=r(9),h=r(23),p=function(){function t(t){this.closed=!1,this._parent=null,this._parents=null,this._subscriptions=null,t&&(this._unsubscribe=t)}return t.prototype.unsubscribe=function(){var t,e=!1;if(!this.closed){var r=this,p=r._parent,a=r._parents,b=r._unsubscribe,f=r._subscriptions;this.closed=!0,this._parent=null,this._parents=null,this._subscriptions=null;for(var l=-1,d=a?a.length:0;p;)p.remove(this),p=++l<d&&a[l]||null;if(o.isFunction(b)){var y=c.tryCatch(b).call(this);y===u.errorObject&&(e=!0,t=t||(u.errorObject.e instanceof h.UnsubscriptionError?n(u.errorObject.e.errors):[u.errorObject.e]))}if(i.isArray(f))for(l=-1,d=f.length;++l<d;){var v=f[l];if(s.isObject(v)){var y=c.tryCatch(v.unsubscribe).call(v);if(y===u.errorObject){e=!0,t=t||[];var w=u.errorObject.e;w instanceof h.UnsubscriptionError?t=t.concat(n(w.errors)):t.push(w)}}}if(e)throw new h.UnsubscriptionError(t)}},t.prototype.add=function(e){if(!e||e===t.EMPTY)return t.EMPTY;if(e===this)return this;var r=e;switch(typeof e){case\"function\":r=new t(e);case\"object\":if(r.closed||\"function\"!=typeof r.unsubscribe)return r;if(this.closed)return r.unsubscribe(),r;if(\"function\"!=typeof r._addParent){var n=r;r=new t,r._subscriptions=[n]}break;default:throw new Error(\"unrecognized teardown \"+e+\" added to Subscription.\")}var i=this._subscriptions||(this._subscriptions=[]);return i.push(r),r._addParent(this),r},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var r=e.indexOf(t);r!==-1&&e.splice(r,1)}},t.prototype._addParent=function(t){var e=this,r=e._parent,n=e._parents;r&&r!==t?n?n.indexOf(t)===-1&&n.push(t):this._parents=[t]:this._parent=t},t.EMPTY=function(t){return t.closed=!0,t}(new t),t}();e.Subscription=p},function(t,e){(function(t){\"use strict\";var r=\"undefined\"!=typeof window&&window,n=\"undefined\"!=typeof self&&\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,i=\"undefined\"!=typeof t&&t,s=r||i||n;e.root=s,function(){if(!s)throw new Error(\"RxJS could not find any global context (window, self, global)\")}()}).call(e,function(){return this}())},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(10),s=r(1),o=r(6),c=r(4),u=function(t){function e(r,n,i){switch(t.call(this),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=o.empty;break;case 1:if(!r){this.destination=o.empty;break}if(\"object\"==typeof r){r instanceof e?(this.destination=r,this.destination.add(this)):(this.syncErrorThrowable=!0,this.destination=new h(this,r));break}default:this.syncErrorThrowable=!0,this.destination=new h(this,r,n,i)}}return n(e,t),e.prototype[c.rxSubscriber]=function(){return this},e.create=function(t,r,n){var i=new e(t,r,n);return i.syncErrorThrowable=!1,i},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this,e=t._parent,r=t._parents;return this._parent=null,this._parents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parent=e,this._parents=r,this},e}(s.Subscription);e.Subscriber=u;var h=function(t){function e(e,r,n,s){t.call(this),this._parentSubscriber=e;var c,u=this;i.isFunction(r)?c=r:r&&(c=r.next,n=r.error,s=r.complete,r!==o.empty&&(u=Object.create(r),i.isFunction(u.unsubscribe)&&this.add(u.unsubscribe.bind(u)),u.unsubscribe=this.unsubscribe.bind(this))),this._context=u,this._next=c,this._error=n,this._complete=s}return n(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber;if(this._error)e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else{if(!e.syncErrorThrowable)throw this.unsubscribe(),t;e.syncErrorValue=t,e.syncErrorThrown=!0,this.unsubscribe()}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var r=function(){return t._complete.call(t._context)};e.syncErrorThrowable?(this.__tryOrSetError(e,r),this.unsubscribe()):(this.__tryOrUnsub(r),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){throw this.unsubscribe(),t}},e.prototype.__tryOrSetError=function(t,e,r){try{e.call(this._context,r)}catch(e){return t.syncErrorValue=e,t.syncErrorThrown=!0,!0}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(u)},function(t,e,r){\"use strict\";var n=r(2),i=n.root.Symbol;e.rxSubscriber=\"function\"==typeof i&&\"function\"==typeof i.for?i.for(\"rxSubscriber\"):\"@@rxSubscriber\",e.$$rxSubscriber=e.rxSubscriber},function(t,e,r){\"use strict\";var n=r(2),i=r(26),s=r(22),o=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var r=new t;return r.source=this,r.operator=e,r},t.prototype.subscribe=function(t,e,r){var n=this.operator,s=i.toSubscriber(t,e,r);if(n?n.call(s,this.source):s.add(this._trySubscribe(s)),s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){t.syncErrorThrown=!0,t.syncErrorValue=e,t.error(e)}},t.prototype.forEach=function(t,e){var r=this;if(e||(n.root.Rx&&n.root.Rx.config&&n.root.Rx.config.Promise?e=n.root.Rx.config.Promise:n.root.Promise&&(e=n.root.Promise)),!e)throw new Error(\"no Promise impl found\");return new e(function(e,n){var i;i=r.subscribe(function(e){if(i)try{t(e)}catch(t){n(t),i.unsubscribe()}else t(e)},n,e)})},t.prototype._subscribe=function(t){return this.source.subscribe(t)},t.prototype[s.observable]=function(){return this},t.create=function(e){return new t(e)},t}();e.Observable=o},function(t,e){\"use strict\";e.empty={closed:!0,next:function(t){},error:function(t){throw t},complete:function(){}}},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this),this.subject=e,this.subscriber=r,this.closed=!1}return n(e,t),e.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,e=t.observers;if(this.subject=null,e&&0!==e.length&&!t.isStopped&&!t.closed){var r=e.indexOf(this.subscriber);r!==-1&&e.splice(r,1)}}},e}(i.Subscription);e.SubjectSubscription=s},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(){var e=t.call(this,\"object unsubscribed\");this.name=e.name=\"ObjectUnsubscribedError\",this.stack=e.stack,this.message=e.message}return r(e,t),e}(Error);e.ObjectUnsubscribedError=n},function(t,e){\"use strict\";e.errorObject={e:{}}},function(t,e){\"use strict\";function r(t){return\"function\"==typeof t}e.isFunction=r},function(t,e,r){\"use strict\";var n=r(5),i=function(){function t(t,e,r){this.kind=t,this.value=e,this.error=r,this.hasValue=\"N\"===t}return t.prototype.observe=function(t){switch(this.kind){case\"N\":return t.next&&t.next(this.value);case\"E\":return t.error&&t.error(this.error);case\"C\":return t.complete&&t.complete()}},t.prototype.do=function(t,e,r){var n=this.kind;switch(n){case\"N\":return t&&t(this.value);case\"E\":return e&&e(this.error);case\"C\":return r&&r()}},t.prototype.accept=function(t,e,r){return t&&\"function\"==typeof t.next?this.observe(t):this.do(t,e,r)},t.prototype.toObservable=function(){var t=this.kind;switch(t){case\"N\":return n.Observable.of(this.value);case\"E\":return n.Observable.throw(this.error);case\"C\":return n.Observable.empty()}throw new Error(\"unexpected notification kind value\")},t.createNext=function(e){return\"undefined\"!=typeof e?new t(\"N\",e):this.undefinedValueNotification},t.createError=function(e){return new t(\"E\",void 0,e)},t.createComplete=function(){return this.completeNotification},t.completeNotification=new t(\"C\"),t.undefinedValueNotification=new t(\"N\",void 0),t}();e.Notification=i},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(14),s=r(21),o=r(1),c=r(15),u=r(8),h=r(7),p=function(t){function e(e,r,n){void 0===e&&(e=Number.POSITIVE_INFINITY),void 0===r&&(r=Number.POSITIVE_INFINITY),t.call(this),this.scheduler=n,this._events=[],this._bufferSize=e<1?1:e,this._windowTime=r<1?1:r}return n(e,t),e.prototype.next=function(e){var r=this._getNow();this._events.push(new a(r,e)),this._trimBufferThenGetEvents(),t.prototype.next.call(this,e)},e.prototype._subscribe=function(t){var e,r=this._trimBufferThenGetEvents(),n=this.scheduler;if(this.closed)throw new u.ObjectUnsubscribedError;this.hasError?e=o.Subscription.EMPTY:this.isStopped?e=o.Subscription.EMPTY:(this.observers.push(t),e=new h.SubjectSubscription(this,t)),n&&t.add(t=new c.ObserveOnSubscriber(t,n));for(var i=r.length,s=0;s<i&&!t.closed;s++)t.next(r[s].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),e},e.prototype._getNow=function(){return(this.scheduler||s.queue).now()},e.prototype._trimBufferThenGetEvents=function(){for(var t=this._getNow(),e=this._bufferSize,r=this._windowTime,n=this._events,i=n.length,s=0;s<i&&!(t-n[s].time<r);)s++;return i>e&&(s=Math.max(s,i-e)),s>0&&n.splice(0,s),n},e}(i.Subject);e.ReplaySubject=p;var a=function(){function t(t,e){this.time=t,this.value=e}return t}()},function(t,e){\"use strict\";var r=function(){function t(e,r){void 0===r&&(r=t.now),this.SchedulerAction=e,this.now=r}return t.prototype.schedule=function(t,e,r){return void 0===e&&(e=0),new this.SchedulerAction(this,t).schedule(r,e)},t.now=Date.now?Date.now:function(){return+new Date},t}();e.Scheduler=r},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(5),s=r(3),o=r(1),c=r(8),u=r(7),h=r(4),p=function(t){function e(e){t.call(this,e),this.destination=e}return n(e,t),e}(s.Subscriber);e.SubjectSubscriber=p;var a=function(t){function e(){t.call(this),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}return n(e,t),e.prototype[h.rxSubscriber]=function(){return new p(this)},e.prototype.lift=function(t){var e=new b(this,this);return e.operator=t,e},e.prototype.next=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;if(!this.isStopped)for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].next(t)},e.prototype.error=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].error(t);this.observers.length=0},e.prototype.complete=function(){if(this.closed)throw new c.ObjectUnsubscribedError;this.isStopped=!0;for(var t=this.observers,e=t.length,r=t.slice(),n=0;n<e;n++)r[n].complete();this.observers.length=0},e.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},e.prototype._trySubscribe=function(e){if(this.closed)throw new c.ObjectUnsubscribedError;return t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;return this.hasError?(t.error(this.thrownError),o.Subscription.EMPTY):this.isStopped?(t.complete(),o.Subscription.EMPTY):(this.observers.push(t),new u.SubjectSubscription(this,t))},e.prototype.asObservable=function(){var t=new i.Observable;return t.source=this,t},e.create=function(t,e){return new b(t,e)},e}(i.Observable);e.Subject=a;var b=function(t){function e(e,r){t.call(this),this.destination=e,this.source=r}return n(e,t),e.prototype.next=function(t){var e=this.destination;e&&e.next&&e.next(t)},e.prototype.error=function(t){var e=this.destination;e&&e.error&&this.destination.error(t)},e.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},e.prototype._subscribe=function(t){var e=this.source;return e?this.source.subscribe(t):o.Subscription.EMPTY},e}(a);e.AnonymousSubject=b},function(t,e,r){\"use strict\";function n(t,e){return void 0===e&&(e=0),this.lift(new c(t,e))}var i=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},s=r(3),o=r(11);e.observeOn=n;var c=function(){function t(t,e){void 0===e&&(e=0),this.scheduler=t,this.delay=e}return t.prototype.call=function(t,e){return e.subscribe(new u(t,this.scheduler,this.delay))},t}();e.ObserveOnOperator=c;var u=function(t){function e(e,r,n){void 0===n&&(n=0),t.call(this,e),this.scheduler=r,this.delay=n}return i(e,t),e.dispatch=function(t){var e=t.notification,r=t.destination;e.observe(r),this.unsubscribe()},e.prototype.scheduleMessage=function(t){this.add(this.scheduler.schedule(e.dispatch,this.delay,new h(t,this.destination)))},e.prototype._next=function(t){this.scheduleMessage(o.Notification.createNext(t))},e.prototype._error=function(t){this.scheduleMessage(o.Notification.createError(t))},e.prototype._complete=function(){this.scheduleMessage(o.Notification.createComplete())},e}(s.Subscriber);e.ObserveOnSubscriber=u;var h=function(){function t(t,e){this.notification=t,this.destination=e}return t}();e.ObserveOnMessage=h},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this)}return n(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(i.Subscription);e.Action=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(2),s=r(16),o=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r,this.pending=!1}return n(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t,this.pending=!0;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,e)),this.delay=e,this.id=this.id||this.requestAsyncId(n,this.id,e),this},e.prototype.requestAsyncId=function(t,e,r){return void 0===r&&(r=0),i.root.setInterval(t.flush.bind(t,this),r)},e.prototype.recycleAsyncId=function(t,e,r){return void 0===r&&(r=0),null!==r&&this.delay===r&&this.pending===!1?e:i.root.clearInterval(e)&&void 0||void 0},e.prototype.execute=function(t,e){if(this.closed)return new Error(\"executing a cancelled action\");this.pending=!1;var r=this._execute(t,e);return r?r:void(this.pending===!1&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null)))},e.prototype._execute=function(t,e){var r=!1,n=void 0;try{this.work(t)}catch(t){r=!0,n=!!t&&t||new Error(t)}if(r)return this.unsubscribe(),n},e.prototype._unsubscribe=function(){var t=this.id,e=this.scheduler,r=e.actions,n=r.indexOf(this);this.work=null,this.delay=null,this.state=null,this.pending=!1,this.scheduler=null,n!==-1&&r.splice(n,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null))},e}(s.Action);e.AsyncAction=o},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(13),s=function(t){function e(){t.apply(this,arguments),this.actions=[],this.active=!1,this.scheduled=void 0}return n(e,t),e.prototype.flush=function(t){var e=this.actions;if(this.active)return void e.push(t);var r;this.active=!0;do if(r=t.execute(t.state,t.delay))break;while(t=e.shift());if(this.active=!1,r){for(;t=e.shift();)t.unsubscribe();throw r}},e}(i.Scheduler);e.AsyncScheduler=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(17),s=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r}return n(e,t),e.prototype.schedule=function(e,r){return void 0===r&&(r=0),r>0?t.prototype.schedule.call(this,e,r):(this.delay=r,this.state=e,this.scheduler.flush(this),this)},e.prototype.execute=function(e,r){return r>0||this.closed?t.prototype.execute.call(this,e,r):this._execute(e,r)},e.prototype.requestAsyncId=function(e,r,n){return void 0===n&&(n=0),null!==n&&n>0||null===n&&this.delay>0?t.prototype.requestAsyncId.call(this,e,r,n):e.flush(this)},e}(i.AsyncAction);e.QueueAction=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(18),s=function(t){function e(){t.apply(this,arguments)}return n(e,t),e}(i.AsyncScheduler);e.QueueScheduler=s},function(t,e,r){\"use strict\";var n=r(19),i=r(20);e.queue=new i.QueueScheduler(n.QueueAction)},function(t,e,r){\"use strict\";function n(t){var e,r=t.Symbol;return\"function\"==typeof r?r.observable?e=r.observable:(e=r(\"observable\"),r.observable=e):e=\"@@observable\",e}var i=r(2);e.getSymbolObservable=n,e.observable=n(i.root),e.$$observable=e.observable},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(e){t.call(this),this.errors=e;var r=Error.call(this,e?e.length+\" errors occurred during unsubscription:\\n  \"+e.map(function(t,e){return e+1+\") \"+t.toString()}).join(\"\\n  \"):\"\");this.name=r.name=\"UnsubscriptionError\",this.stack=r.stack,this.message=r.message}return r(e,t),e}(Error);e.UnsubscriptionError=n},function(t,e){\"use strict\";e.isArray=Array.isArray||function(t){return t&&\"number\"==typeof t.length}},function(t,e){\"use strict\";function r(t){return null!=t&&\"object\"==typeof t}e.isObject=r},function(t,e,r){\"use strict\";function n(t,e,r){if(t){if(t instanceof i.Subscriber)return t;if(t[s.rxSubscriber])return t[s.rxSubscriber]()}return t||e||r?new i.Subscriber(t,e,r):new i.Subscriber(o.empty)}var i=r(3),s=r(4),o=r(6);e.toSubscriber=n},function(t,e,r){\"use strict\";function n(){try{return s.apply(this,arguments)}catch(t){return o.errorObject.e=t,o.errorObject}}function i(t){return s=t,n}var s,o=r(9);e.tryCatch=i}])});\n\t//# sourceMappingURL=rx-pubsub.min.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isArray_1 = __webpack_require__(21);\n\tvar isObject_1 = __webpack_require__(22);\n\tvar isFunction_1 = __webpack_require__(12);\n\tvar tryCatch_1 = __webpack_require__(24);\n\tvar errorObject_1 = __webpack_require__(11);\n\tvar UnsubscriptionError_1 = __webpack_require__(20);\n\t/**\n\t * Represents a disposable resource, such as the execution of an Observable. A\n\t * Subscription has one important method, `unsubscribe`, that takes no argument\n\t * and just disposes the resource held by the subscription.\n\t *\n\t * Additionally, subscriptions may be grouped together through the `add()`\n\t * method, which will attach a child Subscription to the current Subscription.\n\t * When a Subscription is unsubscribed, all its children (and its grandchildren)\n\t * will be unsubscribed as well.\n\t *\n\t * @class Subscription\n\t */\n\tvar Subscription = (function () {\n\t    /**\n\t     * @param {function(): void} [unsubscribe] A function describing how to\n\t     * perform the disposal of resources when the `unsubscribe` method is called.\n\t     */\n\t    function Subscription(unsubscribe) {\n\t        /**\n\t         * A flag to indicate whether this Subscription has already been unsubscribed.\n\t         * @type {boolean}\n\t         */\n\t        this.closed = false;\n\t        this._parent = null;\n\t        this._parents = null;\n\t        this._subscriptions = null;\n\t        if (unsubscribe) {\n\t            this._unsubscribe = unsubscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Disposes the resources held by the subscription. May, for instance, cancel\n\t     * an ongoing Observable execution or cancel any other type of work that\n\t     * started when the Subscription was created.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.unsubscribe = function () {\n\t        var hasErrors = false;\n\t        var errors;\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n\t        this.closed = true;\n\t        this._parent = null;\n\t        this._parents = null;\n\t        // null out _subscriptions first so any child subscriptions that attempt\n\t        // to remove themselves from this subscription will noop\n\t        this._subscriptions = null;\n\t        var index = -1;\n\t        var len = _parents ? _parents.length : 0;\n\t        // if this._parent is null, then so is this._parents, and we\n\t        // don't have to remove ourselves from any parent subscriptions.\n\t        while (_parent) {\n\t            _parent.remove(this);\n\t            // if this._parents is null or index >= len,\n\t            // then _parent is set to null, and the loop exits\n\t            _parent = ++index < len && _parents[index] || null;\n\t        }\n\t        if (isFunction_1.isFunction(_unsubscribe)) {\n\t            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n\t            if (trial === errorObject_1.errorObject) {\n\t                hasErrors = true;\n\t                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n\t                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n\t            }\n\t        }\n\t        if (isArray_1.isArray(_subscriptions)) {\n\t            index = -1;\n\t            len = _subscriptions.length;\n\t            while (++index < len) {\n\t                var sub = _subscriptions[index];\n\t                if (isObject_1.isObject(sub)) {\n\t                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n\t                    if (trial === errorObject_1.errorObject) {\n\t                        hasErrors = true;\n\t                        errors = errors || [];\n\t                        var err = errorObject_1.errorObject.e;\n\t                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n\t                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n\t                        }\n\t                        else {\n\t                            errors.push(err);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (hasErrors) {\n\t            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n\t        }\n\t    };\n\t    /**\n\t     * Adds a tear down to be called during the unsubscribe() of this\n\t     * Subscription.\n\t     *\n\t     * If the tear down being added is a subscription that is already\n\t     * unsubscribed, is the same reference `add` is being called on, or is\n\t     * `Subscription.EMPTY`, it will not be added.\n\t     *\n\t     * If this subscription is already in an `closed` state, the passed\n\t     * tear down logic will be executed immediately.\n\t     *\n\t     * @param {TeardownLogic} teardown The additional logic to execute on\n\t     * teardown.\n\t     * @return {Subscription} Returns the Subscription used or created to be\n\t     * added to the inner subscriptions list. This Subscription can be used with\n\t     * `remove()` to remove the passed teardown logic from the inner subscriptions\n\t     * list.\n\t     */\n\t    Subscription.prototype.add = function (teardown) {\n\t        if (!teardown || (teardown === Subscription.EMPTY)) {\n\t            return Subscription.EMPTY;\n\t        }\n\t        if (teardown === this) {\n\t            return this;\n\t        }\n\t        var subscription = teardown;\n\t        switch (typeof teardown) {\n\t            case 'function':\n\t                subscription = new Subscription(teardown);\n\t            case 'object':\n\t                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n\t                    return subscription;\n\t                }\n\t                else if (this.closed) {\n\t                    subscription.unsubscribe();\n\t                    return subscription;\n\t                }\n\t                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n\t                    var tmp = subscription;\n\t                    subscription = new Subscription();\n\t                    subscription._subscriptions = [tmp];\n\t                }\n\t                break;\n\t            default:\n\t                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n\t        }\n\t        var subscriptions = this._subscriptions || (this._subscriptions = []);\n\t        subscriptions.push(subscription);\n\t        subscription._addParent(this);\n\t        return subscription;\n\t    };\n\t    /**\n\t     * Removes a Subscription from the internal list of subscriptions that will\n\t     * unsubscribe during the unsubscribe process of this Subscription.\n\t     * @param {Subscription} subscription The subscription to remove.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.remove = function (subscription) {\n\t        var subscriptions = this._subscriptions;\n\t        if (subscriptions) {\n\t            var subscriptionIndex = subscriptions.indexOf(subscription);\n\t            if (subscriptionIndex !== -1) {\n\t                subscriptions.splice(subscriptionIndex, 1);\n\t            }\n\t        }\n\t    };\n\t    Subscription.prototype._addParent = function (parent) {\n\t        var _a = this, _parent = _a._parent, _parents = _a._parents;\n\t        if (!_parent || _parent === parent) {\n\t            // If we don't have a parent, or the new parent is the same as the\n\t            // current parent, then set this._parent to the new parent.\n\t            this._parent = parent;\n\t        }\n\t        else if (!_parents) {\n\t            // If there's already one parent, but not multiple, allocate an Array to\n\t            // store the rest of the parent Subscriptions.\n\t            this._parents = [parent];\n\t        }\n\t        else if (_parents.indexOf(parent) === -1) {\n\t            // Only add the new parent to the _parents list if it's not already there.\n\t            _parents.push(parent);\n\t        }\n\t    };\n\t    Subscription.EMPTY = (function (empty) {\n\t        empty.closed = true;\n\t        return empty;\n\t    }(new Subscription()));\n\t    return Subscription;\n\t}());\n\texports.Subscription = Subscription;\n\tfunction flattenUnsubscriptionErrors(errors) {\n\t    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n\t}\n\t//# sourceMappingURL=Subscription.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tvar Symbol = root_1.root.Symbol;\n\texports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n\t    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\t/**\n\t * @deprecated use rxSubscriber instead\n\t */\n\texports.$$rxSubscriber = exports.rxSubscriber;\n\t//# sourceMappingURL=rxSubscriber.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t// CommonJS / Node have global context exposed as \"global\" variable.\n\t// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n\t// the global \"global\" var for now.\n\tvar __window = typeof window !== 'undefined' && window;\n\tvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n\t    self instanceof WorkerGlobalScope && self;\n\tvar __global = typeof global !== 'undefined' && global;\n\tvar _root = __window || __global || __self;\n\texports.root = _root;\n\t// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n\t// This is needed when used with angular/tsickle which inserts a goog.module statement.\n\t// Wrap in IIFE\n\t(function () {\n\t    if (!_root) {\n\t        throw new Error('RxJS could not find any global context (window, self, global)');\n\t    }\n\t})();\n\t//# sourceMappingURL=root.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.4.10\n\t * (c) 2010-2017 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(1)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n\t}(this, function (exports,_angular_core) { 'use strict';\n\t\n\t    /**\n\t     * This class should not be used directly by an application developer. Instead, use\n\t     * {\\@link Location}.\n\t     *\n\t     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n\t     * agnostic.\n\t     * This means that we can have different implementation of `PlatformLocation` for the different\n\t     * platforms\n\t     * that angular supports. For example, the default `PlatformLocation` is {\\@link\n\t     * BrowserPlatformLocation},\n\t     * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n\t     *\n\t     * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n\t     * when\n\t     * they need to interact with the DOM apis like pushState, popState, etc...\n\t     *\n\t     * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n\t     * by\n\t     * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n\t     * Router} /\n\t     * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n\t     * class\n\t     * they are all platform independent.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var PlatformLocation = (function () {\n\t        function PlatformLocation() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.getBaseHrefFromDOM = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.onPopState = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.onHashChange = function (fn) { };\n\t        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.replaceState = function (state, title, url) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.pushState = function (state, title, url) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.forward = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.back = function () { };\n\t        return PlatformLocation;\n\t    }());\n\t    /**\n\t     * @whatItDoes indicates when a location is initialized\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ LOCATION_INITIALIZED = new _angular_core.OpaqueToken('Location Initialized');\n\t\n\t    /**\n\t     * `LocationStrategy` is responsible for representing and reading route state\n\t     * from the browser's URL. Angular provides two strategies:\n\t     * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n\t     *\n\t     * This is used under the hood of the {\\@link Location} service.\n\t     *\n\t     * Applications should use the {\\@link Router} or {\\@link Location} services to\n\t     * interact with application route state.\n\t     *\n\t     * For instance, {\\@link HashLocationStrategy} produces URLs like\n\t     * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n\t     * `http://example.com/foo` as an equivalent URL.\n\t     *\n\t     * See these two classes for more.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var LocationStrategy = (function () {\n\t        function LocationStrategy() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.path = function (includeHash) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} internal\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.prepareExternalUrl = function (internal) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.pushState = function (state, title, url, queryParams) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.replaceState = function (state, title, url, queryParams) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.forward = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.back = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.onPopState = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.getBaseHref = function () { };\n\t        return LocationStrategy;\n\t    }());\n\t    /**\n\t     * The `APP_BASE_HREF` token represents the base href to be used with the\n\t     * {@link PathLocationStrategy}.\n\t     *\n\t     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n\t     * representing the URL prefix that should be preserved when generating and recognizing\n\t     * URLs.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * import {Component, NgModule} from '@angular/core';\n\t     * import {APP_BASE_HREF} from '@angular/common';\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n\t     * })\n\t     * class AppModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = (self);\n\t        }\n\t        else {\n\t            globalScope = (global);\n\t        }\n\t    }\n\t    else {\n\t        globalScope = (window);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var /** @type {?} */ _global = globalScope;\n\t    /**\n\t     * @param {?} type\n\t     * @return {?}\n\t     */\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    _global.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @return {?}\n\t     */\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return \"\" + token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return \"\" + token.name;\n\t        }\n\t        var /** @type {?} */ res = token.toString();\n\t        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    var NumberWrapper = (function () {\n\t        function NumberWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        NumberWrapper.parseIntAutoRadix = function (text) {\n\t            var /** @type {?} */ result = parseInt(text);\n\t            if (isNaN(result)) {\n\t                throw new Error('Invalid integer literal when parsing ' + text);\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n\t        return NumberWrapper;\n\t    }());\n\t    /**\n\t     * @param {?} o\n\t     * @return {?}\n\t     */\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    var /** @type {?} */ _symbolIterator = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (((globalScope)).Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n\t                    var /** @type {?} */ key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        ((Map)).prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t\n\t    /**\n\t     * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n\t     * \\@description\n\t     * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n\t     * to the URL's path or the URL's hash segment.\n\t     *\n\t     * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n\t     * `Location` only if you need to interact with or create normalized URLs outside of\n\t     * routing.\n\t     *\n\t     * `Location` is responsible for normalizing the URL against the application's base href.\n\t     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n\t     * trailing slash:\n\t     * - `/my/app/user/123` is normalized\n\t     * - `my/app/user/123` **is not** normalized\n\t     * - `/my/app/user/123/` **is not** normalized\n\t     *\n\t     * ### Example\n\t     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n\t     * \\@stable\n\t     */\n\t    var Location = (function () {\n\t        /**\n\t         * @param {?} platformStrategy\n\t         */\n\t        function Location(platformStrategy) {\n\t            var _this = this;\n\t            /** @internal */\n\t            this._subject = new _angular_core.EventEmitter();\n\t            this._platformStrategy = platformStrategy;\n\t            var browserBaseHref = this._platformStrategy.getBaseHref();\n\t            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n\t            this._platformStrategy.onPopState(function (ev) {\n\t                _this._subject.emit({\n\t                    'url': _this.path(true),\n\t                    'pop': true,\n\t                    'type': ev.type,\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        Location.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            return this.normalize(this._platformStrategy.path(includeHash));\n\t        };\n\t        /**\n\t         * Normalizes the given path and compares to the current normalized path.\n\t         * @param {?} path\n\t         * @param {?=} query\n\t         * @return {?}\n\t         */\n\t        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the normalized URL path without leading or\n\t         * trailing slashes.\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        Location.prototype.normalize = function (url) {\n\t            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the platform-specific external URL path.\n\t         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n\t         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n\t         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        Location.prototype.prepareExternalUrl = function (url) {\n\t            if (url && url[0] !== '/') {\n\t                url = '/' + url;\n\t            }\n\t            return this._platformStrategy.prepareExternalUrl(url);\n\t        };\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n\t         * new item onto the platform's history.\n\t         * @param {?} path\n\t         * @param {?=} query\n\t         * @return {?}\n\t         */\n\t        Location.prototype.go = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.pushState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and replaces\n\t         * the top item on the platform's history stack.\n\t         * @param {?} path\n\t         * @param {?=} query\n\t         * @return {?}\n\t         */\n\t        Location.prototype.replaceState = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.replaceState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Navigates forward in the platform's history.\n\t         * @return {?}\n\t         */\n\t        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n\t        /**\n\t         * Navigates back in the platform's history.\n\t         * @return {?}\n\t         */\n\t        Location.prototype.back = function () { this._platformStrategy.back(); };\n\t        /**\n\t         * Subscribe to the platform's `popState` events.\n\t         * @param {?} onNext\n\t         * @param {?=} onThrow\n\t         * @param {?=} onReturn\n\t         * @return {?}\n\t         */\n\t        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n\t            if (onThrow === void 0) { onThrow = null; }\n\t            if (onReturn === void 0) { onReturn = null; }\n\t            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n\t        };\n\t        /**\n\t         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n\t         * is.\n\t         * @param {?} params\n\t         * @return {?}\n\t         */\n\t        Location.normalizeQueryParams = function (params) {\n\t            return params && params[0] !== '?' ? '?' + params : params;\n\t        };\n\t        /**\n\t         * Given 2 parts of a url, join them with a slash if needed.\n\t         * @param {?} start\n\t         * @param {?} end\n\t         * @return {?}\n\t         */\n\t        Location.joinWithSlash = function (start, end) {\n\t            if (start.length == 0) {\n\t                return end;\n\t            }\n\t            if (end.length == 0) {\n\t                return start;\n\t            }\n\t            var /** @type {?} */ slashes = 0;\n\t            if (start.endsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (end.startsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (slashes == 2) {\n\t                return start + end.substring(1);\n\t            }\n\t            if (slashes == 1) {\n\t                return start + end;\n\t            }\n\t            return start + '/' + end;\n\t        };\n\t        /**\n\t         * If url has a trailing slash, remove it, otherwise return url as is.\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        Location.stripTrailingSlash = function (url) { return url.replace(/\\/$/, ''); };\n\t        Location.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Location.ctorParameters = function () { return [\n\t            { type: LocationStrategy, },\n\t        ]; };\n\t        return Location;\n\t    }());\n\t    /**\n\t     * @param {?} baseHref\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function _stripBaseHref(baseHref, url) {\n\t        return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n\t    }\n\t    /**\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function _stripIndexHtml(url) {\n\t        return url.replace(/\\/index.html$/, '');\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@whatItDoes Use URL hash for storing application location data.\n\t     * \\@description\n\t     * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n\t     * {\\@link Location} service to represent its state in the\n\t     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n\t     * of the browser's URL.\n\t     *\n\t     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n\t     * `example.com#/foo`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var HashLocationStrategy = (function (_super) {\n\t        __extends(HashLocationStrategy, _super);\n\t        /**\n\t         * @param {?} _platformLocation\n\t         * @param {?=} _baseHref\n\t         */\n\t        function HashLocationStrategy(_platformLocation, _baseHref) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            this._baseHref = '';\n\t            if (isPresent(_baseHref)) {\n\t                this._baseHref = _baseHref;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        /**\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            // the hash value is always prefixed with a `#`\n\t            // and if it is empty then it will stay empty\n\t            var /** @type {?} */ path = this._platformLocation.hash;\n\t            if (!isPresent(path))\n\t                path = '#';\n\t            return path.length > 0 ? path.substring(1) : path;\n\t        };\n\t        /**\n\t         * @param {?} internal\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            var /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n\t            return url.length > 0 ? ('#' + url) : url;\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} path\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n\t            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.pushState(state, title, url);\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} path\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n\t            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.replaceState(state, title, url);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        HashLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HashLocationStrategy.ctorParameters = function () { return [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ]; };\n\t        return HashLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@whatItDoes Use URL for storing application location data.\n\t     * \\@description\n\t     * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n\t     * {\\@link Location} service to represent its state in the\n\t     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n\t     * browser's URL.\n\t     *\n\t     * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n\t     * or add a base element to the document. This URL prefix that will be preserved\n\t     * when generating and recognizing URLs.\n\t     *\n\t     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var PathLocationStrategy = (function (_super) {\n\t        __extends$1(PathLocationStrategy, _super);\n\t        /**\n\t         * @param {?} _platformLocation\n\t         * @param {?=} href\n\t         */\n\t        function PathLocationStrategy(_platformLocation, href) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            if (isBlank(href)) {\n\t                href = this._platformLocation.getBaseHrefFromDOM();\n\t            }\n\t            if (isBlank(href)) {\n\t                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n\t            }\n\t            this._baseHref = href;\n\t        }\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        /**\n\t         * @param {?} internal\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            return Location.joinWithSlash(this._baseHref, internal);\n\t        };\n\t        /**\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            var /** @type {?} */ pathname = this._platformLocation.pathname +\n\t                Location.normalizeQueryParams(this._platformLocation.search);\n\t            var /** @type {?} */ hash = this._platformLocation.hash;\n\t            return hash && includeHash ? \"\" + pathname + hash : pathname;\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n\t            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.pushState(state, title, externalUrl);\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n\t            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.replaceState(state, title, externalUrl);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        PathLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PathLocationStrategy.ctorParameters = function () { return [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ]; };\n\t        return PathLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var NgLocalization = (function () {\n\t        function NgLocalization() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgLocalization.prototype.getPluralCategory = function (value) { };\n\t        return NgLocalization;\n\t    }());\n\t    /**\n\t     * Returns the plural category for a given value.\n\t     * - \"=value\" when the case exists,\n\t     * - the plural category otherwise\n\t     *\n\t     * \\@internal\n\t     * @param {?} value\n\t     * @param {?} cases\n\t     * @param {?} ngLocalization\n\t     * @return {?}\n\t     */\n\t    function getPluralCategory(value, cases, ngLocalization) {\n\t        var /** @type {?} */ key = \"=\" + value;\n\t        if (cases.indexOf(key) > -1) {\n\t            return key;\n\t        }\n\t        key = ngLocalization.getPluralCategory(value);\n\t        if (cases.indexOf(key) > -1) {\n\t            return key;\n\t        }\n\t        if (cases.indexOf('other') > -1) {\n\t            return 'other';\n\t        }\n\t        throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n\t    }\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgLocaleLocalization = (function (_super) {\n\t        __extends$2(NgLocaleLocalization, _super);\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function NgLocaleLocalization(_locale) {\n\t            _super.call(this);\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n\t            var /** @type {?} */ plural = getPluralCase(this._locale, value);\n\t            switch (plural) {\n\t                case Plural.Zero:\n\t                    return 'zero';\n\t                case Plural.One:\n\t                    return 'one';\n\t                case Plural.Two:\n\t                    return 'two';\n\t                case Plural.Few:\n\t                    return 'few';\n\t                case Plural.Many:\n\t                    return 'many';\n\t                default:\n\t                    return 'other';\n\t            }\n\t        };\n\t        NgLocaleLocalization.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        NgLocaleLocalization.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return NgLocaleLocalization;\n\t    }(NgLocalization));\n\t    var Plural = {};\n\t    Plural.Zero = 0;\n\t    Plural.One = 1;\n\t    Plural.Two = 2;\n\t    Plural.Few = 3;\n\t    Plural.Many = 4;\n\t    Plural.Other = 5;\n\t    Plural[Plural.Zero] = \"Zero\";\n\t    Plural[Plural.One] = \"One\";\n\t    Plural[Plural.Two] = \"Two\";\n\t    Plural[Plural.Few] = \"Few\";\n\t    Plural[Plural.Many] = \"Many\";\n\t    Plural[Plural.Other] = \"Other\";\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * \\@experimental\n\t     * @param {?} locale\n\t     * @param {?} nLike\n\t     * @return {?}\n\t     */\n\t    function getPluralCase(locale, nLike) {\n\t        // TODO(vicb): lazy compute\n\t        if (typeof nLike === 'string') {\n\t            nLike = parseInt(/** @type {?} */ (nLike), 10);\n\t        }\n\t        var /** @type {?} */ n = (nLike);\n\t        var /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n\t        var /** @type {?} */ i = Math.floor(Math.abs(n));\n\t        var /** @type {?} */ v = nDecimal.length;\n\t        var /** @type {?} */ f = parseInt(nDecimal, 10);\n\t        var /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\t        var /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n\t        switch (lang) {\n\t            case 'af':\n\t            case 'asa':\n\t            case 'az':\n\t            case 'bem':\n\t            case 'bez':\n\t            case 'bg':\n\t            case 'brx':\n\t            case 'ce':\n\t            case 'cgg':\n\t            case 'chr':\n\t            case 'ckb':\n\t            case 'ee':\n\t            case 'el':\n\t            case 'eo':\n\t            case 'es':\n\t            case 'eu':\n\t            case 'fo':\n\t            case 'fur':\n\t            case 'gsw':\n\t            case 'ha':\n\t            case 'haw':\n\t            case 'hu':\n\t            case 'jgo':\n\t            case 'jmc':\n\t            case 'ka':\n\t            case 'kk':\n\t            case 'kkj':\n\t            case 'kl':\n\t            case 'ks':\n\t            case 'ksb':\n\t            case 'ky':\n\t            case 'lb':\n\t            case 'lg':\n\t            case 'mas':\n\t            case 'mgo':\n\t            case 'ml':\n\t            case 'mn':\n\t            case 'nb':\n\t            case 'nd':\n\t            case 'ne':\n\t            case 'nn':\n\t            case 'nnh':\n\t            case 'nyn':\n\t            case 'om':\n\t            case 'or':\n\t            case 'os':\n\t            case 'ps':\n\t            case 'rm':\n\t            case 'rof':\n\t            case 'rwk':\n\t            case 'saq':\n\t            case 'seh':\n\t            case 'sn':\n\t            case 'so':\n\t            case 'sq':\n\t            case 'ta':\n\t            case 'te':\n\t            case 'teo':\n\t            case 'tk':\n\t            case 'tr':\n\t            case 'ug':\n\t            case 'uz':\n\t            case 'vo':\n\t            case 'vun':\n\t            case 'wae':\n\t            case 'xog':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'agq':\n\t            case 'bas':\n\t            case 'cu':\n\t            case 'dav':\n\t            case 'dje':\n\t            case 'dua':\n\t            case 'dyo':\n\t            case 'ebu':\n\t            case 'ewo':\n\t            case 'guz':\n\t            case 'kam':\n\t            case 'khq':\n\t            case 'ki':\n\t            case 'kln':\n\t            case 'kok':\n\t            case 'ksf':\n\t            case 'lrc':\n\t            case 'lu':\n\t            case 'luo':\n\t            case 'luy':\n\t            case 'mer':\n\t            case 'mfe':\n\t            case 'mgh':\n\t            case 'mua':\n\t            case 'mzn':\n\t            case 'nmg':\n\t            case 'nus':\n\t            case 'qu':\n\t            case 'rn':\n\t            case 'rw':\n\t            case 'sbp':\n\t            case 'twq':\n\t            case 'vai':\n\t            case 'yav':\n\t            case 'yue':\n\t            case 'zgh':\n\t            case 'ak':\n\t            case 'ln':\n\t            case 'mg':\n\t            case 'pa':\n\t            case 'ti':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'am':\n\t            case 'as':\n\t            case 'bn':\n\t            case 'fa':\n\t            case 'gu':\n\t            case 'hi':\n\t            case 'kn':\n\t            case 'mr':\n\t            case 'zu':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ar':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'ast':\n\t            case 'ca':\n\t            case 'de':\n\t            case 'en':\n\t            case 'et':\n\t            case 'fi':\n\t            case 'fy':\n\t            case 'gl':\n\t            case 'it':\n\t            case 'nl':\n\t            case 'sv':\n\t            case 'sw':\n\t            case 'ur':\n\t            case 'yi':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'be':\n\t                if (n % 10 === 1 && !(n % 100 === 11))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n\t                    !(n % 100 >= 12 && n % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n\t                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'br':\n\t                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n\t                    return Plural.One;\n\t                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n\t                    return Plural.Two;\n\t                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n\t                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n\t                        n % 100 >= 90 && n % 100 <= 99))\n\t                    return Plural.Few;\n\t                if (!(n === 0) && n % 1e6 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'bs':\n\t            case 'hr':\n\t            case 'sr':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14) ||\n\t                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n\t                        !(f % 100 >= 12 && f % 100 <= 14))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'cs':\n\t            case 'sk':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'cy':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === 3)\n\t                    return Plural.Few;\n\t                if (n === 6)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'da':\n\t                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'dsb':\n\t            case 'hsb':\n\t                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n\t                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ff':\n\t            case 'fr':\n\t            case 'hy':\n\t            case 'kab':\n\t                if (i === 0 || i === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'fil':\n\t                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n\t                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n\t                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ga':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && n >= 3 && n <= 6)\n\t                    return Plural.Few;\n\t                if (n === Math.floor(n) && n >= 7 && n <= 10)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'gd':\n\t                if (n === 1 || n === 11)\n\t                    return Plural.One;\n\t                if (n === 2 || n === 12)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'gv':\n\t                if (v === 0 && i % 10 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 &&\n\t                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'he':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === 2 && v === 0)\n\t                    return Plural.Two;\n\t                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'is':\n\t                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ksh':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'kw':\n\t            case 'naq':\n\t            case 'se':\n\t            case 'smn':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                return Plural.Other;\n\t            case 'lag':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if ((i === 0 || i === 1) && !(n === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'lt':\n\t                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n\t                    !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.Few;\n\t                if (!(f === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'lv':\n\t            case 'prg':\n\t                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n\t                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n\t                    return Plural.Zero;\n\t                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n\t                    !(v === 2) && f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mk':\n\t                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mt':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pl':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pt':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ro':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (!(v === 0) || n === 0 ||\n\t                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ru':\n\t            case 'uk':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && i % 10 === 0 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'shi':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                if (n === Math.floor(n) && n >= 2 && n <= 10)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'si':\n\t                if (n === 0 || n === 1 || i === 0 && f === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'sl':\n\t                if (v === 0 && i % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'tzm':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            default:\n\t                return Plural.Other;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n\t     * - `string` - the CSS classes listed in the string (space delimited) are added,\n\t     * - `Array` - the CSS classes declared as Array elements are added,\n\t     * - `Object` - keys are CSS classes that get added when the expression given in the value\n\t     *              evaluates to a truthy value, otherwise they are removed.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgClass = (function () {\n\t        /**\n\t         * @param {?} _iterableDiffers\n\t         * @param {?} _keyValueDiffers\n\t         * @param {?} _ngEl\n\t         * @param {?} _renderer\n\t         */\n\t        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n\t            this._iterableDiffers = _iterableDiffers;\n\t            this._keyValueDiffers = _keyValueDiffers;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t            this._initialClasses = [];\n\t        }\n\t        Object.defineProperty(NgClass.prototype, \"klass\", {\n\t            /**\n\t             * @param {?} v\n\t             * @return {?}\n\t             */\n\t            set: function (v) {\n\t                this._applyInitialClasses(true);\n\t                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n\t                this._applyInitialClasses(false);\n\t                this._applyClasses(this._rawClass, false);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n\t            /**\n\t             * @param {?} v\n\t             * @return {?}\n\t             */\n\t            set: function (v) {\n\t                this._cleanupClasses(this._rawClass);\n\t                this._iterableDiffer = null;\n\t                this._keyValueDiffer = null;\n\t                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\t                if (this._rawClass) {\n\t                    if (isListLikeIterable(this._rawClass)) {\n\t                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                    else {\n\t                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype.ngDoCheck = function () {\n\t            if (this._iterableDiffer) {\n\t                var /** @type {?} */ changes = this._iterableDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyIterableChanges(changes);\n\t                }\n\t            }\n\t            else if (this._keyValueDiffer) {\n\t                var /** @type {?} */ changes = this._keyValueDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyKeyValueChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} rawClassVal\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n\t            this._applyClasses(rawClassVal, true);\n\t            this._applyInitialClasses(false);\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyKeyValueChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachRemovedItem(function (record) {\n\t                if (record.previousValue) {\n\t                    _this._toggleClass(record.key, false);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyIterableChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) {\n\t                if (typeof record.item === 'string') {\n\t                    _this._toggleClass(record.item, true);\n\t                }\n\t                else {\n\t                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n\t                }\n\t            });\n\t            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n\t        };\n\t        /**\n\t         * @param {?} isCleanup\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n\t            var _this = this;\n\t            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t        };\n\t        /**\n\t         * @param {?} rawClassVal\n\t         * @param {?} isCleanup\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n\t            var _this = this;\n\t            if (rawClassVal) {\n\t                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n\t                    ((rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t                }\n\t                else {\n\t                    Object.keys(rawClassVal).forEach(function (klass) {\n\t                        if (rawClassVal[klass] != null)\n\t                            _this._toggleClass(klass, !isCleanup);\n\t                    });\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} klass\n\t         * @param {?} enabled\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._toggleClass = function (klass, enabled) {\n\t            var _this = this;\n\t            klass = klass.trim();\n\t            if (klass) {\n\t                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n\t            }\n\t        };\n\t        NgClass.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgClass.ctorParameters = function () { return [\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ]; };\n\t        NgClass.propDecorators = {\n\t            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n\t            'ngClass': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgClass;\n\t    }());\n\t\n\t    var NgForRow = (function () {\n\t        /**\n\t         * @param {?} $implicit\n\t         * @param {?} index\n\t         * @param {?} count\n\t         */\n\t        function NgForRow($implicit, index, count) {\n\t            this.$implicit = $implicit;\n\t            this.index = index;\n\t            this.count = count;\n\t        }\n\t        Object.defineProperty(NgForRow.prototype, \"first\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.index === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"last\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.index === this.count - 1; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"even\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.index % 2 === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"odd\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return !this.even; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgForRow;\n\t    }());\n\t    /**\n\t     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n\t     * each instantiated template inherits from the outer context with the given loop variable set\n\t     * to the current item from the iterable.\n\t     *\n\t     * ### Local Variables\n\t     *\n\t     * `NgFor` provides several exported values that can be aliased to local variables:\n\t     *\n\t     * * `index` will be set to the current loop iteration for each template context.\n\t     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n\t     *   iteration.\n\t     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n\t     *   iteration.\n\t     * * `even` will be set to a boolean value indicating whether this item has an even index.\n\t     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n\t     *\n\t     * ### Change Propagation\n\t     *\n\t     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n\t     *\n\t     * * When an item is added, a new instance of the template is added to the DOM.\n\t     * * When an item is removed, its template instance is removed from the DOM.\n\t     * * When items are reordered, their respective templates are reordered in the DOM.\n\t     * * Otherwise, the DOM element for that item will remain the same.\n\t     *\n\t     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n\t     * those changes in the DOM. This has important implications for animations and any stateful\n\t     * controls\n\t     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n\t     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n\t     * as user input.\n\t     *\n\t     * It is possible for the identities of elements in the iterator to change while the data does not.\n\t     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n\t     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n\t     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n\t     * elements were deleted and all new elements inserted). This is an expensive operation and should\n\t     * be avoided if possible.\n\t     *\n\t     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n\t     * `trackBy` takes a function which has two arguments: `index` and `item`.\n\t     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     *\n\t     * With `<template>` element:\n\t     *\n\t     * ```\n\t     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n\t     *   <li>...</li>\n\t     * </template>\n\t     * ```\n\t     *\n\t     * ### Example\n\t     *\n\t     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n\t     * example.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgFor = (function () {\n\t        /**\n\t         * @param {?} _viewContainer\n\t         * @param {?} _template\n\t         * @param {?} _differs\n\t         * @param {?} _cdr\n\t         */\n\t        function NgFor(_viewContainer, _template, _differs, _cdr) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._differs = _differs;\n\t            this._cdr = _cdr;\n\t            this._differ = null;\n\t        }\n\t        Object.defineProperty(NgFor.prototype, \"ngForTrackBy\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._trackByFn; },\n\t            /**\n\t             * @param {?} fn\n\t             * @return {?}\n\t             */\n\t            set: function (fn) {\n\t                if (_angular_core.isDevMode() && fn != null && typeof fn !== 'function') {\n\t                    // TODO(vicb): use a log service once there is a public one available\n\t                    if ((console) && (console.warn)) {\n\t                        console.warn((\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \") +\n\t                            \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n\t                    }\n\t                }\n\t                this._trackByFn = fn;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (value) {\n\t                    this._template = value;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype.ngOnChanges = function (changes) {\n\t            if ('ngForOf' in changes) {\n\t                // React on ngForOf changes only once all inputs have been initialized\n\t                var /** @type {?} */ value = changes['ngForOf'].currentValue;\n\t                if (!this._differ && value) {\n\t                    try {\n\t                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n\t                    }\n\t                    catch (e) {\n\t                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n\t                if (changes)\n\t                    this._applyChanges(changes);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            var /** @type {?} */ insertTuples = [];\n\t            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n\t                if (item.previousIndex == null) {\n\t                    var /** @type {?} */ view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n\t                    var /** @type {?} */ tuple = new RecordViewTuple(item, view);\n\t                    insertTuples.push(tuple);\n\t                }\n\t                else if (currentIndex == null) {\n\t                    _this._viewContainer.remove(adjustedPreviousIndex);\n\t                }\n\t                else {\n\t                    var /** @type {?} */ view = _this._viewContainer.get(adjustedPreviousIndex);\n\t                    _this._viewContainer.move(view, currentIndex);\n\t                    var /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n\t                    insertTuples.push(tuple);\n\t                }\n\t            });\n\t            for (var /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n\t                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n\t            }\n\t            for (var /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n\t                var /** @type {?} */ viewRef = (this._viewContainer.get(i));\n\t                viewRef.context.index = i;\n\t                viewRef.context.count = ilen;\n\t            }\n\t            changes.forEachIdentityChange(function (record) {\n\t                var /** @type {?} */ viewRef = (_this._viewContainer.get(record.currentIndex));\n\t                viewRef.context.$implicit = record.item;\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype._perViewChange = function (view, record) {\n\t            view.context.$implicit = record.item;\n\t        };\n\t        NgFor.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgFor.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ]; };\n\t        NgFor.propDecorators = {\n\t            'ngForOf': [{ type: _angular_core.Input },],\n\t            'ngForTrackBy': [{ type: _angular_core.Input },],\n\t            'ngForTemplate': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgFor;\n\t    }());\n\t    var RecordViewTuple = (function () {\n\t        /**\n\t         * @param {?} record\n\t         * @param {?} view\n\t         */\n\t        function RecordViewTuple(record, view) {\n\t            this.record = record;\n\t            this.view = view;\n\t        }\n\t        return RecordViewTuple;\n\t    }());\n\t\n\t    /**\n\t     * Removes or recreates a portion of the DOM tree based on an {expression}.\n\t     *\n\t     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n\t     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n\t     *\n\t     * ```\n\t     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n\t     *   <!-- Error message displayed when the errorCount property in the current context is greater\n\t     * than 0. -->\n\t     *   {{errorCount}} errors detected\n\t     * </div>\n\t     * ```\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<div *ngIf=\"condition\">...</div>`\n\t     * - `<div template=\"ngIf condition\">...</div>`\n\t     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgIf = (function () {\n\t        /**\n\t         * @param {?} _viewContainer\n\t         * @param {?} _template\n\t         */\n\t        function NgIf(_viewContainer, _template) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._hasView = false;\n\t        }\n\t        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n\t            /**\n\t             * @param {?} condition\n\t             * @return {?}\n\t             */\n\t            set: function (condition) {\n\t                if (condition && !this._hasView) {\n\t                    this._hasView = true;\n\t                    this._viewContainer.createEmbeddedView(this._template);\n\t                }\n\t                else if (!condition && this._hasView) {\n\t                    this._hasView = false;\n\t                    this._viewContainer.clear();\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgIf.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgIf.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t        ]; };\n\t        NgIf.propDecorators = {\n\t            'ngIf': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgIf;\n\t    }());\n\t\n\t    var SwitchView = (function () {\n\t        /**\n\t         * @param {?} _viewContainerRef\n\t         * @param {?} _templateRef\n\t         */\n\t        function SwitchView(_viewContainerRef, _templateRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t            this._templateRef = _templateRef;\n\t            this._created = false;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SwitchView.prototype.create = function () {\n\t            this._created = true;\n\t            this._viewContainerRef.createEmbeddedView(this._templateRef);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SwitchView.prototype.destroy = function () {\n\t            this._created = false;\n\t            this._viewContainerRef.clear();\n\t        };\n\t        /**\n\t         * @param {?} created\n\t         * @return {?}\n\t         */\n\t        SwitchView.prototype.enforceState = function (created) {\n\t            if (created && !this._created) {\n\t                this.create();\n\t            }\n\t            else if (!created && this._created) {\n\t                this.destroy();\n\t            }\n\t        };\n\t        return SwitchView;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n\t     *             expression.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     *     <container-element [ngSwitch]=\"switch_expression\">\n\t     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n\t     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n\t     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n\t     *         <!-- use a ng-container to group multiple root nodes -->\n\t     *         <inner-element></inner-element>\n\t     *         <inner-other-element></inner-other-element>\n\t     *       </ng-container>\n\t     *       <some-element *ngSwitchDefault>...</some-element>\n\t     *     </container-element>\n\t     * ```\n\t     * \\@description\n\t     *\n\t     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n\t     * switch expression.\n\t     *\n\t     * In other words:\n\t     * - you define a container element (where you place the directive with a switch expression on the\n\t     * `[ngSwitch]=\"...\"` attribute)\n\t     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n\t     * root elements.\n\t     *\n\t     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n\t     * be preserved at the location.\n\t     *\n\t     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n\t     * expression is evaluated.\n\t     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n\t     * stamped out.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgSwitch = (function () {\n\t        function NgSwitch() {\n\t            this._defaultUsed = false;\n\t            this._caseCount = 0;\n\t            this._lastCaseCheckIndex = 0;\n\t            this._lastCasesMatched = false;\n\t        }\n\t        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n\t            /**\n\t             * @param {?} newValue\n\t             * @return {?}\n\t             */\n\t            set: function (newValue) {\n\t                this._ngSwitch = newValue;\n\t                if (this._caseCount === 0) {\n\t                    this._updateDefaultCases(true);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._addDefault = function (view) {\n\t            if (!this._defaultViews) {\n\t                this._defaultViews = [];\n\t            }\n\t            this._defaultViews.push(view);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._matchCase = function (value) {\n\t            var /** @type {?} */ matched = value == this._ngSwitch;\n\t            this._lastCasesMatched = this._lastCasesMatched || matched;\n\t            this._lastCaseCheckIndex++;\n\t            if (this._lastCaseCheckIndex === this._caseCount) {\n\t                this._updateDefaultCases(!this._lastCasesMatched);\n\t                this._lastCaseCheckIndex = 0;\n\t                this._lastCasesMatched = false;\n\t            }\n\t            return matched;\n\t        };\n\t        /**\n\t         * @param {?} useDefault\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n\t            if (this._defaultViews && useDefault !== this._defaultUsed) {\n\t                this._defaultUsed = useDefault;\n\t                for (var /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n\t                    var /** @type {?} */ defaultView = this._defaultViews[i];\n\t                    defaultView.enforceState(useDefault);\n\t                }\n\t            }\n\t        };\n\t        NgSwitch.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitch.ctorParameters = function () { return []; };\n\t        NgSwitch.propDecorators = {\n\t            'ngSwitch': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitch;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n\t     *             given expression evaluate to respectively the same/different value as the switch\n\t     *             expression.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     * </container-element>\n\t     * ```\n\t     * \\@description\n\t     *\n\t     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * If multiple match expressions match the switch expression value, all of them are displayed.\n\t     *\n\t     * See {\\@link NgSwitch} for more details and example.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgSwitchCase = (function () {\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} templateRef\n\t         * @param {?} ngSwitch\n\t         */\n\t        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n\t            this.ngSwitch = ngSwitch;\n\t            ngSwitch._addCase();\n\t            this._view = new SwitchView(viewContainer, templateRef);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n\t        NgSwitchCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchCase.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ]; };\n\t        NgSwitchCase.propDecorators = {\n\t            'ngSwitchCase': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitchCase;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n\t     * match the\n\t     *             switch expression.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n\t     * </container-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * See {\\@link NgSwitch} for more details and example.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgSwitchDefault = (function () {\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} templateRef\n\t         * @param {?} ngSwitch\n\t         */\n\t        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n\t            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n\t        }\n\t        NgSwitchDefault.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchDefault.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ]; };\n\t        return NgSwitchDefault;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <template ngPluralCase=\"=0\">there is nothing</template>\n\t     *   <template ngPluralCase=\"=1\">there is one</template>\n\t     *   <template ngPluralCase=\"few\">there are a few</template>\n\t     * </some-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n\t     * that match the switch expression's pluralization category.\n\t     *\n\t     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n\t     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n\t     * expression:\n\t     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n\t     *   matches the switch expression exactly,\n\t     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n\t     *   value matches aren't found and the value maps to its category for the defined locale.\n\t     *\n\t     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgPlural = (function () {\n\t        /**\n\t         * @param {?} _localization\n\t         */\n\t        function NgPlural(_localization) {\n\t            this._localization = _localization;\n\t            this._caseViews = {};\n\t        }\n\t        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                this._switchValue = value;\n\t                this._updateView();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} switchView\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype._updateView = function () {\n\t            this._clearViews();\n\t            var /** @type {?} */ cases = Object.keys(this._caseViews);\n\t            var /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n\t            this._activateView(this._caseViews[key]);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype._clearViews = function () {\n\t            if (this._activeView)\n\t                this._activeView.destroy();\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype._activateView = function (view) {\n\t            if (view) {\n\t                this._activeView = view;\n\t                this._activeView.create();\n\t            }\n\t        };\n\t        NgPlural.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPlural.ctorParameters = function () { return [\n\t            { type: NgLocalization, },\n\t        ]; };\n\t        NgPlural.propDecorators = {\n\t            'ngPlural': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgPlural;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n\t     *             given expression matches the plural expression according to CLDR rules.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <template ngPluralCase=\"=0\">...</template>\n\t     *   <template ngPluralCase=\"other\">...</template>\n\t     * </some-element>\n\t     * ```\n\t     *\n\t     * See {\\@link NgPlural} for more details and example.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgPluralCase = (function () {\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} template\n\t         * @param {?} viewContainer\n\t         * @param {?} ngPlural\n\t         */\n\t        function NgPluralCase(value, template, viewContainer, ngPlural) {\n\t            this.value = value;\n\t            var isANumber = !isNaN(Number(value));\n\t            ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n\t        }\n\t        NgPluralCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPluralCase.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n\t        ]; };\n\t        return NgPluralCase;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Update an HTML element styles.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"objExp\">...</some-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * The styles are updated according to the value of the expression evaluation:\n\t     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n\t     * - values are the values assigned to those properties (expressed in the given unit).\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgStyle = (function () {\n\t        /**\n\t         * @param {?} _differs\n\t         * @param {?} _ngEl\n\t         * @param {?} _renderer\n\t         */\n\t        function NgStyle(_differs, _ngEl, _renderer) {\n\t            this._differs = _differs;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t        }\n\t        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n\t            /**\n\t             * @param {?} v\n\t             * @return {?}\n\t             */\n\t            set: function (v) {\n\t                this._ngStyle = v;\n\t                if (!this._differ && v) {\n\t                    this._differ = this._differs.find(v).create(null);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgStyle.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n\t                if (changes) {\n\t                    this._applyChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgStyle.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n\t            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t        };\n\t        /**\n\t         * @param {?} nameAndUnit\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n\t            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n\t            value = value && unit ? \"\" + value + unit : value;\n\t            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n\t        };\n\t        NgStyle.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgStyle.ctorParameters = function () { return [\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ]; };\n\t        NgStyle.propDecorators = {\n\t            'ngStyle': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgStyle;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n\t     *           [ngOutletContext]=\"objectExpression\">\n\t     * </template>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n\t     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n\t     * available within the `TemplateRef`.\n\t     *\n\t     * Note: using the key `$implicit` in the context object will set it's value as default.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgTemplateOutlet = (function () {\n\t        /**\n\t         * @param {?} _viewContainerRef\n\t         */\n\t        function NgTemplateOutlet(_viewContainerRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t        }\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n\t            /**\n\t             * @param {?} context\n\t             * @return {?}\n\t             */\n\t            set: function (context) { this._context = context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n\t            /**\n\t             * @param {?} templateRef\n\t             * @return {?}\n\t             */\n\t            set: function (templateRef) { this._templateRef = templateRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n\t            if (this._viewRef) {\n\t                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n\t            }\n\t            if (this._templateRef) {\n\t                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n\t            }\n\t        };\n\t        NgTemplateOutlet.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgTemplateOutlet.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t        ]; };\n\t        NgTemplateOutlet.propDecorators = {\n\t            'ngOutletContext': [{ type: _angular_core.Input },],\n\t            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgTemplateOutlet;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular directives that are likely to be used in each and every Angular\n\t     * application.\n\t     */\n\t    var /** @type {?} */ COMMON_DIRECTIVES = [\n\t        NgClass,\n\t        NgFor,\n\t        NgIf,\n\t        NgTemplateOutlet,\n\t        NgStyle,\n\t        NgSwitch,\n\t        NgSwitchCase,\n\t        NgSwitchDefault,\n\t        NgPlural,\n\t        NgPluralCase,\n\t    ];\n\t\n\t    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n\t    var /** @type {?} */ isObservable = _angular_core.__core_private__.isObservable;\n\t\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends$4(BaseError, _super);\n\t        /**\n\t         * @param {?} message\n\t         */\n\t        function BaseError(message) {\n\t            _super.call(this, message);\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            // TODO(bradfordcsmith): Remove this hack when\n\t            //     google/closure-compiler/issues/2102 is fixed.\n\t            var nativeError = new Error(message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.message; },\n\t            /**\n\t             * @param {?} message\n\t             * @return {?}\n\t             */\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return ((this._nativeError)).stack; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) { ((this._nativeError)).stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends$4(WrappedError, _super);\n\t        /**\n\t         * @param {?} message\n\t         * @param {?} error\n\t         */\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var InvalidPipeArgumentError = (function (_super) {\n\t        __extends$3(InvalidPipeArgumentError, _super);\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} value\n\t         */\n\t        function InvalidPipeArgumentError(type, value) {\n\t            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n\t        }\n\t        return InvalidPipeArgumentError;\n\t    }(BaseError));\n\t\n\t    var ObservableStrategy = (function () {\n\t        function ObservableStrategy() {\n\t        }\n\t        /**\n\t         * @param {?} async\n\t         * @param {?} updateLatestValue\n\t         * @return {?}\n\t         */\n\t        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n\t        };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n\t        return ObservableStrategy;\n\t    }());\n\t    var PromiseStrategy = (function () {\n\t        function PromiseStrategy() {\n\t        }\n\t        /**\n\t         * @param {?} async\n\t         * @param {?} updateLatestValue\n\t         * @return {?}\n\t         */\n\t        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.then(updateLatestValue, function (e) { throw e; });\n\t        };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        PromiseStrategy.prototype.dispose = function (subscription) { };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n\t        return PromiseStrategy;\n\t    }());\n\t    var /** @type {?} */ _promiseStrategy = new PromiseStrategy();\n\t    var /** @type {?} */ _observableStrategy = new ObservableStrategy();\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n\t     * \\@howToUse `observable_or_promise_expression | async`\n\t     * \\@description\n\t     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n\t     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n\t     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n\t     * potential memory leaks.\n\t     *\n\t     *\n\t     * ## Examples\n\t     *\n\t     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n\t     * promise.\n\t     *\n\t     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n\t     *\n\t     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n\t     * to the view. The Observable continuously updates the view with the current time.\n\t     *\n\t     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var AsyncPipe = (function () {\n\t        /**\n\t         * @param {?} _ref\n\t         */\n\t        function AsyncPipe(_ref) {\n\t            this._ref = _ref;\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t            this._strategy = null;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype.ngOnDestroy = function () {\n\t            if (this._subscription) {\n\t                this._dispose();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype.transform = function (obj) {\n\t            if (!this._obj) {\n\t                if (obj) {\n\t                    this._subscribe(obj);\n\t                }\n\t                this._latestReturnedValue = this._latestValue;\n\t                return this._latestValue;\n\t            }\n\t            if (obj !== this._obj) {\n\t                this._dispose();\n\t                return this.transform(obj);\n\t            }\n\t            if (this._latestValue === this._latestReturnedValue) {\n\t                return this._latestReturnedValue;\n\t            }\n\t            this._latestReturnedValue = this._latestValue;\n\t            return _angular_core.WrappedValue.wrap(this._latestValue);\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._subscribe = function (obj) {\n\t            var _this = this;\n\t            this._obj = obj;\n\t            this._strategy = this._selectStrategy(obj);\n\t            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._selectStrategy = function (obj) {\n\t            if (isPromise(obj)) {\n\t                return _promiseStrategy;\n\t            }\n\t            if (isObservable(obj)) {\n\t                return _observableStrategy;\n\t            }\n\t            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._dispose = function () {\n\t            this._strategy.dispose(this._subscription);\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t        };\n\t        /**\n\t         * @param {?} async\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n\t            if (async === this._obj) {\n\t                this._latestValue = value;\n\t                this._ref.markForCheck();\n\t            }\n\t        };\n\t        AsyncPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        AsyncPipe.ctorParameters = function () { return [\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ]; };\n\t        return AsyncPipe;\n\t    }());\n\t\n\t    var NumberFormatStyle = {};\n\t    NumberFormatStyle.Decimal = 0;\n\t    NumberFormatStyle.Percent = 1;\n\t    NumberFormatStyle.Currency = 2;\n\t    NumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\n\t    NumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\n\t    NumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n\t    var NumberFormatter = (function () {\n\t        function NumberFormatter() {\n\t        }\n\t        /**\n\t         * @param {?} num\n\t         * @param {?} locale\n\t         * @param {?} style\n\t         * @param {?=} __3\n\t         * @return {?}\n\t         */\n\t        NumberFormatter.format = function (num, locale, style, _a) {\n\t            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n\t            var /** @type {?} */ options = {\n\t                minimumIntegerDigits: minimumIntegerDigits,\n\t                minimumFractionDigits: minimumFractionDigits,\n\t                maximumFractionDigits: maximumFractionDigits,\n\t                style: NumberFormatStyle[style].toLowerCase()\n\t            };\n\t            if (style == NumberFormatStyle.Currency) {\n\t                options.currency = currency;\n\t                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n\t            }\n\t            return new Intl.NumberFormat(locale, options).format(num);\n\t        };\n\t        return NumberFormatter;\n\t    }());\n\t    var /** @type {?} */ DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\t    var /** @type {?} */ PATTERN_ALIASES = {\n\t        // Keys are quoted so they do not get renamed during closure compilation.\n\t        'yMMMdjms': datePartGetterFactory(combine([\n\t            digitCondition('year', 1),\n\t            nameCondition('month', 3),\n\t            digitCondition('day', 1),\n\t            digitCondition('hour', 1),\n\t            digitCondition('minute', 1),\n\t            digitCondition('second', 1),\n\t        ])),\n\t        'yMdjm': datePartGetterFactory(combine([\n\t            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n\t            digitCondition('hour', 1), digitCondition('minute', 1)\n\t        ])),\n\t        'yMMMMEEEEd': datePartGetterFactory(combine([\n\t            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n\t            digitCondition('day', 1)\n\t        ])),\n\t        'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n\t        'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n\t        'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n\t        'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n\t        'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n\t    };\n\t    var /** @type {?} */ DATE_FORMATS = {\n\t        // Keys are quoted so they do not get renamed.\n\t        'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n\t        'yy': datePartGetterFactory(digitCondition('year', 2)),\n\t        'y': datePartGetterFactory(digitCondition('year', 1)),\n\t        'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n\t        'MMM': datePartGetterFactory(nameCondition('month', 3)),\n\t        'MM': datePartGetterFactory(digitCondition('month', 2)),\n\t        'M': datePartGetterFactory(digitCondition('month', 1)),\n\t        'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n\t        'L': datePartGetterFactory(nameCondition('month', 1)),\n\t        'dd': datePartGetterFactory(digitCondition('day', 2)),\n\t        'd': datePartGetterFactory(digitCondition('day', 1)),\n\t        'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n\t        'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n\t        'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n\t        'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        'jj': datePartGetterFactory(digitCondition('hour', 2)),\n\t        'j': datePartGetterFactory(digitCondition('hour', 1)),\n\t        'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n\t        'm': datePartGetterFactory(digitCondition('minute', 1)),\n\t        'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n\t        's': datePartGetterFactory(digitCondition('second', 1)),\n\t        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n\t        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n\t        // fractions\n\t        'sss': datePartGetterFactory(digitCondition('second', 3)),\n\t        'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n\t        'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n\t        'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n\t        'E': datePartGetterFactory(nameCondition('weekday', 1)),\n\t        'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        'Z': timeZoneGetter('short'),\n\t        'z': timeZoneGetter('long'),\n\t        'ww': datePartGetterFactory({}),\n\t        // first Thursday of the year. not support ?\n\t        'w': datePartGetterFactory({}),\n\t        // of the year not support ?\n\t        'G': datePartGetterFactory(nameCondition('era', 1)),\n\t        'GG': datePartGetterFactory(nameCondition('era', 2)),\n\t        'GGG': datePartGetterFactory(nameCondition('era', 3)),\n\t        'GGGG': datePartGetterFactory(nameCondition('era', 4))\n\t    };\n\t    /**\n\t     * @param {?} inner\n\t     * @return {?}\n\t     */\n\t    function digitModifier(inner) {\n\t        return function (date, locale) {\n\t            var /** @type {?} */ result = inner(date, locale);\n\t            return result.length == 1 ? '0' + result : result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} inner\n\t     * @return {?}\n\t     */\n\t    function hourClockExtractor(inner) {\n\t        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n\t    }\n\t    /**\n\t     * @param {?} inner\n\t     * @return {?}\n\t     */\n\t    function hourExtractor(inner) {\n\t        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n\t    }\n\t    /**\n\t     * @param {?} date\n\t     * @param {?} locale\n\t     * @param {?} options\n\t     * @return {?}\n\t     */\n\t    function intlDateFormat(date, locale, options) {\n\t        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n\t    }\n\t    /**\n\t     * @param {?} timezone\n\t     * @return {?}\n\t     */\n\t    function timeZoneGetter(timezone) {\n\t        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n\t        var /** @type {?} */ options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n\t        return function (date, locale) {\n\t            var /** @type {?} */ result = intlDateFormat(date, locale, options);\n\t            // Then extract first 3 letters that related to hours\n\t            return result ? result.substring(3) : '';\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} options\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function hour12Modify(options, value) {\n\t        options.hour12 = value;\n\t        return options;\n\t    }\n\t    /**\n\t     * @param {?} prop\n\t     * @param {?} len\n\t     * @return {?}\n\t     */\n\t    function digitCondition(prop, len) {\n\t        var /** @type {?} */ result = {};\n\t        result[prop] = len === 2 ? '2-digit' : 'numeric';\n\t        return result;\n\t    }\n\t    /**\n\t     * @param {?} prop\n\t     * @param {?} len\n\t     * @return {?}\n\t     */\n\t    function nameCondition(prop, len) {\n\t        var /** @type {?} */ result = {};\n\t        if (len < 4) {\n\t            result[prop] = len > 1 ? 'short' : 'narrow';\n\t        }\n\t        else {\n\t            result[prop] = 'long';\n\t        }\n\t        return result;\n\t    }\n\t    /**\n\t     * @param {?} options\n\t     * @return {?}\n\t     */\n\t    function combine(options) {\n\t        return (_a = ((Object))).assign.apply(_a, [{}].concat(options));\n\t        var _a;\n\t    }\n\t    /**\n\t     * @param {?} ret\n\t     * @return {?}\n\t     */\n\t    function datePartGetterFactory(ret) {\n\t        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n\t    }\n\t    var /** @type {?} */ DATE_FORMATTER_CACHE = new Map();\n\t    /**\n\t     * @param {?} format\n\t     * @param {?} date\n\t     * @param {?} locale\n\t     * @return {?}\n\t     */\n\t    function dateFormatter(format, date, locale) {\n\t        var /** @type {?} */ fn = PATTERN_ALIASES[format];\n\t        if (fn)\n\t            return fn(date, locale);\n\t        var /** @type {?} */ cacheKey = format;\n\t        var /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\t        if (!parts) {\n\t            parts = [];\n\t            var /** @type {?} */ match = void 0;\n\t            DATE_FORMATS_SPLIT.exec(format);\n\t            while (format) {\n\t                match = DATE_FORMATS_SPLIT.exec(format);\n\t                if (match) {\n\t                    parts = parts.concat(match.slice(1));\n\t                    format = parts.pop();\n\t                }\n\t                else {\n\t                    parts.push(format);\n\t                    format = null;\n\t                }\n\t            }\n\t            DATE_FORMATTER_CACHE.set(cacheKey, parts);\n\t        }\n\t        return parts.reduce(function (text, part) {\n\t            var /** @type {?} */ fn = DATE_FORMATS[part];\n\t            return text + (fn ? fn(date, locale) : partToTime(part));\n\t        }, '');\n\t    }\n\t    /**\n\t     * @param {?} part\n\t     * @return {?}\n\t     */\n\t    function partToTime(part) {\n\t        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n\t    }\n\t    var DateFormatter = (function () {\n\t        function DateFormatter() {\n\t        }\n\t        /**\n\t         * @param {?} date\n\t         * @param {?} locale\n\t         * @param {?} pattern\n\t         * @return {?}\n\t         */\n\t        DateFormatter.format = function (date, locale, pattern) {\n\t            return dateFormatter(pattern, date, locale);\n\t        };\n\t        return DateFormatter;\n\t    }());\n\t\n\t    var /** @type {?} */ ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a date according to locale rules.\n\t     * \\@howToUse `date_expression | date[:format]`\n\t     * \\@description\n\t     *\n\t     * Where:\n\t     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n\t     * (https://www.w3.org/TR/NOTE-datetime).\n\t     * - `format` indicates which date/time components to include. The format can be predefined as\n\t     *   shown below or custom as shown in the table.\n\t     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n\t     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n\t     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n\t     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n\t     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n\t     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n\t     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n\t     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n\t     *\n\t     *\n\t     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n\t     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n\t     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n\t     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n\t     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n\t     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n\t     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n\t     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n\t     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n\t     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n\t     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n\t     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n\t     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n\t     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n\t     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n\t     *\n\t     * In javascript, only the components specified will be respected (not the ordering,\n\t     * punctuations, ...) and details of the formatting will be dependent on the locale.\n\t     *\n\t     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n\t     *\n\t     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n\t     * applied and the formatted text will have the same day, month and year of the expression.\n\t     *\n\t     * WARNINGS:\n\t     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n\t     *   Instead users should treat the date as an immutable object and change the reference when the\n\t     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n\t     *   which would be an expensive operation).\n\t     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n\t     *   browsers.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n\t     * in the _local_ time and locale is 'en-US':\n\t     *\n\t     * ```\n\t     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n\t     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n\t     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n\t     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n\t     * ```\n\t     *\n\t     * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var DatePipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function DatePipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} pattern\n\t         * @return {?}\n\t         */\n\t        DatePipe.prototype.transform = function (value, pattern) {\n\t            if (pattern === void 0) { pattern = 'mediumDate'; }\n\t            var /** @type {?} */ date;\n\t            if (isBlank$1(value) || value !== value)\n\t                return null;\n\t            if (typeof value === 'string') {\n\t                value = value.trim();\n\t            }\n\t            if (isDate(value)) {\n\t                date = value;\n\t            }\n\t            else if (NumberWrapper.isNumeric(value)) {\n\t                date = new Date(parseFloat(value));\n\t            }\n\t            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n\t                /**\n\t                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n\t                * before Date creation to avoid time offset and errors in the new Date.\n\t                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n\t                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n\t                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n\t                * is applied\n\t                * Note: ISO months are 0 for January, 1 for February, ...\n\t                */\n\t                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n\t                date = new Date(y, m - 1, d);\n\t            }\n\t            else {\n\t                date = new Date(value);\n\t            }\n\t            if (!isDate(date)) {\n\t                var /** @type {?} */ match = void 0;\n\t                if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n\t                    date = isoStringToDate(match);\n\t                }\n\t                else {\n\t                    throw new InvalidPipeArgumentError(DatePipe, value);\n\t                }\n\t            }\n\t            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n\t        };\n\t        /** @internal */\n\t        DatePipe._ALIASES = {\n\t            'medium': 'yMMMdjms',\n\t            'short': 'yMdjm',\n\t            'fullDate': 'yMMMMEEEEd',\n\t            'longDate': 'yMMMMd',\n\t            'mediumDate': 'yMMMd',\n\t            'shortDate': 'yMd',\n\t            'mediumTime': 'jms',\n\t            'shortTime': 'jm'\n\t        };\n\t        DatePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DatePipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return DatePipe;\n\t    }());\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank$1(obj) {\n\t        return obj == null || obj === '';\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isDate(obj) {\n\t        return obj instanceof Date && !isNaN(obj.valueOf());\n\t    }\n\t    /**\n\t     * @param {?} match\n\t     * @return {?}\n\t     */\n\t    function isoStringToDate(match) {\n\t        var /** @type {?} */ date = new Date(0);\n\t        var /** @type {?} */ tzHour = 0;\n\t        var /** @type {?} */ tzMin = 0;\n\t        var /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n\t        var /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\t        if (match[9]) {\n\t            tzHour = toInt(match[9] + match[10]);\n\t            tzMin = toInt(match[9] + match[11]);\n\t        }\n\t        dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n\t        var /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n\t        var /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n\t        var /** @type {?} */ s = toInt(match[6] || '0');\n\t        var /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n\t        timeSetter.call(date, h, m, s, ms);\n\t        return date;\n\t    }\n\t    /**\n\t     * @param {?} str\n\t     * @return {?}\n\t     */\n\t    function toInt(str) {\n\t        return parseInt(str, 10);\n\t    }\n\t\n\t    var /** @type {?} */ _INTERPOLATION_REGEXP = /#/g;\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n\t     * \\@howToUse `expression | i18nPlural:mapping`\n\t     * \\@description\n\t     *\n\t     *  Where:\n\t     *  - `expression` is a number.\n\t     *  - `mapping` is an object that mimics the ICU format, see\n\t     *    http://userguide.icu-project.org/formatparse/messages\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var I18nPluralPipe = (function () {\n\t        /**\n\t         * @param {?} _localization\n\t         */\n\t        function I18nPluralPipe(_localization) {\n\t            this._localization = _localization;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} pluralMap\n\t         * @return {?}\n\t         */\n\t        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n\t            if (value == null)\n\t                return '';\n\t            if (typeof pluralMap !== 'object' || pluralMap === null) {\n\t                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n\t            }\n\t            var /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n\t            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n\t        };\n\t        I18nPluralPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nPluralPipe.ctorParameters = function () { return [\n\t            { type: NgLocalization, },\n\t        ]; };\n\t        return I18nPluralPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Generic selector that displays the string that matches the current value.\n\t     * \\@howToUse `expression | i18nSelect:mapping`\n\t     * \\@description\n\t     *\n\t     *  Where `mapping` is an object that indicates the text that should be displayed\n\t     *  for different values of the provided `expression`.\n\t     *  If none of the keys of the mapping match the value of the `expression`, then the content\n\t     *  of the `other` key is returned when present, otherwise an empty string is returned.\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n\t     *\n\t     *  \\@experimental\n\t     */\n\t    var I18nSelectPipe = (function () {\n\t        function I18nSelectPipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} mapping\n\t         * @return {?}\n\t         */\n\t        I18nSelectPipe.prototype.transform = function (value, mapping) {\n\t            if (value == null)\n\t                return '';\n\t            if (typeof mapping !== 'object' || typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n\t            }\n\t            if (mapping.hasOwnProperty(value)) {\n\t                return mapping[value];\n\t            }\n\t            if (mapping.hasOwnProperty('other')) {\n\t                return mapping['other'];\n\t            }\n\t            return '';\n\t        };\n\t        I18nSelectPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nSelectPipe.ctorParameters = function () { return []; };\n\t        return I18nSelectPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Converts value into JSON string.\n\t     * \\@howToUse `expression | json`\n\t     * \\@description\n\t     *\n\t     * Converts value into string using `JSON.stringify`. Useful for debugging.\n\t     *\n\t     * ### Example\n\t     * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var JsonPipe = (function () {\n\t        function JsonPipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n\t        JsonPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        JsonPipe.ctorParameters = function () { return []; };\n\t        return JsonPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Transforms string to lowercase.\n\t     * \\@howToUse `expression | lowercase`\n\t     * \\@description\n\t     *\n\t     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var LowerCasePipe = (function () {\n\t        function LowerCasePipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        LowerCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n\t            }\n\t            return value.toLowerCase();\n\t        };\n\t        LowerCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        LowerCasePipe.ctorParameters = function () { return []; };\n\t        return LowerCasePipe;\n\t    }());\n\t\n\t    var /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n\t    /**\n\t     * @param {?} pipe\n\t     * @param {?} locale\n\t     * @param {?} value\n\t     * @param {?} style\n\t     * @param {?} digits\n\t     * @param {?=} currency\n\t     * @param {?=} currencyAsSymbol\n\t     * @return {?}\n\t     */\n\t    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n\t        if (currency === void 0) { currency = null; }\n\t        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n\t        if (value == null)\n\t            return null;\n\t        // Convert strings to numbers\n\t        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n\t        if (typeof value !== 'number') {\n\t            throw new InvalidPipeArgumentError(pipe, value);\n\t        }\n\t        var /** @type {?} */ minInt;\n\t        var /** @type {?} */ minFraction;\n\t        var /** @type {?} */ maxFraction;\n\t        if (style !== NumberFormatStyle.Currency) {\n\t            // rely on Intl default for currency\n\t            minInt = 1;\n\t            minFraction = 0;\n\t            maxFraction = 3;\n\t        }\n\t        if (digits) {\n\t            var /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n\t            if (parts === null) {\n\t                throw new Error(digits + \" is not a valid digit info for number pipes\");\n\t            }\n\t            if (parts[1] != null) {\n\t                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n\t            }\n\t            if (parts[3] != null) {\n\t                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n\t            }\n\t            if (parts[5] != null) {\n\t                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n\t            }\n\t        }\n\t        return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n\t            minimumIntegerDigits: minInt,\n\t            minimumFractionDigits: minFraction,\n\t            maximumFractionDigits: maxFraction,\n\t            currency: currency,\n\t            currencyAsSymbol: currencyAsSymbol,\n\t        });\n\t    }\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a number according to locale rules.\n\t     * \\@howToUse `number_expression | number[:digitInfo]`\n\t     *\n\t     * Formats a number as text. Group sizing and separator and other locale-specific\n\t     * configurations are based on the active locale.\n\t     *\n\t     * where `expression` is a number:\n\t     *  - `digitInfo` is a `string` which has a following format: <br>\n\t     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n\t     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n\t     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n\t     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n\t     *\n\t     * For more information on the acceptable range for each of these numbers and other\n\t     * details see your native internationalization library.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var DecimalPipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function DecimalPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} digits\n\t         * @return {?}\n\t         */\n\t        DecimalPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n\t        };\n\t        DecimalPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DecimalPipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return DecimalPipe;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a number as a percentage according to locale rules.\n\t     * \\@howToUse `number_expression | percent[:digitInfo]`\n\t     *\n\t     * \\@description\n\t     *\n\t     * Formats a number as percentage.\n\t     *\n\t     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var PercentPipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function PercentPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} digits\n\t         * @return {?}\n\t         */\n\t        PercentPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n\t        };\n\t        PercentPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PercentPipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return PercentPipe;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a number as currency using locale rules.\n\t     * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n\t     * \\@description\n\t     *\n\t     * Use `currency` to format a number as currency.\n\t     *\n\t     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n\t     *    as `USD` for the US dollar and `EUR` for the euro.\n\t     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n\t     *   - `true`: use symbol (e.g. `$`).\n\t     *   - `false`(default): use code (e.g. `USD`).\n\t     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var CurrencyPipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function CurrencyPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} currencyCode\n\t         * @param {?=} symbolDisplay\n\t         * @param {?=} digits\n\t         * @return {?}\n\t         */\n\t        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n\t            if (currencyCode === void 0) { currencyCode = 'USD'; }\n\t            if (symbolDisplay === void 0) { symbolDisplay = false; }\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n\t        };\n\t        CurrencyPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CurrencyPipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return CurrencyPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n\t     * \\@howToUse `array_or_string_expression | slice:start[:end]`\n\t     * \\@description\n\t     *\n\t     * Where the input expression is a `List` or `String`, and:\n\t     * - `start`: The starting index of the subset to return.\n\t     *   - **a positive integer**: return the item at `start` index and all items after\n\t     *     in the list or string expression.\n\t     *   - **a negative integer**: return the item at `start` index from the end and all items after\n\t     *     in the list or string expression.\n\t     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n\t     *   - **if negative and greater than the size of the expression**: return entire list or string.\n\t     * - `end`: The ending index of the subset to return.\n\t     *   - **omitted**: return all items until the end.\n\t     *   - **if positive**: return all items before `end` index of the list or string.\n\t     *   - **if negative**: return all items before `end` index from the end of the list or string.\n\t     *\n\t     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n\t     * and `String.prototype.slice()`.\n\t     *\n\t     * When operating on a [List], the returned list is always a copy even when all\n\t     * the elements are being returned.\n\t     *\n\t     * When operating on a blank value, the pipe returns the blank value.\n\t     *\n\t     * ## List Example\n\t     *\n\t     * This `ngFor` example:\n\t     *\n\t     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n\t     *\n\t     * produces the following:\n\t     *\n\t     *     <li>b</li>\n\t     *     <li>c</li>\n\t     *\n\t     * ## String Examples\n\t     *\n\t     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var SlicePipe = (function () {\n\t        function SlicePipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} start\n\t         * @param {?=} end\n\t         * @return {?}\n\t         */\n\t        SlicePipe.prototype.transform = function (value, start, end) {\n\t            if (value == null)\n\t                return value;\n\t            if (!this.supports(value)) {\n\t                throw new InvalidPipeArgumentError(SlicePipe, value);\n\t            }\n\t            return value.slice(start, end);\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n\t        SlicePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SlicePipe.ctorParameters = function () { return []; };\n\t        return SlicePipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Transforms string to uppercase.\n\t     * \\@howToUse `expression | uppercase`\n\t     * \\@description\n\t     *\n\t     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var UpperCasePipe = (function () {\n\t        function UpperCasePipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        UpperCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n\t            }\n\t            return value.toUpperCase();\n\t        };\n\t        UpperCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        UpperCasePipe.ctorParameters = function () { return []; };\n\t        return UpperCasePipe;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular pipes that are likely to be used in each and every application.\n\t     */\n\t    var /** @type {?} */ COMMON_PIPES = [\n\t        AsyncPipe,\n\t        UpperCasePipe,\n\t        LowerCasePipe,\n\t        JsonPipe,\n\t        SlicePipe,\n\t        DecimalPipe,\n\t        PercentPipe,\n\t        CurrencyPipe,\n\t        DatePipe,\n\t        I18nPluralPipe,\n\t        I18nSelectPipe,\n\t    ];\n\t\n\t    /**\n\t     * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgFor}, ...\n\t     *\n\t     * \\@stable\n\t     */\n\t    var CommonModule = (function () {\n\t        function CommonModule() {\n\t        }\n\t        CommonModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        providers: [\n\t                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n\t                        ],\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CommonModule.ctorParameters = function () { return []; };\n\t        return CommonModule;\n\t    }());\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.10');\n\t\n\t    exports.NgLocalization = NgLocalization;\n\t    exports.CommonModule = CommonModule;\n\t    exports.NgClass = NgClass;\n\t    exports.NgFor = NgFor;\n\t    exports.NgIf = NgIf;\n\t    exports.NgPlural = NgPlural;\n\t    exports.NgPluralCase = NgPluralCase;\n\t    exports.NgStyle = NgStyle;\n\t    exports.NgSwitch = NgSwitch;\n\t    exports.NgSwitchCase = NgSwitchCase;\n\t    exports.NgSwitchDefault = NgSwitchDefault;\n\t    exports.NgTemplateOutlet = NgTemplateOutlet;\n\t    exports.AsyncPipe = AsyncPipe;\n\t    exports.DatePipe = DatePipe;\n\t    exports.I18nPluralPipe = I18nPluralPipe;\n\t    exports.I18nSelectPipe = I18nSelectPipe;\n\t    exports.JsonPipe = JsonPipe;\n\t    exports.LowerCasePipe = LowerCasePipe;\n\t    exports.CurrencyPipe = CurrencyPipe;\n\t    exports.DecimalPipe = DecimalPipe;\n\t    exports.PercentPipe = PercentPipe;\n\t    exports.SlicePipe = SlicePipe;\n\t    exports.UpperCasePipe = UpperCasePipe;\n\t    exports.VERSION = VERSION;\n\t    exports.Version = _angular_core.Version;\n\t    exports.PlatformLocation = PlatformLocation;\n\t    exports.LOCATION_INITIALIZED = LOCATION_INITIALIZED;\n\t    exports.LocationStrategy = LocationStrategy;\n\t    exports.APP_BASE_HREF = APP_BASE_HREF;\n\t    exports.HashLocationStrategy = HashLocationStrategy;\n\t    exports.PathLocationStrategy = PathLocationStrategy;\n\t    exports.Location = Location;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tvar toSubscriber_1 = __webpack_require__(23);\n\tvar observable_1 = __webpack_require__(10);\n\t/**\n\t * A representation of any set of values over any amount of time. This the most basic building block\n\t * of RxJS.\n\t *\n\t * @class Observable<T>\n\t */\n\tvar Observable = (function () {\n\t    /**\n\t     * @constructor\n\t     * @param {Function} subscribe the function that is  called when the Observable is\n\t     * initially subscribed to. This function is given a Subscriber, to which new values\n\t     * can be `next`ed, or an `error` method can be called to raise an error, or\n\t     * `complete` can be called to notify of a successful completion.\n\t     */\n\t    function Observable(subscribe) {\n\t        this._isScalar = false;\n\t        if (subscribe) {\n\t            this._subscribe = subscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Creates a new Observable, with this Observable as the source, and the passed\n\t     * operator defined as the new observable's operator.\n\t     * @method lift\n\t     * @param {Operator} operator the operator defining the operation to take on the observable\n\t     * @return {Observable} a new observable with the Operator applied\n\t     */\n\t    Observable.prototype.lift = function (operator) {\n\t        var observable = new Observable();\n\t        observable.source = this;\n\t        observable.operator = operator;\n\t        return observable;\n\t    };\n\t    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n\t        var operator = this.operator;\n\t        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\t        if (operator) {\n\t            operator.call(sink, this.source);\n\t        }\n\t        else {\n\t            sink.add(this._trySubscribe(sink));\n\t        }\n\t        if (sink.syncErrorThrowable) {\n\t            sink.syncErrorThrowable = false;\n\t            if (sink.syncErrorThrown) {\n\t                throw sink.syncErrorValue;\n\t            }\n\t        }\n\t        return sink;\n\t    };\n\t    Observable.prototype._trySubscribe = function (sink) {\n\t        try {\n\t            return this._subscribe(sink);\n\t        }\n\t        catch (err) {\n\t            sink.syncErrorThrown = true;\n\t            sink.syncErrorValue = err;\n\t            sink.error(err);\n\t        }\n\t    };\n\t    /**\n\t     * @method forEach\n\t     * @param {Function} next a handler for each value emitted by the observable\n\t     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n\t     * @return {Promise} a promise that either resolves on observable completion or\n\t     *  rejects with the handled error\n\t     */\n\t    Observable.prototype.forEach = function (next, PromiseCtor) {\n\t        var _this = this;\n\t        if (!PromiseCtor) {\n\t            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n\t                PromiseCtor = root_1.root.Rx.config.Promise;\n\t            }\n\t            else if (root_1.root.Promise) {\n\t                PromiseCtor = root_1.root.Promise;\n\t            }\n\t        }\n\t        if (!PromiseCtor) {\n\t            throw new Error('no Promise impl found');\n\t        }\n\t        return new PromiseCtor(function (resolve, reject) {\n\t            // Must be declared in a separate statement to avoid a RefernceError when\n\t            // accessing subscription below in the closure due to Temporal Dead Zone.\n\t            var subscription;\n\t            subscription = _this.subscribe(function (value) {\n\t                if (subscription) {\n\t                    // if there is a subscription, then we can surmise\n\t                    // the next handling is asynchronous. Any errors thrown\n\t                    // need to be rejected explicitly and unsubscribe must be\n\t                    // called manually\n\t                    try {\n\t                        next(value);\n\t                    }\n\t                    catch (err) {\n\t                        reject(err);\n\t                        subscription.unsubscribe();\n\t                    }\n\t                }\n\t                else {\n\t                    // if there is NO subscription, then we're getting a nexted\n\t                    // value synchronously during subscription. We can just call it.\n\t                    // If it errors, Observable's `subscribe` will ensure the\n\t                    // unsubscription logic is called, then synchronously rethrow the error.\n\t                    // After that, Promise will trap the error and send it\n\t                    // down the rejection path.\n\t                    next(value);\n\t                }\n\t            }, reject, resolve);\n\t        });\n\t    };\n\t    Observable.prototype._subscribe = function (subscriber) {\n\t        return this.source.subscribe(subscriber);\n\t    };\n\t    /**\n\t     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n\t     * @method Symbol.observable\n\t     * @return {Observable} this instance of the observable\n\t     */\n\t    Observable.prototype[observable_1.observable] = function () {\n\t        return this;\n\t    };\n\t    // HACK: Since TypeScript inherits static properties too, we have to\n\t    // fight against TypeScript here so Subject can have a different static create signature\n\t    /**\n\t     * Creates a new cold Observable by calling the Observable constructor\n\t     * @static true\n\t     * @owner Observable\n\t     * @method create\n\t     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n\t     * @return {Observable} a new cold observable\n\t     */\n\t    Observable.create = function (subscribe) {\n\t        return new Observable(subscribe);\n\t    };\n\t    return Observable;\n\t}());\n\texports.Observable = Observable;\n\t//# sourceMappingURL=Observable.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.empty = {\n\t    closed: true,\n\t    next: function (value) { },\n\t    error: function (err) { throw err; },\n\t    complete: function () { }\n\t};\n\t//# sourceMappingURL=Observer.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar isFunction_1 = __webpack_require__(12);\n\tvar Subscription_1 = __webpack_require__(3);\n\tvar Observer_1 = __webpack_require__(8);\n\tvar rxSubscriber_1 = __webpack_require__(4);\n\t/**\n\t * Implements the {@link Observer} interface and extends the\n\t * {@link Subscription} class. While the {@link Observer} is the public API for\n\t * consuming the values of an {@link Observable}, all Observers get converted to\n\t * a Subscriber, in order to provide Subscription-like capabilities such as\n\t * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n\t * implementing operators, but it is rarely used as a public API.\n\t *\n\t * @class Subscriber<T>\n\t */\n\tvar Subscriber = (function (_super) {\n\t    __extends(Subscriber, _super);\n\t    /**\n\t     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n\t     * defined Observer or a `next` callback function.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     */\n\t    function Subscriber(destinationOrNext, error, complete) {\n\t        _super.call(this);\n\t        this.syncErrorValue = null;\n\t        this.syncErrorThrown = false;\n\t        this.syncErrorThrowable = false;\n\t        this.isStopped = false;\n\t        switch (arguments.length) {\n\t            case 0:\n\t                this.destination = Observer_1.empty;\n\t                break;\n\t            case 1:\n\t                if (!destinationOrNext) {\n\t                    this.destination = Observer_1.empty;\n\t                    break;\n\t                }\n\t                if (typeof destinationOrNext === 'object') {\n\t                    if (destinationOrNext instanceof Subscriber) {\n\t                        this.destination = destinationOrNext;\n\t                        this.destination.add(this);\n\t                    }\n\t                    else {\n\t                        this.syncErrorThrowable = true;\n\t                        this.destination = new SafeSubscriber(this, destinationOrNext);\n\t                    }\n\t                    break;\n\t                }\n\t            default:\n\t                this.syncErrorThrowable = true;\n\t                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n\t                break;\n\t        }\n\t    }\n\t    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n\t    /**\n\t     * A static factory for a Subscriber, given a (potentially partial) definition\n\t     * of an Observer.\n\t     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n\t     * Observer represented by the given arguments.\n\t     */\n\t    Subscriber.create = function (next, error, complete) {\n\t        var subscriber = new Subscriber(next, error, complete);\n\t        subscriber.syncErrorThrowable = false;\n\t        return subscriber;\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `next` from\n\t     * the Observable, with a value. The Observable may call this method 0 or more\n\t     * times.\n\t     * @param {T} [value] The `next` value.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.next = function (value) {\n\t        if (!this.isStopped) {\n\t            this._next(value);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `error` from\n\t     * the Observable, with an attached {@link Error}. Notifies the Observer that\n\t     * the Observable has experienced an error condition.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._error(err);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive a valueless notification of type\n\t     * `complete` from the Observable. Notifies the Observer that the Observable\n\t     * has finished sending push-based notifications.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._complete();\n\t        }\n\t    };\n\t    Subscriber.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.isStopped = true;\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    Subscriber.prototype._next = function (value) {\n\t        this.destination.next(value);\n\t    };\n\t    Subscriber.prototype._error = function (err) {\n\t        this.destination.error(err);\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._complete = function () {\n\t        this.destination.complete();\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._unsubscribeAndRecycle = function () {\n\t        var _a = this, _parent = _a._parent, _parents = _a._parents;\n\t        this._parent = null;\n\t        this._parents = null;\n\t        this.unsubscribe();\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this._parent = _parent;\n\t        this._parents = _parents;\n\t        return this;\n\t    };\n\t    return Subscriber;\n\t}(Subscription_1.Subscription));\n\texports.Subscriber = Subscriber;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SafeSubscriber = (function (_super) {\n\t    __extends(SafeSubscriber, _super);\n\t    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n\t        _super.call(this);\n\t        this._parentSubscriber = _parentSubscriber;\n\t        var next;\n\t        var context = this;\n\t        if (isFunction_1.isFunction(observerOrNext)) {\n\t            next = observerOrNext;\n\t        }\n\t        else if (observerOrNext) {\n\t            next = observerOrNext.next;\n\t            error = observerOrNext.error;\n\t            complete = observerOrNext.complete;\n\t            if (observerOrNext !== Observer_1.empty) {\n\t                context = Object.create(observerOrNext);\n\t                if (isFunction_1.isFunction(context.unsubscribe)) {\n\t                    this.add(context.unsubscribe.bind(context));\n\t                }\n\t                context.unsubscribe = this.unsubscribe.bind(this);\n\t            }\n\t        }\n\t        this._context = context;\n\t        this._next = next;\n\t        this._error = error;\n\t        this._complete = complete;\n\t    }\n\t    SafeSubscriber.prototype.next = function (value) {\n\t        if (!this.isStopped && this._next) {\n\t            var _parentSubscriber = this._parentSubscriber;\n\t            if (!_parentSubscriber.syncErrorThrowable) {\n\t                this.__tryOrUnsub(this._next, value);\n\t            }\n\t            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var _parentSubscriber = this._parentSubscriber;\n\t            if (this._error) {\n\t                if (!_parentSubscriber.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else if (!_parentSubscriber.syncErrorThrowable) {\n\t                this.unsubscribe();\n\t                throw err;\n\t            }\n\t            else {\n\t                _parentSubscriber.syncErrorValue = err;\n\t                _parentSubscriber.syncErrorThrown = true;\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.complete = function () {\n\t        var _this = this;\n\t        if (!this.isStopped) {\n\t            var _parentSubscriber = this._parentSubscriber;\n\t            if (this._complete) {\n\t                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n\t                if (!_parentSubscriber.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(wrappedComplete);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            this.unsubscribe();\n\t            throw err;\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            parent.syncErrorValue = err;\n\t            parent.syncErrorThrown = true;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    SafeSubscriber.prototype._unsubscribe = function () {\n\t        var _parentSubscriber = this._parentSubscriber;\n\t        this._context = null;\n\t        this._parentSubscriber = null;\n\t        _parentSubscriber.unsubscribe();\n\t    };\n\t    return SafeSubscriber;\n\t}(Subscriber));\n\t//# sourceMappingURL=Subscriber.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tfunction getSymbolObservable(context) {\n\t    var $$observable;\n\t    var Symbol = context.Symbol;\n\t    if (typeof Symbol === 'function') {\n\t        if (Symbol.observable) {\n\t            $$observable = Symbol.observable;\n\t        }\n\t        else {\n\t            $$observable = Symbol('observable');\n\t            Symbol.observable = $$observable;\n\t        }\n\t    }\n\t    else {\n\t        $$observable = '@@observable';\n\t    }\n\t    return $$observable;\n\t}\n\texports.getSymbolObservable = getSymbolObservable;\n\texports.observable = getSymbolObservable(root_1.root);\n\t/**\n\t * @deprecated use observable instead\n\t */\n\texports.$$observable = exports.observable;\n\t//# sourceMappingURL=observable.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t// typeof any so that it we don't have to cast when comparing a result to the error object\n\texports.errorObject = { e: {} };\n\t//# sourceMappingURL=errorObject.js.map\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t//# sourceMappingURL=isFunction.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {(function(r){return function(){var h=function(g,m,h,n){n=function(e){return h[e]?m[e]:(h[e]=1,m[e]={},m[e]=g[e](m[e]))};g[1]=function(e){var g=n(2);var k=function(a){var b;if(a){var c={};if(\"object\"!==typeof a)c[a]=!0;else{Array.isArray(a)||(a=Object.keys(a));var e=0;for(b=a.length;e<b;e++){var d=a[e];c[d]=!0}}return c}};var c=function(a){var b=function(a){var c=arguments.length;for(var d=-1,e=Array(c);++d<c;)e[d]=arguments[d];b.options.target?c=b.options.target:(c=a,e.shift());return g(b.options,\n\tc,e)};a&&(b.isBase=!0);b.options={};Object.defineProperties(b,h);return b};var h={deep:{get:function(){var a=this.isBase?c():this;a.options.deep=!0;return a}},own:{get:function(){var a=this.isBase?c():this;a.options.own=!0;return a}},allowNull:{get:function(){var a=this.isBase?c():this;a.options.allowNull=!0;return a}},nullDeletes:{get:function(){var a=this.isBase?c():this;a.options.nullDeletes=!0;return a}},concat:{get:function(){var a=this.isBase?c():this;a.options.concat=!0;return a}},clone:{get:function(){var a=\n\tthis.isBase?c():this;a.options.target={};return a}},notDeep:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notDeep=k(b);return a}}},deepOnly:{get:function(){var a=this.isBase?c():this;return function(b){a.options.deepOnly=k(b);return a}}},keys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.keys=k(b);return a}}},notKeys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notKeys=k(b);return a}}},transform:{get:function(){var a=this.isBase?\n\tc():this;return function(b){\"function\"===typeof b?a.options.globalTransform=b:b&&\"object\"===typeof b&&(a.options.transforms=b);return a}}},filter:{get:function(){var a=this.isBase?c():this;return function(b){\"function\"===typeof b?a.options.globalFilter=b:b&&\"object\"===typeof b&&(a.options.filters=b);return a}}}};return e=c(!0)};g[2]=function(e){var g;var k=function(a){return Array.isArray(a)};var c=function(a){return a&&\"[object Object]\"===Object.prototype.toString.call(a)||k(a)};var h=function(a,\n\tb,c){if(a.deep)return a.notDeep?!a.notDeep[b]:!0;if(a.deepOnly)return a.deepOnly[b]||c&&h(a,c)};return e=g=function(a,b,e,m){var d,n;if(!b||\"object\"!==typeof b&&\"function\"!==typeof b)b={};var q=0;for(n=e.length;q<n;q++){var l=e[q];if(null!=l)for(d in l){var f=l[d];var p=b[d];if(!(f===b||void 0===f||null===f&&!a.allowNull&&!a.nullDeletes||a.keys&&!a.keys[d]||a.notKeys&&a.notKeys[d]||a.own&&!l.hasOwnProperty(d)||a.globalFilter&&!a.globalFilter(f,d,l)||a.filters&&a.filters[d]&&!a.filters[d](f,d,l)))if(null===\n\tf&&a.nullDeletes)delete b[d];else switch(a.globalTransform&&(f=a.globalTransform(f,d,l)),a.transforms&&a.transforms[d]&&(f=a.transforms[d](f,d,l)),!1){case !(a.concat&&k(f)&&k(p)):b[d]=p.concat(f);break;case !(h(a,d,m)&&c(f)):p=c(p)?p:k(f)?[]:{};b[d]=g(a,p,[f],d);break;default:b[d]=f}}}return b}};return n};h=h({},{},{});return function(){var g=h(1);null!=(\"undefined\"!==typeof module&&null!==module?module.exports:void 0)?module.exports=g: true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(13)], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return g}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):window.extend=g}()}})(this)();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)(module)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar rx_pubsub_1 = __webpack_require__(2);\r\n\tvar extend = __webpack_require__(13);\r\n\tvar xdom_util_1 = __webpack_require__(29);\r\n\tvar component_injector_1 = __webpack_require__(25);\r\n\tvar ModalWindowComponent = (function () {\r\n\t    function ModalWindowComponent(pubsub, componentInjector) {\r\n\t        this.pubsub = pubsub;\r\n\t        this.componentInjector = componentInjector;\r\n\t        this.animationClass = 'fade';\r\n\t        this.showModalClass = 'in';\r\n\t        this.bodyOpenModalClass = 'modal-open';\r\n\t        this.defaultButtonsProperties = {\r\n\t            visible: true,\r\n\t            cancel: {\r\n\t                visible: true,\r\n\t                label: 'Cancel',\r\n\t                event: false\r\n\t            },\r\n\t            success: {\r\n\t                visible: true,\r\n\t                label: 'Save',\r\n\t                event: false\r\n\t            }\r\n\t        };\r\n\t        this.defaultProperties = {\r\n\t            title: '',\r\n\t            show: false,\r\n\t            hide: false,\r\n\t            componentSelector: false,\r\n\t            componentInputs: false,\r\n\t            htmlContent: '',\r\n\t            overlayClick: true,\r\n\t            customClass: '',\r\n\t            buttons: {\r\n\t                visible: true,\r\n\t                cancel: {\r\n\t                    visible: true,\r\n\t                    label: 'Cancel',\r\n\t                    event: false\r\n\t                },\r\n\t                success: {\r\n\t                    visible: true,\r\n\t                    label: 'Save',\r\n\t                    event: false\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t        this.properties = {};\r\n\t    }\r\n\t    Object.defineProperty(ModalWindowComponent.prototype, \"id\", {\r\n\t        set: function (eventName) {\r\n\t            if (eventName) {\r\n\t                this.eventName = eventName;\r\n\t                // remove previous subscription and create new one\r\n\t                this.unsubscribe();\r\n\t                this.subscribeToEvent();\r\n\t            }\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ModalWindowComponent.prototype.ngOnInit = function () {\r\n\t    };\r\n\t    ModalWindowComponent.prototype.ngOnDestroy = function () {\r\n\t        this.unsubscribe();\r\n\t        this.resetInjectedComponent();\r\n\t    };\r\n\t    ModalWindowComponent.prototype.cancelAction = function () {\r\n\t        if (this.properties.buttons.cancel.event) {\r\n\t            this.pubsub.publish(this.properties.buttons.cancel.event, true);\r\n\t        }\r\n\t        this.hide();\r\n\t    };\r\n\t    ModalWindowComponent.prototype.successAction = function () {\r\n\t        if (this.properties.buttons.success.event) {\r\n\t            this.pubsub.publish(this.properties.buttons.success.event, true);\r\n\t        }\r\n\t        else {\r\n\t            this.hide();\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.overlayClick = function () {\r\n\t        if (this.properties.overlayClick) {\r\n\t            this.cancelAction();\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.show = function () {\r\n\t        // add class to modal DOM element to make it visible\r\n\t        var modalDom = this.modalWindow.nativeElement;\r\n\t        if (!xdom_util_1.XDomUtil.hasClass(modalDom, this.showModalClass)) {\r\n\t            xdom_util_1.XDomUtil.addClass(modalDom, this.showModalClass);\r\n\t        }\r\n\t        // add class to modal body to disable the scrolling\r\n\t        var body = document.querySelector('body');\r\n\t        if (!xdom_util_1.XDomUtil.hasClass(body, this.bodyOpenModalClass)) {\r\n\t            xdom_util_1.XDomUtil.addClass(body, this.bodyOpenModalClass);\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.hide = function () {\r\n\t        var element = this.modalWindow.nativeElement;\r\n\t        xdom_util_1.XDomUtil.removeClass(element, this.showModalClass);\r\n\t        var body = document.querySelector('body');\r\n\t        xdom_util_1.XDomUtil.removeClass(body, this.bodyOpenModalClass);\r\n\t    };\r\n\t    ModalWindowComponent.prototype.subscribeToEvent = function () {\r\n\t        var _this = this;\r\n\t        this.eventSubscriber = this.pubsub.subscribe(this.eventName, function (data) {\r\n\t            _this.initModal(data);\r\n\t        });\r\n\t    };\r\n\t    ModalWindowComponent.prototype.initModal = function (properties) {\r\n\t        if (properties.show) {\r\n\t            // remove previously injected component\r\n\t            this.resetInjectedComponent();\r\n\t            // reset the properties\r\n\t            this.setProperties(properties);\r\n\t            // inject component\r\n\t            if (this.properties.componentSelector) {\r\n\t                this.injectedComponentRef = this.injectComponent(this.properties.componentSelector);\r\n\t                // set the components properties\r\n\t                this.setComponentProperties();\r\n\t            }\r\n\t            // display the modal\r\n\t            this.show();\r\n\t            // reset modal event subscriber\r\n\t            this.resetModalEventSubscriber();\r\n\t        }\r\n\t        else if (properties.hide) {\r\n\t            // remove previously injected component\r\n\t            this.resetInjectedComponent();\r\n\t            // reset the properties\r\n\t            this.setProperties(properties);\r\n\t            // hide the modal\r\n\t            this.hide();\r\n\t            // reset modal event subscriber\r\n\t            this.resetModalEventSubscriber();\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.unsubscribe = function () {\r\n\t        if (this.eventSubscriber) {\r\n\t            this.pubsub.unsubscribe(this.eventSubscriber);\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.injectComponent = function (componentSelector) {\r\n\t        var result;\r\n\t        if (componentSelector) {\r\n\t            result = this.componentInjector.inject(this.injectContainer, componentSelector);\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    ModalWindowComponent.prototype.setComponentProperties = function () {\r\n\t        if (this.properties.componentInputs && this.injectedComponentRef) {\r\n\t            this.componentInjector.setProperties(this.injectedComponentRef, this.properties.componentInputs);\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.resetInjectedComponent = function () {\r\n\t        if (this.injectedComponentRef) {\r\n\t            this.componentInjector.remove(this.injectedComponentRef);\r\n\t            this.injectedComponentRef = null;\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.setProperties = function (properties) {\r\n\t        this.properties = extend.deep({}, this.defaultProperties, properties);\r\n\t    };\r\n\t    ModalWindowComponent.prototype.resetModalEventSubscriber = function () {\r\n\t        // reset modal show/hide display\r\n\t        this.pubsub.publish(this.eventName, {});\r\n\t    };\r\n\t    return ModalWindowComponent;\r\n\t}());\r\n\t__decorate([\r\n\t    core_1.ViewChild('modalWindow'),\r\n\t    __metadata(\"design:type\", core_1.ElementRef)\r\n\t], ModalWindowComponent.prototype, \"modalWindow\", void 0);\r\n\t__decorate([\r\n\t    core_1.ViewChild('injectContainer', { read: core_1.ViewContainerRef }),\r\n\t    __metadata(\"design:type\", core_1.ViewContainerRef)\r\n\t], ModalWindowComponent.prototype, \"injectContainer\", void 0);\r\n\t__decorate([\r\n\t    core_1.Input(),\r\n\t    __metadata(\"design:type\", String)\r\n\t], ModalWindowComponent.prototype, \"animationClass\", void 0);\r\n\t__decorate([\r\n\t    core_1.Input(),\r\n\t    __metadata(\"design:type\", String),\r\n\t    __metadata(\"design:paramtypes\", [String])\r\n\t], ModalWindowComponent.prototype, \"id\", null);\r\n\tModalWindowComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-modal-window',\r\n\t        templateUrl: './modal-window.component.html',\r\n\t        styleUrls: ['./modal-window.component.css']\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub, component_injector_1.ComponentInjector])\r\n\t], ModalWindowComponent);\r\n\texports.ModalWindowComponent = ModalWindowComponent;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar rx_pubsub_1 = __webpack_require__(2);\r\n\tvar ModalWindowService = (function () {\r\n\t    function ModalWindowService(pubsub) {\r\n\t        this.pubsub = pubsub;\r\n\t    }\r\n\t    ModalWindowService.prototype.showModal = function (modalId, options) {\r\n\t        if (options === void 0) { options = {}; }\r\n\t        options.show = true;\r\n\t        options.hide = null;\r\n\t        this.pubsub.publish(modalId, options);\r\n\t    };\r\n\t    ModalWindowService.prototype.hideModal = function (modalId) {\r\n\t        var options = { hide: true };\r\n\t        this.pubsub.publish(modalId, options);\r\n\t    };\r\n\t    ModalWindowService.prototype.resetEventsSubscribers = function (eventsList) {\r\n\t        var _this = this;\r\n\t        eventsList.forEach(function (eventName) {\r\n\t            if (eventName && _this.pubsub.hasSubscribers(eventName)) {\r\n\t                _this.pubsub.dispose(eventName);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    return ModalWindowService;\r\n\t}());\r\n\tModalWindowService = __decorate([\r\n\t    core_1.Injectable(),\r\n\t    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub])\r\n\t], ModalWindowService);\r\n\texports.ModalWindowService = ModalWindowService;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.4.10\n\t * (c) 2010-2017 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(6), __webpack_require__(1)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}),global.ng.common,global.ng.core));\n\t}(this, function (exports,_angular_common,core) { 'use strict';\n\t\n\t    var /** @type {?} */ DebugDomRootRenderer = core.__core_private__.DebugDomRootRenderer;\n\t    var /** @type {?} */ NoOpAnimationPlayer = core.__core_private__.NoOpAnimationPlayer;\n\t\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var NoOpAnimationDriver = (function () {\n\t        function NoOpAnimationDriver() {\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            return new NoOpAnimationPlayer();\n\t        };\n\t        return NoOpAnimationDriver;\n\t    }());\n\t    /**\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var AnimationDriver = (function () {\n\t        function AnimationDriver() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        AnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n\t        AnimationDriver.NOOP = new NoOpAnimationDriver();\n\t        return AnimationDriver;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = (self);\n\t        }\n\t        else {\n\t            globalScope = (global);\n\t        }\n\t    }\n\t    else {\n\t        globalScope = (window);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var /** @type {?} */ global$1 = globalScope;\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @return {?}\n\t     */\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return \"\" + token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return \"\" + token.name;\n\t        }\n\t        var /** @type {?} */ res = token.toString();\n\t        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    /**\n\t     * @param {?} global\n\t     * @param {?} path\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function setValueOnPath(global, path, value) {\n\t        var /** @type {?} */ parts = path.split('.');\n\t        var /** @type {?} */ obj = global;\n\t        while (parts.length > 1) {\n\t            var /** @type {?} */ name_1 = parts.shift();\n\t            if (obj.hasOwnProperty(name_1) && obj[name_1] != null) {\n\t                obj = obj[name_1];\n\t            }\n\t            else {\n\t                obj = obj[name_1] = {};\n\t            }\n\t        }\n\t        if (obj === undefined || obj === null) {\n\t            obj = {};\n\t        }\n\t        obj[parts.shift()] = value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ _DOM = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getDOM() {\n\t        return _DOM;\n\t    }\n\t    /**\n\t     * @param {?} adapter\n\t     * @return {?}\n\t     */\n\t    function setRootDomAdapter(adapter) {\n\t        if (!_DOM) {\n\t            _DOM = adapter;\n\t        }\n\t    }\n\t    /**\n\t     * Provides DOM operations in an environment-agnostic way.\n\t     *\n\t     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n\t     * can introduce XSS risks.\n\t     * @abstract\n\t     */\n\t    var DomAdapter = (function () {\n\t        function DomAdapter() {\n\t            this.resourceLoaderType = null;\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasProperty = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setProperty = function (el, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getProperty = function (el, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} methodName\n\t         * @param {?} args\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.invoke = function (el, methodName, args) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.logError = function (error) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.log = function (error) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.logGroup = function (error) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.logGroupEnd = function () { };\n\t        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n\t            /**\n\t             * Maps attribute names to their corresponding property names for cases\n\t             * where attribute name doesn't match property name.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._attrToPropMap; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) { this._attrToPropMap = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        ;\n\t        /**\n\t         * @abstract\n\t         * @param {?} templateHtml\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.parse = function (templateHtml) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.query = function (selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.querySelector = function (el /** TODO #9100 */, selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.querySelectorAll = function (el /** TODO #9100 */, selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.on = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.onAndCancel = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.dispatchEvent = function (el /** TODO #9100 */, evt) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createMouseEvent = function (eventType) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createEvent = function (eventType) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.preventDefault = function (evt) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isPrevented = function (evt) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getInnerHTML = function (el) { };\n\t        /**\n\t         * Returns content if el is a <template> element, null otherwise.\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getTemplateContent = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getOuterHTML = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.nodeName = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.nodeValue = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.type = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.content = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.firstChild = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.nextSibling = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.parentElement = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.childNodes = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.childNodesAsList = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.clearNodes = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.appendChild = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeChild = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} newNode\n\t         * @param {?} oldNode\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.replaceChild = function (el /** TODO #9100 */, newNode /** TODO #9100 */, oldNode) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.remove = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.insertBefore = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.insertAllBefore = function (el /** TODO #9100 */, nodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.insertAfter = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setInnerHTML = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getText = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setText = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getValue = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setValue = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getChecked = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setChecked = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createComment = function (text) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} html\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createTemplate = function (html) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createElement = function (tagName /** TODO #9100 */, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} ns\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createElementNS = function (ns, tagName, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} text\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createTextNode = function (text, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} attrName\n\t         * @param {?} attrValue\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} css\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createStyleElement = function (css, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createShadowRoot = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getShadowRoot = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getHost = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getDistributedNodes = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.clone /*<T extends Node>*/ = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getElementsByClassName = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getElementsByTagName = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.classList = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.addClass = function (element /** TODO #9100 */, className) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeClass = function (element /** TODO #9100 */, className) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasClass = function (element /** TODO #9100 */, className) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeStyle = function (element /** TODO #9100 */, styleName) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getStyle = function (element /** TODO #9100 */, styleName) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?=} styleValue\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.tagName = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.attributeMap = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasAttribute = function (element /** TODO #9100 */, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getAttribute = function (element /** TODO #9100 */, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setAttribute = function (element /** TODO #9100 */, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setAttributeNS = function (element /** TODO #9100 */, ns, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeAttribute = function (element /** TODO #9100 */, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.templateAwareRoot = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createHtmlDocument = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.defaultDoc = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getBoundingClientRect = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getTitle = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} newTitle\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setTitle = function (newTitle) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} n\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.elementMatches = function (n /** TODO #9100 */, selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isTemplateElement = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isTextNode = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isCommentNode = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isElementNode = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasShadowRoot = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isShadowRoot = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.importIntoDoc /*<T extends Node>*/ = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.adoptNode /*<T extends Node>*/ = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getHref = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} event\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getEventKey = function (event) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} baseUrl\n\t         * @param {?} href\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.resolveAndSetHref = function (element /** TODO #9100 */, baseUrl, href) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsDOMEvents = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsNativeShadowDOM = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} target\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getGlobalEventTarget = function (target) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getHistory = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getLocation = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getBaseHref = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.resetBaseElement = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getUserAgent = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setData = function (element /** TODO #9100 */, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getComputedStyle = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getData = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setGlobalVar = function (name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsWebAnimation = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.performanceNow = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getAnimationPrefix = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getTransitionEnd = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsAnimation = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsCookies = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getCookie = function (name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setCookie = function (name, value) { };\n\t        return DomAdapter;\n\t    }());\n\t\n\t    var WebAnimationsPlayer = (function () {\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} keyframes\n\t         * @param {?} options\n\t         * @param {?=} previousPlayers\n\t         */\n\t        function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n\t            var _this = this;\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            this.element = element;\n\t            this.keyframes = keyframes;\n\t            this.options = options;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._initialized = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            this._duration = options['duration'];\n\t            this.previousStyles = {};\n\t            previousPlayers.forEach(function (player) {\n\t                var styles = player._captureStyles();\n\t                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n\t            });\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.init = function () {\n\t            var _this = this;\n\t            if (this._initialized)\n\t                return;\n\t            this._initialized = true;\n\t            var /** @type {?} */ keyframes = this.keyframes.map(function (styles) {\n\t                var /** @type {?} */ formattedKeyframe = {};\n\t                Object.keys(styles).forEach(function (prop, index) {\n\t                    var /** @type {?} */ value = styles[prop];\n\t                    if (value == core.AUTO_STYLE) {\n\t                        value = _computeStyle(_this.element, prop);\n\t                    }\n\t                    if (value != undefined) {\n\t                        formattedKeyframe[prop] = value;\n\t                    }\n\t                });\n\t                return formattedKeyframe;\n\t            });\n\t            var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n\t            if (previousStyleProps.length) {\n\t                var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n\t                var /** @type {?} */ missingStyleProps_1 = [];\n\t                previousStyleProps.forEach(function (prop) {\n\t                    if (!isPresent(startingKeyframe_1[prop])) {\n\t                        missingStyleProps_1.push(prop);\n\t                    }\n\t                    startingKeyframe_1[prop] = _this.previousStyles[prop];\n\t                });\n\t                if (missingStyleProps_1.length) {\n\t                    var _loop_1 = function(i) {\n\t                        var /** @type {?} */ kf = keyframes[i];\n\t                        missingStyleProps_1.forEach(function (prop) { kf[prop] = _computeStyle(_this.element, prop); });\n\t                    };\n\t                    for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n\t                        _loop_1(i);\n\t                    }\n\t                }\n\t            }\n\t            this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n\t            this._finalKeyframe = _copyKeyframeStyles(keyframes[keyframes.length - 1]);\n\t            // this is required so that the player doesn't start to animate right away\n\t            this._resetDomPlayerState();\n\t            this._player.addEventListener('finish', function () { return _this._onFinish(); });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} element\n\t         * @param {?} keyframes\n\t         * @param {?} options\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n\t            // jscompiler doesn't seem to know animate is a native property because it's not fully\n\t            // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n\t            return (element['animate'](keyframes, options));\n\t        };\n\t        Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._player; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.play = function () {\n\t            this.init();\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._player.play();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.pause = function () {\n\t            this.init();\n\t            this._player.pause();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.finish = function () {\n\t            this.init();\n\t            this._onFinish();\n\t            this._player.finish();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.reset = function () {\n\t            this._resetDomPlayerState();\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._resetDomPlayerState = function () {\n\t            if (this._player) {\n\t                this._player.cancel();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.restart = function () {\n\t            this.reset();\n\t            this.play();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._resetDomPlayerState();\n\t                this._onFinish();\n\t                this._destroyed = true;\n\t            }\n\t        };\n\t        Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._duration; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.totalTime; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.totalTime; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._captureStyles = function () {\n\t            var _this = this;\n\t            var /** @type {?} */ styles = {};\n\t            if (this.hasStarted()) {\n\t                Object.keys(this._finalKeyframe).forEach(function (prop) {\n\t                    if (prop != 'offset') {\n\t                        styles[prop] =\n\t                            _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n\t                    }\n\t                });\n\t            }\n\t            return styles;\n\t        };\n\t        return WebAnimationsPlayer;\n\t    }());\n\t    /**\n\t     * @param {?} element\n\t     * @param {?} prop\n\t     * @return {?}\n\t     */\n\t    function _computeStyle(element, prop) {\n\t        return getDOM().getComputedStyle(element)[prop];\n\t    }\n\t    /**\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function _copyKeyframeStyles(styles) {\n\t        var /** @type {?} */ newStyles = {};\n\t        Object.keys(styles).forEach(function (prop) {\n\t            if (prop != 'offset') {\n\t                newStyles[prop] = styles[prop];\n\t            }\n\t        });\n\t        return newStyles;\n\t    }\n\t\n\t    var WebAnimationsDriver = (function () {\n\t        function WebAnimationsDriver() {\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        WebAnimationsDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            var /** @type {?} */ formattedSteps = [];\n\t            var /** @type {?} */ startingStyleLookup = {};\n\t            if (isPresent(startingStyles)) {\n\t                startingStyleLookup = _populateStyles(startingStyles, {});\n\t            }\n\t            keyframes.forEach(function (keyframe) {\n\t                var /** @type {?} */ data = _populateStyles(keyframe.styles, startingStyleLookup);\n\t                data['offset'] = Math.max(0, Math.min(1, keyframe.offset));\n\t                formattedSteps.push(data);\n\t            });\n\t            // Styling passed into element.animate() must always be balanced.\n\t            // The special cases below can occur if only style() calls exist\n\t            // within an animation or when a style() calls are used prior\n\t            // to a group() animation being issued or if the renderer is\n\t            // invoked by the user directly.\n\t            if (formattedSteps.length == 0) {\n\t                formattedSteps = [startingStyleLookup, startingStyleLookup];\n\t            }\n\t            else if (formattedSteps.length == 1) {\n\t                var /** @type {?} */ start = startingStyleLookup;\n\t                var /** @type {?} */ end = formattedSteps[0];\n\t                end['offset'] = null;\n\t                formattedSteps = [start, end];\n\t            }\n\t            var /** @type {?} */ playerOptions = {\n\t                'duration': duration,\n\t                'delay': delay,\n\t                'fill': 'both' // we use `both` because it allows for styling at 0% to work with `delay`\n\t            };\n\t            // we check for this to avoid having a null|undefined value be present\n\t            // for the easing (which results in an error for certain browsers #9752)\n\t            if (easing) {\n\t                playerOptions['easing'] = easing;\n\t            }\n\t            // there may be a chance a NoOp player is returned depending\n\t            // on when the previous animation was cancelled\n\t            previousPlayers = previousPlayers.filter(filterWebAnimationPlayerFn);\n\t            return new WebAnimationsPlayer(element, formattedSteps, playerOptions, /** @type {?} */ (previousPlayers));\n\t        };\n\t        return WebAnimationsDriver;\n\t    }());\n\t    /**\n\t     * @param {?} styles\n\t     * @param {?} defaultStyles\n\t     * @return {?}\n\t     */\n\t    function _populateStyles(styles, defaultStyles) {\n\t        var /** @type {?} */ data = {};\n\t        styles.styles.forEach(function (entry) { Object.keys(entry).forEach(function (prop) { data[prop] = entry[prop]; }); });\n\t        Object.keys(defaultStyles).forEach(function (prop) {\n\t            if (!isPresent(data[prop])) {\n\t                data[prop] = defaultStyles[prop];\n\t            }\n\t        });\n\t        return data;\n\t    }\n\t    /**\n\t     * @param {?} player\n\t     * @return {?}\n\t     */\n\t    function filterWebAnimationPlayerFn(player) {\n\t        return player instanceof WebAnimationsPlayer;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides DOM operations in any browser environment.\n\t     *\n\t     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n\t     * can introduce XSS risks.\n\t     * @abstract\n\t     */\n\t    var GenericBrowserDomAdapter = (function (_super) {\n\t        __extends$1(GenericBrowserDomAdapter, _super);\n\t        function GenericBrowserDomAdapter() {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._animationPrefix = null;\n\t            this._transitionEnd = null;\n\t            try {\n\t                var element_1 = this.createElement('div', this.defaultDoc());\n\t                if (isPresent(this.getStyle(element_1, 'animationName'))) {\n\t                    this._animationPrefix = '';\n\t                }\n\t                else {\n\t                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\t                    for (var i = 0; i < domPrefixes.length; i++) {\n\t                        if (isPresent(this.getStyle(element_1, domPrefixes[i] + 'AnimationName'))) {\n\t                            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                var transEndEventNames_1 = {\n\t                    WebkitTransition: 'webkitTransitionEnd',\n\t                    MozTransition: 'transitionend',\n\t                    OTransition: 'oTransitionEnd otransitionend',\n\t                    transition: 'transitionend'\n\t                };\n\t                Object.keys(transEndEventNames_1).forEach(function (key) {\n\t                    if (isPresent(_this.getStyle(element_1, key))) {\n\t                        _this._transitionEnd = transEndEventNames_1[key];\n\t                    }\n\t                });\n\t            }\n\t            catch (e) {\n\t                this._animationPrefix = null;\n\t                this._transitionEnd = null;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return ((el)).getDistributedNodes(); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} baseUrl\n\t         * @param {?} href\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n\t            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n\t            return typeof ((this.defaultDoc().body)).createShadowRoot === 'function';\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n\t            return isPresent(this._animationPrefix) && isPresent(this._transitionEnd);\n\t        };\n\t        return GenericBrowserDomAdapter;\n\t    }(DomAdapter));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ _attrToPropMap = {\n\t        'class': 'className',\n\t        'innerHtml': 'innerHTML',\n\t        'readonly': 'readOnly',\n\t        'tabindex': 'tabIndex',\n\t    };\n\t    var /** @type {?} */ DOM_KEY_LOCATION_NUMPAD = 3;\n\t    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\t    var /** @type {?} */ _keyMap = {\n\t        // The following values are here for cross-browser compatibility and to match the W3C standard\n\t        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n\t        '\\b': 'Backspace',\n\t        '\\t': 'Tab',\n\t        '\\x7F': 'Delete',\n\t        '\\x1B': 'Escape',\n\t        'Del': 'Delete',\n\t        'Esc': 'Escape',\n\t        'Left': 'ArrowLeft',\n\t        'Right': 'ArrowRight',\n\t        'Up': 'ArrowUp',\n\t        'Down': 'ArrowDown',\n\t        'Menu': 'ContextMenu',\n\t        'Scroll': 'ScrollLock',\n\t        'Win': 'OS'\n\t    };\n\t    // There is a bug in Chrome for numeric keypad keys:\n\t    // https://code.google.com/p/chromium/issues/detail?id=155654\n\t    // 1, 2, 3 ... are reported as A, B, C ...\n\t    var /** @type {?} */ _chromeNumKeyPadMap = {\n\t        'A': '1',\n\t        'B': '2',\n\t        'C': '3',\n\t        'D': '4',\n\t        'E': '5',\n\t        'F': '6',\n\t        'G': '7',\n\t        'H': '8',\n\t        'I': '9',\n\t        'J': '*',\n\t        'K': '+',\n\t        'M': '-',\n\t        'N': '.',\n\t        'O': '/',\n\t        '\\x60': '0',\n\t        '\\x90': 'NumLock'\n\t    };\n\t    var BrowserDomAdapter = (function (_super) {\n\t        __extends(BrowserDomAdapter, _super);\n\t        function BrowserDomAdapter() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @param {?} templateHtml\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { ((el))[name] = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getProperty = function (el, name) { return ((el))[name]; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} methodName\n\t         * @param {?} args\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (_a = ((el)))[methodName].apply(_a, args); var _a; };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.logError = function (error) {\n\t            if (window.console) {\n\t                if (console.error) {\n\t                    console.error(error);\n\t                }\n\t                else {\n\t                    console.log(error);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.log = function (error) {\n\t            if (window.console) {\n\t                window.console.log && window.console.log(error);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.logGroup = function (error) {\n\t            if (window.console) {\n\t                window.console.group && window.console.group(error);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.logGroupEnd = function () {\n\t            if (window.console) {\n\t                window.console.groupEnd && window.console.groupEnd();\n\t            }\n\t        };\n\t        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return _attrToPropMap; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.querySelector = function (el, selector) {\n\t            return (el.querySelector(selector));\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n\t            el.addEventListener(evt, listener, false);\n\t            // Needed to follow Dart's subscription semantic, until fix of\n\t            // https://code.google.com/p/dart/issues/detail?id=17406\n\t            return function () { el.removeEventListener(evt, listener, false); };\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n\t        /**\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n\t            var /** @type {?} */ evt = document.createEvent('MouseEvent');\n\t            evt.initEvent(eventType, true, true);\n\t            return evt;\n\t        };\n\t        /**\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createEvent = function (eventType) {\n\t            var /** @type {?} */ evt = document.createEvent('Event');\n\t            evt.initEvent(eventType, true, true);\n\t            return evt;\n\t        };\n\t        /**\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.preventDefault = function (evt) {\n\t            evt.preventDefault();\n\t            evt.returnValue = false;\n\t        };\n\t        /**\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isPrevented = function (evt) {\n\t            return evt.defaultPrevented || isPresent(evt.returnValue) && !evt.returnValue;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n\t            return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.content = function (node) {\n\t            if (this.hasProperty(node, 'content')) {\n\t                return ((node)).content;\n\t            }\n\t            else {\n\t                return node;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n\t            var /** @type {?} */ childNodes = el.childNodes;\n\t            var /** @type {?} */ res = new Array(childNodes.length);\n\t            for (var /** @type {?} */ i = 0; i < childNodes.length; i++) {\n\t                res[i] = childNodes[i];\n\t            }\n\t            return res;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.clearNodes = function (el) {\n\t            while (el.firstChild) {\n\t                el.removeChild(el.firstChild);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} newChild\n\t         * @param {?} oldChild\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.remove = function (node) {\n\t            if (node.parentNode) {\n\t                node.parentNode.removeChild(node);\n\t            }\n\t            return node;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {\n\t            nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); });\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n\t        /**\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n\t        /**\n\t         * @param {?} html\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createTemplate = function (html) {\n\t            var /** @type {?} */ t = document.createElement('template');\n\t            t.innerHTML = html;\n\t            return t;\n\t        };\n\t        /**\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createElement(tagName);\n\t        };\n\t        /**\n\t         * @param {?} ns\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createElementNS(ns, tagName);\n\t        };\n\t        /**\n\t         * @param {?} text\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createTextNode(text);\n\t        };\n\t        /**\n\t         * @param {?} attrName\n\t         * @param {?} attrValue\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            var /** @type {?} */ el = (doc.createElement('SCRIPT'));\n\t            el.setAttribute(attrName, attrValue);\n\t            return el;\n\t        };\n\t        /**\n\t         * @param {?} css\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            var /** @type {?} */ style = (doc.createElement('style'));\n\t            this.appendChild(style, this.createTextNode(css));\n\t            return style;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return ((el)).createShadowRoot(); };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return ((el)).shadowRoot; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getHost = function (el) { return ((el)).host; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n\t            return element.getElementsByClassName(name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n\t            return element.getElementsByTagName(name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasClass = function (element, className) {\n\t            return element.classList.contains(className);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n\t            element.style[styleName] = styleValue;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} stylename\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n\t            // IE requires '' instead of null\n\t            // see https://github.com/angular/angular/issues/7916\n\t            element.style[stylename] = '';\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} stylename\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?=} styleValue\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n\t            if (styleValue === void 0) { styleValue = null; }\n\t            var /** @type {?} */ value = this.getStyle(element, styleName) || '';\n\t            return styleValue ? value == styleValue : value.length > 0;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.attributeMap = function (element) {\n\t            var /** @type {?} */ res = new Map();\n\t            var /** @type {?} */ elAttrs = element.attributes;\n\t            for (var /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n\t                var /** @type {?} */ attrib = elAttrs[i];\n\t                res.set(attrib.name, attrib.value);\n\t            }\n\t            return res;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n\t            return element.hasAttribute(attribute);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n\t            return element.hasAttributeNS(ns, attribute);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n\t            return element.getAttribute(attribute);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n\t            return element.getAttributeNS(ns, name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n\t            element.setAttributeNS(ns, name, value);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n\t            element.removeAttributeNS(ns, name);\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createHtmlDocument = function () {\n\t            return document.implementation.createHTMLDocument('fakeTitle');\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n\t            try {\n\t                return el.getBoundingClientRect();\n\t            }\n\t            catch (e) {\n\t                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\n\t        /**\n\t         * @param {?} newTitle\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\n\t        /**\n\t         * @param {?} n\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n\t            if (n instanceof HTMLElement) {\n\t                return n.matches && n.matches(selector) ||\n\t                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\n\t                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n\t            }\n\t            return false;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n\t            return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n\t            return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getHref = function (el) { return ((el)).href; };\n\t        /**\n\t         * @param {?} event\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getEventKey = function (event) {\n\t            var /** @type {?} */ key = event.key;\n\t            if (isBlank(key)) {\n\t                key = event.keyIdentifier;\n\t                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n\t                // Safari cf\n\t                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\t                if (isBlank(key)) {\n\t                    return 'Unidentified';\n\t                }\n\t                if (key.startsWith('U+')) {\n\t                    key = String.fromCharCode(parseInt(key.substring(2), 16));\n\t                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n\t                        // There is a bug in Chrome for numeric keypad keys:\n\t                        // https://code.google.com/p/chromium/issues/detail?id=155654\n\t                        // 1, 2, 3 ... are reported as A, B, C ...\n\t                        key = ((_chromeNumKeyPadMap))[key];\n\t                    }\n\t                }\n\t            }\n\t            return _keyMap[key] || key;\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\n\t            if (target === 'window') {\n\t                return window;\n\t            }\n\t            if (target === 'document') {\n\t                return document;\n\t            }\n\t            if (target === 'body') {\n\t                return document.body;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getBaseHref = function () {\n\t            var /** @type {?} */ href = getBaseElementHref();\n\t            return isBlank(href) ? null : relativePath(href);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setData = function (element, name, value) {\n\t            this.setAttribute(element, 'data-' + name, value);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getData = function (element, name) {\n\t            return this.getAttribute(element, 'data-' + name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n\t        /**\n\t         * @param {?} path\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(global$1, path, value); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n\t            return typeof ((Element)).prototype['animate'] === 'function';\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.performanceNow = function () {\n\t            // performance.now() is not available in all browsers, see\n\t            // http://caniuse.com/#search=performance.now\n\t            return window.performance && window.performance.now ? window.performance.now() :\n\t                new Date().getTime();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setCookie = function (name, value) {\n\t            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n\t            // not clear other cookies.\n\t            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n\t        };\n\t        return BrowserDomAdapter;\n\t    }(GenericBrowserDomAdapter));\n\t    var /** @type {?} */ baseElement = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getBaseElementHref() {\n\t        if (!baseElement) {\n\t            baseElement = document.querySelector('base');\n\t            if (!baseElement) {\n\t                return null;\n\t            }\n\t        }\n\t        return baseElement.getAttribute('href');\n\t    }\n\t    // based on urlUtils.js in AngularJS 1\n\t    var /** @type {?} */ urlParsingNode;\n\t    /**\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function relativePath(url) {\n\t        if (!urlParsingNode) {\n\t            urlParsingNode = document.createElement('a');\n\t        }\n\t        urlParsingNode.setAttribute('href', url);\n\t        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n\t            '/' + urlParsingNode.pathname;\n\t    }\n\t    /**\n\t     * @param {?} cookieStr\n\t     * @param {?} name\n\t     * @return {?}\n\t     */\n\t    function parseCookieValue(cookieStr, name) {\n\t        name = encodeURIComponent(name);\n\t        for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n\t            var cookie = _a[_i];\n\t            var /** @type {?} */ eqIndex = cookie.indexOf('=');\n\t            var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n\t            if (cookieName.trim() === name) {\n\t                return decodeURIComponent(cookieValue);\n\t            }\n\t        }\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     * @return {?}\n\t     */\n\t    function supportsState() {\n\t        return !!window.history.pushState;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n\t     * This class should not be used directly by an application developer. Instead, use\n\t     * {\\@link Location}.\n\t     */\n\t    var BrowserPlatformLocation = (function (_super) {\n\t        __extends$2(BrowserPlatformLocation, _super);\n\t        function BrowserPlatformLocation() {\n\t            _super.call(this);\n\t            this._init();\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype._init = function () {\n\t            this._location = getDOM().getLocation();\n\t            this._history = getDOM().getHistory();\n\t        };\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.onPopState = function (fn) {\n\t            getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n\t            getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n\t        };\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location.pathname; },\n\t            /**\n\t             * @param {?} newPath\n\t             * @return {?}\n\t             */\n\t            set: function (newPath) { this._location.pathname = newPath; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location.search; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location.hash; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n\t            if (supportsState()) {\n\t                this._history.pushState(state, title, url);\n\t            }\n\t            else {\n\t                this._location.hash = url;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n\t            if (supportsState()) {\n\t                this._history.replaceState(state, title, url);\n\t            }\n\t            else {\n\t                this._location.hash = url;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n\t        BrowserPlatformLocation.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserPlatformLocation.ctorParameters = function () { return []; };\n\t        return BrowserPlatformLocation;\n\t    }(_angular_common.PlatformLocation));\n\t\n\t    var BrowserGetTestability = (function () {\n\t        function BrowserGetTestability() {\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserGetTestability.init = function () { core.setTestabilityGetter(new BrowserGetTestability()); };\n\t        /**\n\t         * @param {?} registry\n\t         * @return {?}\n\t         */\n\t        BrowserGetTestability.prototype.addToWindow = function (registry) {\n\t            global$1.getAngularTestability = function (elem, findInAncestors) {\n\t                if (findInAncestors === void 0) { findInAncestors = true; }\n\t                var /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n\t                if (testability == null) {\n\t                    throw new Error('Could not find testability for element.');\n\t                }\n\t                return testability;\n\t            };\n\t            global$1.getAllAngularTestabilities = function () { return registry.getAllTestabilities(); };\n\t            global$1.getAllAngularRootElements = function () { return registry.getAllRootElements(); };\n\t            var /** @type {?} */ whenAllStable = function (callback /** TODO #9100 */) {\n\t                var /** @type {?} */ testabilities = global$1.getAllAngularTestabilities();\n\t                var /** @type {?} */ count = testabilities.length;\n\t                var /** @type {?} */ didWork = false;\n\t                var /** @type {?} */ decrement = function (didWork_ /** TODO #9100 */) {\n\t                    didWork = didWork || didWork_;\n\t                    count--;\n\t                    if (count == 0) {\n\t                        callback(didWork);\n\t                    }\n\t                };\n\t                testabilities.forEach(function (testability /** TODO #9100 */) {\n\t                    testability.whenStable(decrement);\n\t                });\n\t            };\n\t            if (!global$1['frameworkStabilizers']) {\n\t                global$1['frameworkStabilizers'] = [];\n\t            }\n\t            global$1['frameworkStabilizers'].push(whenAllStable);\n\t        };\n\t        /**\n\t         * @param {?} registry\n\t         * @param {?} elem\n\t         * @param {?} findInAncestors\n\t         * @return {?}\n\t         */\n\t        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            if (elem == null) {\n\t                return null;\n\t            }\n\t            var /** @type {?} */ t = registry.getTestability(elem);\n\t            if (isPresent(t)) {\n\t                return t;\n\t            }\n\t            else if (!findInAncestors) {\n\t                return null;\n\t            }\n\t            if (getDOM().isShadowRoot(elem)) {\n\t                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n\t            }\n\t            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n\t        };\n\t        return BrowserGetTestability;\n\t    }());\n\t\n\t    /**\n\t     * A service that can be used to get and set the title of a current HTML document.\n\t     *\n\t     * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n\t     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n\t     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n\t     * title value.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var Title = (function () {\n\t        function Title() {\n\t        }\n\t        /**\n\t         * Get the title of the current HTML document.\n\t         * @return {?}\n\t         */\n\t        Title.prototype.getTitle = function () { return getDOM().getTitle(); };\n\t        /**\n\t         * Set the title of the current HTML document.\n\t         * @param {?} newTitle\n\t         * @return {?}\n\t         */\n\t        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(newTitle); };\n\t        return Title;\n\t    }());\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var /** @type {?} */ m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var /** @type {?} */ k1 = Object.keys(m1);\n\t            var /** @type {?} */ k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n\t                var /** @type {?} */ key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t\n\t    /**\n\t     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n\t     *\n\t     * Note: Document might not be available in the Application Context when Application and Rendering\n\t     * Contexts are not the same (e.g. when running the application into a Web Worker).\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ DOCUMENT = new core.OpaqueToken('DocumentToken');\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ EVENT_MANAGER_PLUGINS = new core.OpaqueToken('EventManagerPlugins');\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var EventManager = (function () {\n\t        /**\n\t         * @param {?} plugins\n\t         * @param {?} _zone\n\t         */\n\t        function EventManager(plugins, _zone) {\n\t            var _this = this;\n\t            this._zone = _zone;\n\t            this._eventNameToPlugin = new Map();\n\t            plugins.forEach(function (p) { return p.manager = _this; });\n\t            this._plugins = plugins.slice().reverse();\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype.addEventListener = function (element, eventName, handler) {\n\t            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n\t            return plugin.addEventListener(element, eventName, handler);\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n\t            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n\t            return plugin.addGlobalEventListener(target, eventName, handler);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype.getZone = function () { return this._zone; };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype._findPluginFor = function (eventName) {\n\t            var /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n\t            if (plugin) {\n\t                return plugin;\n\t            }\n\t            var /** @type {?} */ plugins = this._plugins;\n\t            for (var /** @type {?} */ i = 0; i < plugins.length; i++) {\n\t                var /** @type {?} */ plugin_1 = plugins[i];\n\t                if (plugin_1.supports(eventName)) {\n\t                    this._eventNameToPlugin.set(eventName, plugin_1);\n\t                    return plugin_1;\n\t                }\n\t            }\n\t            throw new Error(\"No event manager plugin found for event \" + eventName);\n\t        };\n\t        EventManager.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        EventManager.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n\t            { type: core.NgZone, },\n\t        ]; };\n\t        return EventManager;\n\t    }());\n\t    /**\n\t     * @abstract\n\t     */\n\t    var EventManagerPlugin = (function () {\n\t        function EventManagerPlugin() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        EventManagerPlugin.prototype.supports = function (eventName) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) { };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n\t            var /** @type {?} */ target = getDOM().getGlobalEventTarget(element);\n\t            if (!target) {\n\t                throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n\t            }\n\t            return this.addEventListener(target, eventName, handler);\n\t        };\n\t        ;\n\t        return EventManagerPlugin;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var SharedStylesHost = (function () {\n\t        function SharedStylesHost() {\n\t            /** @internal */\n\t            this._stylesSet = new Set();\n\t        }\n\t        /**\n\t         * @param {?} styles\n\t         * @return {?}\n\t         */\n\t        SharedStylesHost.prototype.addStyles = function (styles) {\n\t            var _this = this;\n\t            var /** @type {?} */ additions = new Set();\n\t            styles.forEach(function (style) {\n\t                if (!_this._stylesSet.has(style)) {\n\t                    _this._stylesSet.add(style);\n\t                    additions.add(style);\n\t                }\n\t            });\n\t            this.onStylesAdded(additions);\n\t        };\n\t        /**\n\t         * @param {?} additions\n\t         * @return {?}\n\t         */\n\t        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n\t        SharedStylesHost.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SharedStylesHost.ctorParameters = function () { return []; };\n\t        return SharedStylesHost;\n\t    }());\n\t    var DomSharedStylesHost = (function (_super) {\n\t        __extends$4(DomSharedStylesHost, _super);\n\t        /**\n\t         * @param {?} _doc\n\t         */\n\t        function DomSharedStylesHost(_doc) {\n\t            _super.call(this);\n\t            this._doc = _doc;\n\t            this._hostNodes = new Set();\n\t            this._styleNodes = new Set();\n\t            this._hostNodes.add(_doc.head);\n\t        }\n\t        /**\n\t         * @param {?} styles\n\t         * @param {?} host\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n\t            var _this = this;\n\t            styles.forEach(function (style) {\n\t                var /** @type {?} */ styleEl = _this._doc.createElement('style');\n\t                styleEl.textContent = style;\n\t                _this._styleNodes.add(host.appendChild(styleEl));\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} hostNode\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.addHost = function (hostNode) {\n\t            this._addStylesToHost(this._stylesSet, hostNode);\n\t            this._hostNodes.add(hostNode);\n\t        };\n\t        /**\n\t         * @param {?} hostNode\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n\t        /**\n\t         * @param {?} additions\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n\t            var _this = this;\n\t            this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n\t        DomSharedStylesHost.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomSharedStylesHost.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n\t        ]; };\n\t        return DomSharedStylesHost;\n\t    }(SharedStylesHost));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ NAMESPACE_URIS = {\n\t        'xlink': 'http://www.w3.org/1999/xlink',\n\t        'svg': 'http://www.w3.org/2000/svg',\n\t        'xhtml': 'http://www.w3.org/1999/xhtml'\n\t    };\n\t    var /** @type {?} */ TEMPLATE_COMMENT_TEXT = 'template bindings={}';\n\t    var /** @type {?} */ TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/;\n\t    /**\n\t     * @abstract\n\t     */\n\t    var DomRootRenderer = (function () {\n\t        /**\n\t         * @param {?} document\n\t         * @param {?} eventManager\n\t         * @param {?} sharedStylesHost\n\t         * @param {?} animationDriver\n\t         * @param {?} appId\n\t         */\n\t        function DomRootRenderer(document, eventManager, sharedStylesHost, animationDriver, appId) {\n\t            this.document = document;\n\t            this.eventManager = eventManager;\n\t            this.sharedStylesHost = sharedStylesHost;\n\t            this.animationDriver = animationDriver;\n\t            this.appId = appId;\n\t            this.registeredComponents = new Map();\n\t        }\n\t        /**\n\t         * @param {?} componentProto\n\t         * @return {?}\n\t         */\n\t        DomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            var /** @type {?} */ renderer = this.registeredComponents.get(componentProto.id);\n\t            if (!renderer) {\n\t                renderer = new DomRenderer(this, componentProto, this.animationDriver, this.appId + \"-\" + componentProto.id);\n\t                this.registeredComponents.set(componentProto.id, renderer);\n\t            }\n\t            return renderer;\n\t        };\n\t        return DomRootRenderer;\n\t    }());\n\t    var DomRootRenderer_ = (function (_super) {\n\t        __extends$3(DomRootRenderer_, _super);\n\t        /**\n\t         * @param {?} _document\n\t         * @param {?} _eventManager\n\t         * @param {?} sharedStylesHost\n\t         * @param {?} animationDriver\n\t         * @param {?} appId\n\t         */\n\t        function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animationDriver, appId) {\n\t            _super.call(this, _document, _eventManager, sharedStylesHost, animationDriver, appId);\n\t        }\n\t        DomRootRenderer_.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomRootRenderer_.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n\t            { type: EventManager, },\n\t            { type: DomSharedStylesHost, },\n\t            { type: AnimationDriver, },\n\t            { type: undefined, decorators: [{ type: core.Inject, args: [core.APP_ID,] },] },\n\t        ]; };\n\t        return DomRootRenderer_;\n\t    }(DomRootRenderer));\n\t    var /** @type {?} */ DIRECT_DOM_RENDERER = {\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        remove: function (node) {\n\t            if (node.parentNode) {\n\t                node.parentNode.removeChild(node);\n\t            }\n\t        },\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} parent\n\t         * @return {?}\n\t         */\n\t        appendChild: function (node, parent) { parent.appendChild(node); },\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} refNode\n\t         * @return {?}\n\t         */\n\t        insertBefore: function (node, refNode) { refNode.parentNode.insertBefore(node, refNode); },\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        nextSibling: function (node) { return node.nextSibling; },\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        parentElement: function (node) { return (node.parentNode); }\n\t    };\n\t    var DomRenderer = (function () {\n\t        /**\n\t         * @param {?} _rootRenderer\n\t         * @param {?} componentProto\n\t         * @param {?} _animationDriver\n\t         * @param {?} styleShimId\n\t         */\n\t        function DomRenderer(_rootRenderer, componentProto, _animationDriver, styleShimId) {\n\t            this._rootRenderer = _rootRenderer;\n\t            this.componentProto = componentProto;\n\t            this._animationDriver = _animationDriver;\n\t            this.directRenderer = DIRECT_DOM_RENDERER;\n\t            this._styles = flattenStyles(styleShimId, componentProto.styles, []);\n\t            if (componentProto.encapsulation !== core.ViewEncapsulation.Native) {\n\t                this._rootRenderer.sharedStylesHost.addStyles(this._styles);\n\t            }\n\t            if (this.componentProto.encapsulation === core.ViewEncapsulation.Emulated) {\n\t                this._contentAttr = shimContentAttribute(styleShimId);\n\t                this._hostAttr = shimHostAttribute(styleShimId);\n\t            }\n\t            else {\n\t                this._contentAttr = null;\n\t                this._hostAttr = null;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} selectorOrNode\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var /** @type {?} */ el;\n\t            if (typeof selectorOrNode === 'string') {\n\t                el = this._rootRenderer.document.querySelector(selectorOrNode);\n\t                if (!el) {\n\t                    throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n\t                }\n\t            }\n\t            else {\n\t                el = selectorOrNode;\n\t            }\n\t            while (el.firstChild) {\n\t                el.removeChild(el.firstChild);\n\t            }\n\t            return el;\n\t        };\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} name\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createElement = function (parent, name, debugInfo) {\n\t            var /** @type {?} */ el;\n\t            if (isNamespaced(name)) {\n\t                var /** @type {?} */ nsAndName = splitNamespace(name);\n\t                el = document.createElementNS((NAMESPACE_URIS)[nsAndName[0]], nsAndName[1]);\n\t            }\n\t            else {\n\t                el = document.createElement(name);\n\t            }\n\t            if (this._contentAttr) {\n\t                el.setAttribute(this._contentAttr, '');\n\t            }\n\t            if (parent) {\n\t                parent.appendChild(el);\n\t            }\n\t            return el;\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createViewRoot = function (hostElement) {\n\t            var /** @type {?} */ nodesParent;\n\t            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native) {\n\t                nodesParent = ((hostElement)).createShadowRoot();\n\t                for (var /** @type {?} */ i = 0; i < this._styles.length; i++) {\n\t                    var /** @type {?} */ styleEl = document.createElement('style');\n\t                    styleEl.textContent = this._styles[i];\n\t                    nodesParent.appendChild(styleEl);\n\t                }\n\t            }\n\t            else {\n\t                if (this._hostAttr) {\n\t                    hostElement.setAttribute(this._hostAttr, '');\n\t                }\n\t                nodesParent = hostElement;\n\t            }\n\t            return nodesParent;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var /** @type {?} */ comment = document.createComment(TEMPLATE_COMMENT_TEXT);\n\t            if (parentElement) {\n\t                parentElement.appendChild(comment);\n\t            }\n\t            return comment;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} value\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var /** @type {?} */ node = document.createTextNode(value);\n\t            if (parentElement) {\n\t                parentElement.appendChild(node);\n\t            }\n\t            return node;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            if (!parentElement)\n\t                return;\n\t            appendNodes(parentElement, nodes);\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) { moveNodesAfterSibling(node, viewRootNodes); };\n\t        /**\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n\t                var /** @type {?} */ node = viewRootNodes[i];\n\t                if (node.parentNode) {\n\t                    node.parentNode.removeChild(node);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @param {?} viewAllNodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native && hostElement) {\n\t                this._rootRenderer.sharedStylesHost.removeHost(((hostElement)).shadowRoot);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            ((renderElement))[propertyName] = propertyValue;\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} attributeName\n\t         * @param {?} attributeValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var /** @type {?} */ attrNs;\n\t            var /** @type {?} */ attrNameWithoutNs = attributeName;\n\t            if (isNamespaced(attributeName)) {\n\t                var /** @type {?} */ nsAndName = splitNamespace(attributeName);\n\t                attrNameWithoutNs = nsAndName[1];\n\t                attributeName = nsAndName[0] + ':' + nsAndName[1];\n\t                attrNs = NAMESPACE_URIS[nsAndName[0]];\n\t            }\n\t            if (isPresent(attributeValue)) {\n\t                if (attrNs) {\n\t                    renderElement.setAttributeNS(attrNs, attributeName, attributeValue);\n\t                }\n\t                else {\n\t                    renderElement.setAttribute(attributeName, attributeValue);\n\t                }\n\t            }\n\t            else {\n\t                if (isPresent(attrNs)) {\n\t                    renderElement.removeAttributeNS(attrNs, attrNameWithoutNs);\n\t                }\n\t                else {\n\t                    renderElement.removeAttribute(attributeName);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            if (renderElement.nodeType === Node.COMMENT_NODE) {\n\t                var /** @type {?} */ existingBindings = renderElement.nodeValue.replace(/\\n/g, '').match(TEMPLATE_BINDINGS_EXP);\n\t                var /** @type {?} */ parsedBindings = JSON.parse(existingBindings[1]);\n\t                parsedBindings[propertyName] = propertyValue;\n\t                renderElement.nodeValue =\n\t                    TEMPLATE_COMMENT_TEXT.replace('{}', JSON.stringify(parsedBindings, null, 2));\n\t            }\n\t            else {\n\t                this.setElementAttribute(renderElement, propertyName, propertyValue);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} className\n\t         * @param {?} isAdd\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            if (isAdd) {\n\t                renderElement.classList.add(className);\n\t            }\n\t            else {\n\t                renderElement.classList.remove(className);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            if (isPresent(styleValue)) {\n\t                ((renderElement.style))[styleName] = stringify(styleValue);\n\t            }\n\t            else {\n\t                // IE requires '' instead of null\n\t                // see https://github.com/angular/angular/issues/7916\n\t                ((renderElement.style))[styleName] = '';\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} methodName\n\t         * @param {?} args\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            ((renderElement))[methodName].apply(renderElement, args);\n\t        };\n\t        /**\n\t         * @param {?} renderNode\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setText = function (renderNode, text) { renderNode.nodeValue = text; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            if (this._rootRenderer.document.body.contains(element)) {\n\t                return this._animationDriver.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n\t            }\n\t            return new NoOpAnimationPlayer();\n\t        };\n\t        return DomRenderer;\n\t    }());\n\t    /**\n\t     * @param {?} sibling\n\t     * @param {?} nodes\n\t     * @return {?}\n\t     */\n\t    function moveNodesAfterSibling(sibling, nodes) {\n\t        var /** @type {?} */ parent = sibling.parentNode;\n\t        if (nodes.length > 0 && parent) {\n\t            var /** @type {?} */ nextSibling = sibling.nextSibling;\n\t            if (nextSibling) {\n\t                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t                    parent.insertBefore(nodes[i], nextSibling);\n\t                }\n\t            }\n\t            else {\n\t                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t                    parent.appendChild(nodes[i]);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} parent\n\t     * @param {?} nodes\n\t     * @return {?}\n\t     */\n\t    function appendNodes(parent, nodes) {\n\t        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t            parent.appendChild(nodes[i]);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} eventHandler\n\t     * @return {?}\n\t     */\n\t    function decoratePreventDefault(eventHandler) {\n\t        return function (event) {\n\t            var /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n\t            if (allowDefaultBehavior === false) {\n\t                // TODO(tbosch): move preventDefault into event plugins...\n\t                event.preventDefault();\n\t                event.returnValue = false;\n\t            }\n\t        };\n\t    }\n\t    var /** @type {?} */ COMPONENT_REGEX = /%COMP%/g;\n\t    var /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\n\t    var /** @type {?} */ HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n\t    var /** @type {?} */ CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n\t    /**\n\t     * @param {?} componentShortId\n\t     * @return {?}\n\t     */\n\t    function shimContentAttribute(componentShortId) {\n\t        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n\t    }\n\t    /**\n\t     * @param {?} componentShortId\n\t     * @return {?}\n\t     */\n\t    function shimHostAttribute(componentShortId) {\n\t        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n\t    }\n\t    /**\n\t     * @param {?} compId\n\t     * @param {?} styles\n\t     * @param {?} target\n\t     * @return {?}\n\t     */\n\t    function flattenStyles(compId, styles, target) {\n\t        for (var /** @type {?} */ i = 0; i < styles.length; i++) {\n\t            var /** @type {?} */ style = styles[i];\n\t            if (Array.isArray(style)) {\n\t                flattenStyles(compId, style, target);\n\t            }\n\t            else {\n\t                style = style.replace(COMPONENT_REGEX, compId);\n\t                target.push(style);\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t    var /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\t    /**\n\t     * @param {?} name\n\t     * @return {?}\n\t     */\n\t    function isNamespaced(name) {\n\t        return name[0] === ':';\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @return {?}\n\t     */\n\t    function splitNamespace(name) {\n\t        var /** @type {?} */ match = name.match(NS_PREFIX_RE);\n\t        return [match[1], match[2]];\n\t    }\n\t\n\t    var /** @type {?} */ CORE_TOKENS = {\n\t        'ApplicationRef': core.ApplicationRef,\n\t        'NgZone': core.NgZone,\n\t    };\n\t    var /** @type {?} */ INSPECT_GLOBAL_NAME = 'ng.probe';\n\t    var /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n\t    /**\n\t     * Returns a {\\@link DebugElement} for the given native DOM element, or\n\t     * null if the given native element does not have an Angular view associated\n\t     * with it.\n\t     * @param {?} element\n\t     * @return {?}\n\t     */\n\t    function inspectNativeElement(element) {\n\t        return core.getDebugNode(element);\n\t    }\n\t    /**\n\t     * Deprecated. Use the one from '\\@angular/core'.\n\t     * @deprecated\n\t     */\n\t    var NgProbeToken = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} token\n\t         */\n\t        function NgProbeToken(name, token) {\n\t            this.name = name;\n\t            this.token = token;\n\t        }\n\t        return NgProbeToken;\n\t    }());\n\t    /**\n\t     * @param {?} rootRenderer\n\t     * @param {?} extraTokens\n\t     * @param {?} coreTokens\n\t     * @return {?}\n\t     */\n\t    function _createConditionalRootRenderer(rootRenderer, extraTokens, coreTokens) {\n\t        return core.isDevMode() ?\n\t            _createRootRenderer(rootRenderer, (extraTokens || []).concat(coreTokens || [])) :\n\t            rootRenderer;\n\t    }\n\t    /**\n\t     * @param {?} rootRenderer\n\t     * @param {?} extraTokens\n\t     * @return {?}\n\t     */\n\t    function _createRootRenderer(rootRenderer, extraTokens) {\n\t        getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n\t        getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n\t        return new DebugDomRootRenderer(rootRenderer);\n\t    }\n\t    /**\n\t     * @param {?} tokens\n\t     * @return {?}\n\t     */\n\t    function _ngProbeTokensToMap(tokens) {\n\t        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n\t    }\n\t    /**\n\t     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n\t     */\n\t    var /** @type {?} */ ELEMENT_PROBE_PROVIDERS = [{\n\t            provide: core.RootRenderer,\n\t            useFactory: _createConditionalRootRenderer,\n\t            deps: [\n\t                DomRootRenderer, [NgProbeToken, new core.Optional()],\n\t                [core.NgProbeToken, new core.Optional()]\n\t            ]\n\t        }];\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var DomEventsPlugin = (function (_super) {\n\t        __extends$5(DomEventsPlugin, _super);\n\t        function DomEventsPlugin() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            element.addEventListener(eventName, /** @type {?} */ (handler), false);\n\t            return function () { return element.removeEventListener(eventName, /** @type {?} */ (handler), false); };\n\t        };\n\t        DomEventsPlugin.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomEventsPlugin.ctorParameters = function () { return []; };\n\t        return DomEventsPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ EVENT_NAMES = {\n\t        // pan\n\t        'pan': true,\n\t        'panstart': true,\n\t        'panmove': true,\n\t        'panend': true,\n\t        'pancancel': true,\n\t        'panleft': true,\n\t        'panright': true,\n\t        'panup': true,\n\t        'pandown': true,\n\t        // pinch\n\t        'pinch': true,\n\t        'pinchstart': true,\n\t        'pinchmove': true,\n\t        'pinchend': true,\n\t        'pinchcancel': true,\n\t        'pinchin': true,\n\t        'pinchout': true,\n\t        // press\n\t        'press': true,\n\t        'pressup': true,\n\t        // rotate\n\t        'rotate': true,\n\t        'rotatestart': true,\n\t        'rotatemove': true,\n\t        'rotateend': true,\n\t        'rotatecancel': true,\n\t        // swipe\n\t        'swipe': true,\n\t        'swipeleft': true,\n\t        'swiperight': true,\n\t        'swipeup': true,\n\t        'swipedown': true,\n\t        // tap\n\t        'tap': true,\n\t    };\n\t    /**\n\t     * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure\n\t     * Hammer gestures.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ HAMMER_GESTURE_CONFIG = new core.OpaqueToken('HammerGestureConfig');\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var HammerGestureConfig = (function () {\n\t        function HammerGestureConfig() {\n\t            this.events = [];\n\t            this.overrides = {};\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        HammerGestureConfig.prototype.buildHammer = function (element) {\n\t            var /** @type {?} */ mc = new Hammer(element);\n\t            mc.get('pinch').set({ enable: true });\n\t            mc.get('rotate').set({ enable: true });\n\t            for (var eventName in this.overrides) {\n\t                mc.get(eventName).set(this.overrides[eventName]);\n\t            }\n\t            return mc;\n\t        };\n\t        HammerGestureConfig.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HammerGestureConfig.ctorParameters = function () { return []; };\n\t        return HammerGestureConfig;\n\t    }());\n\t    var HammerGesturesPlugin = (function (_super) {\n\t        __extends$6(HammerGesturesPlugin, _super);\n\t        /**\n\t         * @param {?} _config\n\t         */\n\t        function HammerGesturesPlugin(_config) {\n\t            _super.call(this);\n\t            this._config = _config;\n\t        }\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        HammerGesturesPlugin.prototype.supports = function (eventName) {\n\t            if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n\t                return false;\n\t            }\n\t            if (!((window)).Hammer) {\n\t                throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n\t            }\n\t            return true;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            var _this = this;\n\t            var /** @type {?} */ zone = this.manager.getZone();\n\t            eventName = eventName.toLowerCase();\n\t            return zone.runOutsideAngular(function () {\n\t                // Creating the manager bind events, must be done outside of angular\n\t                var /** @type {?} */ mc = _this._config.buildHammer(element);\n\t                var /** @type {?} */ callback = function (eventObj) {\n\t                    zone.runGuarded(function () { handler(eventObj); });\n\t                };\n\t                mc.on(eventName, callback);\n\t                return function () { return mc.off(eventName, callback); };\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n\t        HammerGesturesPlugin.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HammerGesturesPlugin.ctorParameters = function () { return [\n\t            { type: HammerGestureConfig, decorators: [{ type: core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n\t        ]; };\n\t        return HammerGesturesPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\t    var /** @type {?} */ MODIFIER_KEY_GETTERS = {\n\t        'alt': function (event) { return event.altKey; },\n\t        'control': function (event) { return event.ctrlKey; },\n\t        'meta': function (event) { return event.metaKey; },\n\t        'shift': function (event) { return event.shiftKey; }\n\t    };\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var KeyEventsPlugin = (function (_super) {\n\t        __extends$7(KeyEventsPlugin, _super);\n\t        function KeyEventsPlugin() {\n\t            _super.call(this);\n\t        }\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            var /** @type {?} */ parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n\t            var /** @type {?} */ outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\t            return this.manager.getZone().runOutsideAngular(function () {\n\t                return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.parseEventName = function (eventName) {\n\t            var /** @type {?} */ parts = eventName.toLowerCase().split('.');\n\t            var /** @type {?} */ domEventName = parts.shift();\n\t            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n\t                return null;\n\t            }\n\t            var /** @type {?} */ key = KeyEventsPlugin._normalizeKey(parts.pop());\n\t            var /** @type {?} */ fullKey = '';\n\t            MODIFIER_KEYS.forEach(function (modifierName) {\n\t                var /** @type {?} */ index = parts.indexOf(modifierName);\n\t                if (index > -1) {\n\t                    parts.splice(index, 1);\n\t                    fullKey += modifierName + '.';\n\t                }\n\t            });\n\t            fullKey += key;\n\t            if (parts.length != 0 || key.length === 0) {\n\t                // returning null instead of throwing to let another plugin process the event\n\t                return null;\n\t            }\n\t            var /** @type {?} */ result = {};\n\t            result['domEventName'] = domEventName;\n\t            result['fullKey'] = fullKey;\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} event\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.getEventFullKey = function (event) {\n\t            var /** @type {?} */ fullKey = '';\n\t            var /** @type {?} */ key = getDOM().getEventKey(event);\n\t            key = key.toLowerCase();\n\t            if (key === ' ') {\n\t                key = 'space'; // for readability\n\t            }\n\t            else if (key === '.') {\n\t                key = 'dot'; // because '.' is used as a separator in event names\n\t            }\n\t            MODIFIER_KEYS.forEach(function (modifierName) {\n\t                if (modifierName != key) {\n\t                    var /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\t                    if (modifierGetter(event)) {\n\t                        fullKey += modifierName + '.';\n\t                    }\n\t                }\n\t            });\n\t            fullKey += key;\n\t            return fullKey;\n\t        };\n\t        /**\n\t         * @param {?} fullKey\n\t         * @param {?} handler\n\t         * @param {?} zone\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n\t            return function (event /** TODO #9100 */) {\n\t                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n\t                    zone.runGuarded(function () { return handler(event); });\n\t                }\n\t            };\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} keyName\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin._normalizeKey = function (keyName) {\n\t            // TODO: switch to a Map if the mapping grows too much\n\t            switch (keyName) {\n\t                case 'esc':\n\t                    return 'escape';\n\t                default:\n\t                    return keyName;\n\t            }\n\t        };\n\t        KeyEventsPlugin.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        KeyEventsPlugin.ctorParameters = function () { return []; };\n\t        return KeyEventsPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n\t     *\n\t     * This regular expression matches a subset of URLs that will not cause script\n\t     * execution if used in URL context within a HTML document. Specifically, this\n\t     * regular expression matches if (comment from here on and regex copied from\n\t     * Soy's EscapingConventions):\n\t     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n\t     * (2) or no protocol.  A protocol must be followed by a colon. The below\n\t     *     allows that by allowing colons only after one of the characters [/?#].\n\t     *     A colon after a hash (#) must be in the fragment.\n\t     *     Otherwise, a colon after a (?) must be in a query.\n\t     *     Otherwise, a colon after a single solidus (/) must be in a path.\n\t     *     Otherwise, a colon after a double solidus (//) must be in the authority\n\t     *     (before port).\n\t     *\n\t     * The pattern disallows &, used in HTML entity declarations before\n\t     * one of the characters in [/?#]. This disallows HTML entities used in the\n\t     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n\t     * It also disallows HTML entities in the first path part of a relative path,\n\t     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n\t     * that. More importantly, it disallows masking of a colon,\n\t     * e.g. \"javascript&#58;...\".\n\t     *\n\t     * This regular expression was taken from the Closure sanitization library.\n\t     */\n\t    var /** @type {?} */ SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\t    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n\t    var /** @type {?} */ DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\t    /**\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function sanitizeUrl(url) {\n\t        url = String(url);\n\t        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n\t            return url;\n\t        if (core.isDevMode()) {\n\t            getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n\t        }\n\t        return 'unsafe:' + url;\n\t    }\n\t    /**\n\t     * @param {?} srcset\n\t     * @return {?}\n\t     */\n\t    function sanitizeSrcset(srcset) {\n\t        srcset = String(srcset);\n\t        return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n\t    }\n\t\n\t    /** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\n\t    var /** @type {?} */ inertElement = null;\n\t    /** Lazily initialized to make sure the DOM adapter gets set before use. */\n\t    var /** @type {?} */ DOM = null;\n\t    /**\n\t     * Returns an HTML element that is guaranteed to not execute code when creating elements in it.\n\t     * @return {?}\n\t     */\n\t    function getInertElement() {\n\t        if (inertElement)\n\t            return inertElement;\n\t        DOM = getDOM();\n\t        // Prefer using <template> element if supported.\n\t        var /** @type {?} */ templateEl = DOM.createElement('template');\n\t        if ('content' in templateEl)\n\t            return templateEl;\n\t        var /** @type {?} */ doc = DOM.createHtmlDocument();\n\t        inertElement = DOM.querySelector(doc, 'body');\n\t        if (inertElement == null) {\n\t            // usually there should be only one body element in the document, but IE doesn't have any, so we\n\t            // need to create one.\n\t            var /** @type {?} */ html = DOM.createElement('html', doc);\n\t            inertElement = DOM.createElement('body', doc);\n\t            DOM.appendChild(html, inertElement);\n\t            DOM.appendChild(doc, html);\n\t        }\n\t        return inertElement;\n\t    }\n\t    /**\n\t     * @param {?} tags\n\t     * @return {?}\n\t     */\n\t    function tagSet(tags) {\n\t        var /** @type {?} */ res = {};\n\t        for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n\t            var t = _a[_i];\n\t            res[t] = true;\n\t        }\n\t        return res;\n\t    }\n\t    /**\n\t     * @param {...?} sets\n\t     * @return {?}\n\t     */\n\t    function merge() {\n\t        var sets = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            sets[_i - 0] = arguments[_i];\n\t        }\n\t        var /** @type {?} */ res = {};\n\t        for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n\t            var s = sets_1[_a];\n\t            for (var v in s) {\n\t                if (s.hasOwnProperty(v))\n\t                    res[v] = true;\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    // Good source of info about elements and attributes\n\t    // http://dev.w3.org/html5/spec/Overview.html#semantics\n\t    // http://simon.html5.org/html-elements\n\t    // Safe Void Elements - HTML5\n\t    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n\t    var /** @type {?} */ VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\t    // Elements that you can, intentionally, leave open (and which close themselves)\n\t    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n\t    var /** @type {?} */ OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n\t    var /** @type {?} */ OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n\t    var /** @type {?} */ OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\t    // Safe Block Elements - HTML5\n\t    var /** @type {?} */ BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n\t        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n\t        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\t    // Inline Elements - HTML5\n\t    var /** @type {?} */ INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n\t        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n\t        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\t    var /** @type {?} */ VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\t    // Attributes that have href and hence need to be sanitized\n\t    var /** @type {?} */ URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\t    // Attributes that have special href set hence need to be sanitized\n\t    var /** @type {?} */ SRCSET_ATTRS = tagSet('srcset');\n\t    var /** @type {?} */ HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n\t        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n\t        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n\t        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n\t        'valign,value,vspace,width');\n\t    // NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n\t    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n\t    // innerHTML is required, SVG attributes should be added here.\n\t    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n\t    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n\t    // are left out here.\n\t    var /** @type {?} */ VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n\t    /**\n\t     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n\t     * attributes.\n\t     */\n\t    var SanitizingHtmlSerializer = (function () {\n\t        function SanitizingHtmlSerializer() {\n\t            this.sanitizedSomething = false;\n\t            this.buf = [];\n\t        }\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n\t            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n\t            // However this code never accesses properties off of `document` before deleting its contents\n\t            // again, so it shouldn't be vulnerable to DOM clobbering.\n\t            var /** @type {?} */ current = el.firstChild;\n\t            while (current) {\n\t                if (DOM.isElementNode(current)) {\n\t                    this.startElement(/** @type {?} */ (current));\n\t                }\n\t                else if (DOM.isTextNode(current)) {\n\t                    this.chars(DOM.nodeValue(current));\n\t                }\n\t                else {\n\t                    // Strip non-element, non-text nodes.\n\t                    this.sanitizedSomething = true;\n\t                }\n\t                if (DOM.firstChild(current)) {\n\t                    current = DOM.firstChild(current);\n\t                    continue;\n\t                }\n\t                while (current) {\n\t                    // Leaving the element. Walk up and to the right, closing tags as we go.\n\t                    if (DOM.isElementNode(current)) {\n\t                        this.endElement(/** @type {?} */ (current));\n\t                    }\n\t                    if (DOM.nextSibling(current)) {\n\t                        current = DOM.nextSibling(current);\n\t                        break;\n\t                    }\n\t                    current = DOM.parentElement(current);\n\t                }\n\t            }\n\t            return this.buf.join('');\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n\t            var _this = this;\n\t            var /** @type {?} */ tagName = DOM.nodeName(element).toLowerCase();\n\t            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n\t                this.sanitizedSomething = true;\n\t                return;\n\t            }\n\t            this.buf.push('<');\n\t            this.buf.push(tagName);\n\t            DOM.attributeMap(element).forEach(function (value, attrName) {\n\t                var /** @type {?} */ lower = attrName.toLowerCase();\n\t                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n\t                    _this.sanitizedSomething = true;\n\t                    return;\n\t                }\n\t                // TODO(martinprobst): Special case image URIs for data:image/...\n\t                if (URI_ATTRS[lower])\n\t                    value = sanitizeUrl(value);\n\t                if (SRCSET_ATTRS[lower])\n\t                    value = sanitizeSrcset(value);\n\t                _this.buf.push(' ');\n\t                _this.buf.push(attrName);\n\t                _this.buf.push('=\"');\n\t                _this.buf.push(encodeEntities(value));\n\t                _this.buf.push('\"');\n\t            });\n\t            this.buf.push('>');\n\t        };\n\t        /**\n\t         * @param {?} current\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n\t            var /** @type {?} */ tagName = DOM.nodeName(current).toLowerCase();\n\t            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n\t                this.buf.push('</');\n\t                this.buf.push(tagName);\n\t                this.buf.push('>');\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} chars\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.chars = function (chars /** TODO #9100 */) { this.buf.push(encodeEntities(chars)); };\n\t        return SanitizingHtmlSerializer;\n\t    }());\n\t    // Regular Expressions for parsing tags and attributes\n\t    var /** @type {?} */ SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t    // ! to ~ is the ASCII range.\n\t    var /** @type {?} */ NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\t    /**\n\t     * Escapes all potentially dangerous characters, so that the\n\t     * resulting string can be safely inserted into attribute or\n\t     * element text.\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function encodeEntities(value) {\n\t        return value.replace(/&/g, '&amp;')\n\t            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n\t            var /** @type {?} */ hi = match.charCodeAt(0);\n\t            var /** @type {?} */ low = match.charCodeAt(1);\n\t            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n\t        })\n\t            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n\t            .replace(/</g, '&lt;')\n\t            .replace(/>/g, '&gt;');\n\t    }\n\t    /**\n\t     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n\t     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n\t     *\n\t     * This is undesirable since we don't want to allow any of these custom attributes. This method\n\t     * strips them all.\n\t     * @param {?} el\n\t     * @return {?}\n\t     */\n\t    function stripCustomNsAttrs(el) {\n\t        DOM.attributeMap(el).forEach(function (_, attrName) {\n\t            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n\t                DOM.removeAttribute(el, attrName);\n\t            }\n\t        });\n\t        for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n\t            var n = _a[_i];\n\t            if (DOM.isElementNode(n))\n\t                stripCustomNsAttrs(/** @type {?} */ (n));\n\t        }\n\t    }\n\t    /**\n\t     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n\t     * the DOM in a browser environment.\n\t     * @param {?} unsafeHtmlInput\n\t     * @return {?}\n\t     */\n\t    function sanitizeHtml(unsafeHtmlInput) {\n\t        try {\n\t            var /** @type {?} */ containerEl = getInertElement();\n\t            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n\t            var /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n\t            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n\t            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n\t            var /** @type {?} */ mXSSAttempts = 5;\n\t            var /** @type {?} */ parsedHtml = unsafeHtml;\n\t            do {\n\t                if (mXSSAttempts === 0) {\n\t                    throw new Error('Failed to sanitize html because the input is unstable');\n\t                }\n\t                mXSSAttempts--;\n\t                unsafeHtml = parsedHtml;\n\t                DOM.setInnerHTML(containerEl, unsafeHtml);\n\t                if (((DOM.defaultDoc())).documentMode) {\n\t                    // strip custom-namespaced attributes on IE<=11\n\t                    stripCustomNsAttrs(containerEl);\n\t                }\n\t                parsedHtml = DOM.getInnerHTML(containerEl);\n\t            } while (unsafeHtml !== parsedHtml);\n\t            var /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n\t            var /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n\t            // Clear out the body element.\n\t            var /** @type {?} */ parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n\t            for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n\t                var child = _a[_i];\n\t                DOM.removeChild(parent_1, child);\n\t            }\n\t            if (core.isDevMode() && sanitizer.sanitizedSomething) {\n\t                DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n\t            }\n\t            return safeHtml;\n\t        }\n\t        catch (e) {\n\t            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n\t            inertElement = null;\n\t            throw e;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Regular expression for safe style values.\n\t     *\n\t     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n\t     *\n\t     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n\t     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n\t     * of XSS.\n\t     *\n\t     * The function expression checks only for XSS safety, not for CSS validity.\n\t     *\n\t     * This regular expression was taken from the Closure sanitization library, and augmented for\n\t     * transformation values.\n\t     */\n\t    var /** @type {?} */ VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n\t    var /** @type {?} */ TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n\t    var /** @type {?} */ COLOR_FNS = '(?:rgb|hsl)a?';\n\t    var /** @type {?} */ GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n\t    var /** @type {?} */ CSS3_FNS = '(?:calc|attr)';\n\t    var /** @type {?} */ FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n\t    var /** @type {?} */ SAFE_STYLE_VALUE = new RegExp((\"^(\" + VALUES + \"|\") +\n\t        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n\t        (FN_ARGS + \")$\"), 'g');\n\t    /**\n\t     * Matches a `url(...)` value with an arbitrary argument as long as it does\n\t     * not contain parentheses.\n\t     *\n\t     * The URL value still needs to be sanitized separately.\n\t     *\n\t     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n\t     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n\t     * by observing whether scroll bars are displayed, or character ranges used by a font face\n\t     * definition.\n\t     *\n\t     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n\t     * binding a URL value without further cooperation from the page will cause an information leak, and\n\t     * if so, it is just a leak, not a full blown XSS vulnerability.\n\t     *\n\t     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n\t     * code is permissive and allows URLs that sanitize otherwise.\n\t     */\n\t    var /** @type {?} */ URL_RE = /^url\\(([^)]+)\\)$/;\n\t    /**\n\t     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n\t     * that neither escape (\\) nor any other character that could result in\n\t     * breaking out of a string parsing context are allowed;\n\t     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n\t     *\n\t     * This code was taken from the Closure sanitization library.\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function hasBalancedQuotes(value) {\n\t        var /** @type {?} */ outsideSingle = true;\n\t        var /** @type {?} */ outsideDouble = true;\n\t        for (var /** @type {?} */ i = 0; i < value.length; i++) {\n\t            var /** @type {?} */ c = value.charAt(i);\n\t            if (c === '\\'' && outsideDouble) {\n\t                outsideSingle = !outsideSingle;\n\t            }\n\t            else if (c === '\"' && outsideSingle) {\n\t                outsideDouble = !outsideDouble;\n\t            }\n\t        }\n\t        return outsideSingle && outsideDouble;\n\t    }\n\t    /**\n\t     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n\t     * value) and returns a value that is safe to use in a browser environment.\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function sanitizeStyle(value) {\n\t        value = String(value).trim(); // Make sure it's actually a string.\n\t        if (!value)\n\t            return '';\n\t        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n\t        // reasoning behind this.\n\t        var /** @type {?} */ urlMatch = value.match(URL_RE);\n\t        if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n\t            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n\t            return value; // Safe style values.\n\t        }\n\t        if (core.isDevMode()) {\n\t            getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n\t        }\n\t        return 'unsafe';\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n\t     * values to be safe to use in the different DOM contexts.\n\t     *\n\t     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n\t     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n\t     * the website.\n\t     *\n\t     * In specific situations, it might be necessary to disable sanitization, for example if the\n\t     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n\t     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n\t     * methods, and then binding to that value from the template.\n\t     *\n\t     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n\t     * Cross Site Scripting (XSS) security bug!\n\t     *\n\t     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n\t     * close as possible to the source of the value, to make it easy to verify no security bug is\n\t     * created by its use.\n\t     *\n\t     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n\t     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n\t     * code. The sanitizer leaves safe values intact.\n\t     *\n\t     * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n\t     * sanitization for the value passed in. Carefully check and audit all values and code paths going\n\t     * into this call. Make sure any user data is appropriately escaped for this security context.\n\t     * For more detail, see the [Security Guide](http://g.co/ng/security).\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var DomSanitizer = (function () {\n\t        function DomSanitizer() {\n\t        }\n\t        /**\n\t         * Sanitizes a value for use in the given SecurityContext.\n\t         *\n\t         * If value is trusted for the context, this method will unwrap the contained safe value and use\n\t         * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n\t         * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n\t         * is responsible to make sure that the value can definitely be safely used in the given context.\n\t         * @abstract\n\t         * @param {?} context\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.sanitize = function (context, value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n\t         * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n\t         * leave safe HTML intact, so in most situations this method should not be used.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustHtml = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be safe style value (CSS).\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustStyle = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be safe JavaScript.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustScript = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n\t         * in hyperlinks or `<img src>`.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustUrl = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n\t         * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustResourceUrl = function (value) { };\n\t        return DomSanitizer;\n\t    }());\n\t    var DomSanitizerImpl = (function (_super) {\n\t        __extends$8(DomSanitizerImpl, _super);\n\t        function DomSanitizerImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @param {?} ctx\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n\t            if (value == null)\n\t                return null;\n\t            switch (ctx) {\n\t                case core.SecurityContext.NONE:\n\t                    return value;\n\t                case core.SecurityContext.HTML:\n\t                    if (value instanceof SafeHtmlImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'HTML');\n\t                    return sanitizeHtml(String(value));\n\t                case core.SecurityContext.STYLE:\n\t                    if (value instanceof SafeStyleImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'Style');\n\t                    return sanitizeStyle(value);\n\t                case core.SecurityContext.SCRIPT:\n\t                    if (value instanceof SafeScriptImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'Script');\n\t                    throw new Error('unsafe value used in a script context');\n\t                case core.SecurityContext.URL:\n\t                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n\t                        // Allow resource URLs in URL contexts, they are strictly more trusted.\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    }\n\t                    this.checkNotSafeValue(value, 'URL');\n\t                    return sanitizeUrl(String(value));\n\t                case core.SecurityContext.RESOURCE_URL:\n\t                    if (value instanceof SafeResourceUrlImpl) {\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    }\n\t                    this.checkNotSafeValue(value, 'ResourceURL');\n\t                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n\t                default:\n\t                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} expectedType\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n\t            if (value instanceof SafeValueImpl) {\n\t                throw new Error((\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \") +\n\t                    \"(see http://g.co/ng/security#xss)\");\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n\t            return new SafeResourceUrlImpl(value);\n\t        };\n\t        DomSanitizerImpl.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomSanitizerImpl.ctorParameters = function () { return []; };\n\t        return DomSanitizerImpl;\n\t    }(DomSanitizer));\n\t    /**\n\t     * @abstract\n\t     */\n\t    var SafeValueImpl = (function () {\n\t        /**\n\t         * @param {?} changingThisBreaksApplicationSecurity\n\t         */\n\t        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n\t            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n\t            // empty\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        SafeValueImpl.prototype.getTypeName = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeValueImpl.prototype.toString = function () {\n\t            return (\"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity) +\n\t                \" (see http://g.co/ng/security#xss)\";\n\t        };\n\t        return SafeValueImpl;\n\t    }());\n\t    var SafeHtmlImpl = (function (_super) {\n\t        __extends$8(SafeHtmlImpl, _super);\n\t        function SafeHtmlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n\t        return SafeHtmlImpl;\n\t    }(SafeValueImpl));\n\t    var SafeStyleImpl = (function (_super) {\n\t        __extends$8(SafeStyleImpl, _super);\n\t        function SafeStyleImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n\t        return SafeStyleImpl;\n\t    }(SafeValueImpl));\n\t    var SafeScriptImpl = (function (_super) {\n\t        __extends$8(SafeScriptImpl, _super);\n\t        function SafeScriptImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n\t        return SafeScriptImpl;\n\t    }(SafeValueImpl));\n\t    var SafeUrlImpl = (function (_super) {\n\t        __extends$8(SafeUrlImpl, _super);\n\t        function SafeUrlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n\t        return SafeUrlImpl;\n\t    }(SafeValueImpl));\n\t    var SafeResourceUrlImpl = (function (_super) {\n\t        __extends$8(SafeResourceUrlImpl, _super);\n\t        function SafeResourceUrlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n\t        return SafeResourceUrlImpl;\n\t    }(SafeValueImpl));\n\t\n\t    var /** @type {?} */ INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n\t        { provide: core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n\t        { provide: _angular_common.PlatformLocation, useClass: BrowserPlatformLocation }\n\t    ];\n\t    /**\n\t     * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n\t     * Attacker-controlled data introduced by an unsanitized provider could expose your\n\t     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ BROWSER_SANITIZATION_PROVIDERS = [\n\t        { provide: core.Sanitizer, useExisting: DomSanitizer },\n\t        { provide: DomSanitizer, useClass: DomSanitizerImpl },\n\t    ];\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ platformBrowser = core.createPlatformFactory(core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function initDomAdapter() {\n\t        BrowserDomAdapter.makeCurrent();\n\t        BrowserGetTestability.init();\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function errorHandler() {\n\t        return new core.ErrorHandler();\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _document() {\n\t        return getDOM().defaultDoc();\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _resolveDefaultAnimationDriver() {\n\t        if (getDOM().supportsWebAnimation()) {\n\t            return new WebAnimationsDriver();\n\t        }\n\t        return AnimationDriver.NOOP;\n\t    }\n\t    /**\n\t     * The ng module for the browser.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var BrowserModule = (function () {\n\t        /**\n\t         * @param {?} parentModule\n\t         */\n\t        function BrowserModule(parentModule) {\n\t            if (parentModule) {\n\t                throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n\t            }\n\t        }\n\t        BrowserModule.decorators = [\n\t            { type: core.NgModule, args: [{\n\t                        providers: [\n\t                            BROWSER_SANITIZATION_PROVIDERS, { provide: core.ErrorHandler, useFactory: errorHandler, deps: [] },\n\t                            { provide: DOCUMENT, useFactory: _document, deps: [] },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n\t                            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n\t                            { provide: DomRootRenderer, useClass: DomRootRenderer_ },\n\t                            { provide: core.RootRenderer, useExisting: DomRootRenderer },\n\t                            { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n\t                            { provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver }, DomSharedStylesHost,\n\t                            core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Title\n\t                        ],\n\t                        exports: [_angular_common.CommonModule, core.ApplicationModule]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserModule.ctorParameters = function () { return [\n\t            { type: BrowserModule, decorators: [{ type: core.Optional }, { type: core.SkipSelf },] },\n\t        ]; };\n\t        return BrowserModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * JS version of browser APIs. This library can only run in the browser.\n\t     */\n\t    var /** @type {?} */ win = typeof window !== 'undefined' && window || ({});\n\t\n\t    var ChangeDetectionPerfRecord = (function () {\n\t        /**\n\t         * @param {?} msPerTick\n\t         * @param {?} numTicks\n\t         */\n\t        function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n\t            this.msPerTick = msPerTick;\n\t            this.numTicks = numTicks;\n\t        }\n\t        return ChangeDetectionPerfRecord;\n\t    }());\n\t    /**\n\t     * Entry point for all Angular debug tools. This object corresponds to the `ng`\n\t     * global variable accessible in the dev console.\n\t     */\n\t    var AngularTools = (function () {\n\t        /**\n\t         * @param {?} ref\n\t         */\n\t        function AngularTools(ref) {\n\t            this.profiler = new AngularProfiler(ref);\n\t        }\n\t        return AngularTools;\n\t    }());\n\t    /**\n\t     * Entry point for all Angular profiling-related debug tools. This object\n\t     * corresponds to the `ng.profiler` in the dev console.\n\t     */\n\t    var AngularProfiler = (function () {\n\t        /**\n\t         * @param {?} ref\n\t         */\n\t        function AngularProfiler(ref) {\n\t            this.appRef = ref.injector.get(core.ApplicationRef);\n\t        }\n\t        /**\n\t         * Exercises change detection in a loop and then prints the average amount of\n\t         * time in milliseconds how long a single round of change detection takes for\n\t         * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n\t         * of 500 milliseconds.\n\t         *\n\t         * Optionally, a user may pass a `config` parameter containing a map of\n\t         * options. Supported options are:\n\t         *\n\t         * `record` (boolean) - causes the profiler to record a CPU profile while\n\t         * it exercises the change detector. Example:\n\t         *\n\t         * ```\n\t         * ng.profiler.timeChangeDetection({record: true})\n\t         * ```\n\t         * @param {?} config\n\t         * @return {?}\n\t         */\n\t        AngularProfiler.prototype.timeChangeDetection = function (config) {\n\t            var /** @type {?} */ record = config && config['record'];\n\t            var /** @type {?} */ profileName = 'Change Detection';\n\t            // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n\t            var /** @type {?} */ isProfilerAvailable = isPresent(win.console.profile);\n\t            if (record && isProfilerAvailable) {\n\t                win.console.profile(profileName);\n\t            }\n\t            var /** @type {?} */ start = getDOM().performanceNow();\n\t            var /** @type {?} */ numTicks = 0;\n\t            while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n\t                this.appRef.tick();\n\t                numTicks++;\n\t            }\n\t            var /** @type {?} */ end = getDOM().performanceNow();\n\t            if (record && isProfilerAvailable) {\n\t                // need to cast to <any> because type checker thinks there's no argument\n\t                // while in fact there is:\n\t                //\n\t                // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n\t                ((win.console.profileEnd))(profileName);\n\t            }\n\t            var /** @type {?} */ msPerTick = (end - start) / numTicks;\n\t            win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n\t            win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n\t            return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n\t        };\n\t        return AngularProfiler;\n\t    }());\n\t\n\t    var /** @type {?} */ context = (global$1);\n\t    /**\n\t     * Enabled Angular 2 debug tools that are accessible via your browser's\n\t     * developer console.\n\t     *\n\t     * Usage:\n\t     *\n\t     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n\t     * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n\t     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n\t     *    then hit Enter.\n\t     *\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     * @param {?} ref\n\t     * @return {?}\n\t     */\n\t    function enableDebugTools(ref) {\n\t        ((Object)).assign(context.ng, new AngularTools(ref));\n\t        return ref;\n\t    }\n\t    /**\n\t     * Disables Angular 2 tools.\n\t     *\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     * @return {?}\n\t     */\n\t    function disableDebugTools() {\n\t        if (context.ng) {\n\t            delete context.ng.profiler;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Predicates for use with {\\@link DebugElement}'s query functions.\n\t     *\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     */\n\t    var By = (function () {\n\t        function By() {\n\t        }\n\t        /**\n\t         * Match all elements.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n\t         * @return {?}\n\t         */\n\t        By.all = function () { return function (debugElement) { return true; }; };\n\t        /**\n\t         * Match elements by the given CSS selector.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        By.css = function (selector) {\n\t            return function (debugElement) {\n\t                return isPresent(debugElement.nativeElement) ?\n\t                    getDOM().elementMatches(debugElement.nativeElement, selector) :\n\t                    false;\n\t            };\n\t        };\n\t        /**\n\t         * Match elements that have the given directive present.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        By.directive = function (type) {\n\t            return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n\t        };\n\t        return By;\n\t    }());\n\t\n\t    var /** @type {?} */ __platform_browser_private__ = {\n\t        BrowserPlatformLocation: BrowserPlatformLocation,\n\t        DomAdapter: DomAdapter,\n\t        BrowserDomAdapter: BrowserDomAdapter,\n\t        BrowserGetTestability: BrowserGetTestability,\n\t        getDOM: getDOM,\n\t        setRootDomAdapter: setRootDomAdapter,\n\t        DomRootRenderer_: DomRootRenderer_,\n\t        DomRootRenderer: DomRootRenderer,\n\t        NAMESPACE_URIS: NAMESPACE_URIS,\n\t        shimContentAttribute: shimContentAttribute,\n\t        shimHostAttribute: shimHostAttribute,\n\t        flattenStyles: flattenStyles,\n\t        splitNamespace: splitNamespace,\n\t        isNamespaced: isNamespaced,\n\t        DomSharedStylesHost: DomSharedStylesHost,\n\t        SharedStylesHost: SharedStylesHost,\n\t        ELEMENT_PROBE_PROVIDERS: ELEMENT_PROBE_PROVIDERS,\n\t        DomEventsPlugin: DomEventsPlugin,\n\t        KeyEventsPlugin: KeyEventsPlugin,\n\t        HammerGesturesPlugin: HammerGesturesPlugin,\n\t        initDomAdapter: initDomAdapter,\n\t        INTERNAL_BROWSER_PLATFORM_PROVIDERS: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n\t        BROWSER_SANITIZATION_PROVIDERS: BROWSER_SANITIZATION_PROVIDERS,\n\t        WebAnimationsDriver: WebAnimationsDriver\n\t    };\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new core.Version('2.4.10');\n\t\n\t    exports.BrowserModule = BrowserModule;\n\t    exports.platformBrowser = platformBrowser;\n\t    exports.Title = Title;\n\t    exports.disableDebugTools = disableDebugTools;\n\t    exports.enableDebugTools = enableDebugTools;\n\t    exports.AnimationDriver = AnimationDriver;\n\t    exports.By = By;\n\t    exports.NgProbeToken = NgProbeToken;\n\t    exports.DOCUMENT = DOCUMENT;\n\t    exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;\n\t    exports.EventManager = EventManager;\n\t    exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;\n\t    exports.HammerGestureConfig = HammerGestureConfig;\n\t    exports.DomSanitizer = DomSanitizer;\n\t    exports.VERSION = VERSION;\n\t    exports.__platform_browser_private__ = __platform_browser_private__;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(7);\n\tvar Subscriber_1 = __webpack_require__(9);\n\tvar Subscription_1 = __webpack_require__(3);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(19);\n\tvar SubjectSubscription_1 = __webpack_require__(18);\n\tvar rxSubscriber_1 = __webpack_require__(4);\n\t/**\n\t * @class SubjectSubscriber<T>\n\t */\n\tvar SubjectSubscriber = (function (_super) {\n\t    __extends(SubjectSubscriber, _super);\n\t    function SubjectSubscriber(destination) {\n\t        _super.call(this, destination);\n\t        this.destination = destination;\n\t    }\n\t    return SubjectSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.SubjectSubscriber = SubjectSubscriber;\n\t/**\n\t * @class Subject<T>\n\t */\n\tvar Subject = (function (_super) {\n\t    __extends(Subject, _super);\n\t    function Subject() {\n\t        _super.call(this);\n\t        this.observers = [];\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this.hasError = false;\n\t        this.thrownError = null;\n\t    }\n\t    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n\t        return new SubjectSubscriber(this);\n\t    };\n\t    Subject.prototype.lift = function (operator) {\n\t        var subject = new AnonymousSubject(this, this);\n\t        subject.operator = operator;\n\t        return subject;\n\t    };\n\t    Subject.prototype.next = function (value) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        if (!this.isStopped) {\n\t            var observers = this.observers;\n\t            var len = observers.length;\n\t            var copy = observers.slice();\n\t            for (var i = 0; i < len; i++) {\n\t                copy[i].next(value);\n\t            }\n\t        }\n\t    };\n\t    Subject.prototype.error = function (err) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.hasError = true;\n\t        this.thrownError = err;\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].error(err);\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.complete = function () {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].complete();\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.unsubscribe = function () {\n\t        this.isStopped = true;\n\t        this.closed = true;\n\t        this.observers = null;\n\t    };\n\t    Subject.prototype._trySubscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else {\n\t            return _super.prototype._trySubscribe.call(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype._subscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else if (this.hasError) {\n\t            subscriber.error(this.thrownError);\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else if (this.isStopped) {\n\t            subscriber.complete();\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else {\n\t            this.observers.push(subscriber);\n\t            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype.asObservable = function () {\n\t        var observable = new Observable_1.Observable();\n\t        observable.source = this;\n\t        return observable;\n\t    };\n\t    Subject.create = function (destination, source) {\n\t        return new AnonymousSubject(destination, source);\n\t    };\n\t    return Subject;\n\t}(Observable_1.Observable));\n\texports.Subject = Subject;\n\t/**\n\t * @class AnonymousSubject<T>\n\t */\n\tvar AnonymousSubject = (function (_super) {\n\t    __extends(AnonymousSubject, _super);\n\t    function AnonymousSubject(destination, source) {\n\t        _super.call(this);\n\t        this.destination = destination;\n\t        this.source = source;\n\t    }\n\t    AnonymousSubject.prototype.next = function (value) {\n\t        var destination = this.destination;\n\t        if (destination && destination.next) {\n\t            destination.next(value);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.error = function (err) {\n\t        var destination = this.destination;\n\t        if (destination && destination.error) {\n\t            this.destination.error(err);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.complete = function () {\n\t        var destination = this.destination;\n\t        if (destination && destination.complete) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    AnonymousSubject.prototype._subscribe = function (subscriber) {\n\t        var source = this.source;\n\t        if (source) {\n\t            return this.source.subscribe(subscriber);\n\t        }\n\t        else {\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t    };\n\t    return AnonymousSubject;\n\t}(Subject));\n\texports.AnonymousSubject = AnonymousSubject;\n\t//# sourceMappingURL=Subject.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscription_1 = __webpack_require__(3);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SubjectSubscription = (function (_super) {\n\t    __extends(SubjectSubscription, _super);\n\t    function SubjectSubscription(subject, subscriber) {\n\t        _super.call(this);\n\t        this.subject = subject;\n\t        this.subscriber = subscriber;\n\t        this.closed = false;\n\t    }\n\t    SubjectSubscription.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var subject = this.subject;\n\t        var observers = subject.observers;\n\t        this.subject = null;\n\t        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n\t            return;\n\t        }\n\t        var subscriberIndex = observers.indexOf(this.subscriber);\n\t        if (subscriberIndex !== -1) {\n\t            observers.splice(subscriberIndex, 1);\n\t        }\n\t    };\n\t    return SubjectSubscription;\n\t}(Subscription_1.Subscription));\n\texports.SubjectSubscription = SubjectSubscription;\n\t//# sourceMappingURL=SubjectSubscription.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when an action is invalid because the object has been\n\t * unsubscribed.\n\t *\n\t * @see {@link Subject}\n\t * @see {@link BehaviorSubject}\n\t *\n\t * @class ObjectUnsubscribedError\n\t */\n\tvar ObjectUnsubscribedError = (function (_super) {\n\t    __extends(ObjectUnsubscribedError, _super);\n\t    function ObjectUnsubscribedError() {\n\t        var err = _super.call(this, 'object unsubscribed');\n\t        this.name = err.name = 'ObjectUnsubscribedError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return ObjectUnsubscribedError;\n\t}(Error));\n\texports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n\t//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when one or more errors have occurred during the\n\t * `unsubscribe` of a {@link Subscription}.\n\t */\n\tvar UnsubscriptionError = (function (_super) {\n\t    __extends(UnsubscriptionError, _super);\n\t    function UnsubscriptionError(errors) {\n\t        _super.call(this);\n\t        this.errors = errors;\n\t        var err = Error.call(this, errors ?\n\t            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n\t        this.name = err.name = 'UnsubscriptionError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return UnsubscriptionError;\n\t}(Error));\n\texports.UnsubscriptionError = UnsubscriptionError;\n\t//# sourceMappingURL=UnsubscriptionError.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\t//# sourceMappingURL=isArray.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tfunction isObject(x) {\n\t    return x != null && typeof x === 'object';\n\t}\n\texports.isObject = isObject;\n\t//# sourceMappingURL=isObject.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Subscriber_1 = __webpack_require__(9);\n\tvar rxSubscriber_1 = __webpack_require__(4);\n\tvar Observer_1 = __webpack_require__(8);\n\tfunction toSubscriber(nextOrObserver, error, complete) {\n\t    if (nextOrObserver) {\n\t        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n\t            return nextOrObserver;\n\t        }\n\t        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n\t            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n\t        }\n\t    }\n\t    if (!nextOrObserver && !error && !complete) {\n\t        return new Subscriber_1.Subscriber(Observer_1.empty);\n\t    }\n\t    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n\t}\n\texports.toSubscriber = toSubscriber;\n\t//# sourceMappingURL=toSubscriber.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar errorObject_1 = __webpack_require__(11);\n\tvar tryCatchTarget;\n\tfunction tryCatcher() {\n\t    try {\n\t        return tryCatchTarget.apply(this, arguments);\n\t    }\n\t    catch (e) {\n\t        errorObject_1.errorObject.e = e;\n\t        return errorObject_1.errorObject;\n\t    }\n\t}\n\tfunction tryCatch(fn) {\n\t    tryCatchTarget = fn;\n\t    return tryCatcher;\n\t}\n\texports.tryCatch = tryCatch;\n\t;\n\t//# sourceMappingURL=tryCatch.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar ComponentInjector = (function () {\r\n\t    function ComponentInjector(resolver) {\r\n\t        this.resolver = resolver;\r\n\t    }\r\n\t    /**\r\n\t     * Inject a component into a ViewContainerRef element\r\n\t     * @param container ViewContainerRef element where to inject the component\r\n\t     * @param componentSelector string Selector of the component which should be injected\r\n\t     * @returns {ComponentRef<any>} Returns ComponentRef of the injected component\r\n\t     */\r\n\t    ComponentInjector.prototype.inject = function (container, componentSelector) {\r\n\t        var injectedComponent;\r\n\t        var componentFactory = this.getComponentFactory(componentSelector);\r\n\t        if (componentFactory) {\r\n\t            injectedComponent = this.injectComponentFactory(container, componentFactory);\r\n\t        }\r\n\t        else {\r\n\t            console.warn('Component [' + componentSelector + '] cannot be found! ' +\r\n\t                'Make sure it is included in the `entryComponents` list.');\r\n\t        }\r\n\t        return injectedComponent ? injectedComponent : null;\r\n\t    };\r\n\t    /**\r\n\t     * Set public properties of the component specified by the componentRef\r\n\t     * @param componentRef ComponentRef object where should be attached the properties\r\n\t     * @param properties Object which contains the keys (name of the property) and values (value of the property).\r\n\t     */\r\n\t    ComponentInjector.prototype.setProperties = function (componentRef, properties) {\r\n\t        if (componentRef) {\r\n\t            for (var property in properties) {\r\n\t                if (properties.hasOwnProperty(property)) {\r\n\t                    componentRef.instance[property] = properties[property];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Remove a component by its ComponentRef\r\n\t     * @param componentRef ComponentRef which should be removed\r\n\t     */\r\n\t    ComponentInjector.prototype.remove = function (componentRef) {\r\n\t        componentRef.destroy();\r\n\t        componentRef = null;\r\n\t    };\r\n\t    /**\r\n\t     * Get the component factory class from the _factories list based on its selector string name\r\n\t     * The list of the _factories is created based on the list of components listed in the entryComponents: [...]\r\n\t     * section of the @NgModule(...)\r\n\t     * @param componentSelector string Selector of the component\r\n\t     * @returns {ComponentFactory<any>|null} Returns the factory of the component or NULL if there is no such component\r\n\t     */\r\n\t    ComponentInjector.prototype.getComponentFactory = function (componentSelector) {\r\n\t        var componentFactory;\r\n\t        var factories = Array.from(this.resolver['_factories']);\r\n\t        var factory = factories.find(function (component) {\r\n\t            return component[1].selector === componentSelector;\r\n\t        });\r\n\t        if (factory) {\r\n\t            var factoryClass = factory[0];\r\n\t            componentFactory = this.resolver.resolveComponentFactory(factoryClass);\r\n\t        }\r\n\t        return componentFactory ? componentFactory : null;\r\n\t    };\r\n\t    /**\r\n\t     * Inject a componentFactory into a container element\r\n\t     * @param container ViewContainerRef container element where to inject the component\r\n\t     * @param componentFactory ComponentFactory which should be injected in the  container element\r\n\t     * @returns {ComponentRef<any>} returns ComponentRef of the injected componentFactory\r\n\t     */\r\n\t    ComponentInjector.prototype.injectComponentFactory = function (container, componentFactory) {\r\n\t        return container.createComponent(componentFactory);\r\n\t    };\r\n\t    return ComponentInjector;\r\n\t}());\r\n\tComponentInjector = __decorate([\r\n\t    core_1.Injectable(),\r\n\t    __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver])\r\n\t], ComponentInjector);\r\n\texports.ComponentInjector = ComponentInjector;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar platform_browser_1 = __webpack_require__(16);\r\n\tvar TrustHtmlPipe = (function () {\r\n\t    function TrustHtmlPipe(sanitizer) {\r\n\t        this.sanitizer = sanitizer;\r\n\t    }\r\n\t    TrustHtmlPipe.prototype.transform = function (htmlString) {\r\n\t        return this.sanitizer.bypassSecurityTrustHtml(htmlString);\r\n\t    };\r\n\t    return TrustHtmlPipe;\r\n\t}());\r\n\tTrustHtmlPipe = __decorate([\r\n\t    core_1.Pipe({\r\n\t        name: 'trustHtml'\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [platform_browser_1.DomSanitizer])\r\n\t], TrustHtmlPipe);\r\n\texports.TrustHtmlPipe = TrustHtmlPipe;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar common_1 = __webpack_require__(6);\r\n\tvar rx_pubsub_1 = __webpack_require__(2);\r\n\tvar trust_html_pipe_1 = __webpack_require__(26);\r\n\tvar modal_window_component_1 = __webpack_require__(14);\r\n\tvar modal_window_service_1 = __webpack_require__(15);\r\n\tvar ModalModule = (function () {\r\n\t    function ModalModule() {\r\n\t    }\r\n\t    return ModalModule;\r\n\t}());\r\n\tModalModule = __decorate([\r\n\t    core_1.NgModule({\r\n\t        imports: [\r\n\t            common_1.CommonModule\r\n\t        ],\r\n\t        declarations: [\r\n\t            modal_window_component_1.ModalWindowComponent,\r\n\t            trust_html_pipe_1.TrustHtmlPipe\r\n\t        ],\r\n\t        providers: [rx_pubsub_1.RxPubSub, modal_window_service_1.ModalWindowService],\r\n\t        exports: [modal_window_component_1.ModalWindowComponent]\r\n\t    })\r\n\t], ModalModule);\r\n\texports.ModalModule = ModalModule;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! version: \"0.0.1\" */\n\t!function(e,t){if(true)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var o=t();for(var n in o)(\"object\"==typeof exports?exports:e)[n]=o[n]}}(this,function(){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p=\"/static/\",t(0)}([function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function e(){}return e.addClass=function(e,t){e.className=(e.className+\" \"+t).trim()},e.hasClass=function(e,t){return!(!t||(\" \"+e.className+\" \").indexOf(\" \"+t+\" \")==-1)},e.removeClass=function(e,t){var o=\" \"+e.className;e.className=o.replace(\" \"+t,\"\")},e}();t.XDomUtil=o}])});\n\t//# sourceMappingURL=xdom-util.min.js.map\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// ng2-modal-module.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 096a9b07c28120374708","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar modal_module_1 = require(\"./src/modal.module\");\r\nexports.ModalModule = modal_module_1.ModalModule;\r\nvar modal_window_service_1 = require(\"./src/services/modal-window.service\");\r\nexports.ModalWindowService = modal_window_service_1.ModalWindowService;\r\nvar modal_window_component_1 = require(\"./src/components/modal-window/modal-window.component\");\r\nexports.ModalWindowComponent = modal_window_component_1.ModalWindowComponent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.ts\n// module id = 0\n// module chunks = 0","/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/symbol/observable'), require('rxjs/Subject'), require('rxjs/Observable')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/symbol/observable', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.rxjs_symbol_observable,global.Rx,global.Rx));\n}(this, function (exports,rxjs_symbol_observable,rxjs_Subject,rxjs_Observable) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = (self);\n        }\n        else {\n            globalScope = (global);\n        }\n    }\n    else {\n        globalScope = (window);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var /** @type {?} */ global$1 = globalScope;\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var /** @type {?} */ res = token.toString();\n        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function print(obj) {\n        // tslint:disable-next-line:no-console\n        console.log(obj);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function warn(obj) {\n        console.warn(obj);\n    }\n    var /** @type {?} */ _symbolIterator = null;\n    /**\n     * @return {?}\n     */\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (((globalScope)).Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                    var /** @type {?} */ key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        ((Map)).prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    var /** @type {?} */ _nextClassId = 0;\n    var /** @type {?} */ Reflect = global$1.Reflect;\n    /**\n     * @param {?} annotation\n     * @return {?}\n     */\n    function extractAnnotation(annotation) {\n        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n            // it is a decorator, extract annotation\n            annotation = annotation.annotation;\n        }\n        return annotation;\n    }\n    /**\n     * @param {?} fnOrArray\n     * @param {?} key\n     * @return {?}\n     */\n    function applyParams(fnOrArray, key) {\n        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n            fnOrArray === Number || fnOrArray === Array) {\n            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n        }\n        if (typeof fnOrArray === 'function') {\n            return fnOrArray;\n        }\n        if (Array.isArray(fnOrArray)) {\n            var /** @type {?} */ annotations = fnOrArray;\n            var /** @type {?} */ annoLength = annotations.length - 1;\n            var /** @type {?} */ fn = fnOrArray[annoLength];\n            if (typeof fn !== 'function') {\n                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n            }\n            if (annoLength != fn.length) {\n                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n            }\n            var /** @type {?} */ paramsAnnotations = [];\n            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n                var /** @type {?} */ paramAnnotations = [];\n                paramsAnnotations.push(paramAnnotations);\n                var /** @type {?} */ annotation = annotations[i];\n                if (Array.isArray(annotation)) {\n                    for (var /** @type {?} */ j = 0; j < annotation.length; j++) {\n                        paramAnnotations.push(extractAnnotation(annotation[j]));\n                    }\n                }\n                else if (typeof annotation === 'function') {\n                    paramAnnotations.push(extractAnnotation(annotation));\n                }\n                else {\n                    paramAnnotations.push(annotation);\n                }\n            }\n            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n            return fn;\n        }\n        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n    }\n    /**\n     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n     *\n     * ## Basic Example\n     *\n     * ```\n     * var Greeter = ng.Class({\n     *   constructor: function(name) {\n     *     this.name = name;\n     *   },\n     *\n     *   greet: function() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class Greeter {\n     *   constructor(name) {\n     *     this.name = name;\n     *   }\n     *\n     *   greet() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * }\n     * ```\n     *\n     * or equivalent to ES5:\n     *\n     * ```\n     * var Greeter = function (name) {\n     *   this.name = name;\n     * }\n     *\n     * Greeter.prototype.greet = function () {\n     *   alert('Hello ' + this.name + '!');\n     * }\n     * ```\n     *\n     * ### Example with parameter annotations\n     *\n     * ```\n     * var MyService = ng.Class({\n     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n     *     ...\n     *   }]\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class MyService {\n     *   constructor(name: string, \\@Optional() myService: Service) {\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * ### Example with inheritance\n     *\n     * ```\n     * var Shape = ng.Class({\n     *   constructor: (color) {\n     *     this.color = color;\n     *   }\n     * });\n     *\n     * var Square = ng.Class({\n     *   extends: Shape,\n     *   constructor: function(color, size) {\n     *     Shape.call(this, color);\n     *     this.size = size;\n     *   }\n     * });\n     * ```\n     * \\@stable\n     * @param {?} clsDef\n     * @return {?}\n     */\n    function Class(clsDef) {\n        var /** @type {?} */ constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n        var /** @type {?} */ proto = constructor.prototype;\n        if (clsDef.hasOwnProperty('extends')) {\n            if (typeof clsDef.extends === 'function') {\n                ((constructor)).prototype = proto =\n                    Object.create(((clsDef.extends)).prototype);\n            }\n            else {\n                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n            }\n        }\n        for (var key in clsDef) {\n            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n                proto[key] = applyParams(clsDef[key], key);\n            }\n        }\n        if (this && this.annotations instanceof Array) {\n            Reflect.defineMetadata('annotations', this.annotations, constructor);\n        }\n        var /** @type {?} */ constructorName = constructor['name'];\n        if (!constructorName || constructorName === 'constructor') {\n            ((constructor))['overriddenName'] = \"class\" + _nextClassId++;\n        }\n        return (constructor);\n    }\n    /**\n     * @param {?} name\n     * @param {?} props\n     * @param {?=} parentClass\n     * @param {?=} chainFn\n     * @return {?}\n     */\n    function makeDecorator(name, props, parentClass, chainFn) {\n        if (chainFn === void 0) { chainFn = null; }\n        var /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n        /**\n         * @param {?} objOrType\n         * @return {?}\n         */\n        function DecoratorFactory(objOrType) {\n            if (!(Reflect && Reflect.getOwnMetadata)) {\n                throw 'reflect-metadata shim is required when using class decorators';\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call(this, objOrType);\n                return this;\n            }\n            var /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n            var /** @type {?} */ chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n            chainAnnotation.push(annotationInstance);\n            var /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n                var /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n                annotations.push(annotationInstance);\n                Reflect.defineMetadata('annotations', annotations, cls);\n                return cls;\n            });\n            TypeDecorator.annotations = chainAnnotation;\n            TypeDecorator.Class = Class;\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ((DecoratorFactory)).annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    /**\n     * @param {?} props\n     * @return {?}\n     */\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            props.forEach(function (prop, i) {\n                var /** @type {?} */ argVal = args[i];\n                if (Array.isArray(prop)) {\n                    // plain parameter\n                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n                }\n                else {\n                    for (var propName in prop) {\n                        _this[propName] =\n                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n                    }\n                }\n            });\n        };\n    }\n    /**\n     * @param {?} name\n     * @param {?} props\n     * @param {?=} parentClass\n     * @return {?}\n     */\n    function makeParamDecorator(name, props, parentClass) {\n        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n        /**\n         * @param {...?} args\n         * @return {?}\n         */\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var /** @type {?} */ annotationInstance = new ((_a = ((ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n            ((ParamDecorator)).annotation = annotationInstance;\n            return ParamDecorator;\n            /**\n             * @param {?} cls\n             * @param {?} unusedKey\n             * @param {?} index\n             * @return {?}\n             */\n            function ParamDecorator(cls, unusedKey, index) {\n                var /** @type {?} */ parameters = Reflect.getOwnMetadata('parameters', cls) || [];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                parameters[index] = parameters[index] || [];\n                parameters[index].push(annotationInstance);\n                Reflect.defineMetadata('parameters', parameters, cls);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    /**\n     * @param {?} name\n     * @param {?} props\n     * @param {?=} parentClass\n     * @return {?}\n     */\n    function makePropDecorator(name, props, parentClass) {\n        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n        /**\n         * @param {...?} args\n         * @return {?}\n         */\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var /** @type {?} */ decoratorInstance = new ((_a = ((PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n            return function PropDecorator(target, name) {\n                var /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * Inject decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Inject = makeParamDecorator('Inject', [['token', undefined]]);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Optional = makeParamDecorator('Optional', []);\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Injectable = (makeDecorator('Injectable', []));\n    /**\n     * Self decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Self = makeParamDecorator('Self', []);\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ SkipSelf = makeParamDecorator('SkipSelf', []);\n    /**\n     * Host decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Host = makeParamDecorator('Host', []);\n\n    var OpaqueToken = (function () {\n        /**\n         * @param {?} _desc\n         */\n        function OpaqueToken(_desc) {\n            this._desc = _desc;\n        }\n        /**\n         * @return {?}\n         */\n        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n        OpaqueToken.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        OpaqueToken.ctorParameters = function () { return [\n            null,\n        ]; };\n        return OpaqueToken;\n    }());\n\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n    /**\n     * Base class for query metadata.\n     *\n     * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n     * more information.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var Query = (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *  @stable\n     *  @Annotation\n     */\n    var /** @type {?} */ ContentChildren = (makePropDecorator('ContentChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n        }\n    ], Query));\n    /**\n     * ContentChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ ContentChild = makePropDecorator('ContentChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: false,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ ViewChildren = makePropDecorator('ViewChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ ViewChild = makePropDecorator('ViewChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n\n    var ChangeDetectionStrategy = {};\n    ChangeDetectionStrategy.OnPush = 0;\n    ChangeDetectionStrategy.Default = 1;\n    ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\n    ChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n    var ChangeDetectorStatus = {};\n    ChangeDetectorStatus.CheckOnce = 0;\n    ChangeDetectorStatus.Checked = 1;\n    ChangeDetectorStatus.CheckAlways = 2;\n    ChangeDetectorStatus.Detached = 3;\n    ChangeDetectorStatus.Errored = 4;\n    ChangeDetectorStatus.Destroyed = 5;\n    ChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\n    ChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n    /**\n     * @param {?} changeDetectionStrategy\n     * @return {?}\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return isBlank(changeDetectionStrategy) ||\n            changeDetectionStrategy === ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * Directive decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Directive = (makeDecorator('Directive', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        providers: undefined,\n        exportAs: undefined,\n        queries: undefined\n    }));\n    /**\n     * Component decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Component = (makeDecorator('Component', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        exportAs: undefined,\n        moduleId: undefined,\n        providers: undefined,\n        viewProviders: undefined,\n        changeDetection: ChangeDetectionStrategy.Default,\n        queries: undefined,\n        templateUrl: undefined,\n        template: undefined,\n        styleUrls: undefined,\n        styles: undefined,\n        animations: undefined,\n        encapsulation: undefined,\n        interpolation: undefined,\n        entryComponents: undefined\n    }, Directive));\n    /**\n     * Pipe decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Pipe = (makeDecorator('Pipe', {\n        name: undefined,\n        pure: true,\n    }));\n    /**\n     * Input decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n    /**\n     * Output decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n    /**\n     * HostListener decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LifecycleHooks = {};\n    LifecycleHooks.OnInit = 0;\n    LifecycleHooks.OnDestroy = 1;\n    LifecycleHooks.DoCheck = 2;\n    LifecycleHooks.OnChanges = 3;\n    LifecycleHooks.AfterContentInit = 4;\n    LifecycleHooks.AfterContentChecked = 5;\n    LifecycleHooks.AfterViewInit = 6;\n    LifecycleHooks.AfterViewChecked = 7;\n    LifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\n    LifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\n    LifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\n    LifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\n    LifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\n    LifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\n    LifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\n    LifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\n    var /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n        LifecycleHooks.AfterViewChecked\n    ];\n    /**\n     * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n     *\n     * \\@description\n     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n     * and content children are checked if at least one of them has changed.\n     * The `changes` parameter contains the changed properties.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var OnChanges = (function () {\n        function OnChanges() {\n        }\n        /**\n         * @abstract\n         * @param {?} changes\n         * @return {?}\n         */\n        OnChanges.prototype.ngOnChanges = function (changes) { };\n        return OnChanges;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n     * initialized.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n     *\n     * \\@description\n     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n     * first time, and before any of its children have been checked. It is invoked only once when the\n     * directive is instantiated.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var OnInit = (function () {\n        function OnInit() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        OnInit.prototype.ngOnInit = function () { };\n        return OnInit;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n     *\n     * \\@description\n     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n     * algorithm. The default change detection algorithm looks for differences by comparing\n     * bound-property values by reference across change detection runs.\n     *\n     * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n     * detector detects changes.\n     *\n     * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n     * for collections.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var DoCheck = (function () {\n        function DoCheck() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DoCheck.prototype.ngDoCheck = function () { };\n        return DoCheck;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n     *\n     * \\@description\n     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n     * instance is destroyed.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var OnDestroy = (function () {\n        function OnDestroy() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        OnDestroy.prototype.ngOnDestroy = function () { };\n        return OnDestroy;\n    }());\n    /**\n     *\n     * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n     * initialized.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterContentInit = (function () {\n        function AfterContentInit() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterContentInit.prototype.ngAfterContentInit = function () { };\n        return AfterContentInit;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterContentChecked = (function () {\n        function AfterContentChecked() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterContentChecked.prototype.ngAfterContentChecked = function () { };\n        return AfterContentChecked;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n     * initialized.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterViewInit = (function () {\n        function AfterViewInit() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterViewInit.prototype.ngAfterViewInit = function () { };\n        return AfterViewInit;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterViewChecked = (function () {\n        function AfterViewChecked() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterViewChecked.prototype.ngAfterViewChecked = function () { };\n        return AfterViewChecked;\n    }());\n\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     * @stable\n     */\n    var /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * NgModule decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ NgModule = (makeDecorator('NgModule', {\n        providers: undefined,\n        declarations: undefined,\n        imports: undefined,\n        exports: undefined,\n        entryComponents: undefined,\n        bootstrap: undefined,\n        schemas: undefined,\n        id: undefined,\n    }));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewEncapsulation = {};\n    ViewEncapsulation.Emulated = 0;\n    ViewEncapsulation.Native = 1;\n    ViewEncapsulation.None = 2;\n    ViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\n    ViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\n    ViewEncapsulation[ViewEncapsulation.None] = \"None\";\n    /**\n     * Metadata properties available for configuring Views.\n     *\n     * For details on the `\\@Component` annotation, see {\\@link Component}.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   selector: 'greet',\n     *   template: 'Hello {{name}}!',\n     * })\n     * class Greet {\n     *   name: string;\n     *\n     *   constructor() {\n     *     this.name = 'World';\n     *   }\n     * }\n     * ```\n     *\n     * @deprecated Use Component instead.\n     *\n     * {\\@link Component}\n     */\n    var ViewMetadata = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function ViewMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n            this.templateUrl = templateUrl;\n            this.template = template;\n            this.styleUrls = styleUrls;\n            this.styles = styles;\n            this.encapsulation = encapsulation;\n            this.animations = animations;\n            this.interpolation = interpolation;\n        }\n        return ViewMetadata;\n    }());\n\n    /**\n     * \\@whatItDoes Represents the version of Angular\n     *\n     * \\@stable\n     */\n    var Version = (function () {\n        /**\n         * @param {?} full\n         */\n        function Version(full) {\n            this.full = full;\n        }\n        Object.defineProperty(Version.prototype, \"major\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.full.split('.')[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Version.prototype, \"minor\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.full.split('.')[1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Version.prototype, \"patch\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.full.split('.').slice(2).join('.'); },\n            enumerable: true,\n            configurable: true\n        });\n        return Version;\n    }());\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new Version('2.4.10');\n\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * \\@experimental\n     * @param {?} forwardRefFn\n     * @return {?}\n     */\n    function forwardRef(forwardRefFn) {\n        ((forwardRefFn)).__forward_ref__ = forwardRef;\n        ((forwardRefFn)).toString = function () { return stringify(this()); };\n        return (((forwardRefFn)));\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {\\@link forwardRef}\n     * \\@experimental\n     * @param {?} type\n     * @return {?}\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return ((type))();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\n    var /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var _NullInjector = (function () {\n        function _NullInjector() {\n        }\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        _NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return _NullInjector;\n    }());\n    /**\n     * \\@whatItDoes Injector interface\n     * \\@howToUse\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * \\@description\n     * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * \\@stable\n     * @abstract\n     */\n    var Injector = (function () {\n        function Injector() {\n        }\n        /**\n         * Retrieves an instance from the injector based on the provided token.\n         * If not found:\n         * - Throws {\\@link NoProviderError} if no `notFoundValue` that is not equal to\n         * Injector.THROW_IF_NOT_FOUND is given\n         * - Returns the `notFoundValue` otherwise\n         * @abstract\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        Injector.prototype.get = function (token, notFoundValue) { };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new _NullInjector();\n        return Injector;\n    }());\n\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var BaseError = (function (_super) {\n        __extends$1(BaseError, _super);\n        /**\n         * @param {?} message\n         */\n        function BaseError(message) {\n            _super.call(this, message);\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            // TODO(bradfordcsmith): Remove this hack when\n            //     google/closure-compiler/issues/2102 is fixed.\n            var nativeError = new Error(message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.message; },\n            /**\n             * @param {?} message\n             * @return {?}\n             */\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return ((this._nativeError)).stack; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) { ((this._nativeError)).stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * \\@stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$1(WrappedError, _super);\n        /**\n         * @param {?} message\n         * @param {?} error\n         */\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @param {?} keys\n     * @return {?}\n     */\n    function findFirstClosedCycle(keys) {\n        var /** @type {?} */ res = [];\n        for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    /**\n     * @param {?} keys\n     * @return {?}\n     */\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n            var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    /**\n     * Base class for all errors arising from misconfigured providers.\n     * \\@stable\n     */\n    var AbstractProviderError = (function (_super) {\n        __extends(AbstractProviderError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} key\n         * @param {?} constructResolvingMessage\n         */\n        function AbstractProviderError(injector, key, constructResolvingMessage) {\n            _super.call(this, 'DI Error');\n            this.keys = [key];\n            this.injectors = [injector];\n            this.constructResolvingMessage = constructResolvingMessage;\n            this.message = this.constructResolvingMessage(this.keys);\n        }\n        /**\n         * @param {?} injector\n         * @param {?} key\n         * @return {?}\n         */\n        AbstractProviderError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n            this.message = this.constructResolvingMessage(this.keys);\n        };\n        return AbstractProviderError;\n    }(BaseError));\n    /**\n     * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n     * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var NoProviderError = (function (_super) {\n        __extends(NoProviderError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} key\n         */\n        function NoProviderError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                var first = stringify(keys[0].token);\n                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n            });\n        }\n        return NoProviderError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     * \\@stable\n     */\n    var CyclicDependencyError = (function (_super) {\n        __extends(CyclicDependencyError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} key\n         */\n        function CyclicDependencyError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n            });\n        }\n        return CyclicDependencyError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     * \\@stable\n     */\n    var InstantiationError = (function (_super) {\n        __extends(InstantiationError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} originalException\n         * @param {?} originalStack\n         * @param {?} key\n         */\n        function InstantiationError(injector, originalException, originalStack, key) {\n            _super.call(this, 'DI Error', originalException);\n            this.keys = [key];\n            this.injectors = [injector];\n        }\n        /**\n         * @param {?} injector\n         * @param {?} key\n         * @return {?}\n         */\n        InstantiationError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n        };\n        Object.defineProperty(InstantiationError.prototype, \"message\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ first = stringify(this.keys[0].token);\n                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.keys[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return InstantiationError;\n    }(WrappedError));\n    /**\n     * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var InvalidProviderError = (function (_super) {\n        __extends(InvalidProviderError, _super);\n        /**\n         * @param {?} provider\n         */\n        function InvalidProviderError(provider) {\n            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n        }\n        return InvalidProviderError;\n    }(BaseError));\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var NoAnnotationError = (function (_super) {\n        __extends(NoAnnotationError, _super);\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} params\n         */\n        function NoAnnotationError(typeOrFunc, params) {\n            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n        }\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} params\n         * @return {?}\n         */\n        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n            var /** @type {?} */ signature = [];\n            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n                var /** @type {?} */ parameter = params[i];\n                if (!parameter || parameter.length == 0) {\n                    signature.push('?');\n                }\n                else {\n                    signature.push(parameter.map(stringify).join(' '));\n                }\n            }\n            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n                signature.join(', ') + '). ' +\n                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n        };\n        return NoAnnotationError;\n    }(BaseError));\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var OutOfBoundsError = (function (_super) {\n        __extends(OutOfBoundsError, _super);\n        /**\n         * @param {?} index\n         */\n        function OutOfBoundsError(index) {\n            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n        }\n        return OutOfBoundsError;\n    }(BaseError));\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n        __extends(MixingMultiProvidersWithRegularProvidersError, _super);\n        /**\n         * @param {?} provider1\n         * @param {?} provider2\n         */\n        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n                provider2.toString());\n        }\n        return MixingMultiProvidersWithRegularProvidersError;\n    }(BaseError));\n\n    /**\n     * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * \\@experimental\n     */\n    var ReflectiveKey = (function () {\n        /**\n         * Private\n         * @param {?} token\n         * @param {?} id\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n        }\n        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n            /**\n             * Returns a stringified token.\n             * @return {?}\n             */\n            get: function () { return stringify(this.token); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Retrieves a `Key` for a token.\n         * @param {?} token\n         * @return {?}\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @return {?} the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    /**\n     * \\@internal\n     */\n    var KeyRegistry = (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        /**\n         * @param {?} token\n         * @return {?}\n         */\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Represents a type that a Component or other object is instances of.\n     *\n     * @description\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @stable\n     */\n    var /** @type {?} */ Type = Function;\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * Attention: This regex has to hold even if the code is minified!\n     */\n    var /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{\\s*(\"use strict\";)?\\s*(return\\s+)?\\S+\\.apply\\(this,\\s*arguments\\)/;\n    var ReflectionCapabilities = (function () {\n        /**\n         * @param {?=} reflect\n         */\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || global$1.Reflect;\n        }\n        /**\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        /**\n         * @param {?} t\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new (t.bind.apply(t, [void 0].concat(args)))();\n        }; };\n        /**\n         * \\@internal\n         * @param {?} paramTypes\n         * @param {?} paramAnnotations\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var /** @type {?} */ result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var /** @type {?} */ i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        /**\n         * @param {?} type\n         * @param {?} parentCtor\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(type.toString())) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n                return ((type)).parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var /** @type {?} */ paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var /** @type {?} */ paramAnnotations = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getOwnMetadata)) {\n                var /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n                var /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n                if (paramTypes || paramAnnotations) {\n                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n                }\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(((type.length))).fill(undefined);\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var /** @type {?} */ parentCtor = getParentCtor(type);\n            var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} parentCtor\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n                var /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getOwnMetadata) {\n                return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n            }\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n            var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} parentCtor\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (((typeOrFunc)).propMetadata &&\n                ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n                var /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (((typeOrFunc)).propDecorators &&\n                ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n                var /** @type {?} */ propDecorators_1 = ((typeOrFunc)).propDecorators;\n                var /** @type {?} */ propMetadata_1 = ({});\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getOwnMetadata) {\n                return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n            }\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n            var /** @type {?} */ propMetadata = {};\n            if (parentCtor !== Object) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var /** @type {?} */ decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, propMetadata[propName]);\n                    }\n                    decorators.push.apply(decorators, ownPropMetadata[propName]);\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        /**\n         * @param {?} type\n         * @param {?} lcProperty\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.getter = function (name) { return ((new Function('o', 'return o.' + name + ';'))); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return ((new Function('o', 'v', 'return o.' + name + ' = v;')));\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.method = function (name) {\n            var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return ((new Function('o', 'args', functionBody)));\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        /**\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} runtime\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n        /**\n         * @param {?} enumIdentifier\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    /**\n     * @param {?} decoratorInvocations\n     * @return {?}\n     */\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var /** @type {?} */ decoratorType = decoratorInvocation.type;\n            var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n            var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n        });\n    }\n    /**\n     * @param {?} ctor\n     * @return {?}\n     */\n    function getParentCtor(ctor) {\n        var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n        var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * Provides read-only access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     * @abstract\n     */\n    var ReflectorReader = (function () {\n        function ReflectorReader() {\n        }\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.parameters = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.annotations = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.propMetadata = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.importUri = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} runtime\n         * @return {?}\n         */\n        ReflectorReader.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { };\n        /**\n         * @abstract\n         * @param {?} identifier\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectorReader.prototype.resolveEnum = function (identifier, name) { };\n        return ReflectorReader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = (function (_super) {\n        __extends$2(Reflector, _super);\n        /**\n         * @param {?} reflectionCapabilities\n         */\n        function Reflector(reflectionCapabilities) {\n            _super.call(this);\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        /**\n         * @param {?} caps\n         * @return {?}\n         */\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        /**\n         * @param {?} type\n         * @param {?} lcProperty\n         * @return {?}\n         */\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        /**\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} runtime\n         * @return {?}\n         */\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n        };\n        /**\n         * @param {?} identifier\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }(ReflectorReader));\n\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = (function () {\n        /**\n         * @param {?} key\n         * @param {?} optional\n         * @param {?} visibility\n         */\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        /**\n         * @param {?} key\n         * @return {?}\n         */\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var /** @type {?} */ _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = (function () {\n        /**\n         * @param {?} key\n         * @param {?} resolvedFactories\n         * @param {?} multiProvider\n         */\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n        }\n        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.resolvedFactories[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {\\@link\n     * Provider}.\n     * \\@experimental\n     */\n    var ResolvedReflectiveFactory = (function () {\n        /**\n         * @param {?} factory\n         * @param {?} dependencies\n         */\n        function ResolvedReflectiveFactory(factory, dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     * @param {?} provider\n     * @return {?}\n     */\n    function resolveReflectiveFactory(provider) {\n        var /** @type {?} */ factoryFn;\n        var /** @type {?} */ resolvedDeps;\n        if (provider.useClass) {\n            var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n     *\n     * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n     * convenience provider syntax.\n     * @param {?} provider\n     * @return {?}\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n    }\n    /**\n     * Resolve a list of Providers.\n     * @param {?} providers\n     * @return {?}\n     */\n    function resolveReflectiveProviders(providers) {\n        var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n        var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n        var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     * @param {?} providers\n     * @param {?} normalizedProvidersMap\n     * @return {?}\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n            var /** @type {?} */ provider = providers[i];\n            var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var /** @type {?} */ resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    /**\n     * @param {?} providers\n     * @param {?} res\n     * @return {?}\n     */\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n                res.push(/** @type {?} */ (b));\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw new InvalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @return {?}\n     */\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function _dependenciesFor(typeOrFunc) {\n        var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} metadata\n     * @param {?} params\n     * @return {?}\n     */\n    function _extractToken(typeOrFunc, metadata, params) {\n        var /** @type {?} */ token = null;\n        var /** @type {?} */ optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var /** @type {?} */ visibility = null;\n        for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n            var /** @type {?} */ paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?} optional\n     * @param {?} visibility\n     * @return {?}\n     */\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    // Threshold for the dynamic version\n    var /** @type {?} */ UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var ReflectiveInjector = (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {\\@link Injector#resolve} and {\\@link Injector#fromResolvedProviders}.\n         * @param {?} providers\n         * @param {?=} parent\n         * @return {?}\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * \\@experimental\n         * @param {?} providers\n         * @param {?=} parent\n         * @return {?}\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            return new ReflectiveInjector_(providers, parent);\n        };\n        /**\n         * Parent of this injector.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n         *\n         * ```typescript\n         * var parent = ReflectiveInjector.resolveAndCreate([]);\n         * var child = parent.resolveAndCreateChild([]);\n         * expect(child.parent).toBe(parent);\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.parent = function () { };\n        /**\n         * Resolves an array of providers and creates a child injector from those providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n         * var child = parent.resolveAndCreateChild([ChildProvider]);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         *\n         * This function is slower than the corresponding `createChildFromResolved`\n         * because it needs to resolve the passed-in providers first.\n         * See {\\@link Injector#resolve} and {\\@link Injector#createChildFromResolved}.\n         * @abstract\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n        /**\n         * Creates a child injector from previously resolved providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n         *\n         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n         * var child = parent.createChildFromResolved(childProviders);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         * @abstract\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n        /**\n         * Resolves a provider and instantiates an object in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         *\n         * var car = injector.resolveAndInstantiate(Car);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n         * ```\n         * @abstract\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n        /**\n         * Instantiates an object using a resolved provider in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n         * var car = injector.instantiateResolved(carProvider);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n         * ```\n         * @abstract\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n        /**\n         * @abstract\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = (function () {\n        /**\n         * Private\n         * @param {?} _providers\n         * @param {?=} _parent\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            if (_parent === void 0) { _parent = null; }\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this._parent = _parent;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        /**\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n            inj._parent = this;\n            return inj;\n        };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /**\n         * \\@internal\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw new CyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        /**\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n                for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        /**\n         * @param {?} provider\n         * @param {?} ResolvedReflectiveFactory\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n            var /** @type {?} */ deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var /** @type {?} */ obj;\n            try {\n                obj = factory.apply(void 0, deps);\n            }\n            catch (e) {\n                throw new InstantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        /**\n         * @param {?} dep\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        /**\n         * @param {?} key\n         * @param {?} visibility\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        /**\n         * @param {?} keyId\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /**\n         * \\@internal\n         * @param {?} key\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw new NoProviderError(this, key);\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} key\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /**\n         * \\@internal\n         * @param {?} key\n         * @param {?} notFoundValue\n         * @param {?} visibility\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var /** @type {?} */ inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this._parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var /** @type {?} */ inj_ = (inj);\n                var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_._parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        return ReflectiveInjector_;\n    }());\n    var /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n    /**\n     * @param {?} injector\n     * @param {?} fn\n     * @return {?}\n     */\n    function _mapProviders(injector, fn) {\n        var /** @type {?} */ res = new Array(injector._providers.length);\n        for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * \\@whatItDoes Provides a hook for centralized exception handling.\n     *\n     * \\@description\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * \\@NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * \\@stable\n     */\n    var ErrorHandler = (function () {\n        /**\n         * @param {?=} rethrowError\n         */\n        function ErrorHandler(rethrowError) {\n            if (rethrowError === void 0) { rethrowError = true; }\n            /**\n             * @internal\n             */\n            this._console = console;\n            this.rethrowError = rethrowError;\n        }\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype.handleError = function (error) {\n            var /** @type {?} */ originalError = this._findOriginalError(error);\n            var /** @type {?} */ originalStack = this._findOriginalStack(error);\n            var /** @type {?} */ context = this._findContext(error);\n            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n            if (originalError) {\n                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n            }\n            if (originalStack) {\n                this._console.error('ORIGINAL STACKTRACE:');\n                this._console.error(originalStack);\n            }\n            if (context) {\n                this._console.error('ERROR CONTEXT:');\n                this._console.error(context);\n            }\n            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n            if (this.rethrowError)\n                throw error;\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._extractMessage = function (error) {\n            return error instanceof Error ? error.message : error.toString();\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return error.context ? error.context :\n                    this._findContext(((error)).originalError);\n            }\n            return null;\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var /** @type {?} */ e = ((error)).originalError;\n            while (e && ((e)).originalError) {\n                e = ((e)).originalError;\n            }\n            return e;\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._findOriginalStack = function (error) {\n            if (!(error instanceof Error))\n                return null;\n            var /** @type {?} */ e = error;\n            var /** @type {?} */ stack = e.stack;\n            while (e instanceof Error && ((e)).originalError) {\n                e = ((e)).originalError;\n                if (e instanceof Error && e.stack) {\n                    stack = e.stack;\n                }\n            }\n            return stack;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.merge = function (m1, m2) {\n            var /** @type {?} */ m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.equals = function (m1, m2) {\n            var /** @type {?} */ k1 = Object.keys(m1);\n            var /** @type {?} */ k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n                var /** @type {?} */ key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} condition\n         * @return {?}\n         */\n        ListWrapper.findLast = function (arr, condition) {\n            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n                if (condition(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} list\n         * @param {?} items\n         * @return {?}\n         */\n        ListWrapper.removeAll = function (list, items) {\n            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n                var /** @type {?} */ index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        /**\n         * @param {?} list\n         * @param {?} el\n         * @return {?}\n         */\n        ListWrapper.remove = function (list, el) {\n            var /** @type {?} */ index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        /**\n         * @param {?} list\n         * @return {?}\n         */\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return ((flat)).concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @param {?} comparator\n     * @return {?}\n     */\n    function areIterablesEqual(a, b, comparator) {\n        var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n        var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var /** @type {?} */ item1 = iterator1.next();\n            var /** @type {?} */ item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    /**\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n            var /** @type {?} */ item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n\n    /**\n     * Determine if the argument is shaped like a Promise\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     * @param {?} obj\n     * @return {?}\n     */\n    function isObservable(obj) {\n        return !!(obj && obj[rxjs_symbol_observable.$$observable]);\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var /** @type {?} */ APP_INITIALIZER = new OpaqueToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n     *\n     * \\@experimental\n     */\n    var ApplicationInitStatus = (function () {\n        /**\n         * @param {?} appInits\n         */\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this._done = false;\n            var asyncInitPromises = [];\n            if (appInits) {\n                for (var i = 0; i < appInits.length; i++) {\n                    var initResult = appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n            if (asyncInitPromises.length === 0) {\n                this._done = true;\n            }\n        }\n        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._done; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._donePromise; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationInitStatus.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var /** @type {?} */ APP_ID = new OpaqueToken('AppId');\n    /**\n     * @return {?}\n     */\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: /** @type {?} */ ([]),\n    };\n    /**\n     * @return {?}\n     */\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var /** @type {?} */ PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var /** @type {?} */ PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\n    var Console = (function () {\n        function Console() {\n        }\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Console.prototype.log = function (message) { print(message); };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Console.prototype.warn = function (message) { warn(message); };\n        Console.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Console.ctorParameters = function () { return []; };\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     *\n     * \\@stable\n     */\n    var ComponentStillLoadingError = (function (_super) {\n        __extends$4(ComponentStillLoadingError, _super);\n        /**\n         * @param {?} compType\n         */\n        function ComponentStillLoadingError(compType) {\n            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n            this.compType = compType;\n        }\n        return ComponentStillLoadingError;\n    }(BaseError));\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * \\@experimental\n     */\n    var ModuleWithComponentFactories = (function () {\n        /**\n         * @param {?} ngModuleFactory\n         * @param {?} componentFactories\n         */\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    /**\n     * @return {?}\n     */\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {\\@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `\\@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     * \\@stable\n     */\n    var Compiler = (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents`\n         * have to be inlined. Otherwise throws a {\\@link ComponentStillLoadingError}.\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {\\@link compileModuleSync} but also creates ComponentFactories for all components.\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {\\@link compileModuleAsync} but also creates ComponentFactories for all components.\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n         * the template of the given component.\n         * This is used by the `upgrade` library to compile the appropriate transclude content\n         * in the Angular 1 wrapper component.\n         * @param {?} component\n         * @return {?}\n         */\n        Compiler.prototype.getNgContentSelectors = function (component) { throw _throwError(); };\n        /**\n         * Clears all caches.\n         * @return {?}\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         * @param {?} type\n         * @return {?}\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        Compiler.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Compiler.ctorParameters = function () { return []; };\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * \\@experimental\n     * @abstract\n     */\n    var CompilerFactory = (function () {\n        function CompilerFactory() {\n        }\n        /**\n         * @abstract\n         * @param {?=} options\n         * @return {?}\n         */\n        CompilerFactory.prototype.createCompiler = function (options) { };\n        return CompilerFactory;\n    }());\n\n    var ElementRef = (function () {\n        /**\n         * @param {?} nativeElement\n         */\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * \\@Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n     *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * \\@stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$6(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         * @param {?=} isAsync\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * @param {?=} generatorOrNext\n         * @param {?=} error\n         * @param {?=} complete\n         * @return {?}\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var /** @type {?} */ schedulerFn;\n            var /** @type {?} */ errorFn = function (err) { return null; };\n            var /** @type {?} */ completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {\\@link runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {\\@link run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '\\@angular/core';\n     * import {NgIf} from '\\@angular/common';\n     *\n     * \\@Component({\n     *   selector: 'ng-zone-demo'.\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *       // reenter the Angular zone and display done\n     *       this._ngZone.run(() => {console.log('Outside Done!') });\n     *     }}));\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * \\@experimental\n     */\n    var NgZone = (function () {\n        /**\n         * @param {?} __0\n         */\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this._hasPendingMicrotasks = false;\n            this._hasPendingMacrotasks = false;\n            this._isStable = true;\n            this._nesting = 0;\n            this._onUnstable = new EventEmitter(false);\n            this._onMicrotaskEmpty = new EventEmitter(false);\n            this._onStable = new EventEmitter(false);\n            this._onErrorEvents = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error('Angular requires Zone.js prolyfill.');\n            }\n            Zone.assertZonePatched();\n            this.outer = this.inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            this.forkInnerZoneWithAngularBehavior();\n        }\n        /**\n         * @return {?}\n         */\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        /**\n         * @return {?}\n         */\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {\\@link runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         * @param {?} fn\n         * @return {?}\n         */\n        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         * @param {?} fn\n         * @return {?}\n         */\n        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {\\@link run} to reenter the Angular zone and do work that updates the application model.\n         * @param {?} fn\n         * @return {?}\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             * @return {?}\n             */\n            get: function () { return this._onUnstable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n            /**\n             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             * @return {?}\n             */\n            get: function () { return this._onMicrotaskEmpty; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onStable\", {\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             * @return {?}\n             */\n            get: function () { return this._onStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onError\", {\n            /**\n             * Notify that an error has been delivered.\n             * @return {?}\n             */\n            get: function () { return this._onErrorEvents; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"isStable\", {\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             * @return {?}\n             */\n            get: function () { return this._isStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._hasPendingMicrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._hasPendingMacrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.checkStable = function () {\n            var _this = this;\n            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n                try {\n                    this._nesting++;\n                    this._onMicrotaskEmpty.emit(null);\n                }\n                finally {\n                    this._nesting--;\n                    if (!this._hasPendingMicrotasks) {\n                        try {\n                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n                        }\n                        finally {\n                            this._isStable = true;\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n            var _this = this;\n            this.inner = this.inner.fork({\n                name: 'angular',\n                properties: /** @type {?} */ ({ 'isAngularZone': true }),\n                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onHasTask: function (delegate, current, target, hasTaskState) {\n                    delegate.hasTask(target, hasTaskState);\n                    if (current === target) {\n                        // We are only interested in hasTask events which originate from our zone\n                        // (A child hasTask event is not interesting to us)\n                        if (hasTaskState.change == 'microTask') {\n                            _this.setHasMicrotask(hasTaskState.microTask);\n                        }\n                        else if (hasTaskState.change == 'macroTask') {\n                            _this.setHasMacrotask(hasTaskState.macroTask);\n                        }\n                    }\n                },\n                onHandleError: function (delegate, current, target, error) {\n                    delegate.handleError(target, error);\n                    _this.triggerError(error);\n                    return false;\n                }\n            });\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.onEnter = function () {\n            this._nesting++;\n            if (this._isStable) {\n                this._isStable = false;\n                this._onUnstable.emit(null);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.onLeave = function () {\n            this._nesting--;\n            this.checkStable();\n        };\n        /**\n         * @param {?} hasMicrotasks\n         * @return {?}\n         */\n        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n            this._hasPendingMicrotasks = hasMicrotasks;\n            this.checkStable();\n        };\n        /**\n         * @param {?} hasMacrotasks\n         * @return {?}\n         */\n        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n        return NgZone;\n    }());\n\n    var AnimationQueue = (function () {\n        /**\n         * @param {?} _zone\n         */\n        function AnimationQueue(_zone) {\n            this._zone = _zone;\n            this.entries = [];\n        }\n        /**\n         * @param {?} player\n         * @return {?}\n         */\n        AnimationQueue.prototype.enqueue = function (player) { this.entries.push(player); };\n        /**\n         * @return {?}\n         */\n        AnimationQueue.prototype.flush = function () {\n            var _this = this;\n            // given that each animation player may set aside\n            // microtasks and rely on DOM-based events, this\n            // will cause Angular to run change detection after\n            // each request. This sidesteps the issue. If a user\n            // hooks into an animation via (@anim.start) or (@anim.done)\n            // then those methods will automatically trigger change\n            // detection by wrapping themselves inside of a zone\n            if (this.entries.length) {\n                this._zone.runOutsideAngular(function () {\n                    // this code is wrapped into a single promise such that the\n                    // onStart and onDone player callbacks are triggered outside\n                    // of the digest cycle of animations\n                    Promise.resolve(null).then(function () { return _this._triggerAnimations(); });\n                });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationQueue.prototype._triggerAnimations = function () {\n            NgZone.assertNotInAngularZone();\n            while (this.entries.length) {\n                var /** @type {?} */ player = this.entries.shift();\n                // in the event that an animation throws an error then we do\n                // not want to re-run animations on any previous animations\n                // if they have already been kicked off beforehand\n                if (!player.hasStarted()) {\n                    player.play();\n                }\n            }\n        };\n        AnimationQueue.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        AnimationQueue.ctorParameters = function () { return [\n            { type: NgZone, },\n        ]; };\n        return AnimationQueue;\n    }());\n\n    var DefaultIterableDifferFactory = (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        /**\n         * @param {?} cdRef\n         * @param {?=} trackByFn\n         * @return {?}\n         */\n        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var /** @type {?} */ trackByIdentity = function (index, item) { return item; };\n    /**\n     * \\@stable\n     */\n    var DefaultIterableDiffer = (function () {\n        /**\n         * @param {?=} _trackByFn\n         */\n        function DefaultIterableDiffer(_trackByFn) {\n            this._trackByFn = _trackByFn;\n            this._length = null;\n            this._collection = null;\n            this._linkedRecords = null;\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = this._trackByFn || trackByIdentity;\n        }\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._collection; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var /** @type {?} */ nextIt = this._itHead;\n            var /** @type {?} */ nextRemove = this._removalsHead;\n            var /** @type {?} */ addRemoveOffset = 0;\n            var /** @type {?} */ moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var /** @type {?} */ record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var /** @type {?} */ currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var /** @type {?} */ localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                                var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var /** @type {?} */ index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var /** @type {?} */ previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} collection\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (isBlank(collection))\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        /**\n         * @param {?} collection\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var /** @type {?} */ record = this._itHead;\n            var /** @type {?} */ mayBeDirty = false;\n            var /** @type {?} */ index;\n            var /** @type {?} */ item;\n            var /** @type {?} */ itemTrackBy;\n            if (Array.isArray(collection)) {\n                var /** @type {?} */ list = collection;\n                this._length = collection.length;\n                for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n                    item = list[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item /** TODO #9100 */) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this._length = index;\n            }\n            this._truncate(record);\n            this._collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * \\@internal\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var /** @type {?} */ record = void 0;\n                var /** @type {?} */ nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * \\@internal\n         * @param {?} record\n         * @param {?} item\n         * @param {?} itemTrackBy\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var /** @type {?} */ previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * \\@internal\n         * @param {?} record\n         * @param {?} item\n         * @param {?} itemTrackBy\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {\\@link CollectionChangeRecord}s from the previous collection\n         *\n         * - `record` The first excess {\\@link CollectionChangeRecord}.\n         *\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var /** @type {?} */ nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var /** @type {?} */ prev = record._prevRemoved;\n            var /** @type {?} */ next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // todo(vicb)\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // todo(vicb)\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n            // todo(vicb)\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var /** @type {?} */ prev = record._prev;\n            var /** @type {?} */ next = record._next;\n            // todo(vicb)\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} toIndex\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // todo(vicb)\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // todo(vicb)\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // todo(vicb)\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} item\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        /**\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.toString = function () {\n            var /** @type {?} */ list = [];\n            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n            var /** @type {?} */ previous = [];\n            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n            var /** @type {?} */ additions = [];\n            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n            var /** @type {?} */ moves = [];\n            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n            var /** @type {?} */ removals = [];\n            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n            var /** @type {?} */ identityChanges = [];\n            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n            return 'collection: ' + list.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'moves: ' + moves.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n' +\n                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n        };\n        return DefaultIterableDiffer;\n    }());\n    /**\n     * \\@stable\n     */\n    var CollectionChangeRecord = (function () {\n        /**\n         * @param {?} item\n         * @param {?} trackById\n         */\n        function CollectionChangeRecord(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        /**\n         * @return {?}\n         */\n        CollectionChangeRecord.prototype.toString = function () {\n            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                stringify(this.item) + '[' +\n                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n        };\n        return CollectionChangeRecord;\n    }());\n    var _DuplicateItemRecordList = (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        /**\n         * @param {?} trackById\n         * @param {?} afterIndex\n         * @return {?}\n         */\n        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n            var /** @type {?} */ record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {\\@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // todo(vicb)\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var /** @type {?} */ prev = record._prevDup;\n            var /** @type {?} */ next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        /**\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateMap.prototype.put = function (record) {\n            var /** @type {?} */ key = record.trackById;\n            var /** @type {?} */ duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n         * have already iterated over, we use the afterIndex to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the last `a` not the first or second.\n         * @param {?} trackById\n         * @param {?=} afterIndex\n         * @return {?}\n         */\n        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n            if (afterIndex === void 0) { afterIndex = null; }\n            var /** @type {?} */ key = trackById;\n            var /** @type {?} */ recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, afterIndex) : null;\n        };\n        /**\n         * Removes a {\\@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var /** @type {?} */ key = record.trackById;\n            var /** @type {?} */ recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        /**\n         * @return {?}\n         */\n        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n        return _DuplicateMap;\n    }());\n    /**\n     * @param {?} item\n     * @param {?} addRemoveOffset\n     * @param {?} moveOffsets\n     * @return {?}\n     */\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var /** @type {?} */ previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var /** @type {?} */ moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    var DefaultKeyValueDifferFactory = (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        /**\n         * @param {?} cdRef\n         * @return {?}\n         */\n        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} map\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + map + \"'\");\n            }\n            return this.check(map) ? this : null;\n        };\n        /**\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * @param {?} map\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var /** @type {?} */ records = this._records;\n            var /** @type {?} */ oldSeqRecord = this._mapHead;\n            var /** @type {?} */ lastOldSeqRecord = null;\n            var /** @type {?} */ lastNewSeqRecord = null;\n            var /** @type {?} */ seqChanged = false;\n            this._forEach(map, function (value, key) {\n                var /** @type {?} */ newSeqRecord;\n                if (oldSeqRecord && key === oldSeqRecord.key) {\n                    newSeqRecord = oldSeqRecord;\n                    _this._maybeAddToChanges(newSeqRecord, value);\n                }\n                else {\n                    seqChanged = true;\n                    if (oldSeqRecord !== null) {\n                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n                        _this._addToRemovals(oldSeqRecord);\n                    }\n                    if (records.has(key)) {\n                        newSeqRecord = records.get(key);\n                        _this._maybeAddToChanges(newSeqRecord, value);\n                    }\n                    else {\n                        newSeqRecord = new KeyValueChangeRecord(key);\n                        records.set(key, newSeqRecord);\n                        newSeqRecord.currentValue = value;\n                        _this._addToAdditions(newSeqRecord);\n                    }\n                }\n                if (seqChanged) {\n                    if (_this._isInRemovals(newSeqRecord)) {\n                        _this._removeFromRemovals(newSeqRecord);\n                    }\n                    if (lastNewSeqRecord == null) {\n                        _this._mapHead = newSeqRecord;\n                    }\n                    else {\n                        lastNewSeqRecord._next = newSeqRecord;\n                    }\n                }\n                lastOldSeqRecord = oldSeqRecord;\n                lastNewSeqRecord = newSeqRecord;\n                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n            });\n            this._truncate(lastOldSeqRecord, oldSeqRecord);\n            return this.isDirty;\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var /** @type {?} */ record = void 0;\n                // Record the state of the mapping\n                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = this._removalsTail = null;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} lastRecord\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n            while (record !== null) {\n                if (lastRecord === null) {\n                    this._mapHead = null;\n                }\n                else {\n                    lastRecord._next = null;\n                }\n                var /** @type {?} */ nextRecord = record._next;\n                this._addToRemovals(record);\n                lastRecord = record;\n                record = nextRecord;\n            }\n            for (var /** @type {?} */ rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n                rec.previousValue = rec.currentValue;\n                rec.currentValue = null;\n                this._records.delete(rec.key);\n            }\n        };\n        /**\n         * @param {?} record\n         * @param {?} newValue\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n            return record === this._removalsHead || record._nextRemoved !== null ||\n                record._prevRemoved !== null;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n            if (this._removalsHead === null) {\n                this._removalsHead = this._removalsTail = record;\n            }\n            else {\n                this._removalsTail._nextRemoved = record;\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = record;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} prev\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n            var /** @type {?} */ next = record._next;\n            if (prev === null) {\n                this._mapHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            record._next = null;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n            var /** @type {?} */ prev = record._prevRemoved;\n            var /** @type {?} */ next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            record._prevRemoved = record._nextRemoved = null;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.toString = function () {\n            var /** @type {?} */ items = [];\n            var /** @type {?} */ previous = [];\n            var /** @type {?} */ changes = [];\n            var /** @type {?} */ additions = [];\n            var /** @type {?} */ removals = [];\n            var /** @type {?} */ record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                items.push(stringify(record));\n            }\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                previous.push(stringify(record));\n            }\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                changes.push(stringify(record));\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                additions.push(stringify(record));\n            }\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                removals.push(stringify(record));\n            }\n            return 'map: ' + items.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'changes: ' + changes.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n';\n        };\n        /**\n         * \\@internal\n         * @param {?} obj\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    /**\n     * \\@stable\n     */\n    var KeyValueChangeRecord = (function () {\n        /**\n         * @param {?} key\n         */\n        function KeyValueChangeRecord(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        /**\n         * @return {?}\n         */\n        KeyValueChangeRecord.prototype.toString = function () {\n            return looseIdentical(this.previousValue, this.currentValue) ?\n                stringify(this.key) :\n                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n                    stringify(this.currentValue) + ']');\n        };\n        return KeyValueChangeRecord;\n    }());\n\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     * \\@stable\n     */\n    var IterableDiffers = (function () {\n        /**\n         * @param {?} factories\n         */\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        /**\n         * @param {?} factories\n         * @param {?=} parent\n         * @return {?}\n         */\n        IterableDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var /** @type {?} */ copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new IterableDiffers(factories);\n            }\n            else {\n                return new IterableDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n         * {\\@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {\\@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * \\@Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         * @param {?} factories\n         * @return {?}\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        /**\n         * @param {?} iterable\n         * @return {?}\n         */\n        IterableDiffers.prototype.find = function (iterable) {\n            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        return IterableDiffers;\n    }());\n\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     * \\@stable\n     */\n    var KeyValueDiffers = (function () {\n        /**\n         * @param {?} factories\n         */\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        /**\n         * @param {?} factories\n         * @param {?=} parent\n         * @return {?}\n         */\n        KeyValueDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var /** @type {?} */ copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new KeyValueDiffers(factories);\n            }\n            else {\n                return new KeyValueDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n         * {\\@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * \\@Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         * @param {?} factories\n         * @return {?}\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        /**\n         * @param {?} kv\n         * @return {?}\n         */\n        KeyValueDiffers.prototype.find = function (kv) {\n            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n            }\n        };\n        return KeyValueDiffers;\n    }());\n\n    var /** @type {?} */ UNINITIALIZED = {\n        toString: function () { return 'CD_INIT_VALUE'; }\n    };\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function devModeEqual(a, b) {\n        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n    /**\n     * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n     * reference\n     * has not changed.\n     *\n     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     * \\@stable\n     */\n    var WrappedValue = (function () {\n        /**\n         * @param {?} wrapped\n         */\n        function WrappedValue(wrapped) {\n            this.wrapped = wrapped;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        return WrappedValue;\n    }());\n    /**\n     * Helper class for unwrapping WrappedValue s\n     */\n    var ValueUnwrapper = (function () {\n        function ValueUnwrapper() {\n            this.hasWrappedValue = false;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        ValueUnwrapper.prototype.unwrap = function (value) {\n            if (value instanceof WrappedValue) {\n                this.hasWrappedValue = true;\n                return value.wrapped;\n            }\n            return value;\n        };\n        /**\n         * @return {?}\n         */\n        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n        return ValueUnwrapper;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     * \\@stable\n     */\n    var SimpleChange = (function () {\n        /**\n         * @param {?} previousValue\n         * @param {?} currentValue\n         */\n        function SimpleChange(previousValue, currentValue) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         * @return {?}\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n        return SimpleChange;\n    }());\n\n    /**\n     * \\@stable\n     * @abstract\n     */\n    var ChangeDetectorRef = (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n         *\n         * ```typescript\n         * \\@Component({\n         *   selector: 'cmp',\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         * })\n         * class Cmp {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks ++\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'app',\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         *   template: `\n         *     <cmp><cmp>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.markForCheck = function () { };\n        /**\n         * Detaches the change detector from the change detector tree.\n         *\n         * The detached change detector will not be checked until it is reattached.\n         *\n         * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n         * local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.detach = function () { };\n        /**\n         * Checks the change detector and its children.\n         *\n         * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n         * change detection\n         * checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check\n         * every five seconds.\n         *\n         * See {\\@link ChangeDetectorRef#detach} for more information.\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.detectChanges = function () { };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't introduce\n         * other changes.\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.checkNoChanges = function () { };\n        /**\n         * Reattach the change detector to the change detector tree.\n         *\n         * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n         * checked during the next change detection run.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value)\n         *       this.ref.reattach();\n         *     else\n         *       this.ref.detach();\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class App {\n         *   live = true;\n         * }\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.reattach = function () { };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var /** @type {?} */ keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var /** @type {?} */ iterableDiff = [new DefaultIterableDifferFactory()];\n    var /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RenderComponentType = (function () {\n        /**\n         * @param {?} id\n         * @param {?} templateUrl\n         * @param {?} slotCount\n         * @param {?} encapsulation\n         * @param {?} styles\n         * @param {?} animations\n         */\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @abstract\n     */\n    var RenderDebugInfo = (function () {\n        function RenderDebugInfo() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.injector = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.component = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.providerTokens = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.references = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.context = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.source = function () { };\n        return RenderDebugInfo;\n    }());\n    /**\n     * \\@experimental\n     * @abstract\n     */\n    var Renderer = (function () {\n        function Renderer() {\n        }\n        /**\n         * @abstract\n         * @param {?} selectorOrNode\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?} name\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} hostElement\n         * @return {?}\n         */\n        Renderer.prototype.createViewRoot = function (hostElement) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?} value\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?} nodes\n         * @return {?}\n         */\n        Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n        /**\n         * @abstract\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        Renderer.prototype.detachView = function (viewRootNodes) { };\n        /**\n         * @abstract\n         * @param {?} hostElement\n         * @param {?} viewAllNodes\n         * @return {?}\n         */\n        Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        Renderer.prototype.listen = function (renderElement, name, callback) { };\n        /**\n         * @abstract\n         * @param {?} target\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        Renderer.prototype.listenGlobal = function (target, name, callback) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} attributeName\n         * @param {?} attributeValue\n         * @return {?}\n         */\n        Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n        /**\n         * Used only in debug mode to serialize property changes to dom nodes as attributes.\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} className\n         * @param {?} isAdd\n         * @return {?}\n         */\n        Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} methodName\n         * @param {?=} args\n         * @return {?}\n         */\n        Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n        /**\n         * @abstract\n         * @param {?} renderNode\n         * @param {?} text\n         * @return {?}\n         */\n        Renderer.prototype.setText = function (renderNode, text) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n        return Renderer;\n    }());\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n     * respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     * \\@experimental\n     * @abstract\n     */\n    var RootRenderer = (function () {\n        function RootRenderer() {\n        }\n        /**\n         * @abstract\n         * @param {?} componentType\n         * @return {?}\n         */\n        RootRenderer.prototype.renderComponent = function (componentType) { };\n        return RootRenderer;\n    }());\n\n    var SecurityContext = {};\n    SecurityContext.NONE = 0;\n    SecurityContext.HTML = 1;\n    SecurityContext.STYLE = 2;\n    SecurityContext.SCRIPT = 3;\n    SecurityContext.URL = 4;\n    SecurityContext.RESOURCE_URL = 5;\n    SecurityContext[SecurityContext.NONE] = \"NONE\";\n    SecurityContext[SecurityContext.HTML] = \"HTML\";\n    SecurityContext[SecurityContext.STYLE] = \"STYLE\";\n    SecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\n    SecurityContext[SecurityContext.URL] = \"URL\";\n    SecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var Sanitizer = (function () {\n        function Sanitizer() {\n        }\n        /**\n         * @abstract\n         * @param {?} context\n         * @param {?} value\n         * @return {?}\n         */\n        Sanitizer.prototype.sanitize = function (context, value) { };\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An error thrown if application changes model breaking the top-down data flow.\n     *\n     * This exception is only thrown in dev mode.\n     *\n     * <!-- TODO: Add a link once the dev mode option is configurable -->\n     *\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'parent',\n     *   template: '<child [prop]=\"parentProp\"></child>',\n     * })\n     * class Parent {\n     *   parentProp = 'init';\n     * }\n     *\n     * \\@Directive({selector: 'child', inputs: ['prop']})\n     * class Child {\n     *   constructor(public parent: Parent) {}\n     *\n     *   set prop(v) {\n     *     // this updates the parent property, which is disallowed during change detection\n     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n     *     this.parent.parentProp = 'updated';\n     *   }\n     * }\n     * ```\n     * \\@stable\n     */\n    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n        __extends$7(ExpressionChangedAfterItHasBeenCheckedError, _super);\n        /**\n         * @param {?} oldValue\n         * @param {?} currValue\n         */\n        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (oldValue === UNINITIALIZED) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            _super.call(this, msg);\n        }\n        return ExpressionChangedAfterItHasBeenCheckedError;\n    }(BaseError));\n    /**\n     * Thrown when an exception was raised during view creation, change detection or destruction.\n     *\n     * This error wraps the original exception to attach additional contextual information that can\n     * be useful for debugging.\n     * \\@stable\n     */\n    var ViewWrappedError = (function (_super) {\n        __extends$7(ViewWrappedError, _super);\n        /**\n         * @param {?} originalError\n         * @param {?} context\n         */\n        function ViewWrappedError(originalError, context) {\n            _super.call(this, \"Error in \" + context.source, originalError);\n            this.context = context;\n        }\n        return ViewWrappedError;\n    }(WrappedError));\n    /**\n     * Thrown when a destroyed view is used.\n     *\n     * This error indicates a bug in the framework.\n     *\n     * This is an internal Angular error.\n     * \\@stable\n     */\n    var ViewDestroyedError = (function (_super) {\n        __extends$7(ViewDestroyedError, _super);\n        /**\n         * @param {?} details\n         */\n        function ViewDestroyedError(details) {\n            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n        }\n        return ViewDestroyedError;\n    }(BaseError));\n\n    var ViewUtils = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} sanitizer\n         * @param {?} animationQueue\n         */\n        function ViewUtils(_renderer, sanitizer, animationQueue) {\n            this._renderer = _renderer;\n            this.animationQueue = animationQueue;\n            this.sanitizer = sanitizer;\n        }\n        /**\n         * \\@internal\n         * @param {?} renderComponentType\n         * @return {?}\n         */\n        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n            return this._renderer.renderComponent(renderComponentType);\n        };\n        ViewUtils.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ViewUtils.ctorParameters = function () { return [\n            { type: RootRenderer, },\n            { type: Sanitizer, },\n            { type: AnimationQueue, },\n        ]; };\n        return ViewUtils;\n    }());\n    var /** @type {?} */ nextRenderComponentTypeId = 0;\n    /**\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     * @return {?}\n     */\n    function createRenderComponentType(templateUrl, slotCount, encapsulation, styles, animations) {\n        return new RenderComponentType(\"\" + nextRenderComponentTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n    }\n    /**\n     * @param {?} e\n     * @param {?} array\n     * @return {?}\n     */\n    function addToArray(e, array) {\n        array.push(e);\n    }\n    /**\n     * @param {?} valueCount\n     * @param {?} constAndInterp\n     * @return {?}\n     */\n    function interpolate(valueCount, constAndInterp) {\n        var /** @type {?} */ result = '';\n        for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    /**\n     * @param {?} valueCount\n     * @param {?} c0\n     * @param {?} a1\n     * @param {?} c1\n     * @param {?=} a2\n     * @param {?=} c2\n     * @param {?=} a3\n     * @param {?=} c3\n     * @param {?=} a4\n     * @param {?=} c4\n     * @param {?=} a5\n     * @param {?=} c5\n     * @param {?=} a6\n     * @param {?=} c6\n     * @param {?=} a7\n     * @param {?=} c7\n     * @param {?=} a8\n     * @param {?=} c8\n     * @param {?=} a9\n     * @param {?=} c9\n     * @return {?}\n     */\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    /**\n     * @param {?} throwOnChange\n     * @param {?} oldValue\n     * @param {?} newValue\n     * @return {?}\n     */\n    function checkBinding(throwOnChange, oldValue, newValue) {\n        if (throwOnChange) {\n            if (!devModeEqual(oldValue, newValue)) {\n                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n            }\n            return false;\n        }\n        else {\n            return !looseIdentical(oldValue, newValue);\n        }\n    }\n    /**\n     * @param {?} input\n     * @param {?} value\n     * @return {?}\n     */\n    function castByValue(input, value) {\n        return (input);\n    }\n    var /** @type {?} */ EMPTY_ARRAY = [];\n    var /** @type {?} */ EMPTY_MAP = {};\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy1(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0 = UNINITIALIZED;\n        return function (p0) {\n            if (!looseIdentical(v0, p0)) {\n                v0 = p0;\n                result = fn(p0);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy2(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0 = UNINITIALIZED;\n        var /** @type {?} */ v1 = UNINITIALIZED;\n        return function (p0, p1) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n                v0 = p0;\n                v1 = p1;\n                result = fn(p0, p1);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy3(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0 = UNINITIALIZED;\n        var /** @type {?} */ v1 = UNINITIALIZED;\n        var /** @type {?} */ v2 = UNINITIALIZED;\n        return function (p0, p1, p2) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                result = fn(p0, p1, p2);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy4(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3;\n        v0 = v1 = v2 = v3 = UNINITIALIZED;\n        return function (p0, p1, p2, p3) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                result = fn(p0, p1, p2, p3);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy5(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4;\n        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                result = fn(p0, p1, p2, p3, p4);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy6(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5;\n        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                result = fn(p0, p1, p2, p3, p4, p5);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy7(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                result = fn(p0, p1, p2, p3, p4, p5, p6);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy8(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy9(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy10(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8, /** @type {?} */ v9;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n                !looseIdentical(v9, p9)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                v9 = p9;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} el\n     * @param {?} changes\n     * @return {?}\n     */\n    function setBindingDebugInfoForChanges(renderer, el, changes) {\n        Object.keys(changes).forEach(function (propName) {\n            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n        });\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} el\n     * @param {?} propName\n     * @param {?} value\n     * @return {?}\n     */\n    function setBindingDebugInfo(renderer, el, propName, value) {\n        try {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n        }\n        catch (e) {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n        }\n    }\n    var /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i - 0] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} parentElement\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n        var /** @type {?} */ el = renderer.createElement(parentElement, name, debugInfo);\n        for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n        }\n        return el;\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} elementName\n     * @param {?} attrs\n     * @param {?} rootSelectorOrNode\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n        var /** @type {?} */ hostElement;\n        if (isPresent(rootSelectorOrNode)) {\n            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                renderer.setElementAttribute(hostElement, attrs.get(i), attrs.get(i + 1));\n            }\n            renderer.setElementAttribute(hostElement, 'ng-version', VERSION.full);\n        }\n        else {\n            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n        }\n        return hostElement;\n    }\n    /**\n     * @param {?} view\n     * @param {?} element\n     * @param {?} eventNamesAndTargets\n     * @param {?} listener\n     * @return {?}\n     */\n    function subscribeToRenderElement(view, element, eventNamesAndTargets, listener) {\n        var /** @type {?} */ disposables = createEmptyInlineArray(eventNamesAndTargets.length / 2);\n        for (var /** @type {?} */ i = 0; i < eventNamesAndTargets.length; i += 2) {\n            var /** @type {?} */ eventName = eventNamesAndTargets.get(i);\n            var /** @type {?} */ eventTarget = eventNamesAndTargets.get(i + 1);\n            var /** @type {?} */ disposable = void 0;\n            if (eventTarget) {\n                disposable = view.renderer.listenGlobal(eventTarget, eventName, listener.bind(view, eventTarget + \":\" + eventName));\n            }\n            else {\n                disposable = view.renderer.listen(element, eventName, listener.bind(view, eventName));\n            }\n            disposables.set(i / 2, disposable);\n        }\n        return disposeInlineArray.bind(null, disposables);\n    }\n    /**\n     * @param {?} disposables\n     * @return {?}\n     */\n    function disposeInlineArray(disposables) {\n        for (var /** @type {?} */ i = 0; i < disposables.length; i++) {\n            disposables.get(i)();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    function noop() { }\n    /**\n     * @param {?} length\n     * @return {?}\n     */\n    function createEmptyInlineArray(length) {\n        var /** @type {?} */ ctor;\n        if (length <= 2) {\n            ctor = InlineArray2;\n        }\n        else if (length <= 4) {\n            ctor = InlineArray4;\n        }\n        else if (length <= 8) {\n            ctor = InlineArray8;\n        }\n        else if (length <= 16) {\n            ctor = InlineArray16;\n        }\n        else {\n            ctor = InlineArrayDynamic;\n        }\n        return new ctor(length);\n    }\n    var InlineArray0 = (function () {\n        function InlineArray0() {\n            this.length = 0;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray0.prototype.get = function (index) { return undefined; };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray0.prototype.set = function (index, value) { };\n        return InlineArray0;\n    }());\n    var InlineArray2 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         */\n        function InlineArray2(length, _v0, _v1) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray2.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray2.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n            }\n        };\n        return InlineArray2;\n    }());\n    var InlineArray4 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         * @param {?=} _v2\n         * @param {?=} _v3\n         */\n        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray4.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray4.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n            }\n        };\n        return InlineArray4;\n    }());\n    var InlineArray8 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         * @param {?=} _v2\n         * @param {?=} _v3\n         * @param {?=} _v4\n         * @param {?=} _v5\n         * @param {?=} _v6\n         * @param {?=} _v7\n         */\n        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray8.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray8.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n            }\n        };\n        return InlineArray8;\n    }());\n    var InlineArray16 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         * @param {?=} _v2\n         * @param {?=} _v3\n         * @param {?=} _v4\n         * @param {?=} _v5\n         * @param {?=} _v6\n         * @param {?=} _v7\n         * @param {?=} _v8\n         * @param {?=} _v9\n         * @param {?=} _v10\n         * @param {?=} _v11\n         * @param {?=} _v12\n         * @param {?=} _v13\n         * @param {?=} _v14\n         * @param {?=} _v15\n         */\n        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n            this._v8 = _v8;\n            this._v9 = _v9;\n            this._v10 = _v10;\n            this._v11 = _v11;\n            this._v12 = _v12;\n            this._v13 = _v13;\n            this._v14 = _v14;\n            this._v15 = _v15;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray16.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                case 8:\n                    return this._v8;\n                case 9:\n                    return this._v9;\n                case 10:\n                    return this._v10;\n                case 11:\n                    return this._v11;\n                case 12:\n                    return this._v12;\n                case 13:\n                    return this._v13;\n                case 14:\n                    return this._v14;\n                case 15:\n                    return this._v15;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray16.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n                case 8:\n                    this._v8 = value;\n                    break;\n                case 9:\n                    this._v9 = value;\n                    break;\n                case 10:\n                    this._v10 = value;\n                    break;\n                case 11:\n                    this._v11 = value;\n                    break;\n                case 12:\n                    this._v12 = value;\n                    break;\n                case 13:\n                    this._v13 = value;\n                    break;\n                case 14:\n                    this._v14 = value;\n                    break;\n                case 15:\n                    this._v15 = value;\n                    break;\n            }\n        };\n        return InlineArray16;\n    }());\n    var InlineArrayDynamic = (function () {\n        /**\n         * @param {?} length\n         * @param {...?} values\n         */\n        function InlineArrayDynamic(length) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            this.length = length;\n            this._values = values;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArrayDynamic.prototype.set = function (index, value) { this._values[index] = value; };\n        return InlineArrayDynamic;\n    }());\n    var /** @type {?} */ EMPTY_INLINE_ARRAY = new InlineArray0();\n\n\n    var view_utils = Object.freeze({\n        ViewUtils: ViewUtils,\n        createRenderComponentType: createRenderComponentType,\n        addToArray: addToArray,\n        interpolate: interpolate,\n        inlineInterpolate: inlineInterpolate,\n        checkBinding: checkBinding,\n        castByValue: castByValue,\n        EMPTY_ARRAY: EMPTY_ARRAY,\n        EMPTY_MAP: EMPTY_MAP,\n        pureProxy1: pureProxy1,\n        pureProxy2: pureProxy2,\n        pureProxy3: pureProxy3,\n        pureProxy4: pureProxy4,\n        pureProxy5: pureProxy5,\n        pureProxy6: pureProxy6,\n        pureProxy7: pureProxy7,\n        pureProxy8: pureProxy8,\n        pureProxy9: pureProxy9,\n        pureProxy10: pureProxy10,\n        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n        setBindingDebugInfo: setBindingDebugInfo,\n        createRenderElement: createRenderElement,\n        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n        subscribeToRenderElement: subscribeToRenderElement,\n        noop: noop,\n        InlineArray2: InlineArray2,\n        InlineArray4: InlineArray4,\n        InlineArray8: InlineArray8,\n        InlineArray16: InlineArray16,\n        InlineArrayDynamic: InlineArrayDynamic,\n        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n     * method.\n     * \\@stable\n     * @abstract\n     */\n    var ComponentRef = (function () {\n        function ComponentRef() {\n        }\n        /**\n         * Location of the Host Element of this Component Instance.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.location = function () { };\n        /**\n         * The injector on which the component instance exists.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.injector = function () { };\n        /**\n         * The instance of the Component.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.instance = function () { };\n        /**\n         * The {\\@link ViewRef} of the Host View of this Component instance.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.hostView = function () { };\n        /**\n         * The {\\@link ChangeDetectorRef} of the Component instance.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.changeDetectorRef = function () { };\n        /**\n         * The component type.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.componentType = function () { };\n        /**\n         * Destroys the component instance and all of the data structures associated with it.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.destroy = function () { };\n        /**\n         * Allows to register a callback that will be called when the component is destroyed.\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        ComponentRef.prototype.onDestroy = function (callback) { };\n        return ComponentRef;\n    }());\n    var ComponentRef_ = (function (_super) {\n        __extends$5(ComponentRef_, _super);\n        /**\n         * @param {?} _index\n         * @param {?} _parentView\n         * @param {?} _nativeElement\n         * @param {?} _component\n         */\n        function ComponentRef_(_index, _parentView, _nativeElement, _component) {\n            _super.call(this);\n            this._index = _index;\n            this._parentView = _parentView;\n            this._nativeElement = _nativeElement;\n            this._component = _component;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parentView.injector(this._index); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._component; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (this._component.constructor); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        ComponentRef_.prototype.destroy = function () { this._parentView.detachAndDestroy(); };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    /**\n     * \\@stable\n     */\n    var ComponentFactory = (function () {\n        /**\n         * @param {?} selector\n         * @param {?} _viewClass\n         * @param {?} _componentType\n         */\n        function ComponentFactory(selector, _viewClass, _componentType) {\n            this.selector = selector;\n            this._viewClass = _viewClass;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         * @param {?} injector\n         * @param {?=} projectableNodes\n         * @param {?=} rootSelectorOrNode\n         * @return {?}\n         */\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n            var /** @type {?} */ vu = injector.get(ViewUtils);\n            if (!projectableNodes) {\n                projectableNodes = [];\n            }\n            var /** @type {?} */ hostView = new this._viewClass(vu, null, null, null);\n            return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n        };\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var NoComponentFactoryError = (function (_super) {\n        __extends$8(NoComponentFactoryError, _super);\n        /**\n         * @param {?} component\n         */\n        function NoComponentFactoryError(component) {\n            _super.call(this, \"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n            this.component = component;\n        }\n        return NoComponentFactoryError;\n    }(BaseError));\n    var _NullComponentFactoryResolver = (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        /**\n         * @param {?} component\n         * @return {?}\n         */\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw new NoComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * \\@stable\n     * @abstract\n     */\n    var ComponentFactoryResolver = (function () {\n        function ComponentFactoryResolver() {\n        }\n        /**\n         * @abstract\n         * @param {?} component\n         * @return {?}\n         */\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = (function () {\n        /**\n         * @param {?} factories\n         * @param {?} _parent\n         */\n        function CodegenComponentFactoryResolver(factories, _parent) {\n            this._parent = _parent;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        /**\n         * @param {?} component\n         * @return {?}\n         */\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var /** @type {?} */ result = this._factories.get(component);\n            if (!result) {\n                result = this._parent.resolveComponentFactory(component);\n            }\n            return result;\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n\n    var /** @type {?} */ trace;\n    var /** @type {?} */ events;\n    /**\n     * @return {?}\n     */\n    function detectWTF() {\n        var /** @type {?} */ wtf = ((global$1) /** TODO #9100 */)['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @param {?} signature\n     * @param {?=} flags\n     * @return {?}\n     */\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    /**\n     * @param {?} scope\n     * @param {?=} returnValue\n     * @return {?}\n     */\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    /**\n     * @param {?} rangeType\n     * @param {?} action\n     * @return {?}\n     */\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    /**\n     * @param {?} range\n     * @return {?}\n     */\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * True if WTF is enabled.\n     */\n    var /** @type {?} */ wtfEnabled = detectWTF();\n    /**\n     * @param {?=} arg0\n     * @param {?=} arg1\n     * @return {?}\n     */\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var /** @type {?} */ wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var /** @type {?} */ wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var /** @type {?} */ wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * \\@experimental\n     */\n    var Testability = (function () {\n        /**\n         * @param {?} _ngZone\n         */\n        function Testability(_ngZone) {\n            this._ngZone = _ngZone;\n            /** @internal */\n            this._pendingCount = 0;\n            /** @internal */\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            /** @internal */\n            this._callbacks = [];\n            this._watchAngularEvents();\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        (_this._callbacks.pop())(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Not Ready\n                this._didWork = true;\n            }\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        Testability.prototype.whenStable = function (callback) {\n            this._callbacks.push(callback);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * @deprecated use findProviders\n         * @param {?} using\n         * @param {?} provider\n         * @param {?} exactMatch\n         * @return {?}\n         */\n        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        /**\n         * @param {?} using\n         * @param {?} provider\n         * @param {?} exactMatch\n         * @return {?}\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone, },\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {\\@link Testability} instances for specific elements.\n     * \\@experimental\n     */\n    var TestabilityRegistry = (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * @param {?} token\n         * @param {?} testability\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * @param {?} elem\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n        /**\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * @param {?} elem\n         * @param {?=} findInAncestors\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = (function () {\n        function _NoopGetTestability() {\n        }\n        /**\n         * @param {?} registry\n         * @return {?}\n         */\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        /**\n         * @param {?} registry\n         * @param {?} elem\n         * @param {?} findInAncestors\n         * @return {?}\n         */\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n     * \\@experimental\n     * @param {?} getter\n     * @return {?}\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var /** @type {?} */ _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ _devMode = true;\n    var /** @type {?} */ _runModeLocked = false;\n    var /** @type {?} */ _platform;\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * \\@stable\n     * @return {?}\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @return {?}\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * \\@experimental\n     */\n    var NgProbeToken = (function () {\n        /**\n         * @param {?} name\n         * @param {?} token\n         */\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @param {?} injector\n     * @return {?}\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var /** @type {?} */ inits = (injector.get(PLATFORM_INITIALIZER, null));\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @param {?} parentPlatformFactory\n     * @param {?} name\n     * @param {?=} providers\n     * @return {?}\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var /** @type {?} */ marker = new OpaqueToken(\"Platform: \" + name);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            if (!getPlatform()) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform\n     * which contains the given token as a provider.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @param {?} requiredToken\n     * @return {?}\n     */\n    function assertPlatform(requiredToken) {\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @return {?}\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @return {?}\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when {\\@link bootstrap}() is called, or\n     * explicitly by calling {\\@link createPlatform}().\n     *\n     * \\@stable\n     * @abstract\n     */\n    var PlatformRef = (function () {\n        function PlatformRef() {\n        }\n        /**\n         * Creates an instance of an `\\@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * \\@NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '\\@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * \\@experimental APIs related to application bootstrap are currently under review.\n         * @abstract\n         * @param {?} moduleFactory\n         * @return {?}\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) { };\n        /**\n         * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * \\@NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         * \\@stable\n         * @abstract\n         * @param {?} moduleType\n         * @param {?=} compilerOptions\n         * @return {?}\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) { };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { };\n        /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @abstract\n         * @return {?}\n         */\n        PlatformRef.prototype.injector = function () { };\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         * @abstract\n         * @return {?}\n         */\n        PlatformRef.prototype.destroy = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformRef.prototype.destroyed = function () { };\n        return PlatformRef;\n    }());\n    /**\n     * @param {?} errorHandler\n     * @param {?} callback\n     * @return {?}\n     */\n    function _callAndReportToErrorHandler(errorHandler, callback) {\n        try {\n            var /** @type {?} */ result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    errorHandler.handleError(e);\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            errorHandler.handleError(e);\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    var PlatformRef_ = (function (_super) {\n        __extends$3(PlatformRef_, _super);\n        /**\n         * @param {?} _injector\n         */\n        function PlatformRef_(_injector) {\n            _super.call(this);\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        PlatformRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        /**\n         * @param {?} moduleFactory\n         * @return {?}\n         */\n        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n        };\n        /**\n         * @param {?} moduleFactory\n         * @param {?} ngZone\n         * @return {?}\n         */\n        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            if (!ngZone)\n                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var /** @type {?} */ ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n                var /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n                var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n                return _callAndReportToErrorHandler(exceptionHandler, function () {\n                    var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * @param {?} moduleType\n         * @param {?=} compilerOptions\n         * @return {?}\n         */\n        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n        };\n        /**\n         * @param {?} moduleType\n         * @param {?=} compilerOptions\n         * @param {?} ngZone\n         * @param {?=} componentFactoryCallback\n         * @return {?}\n         */\n        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n            var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n            // ugly internal api hack: generate host component factories for all declared components and\n            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n            // factories.\n            if (componentFactoryCallback) {\n                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n                    .then(function (_a) {\n                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n                    componentFactoryCallback(componentFactories);\n                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n                });\n            }\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n        };\n        /**\n         * @param {?} moduleRef\n         * @return {?}\n         */\n        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n            var /** @type {?} */ appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef.bootstrapFactories.length > 0) {\n                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        PlatformRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        PlatformRef_.ctorParameters = function () { return [\n            { type: Injector, },\n        ]; };\n        return PlatformRef_;\n    }(PlatformRef));\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * For more about Angular applications, see the documentation for {\\@link bootstrap}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var ApplicationRef = (function () {\n        function ApplicationRef() {\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the [componentType]'s\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * ### Example\n         * {\\@example core/ts/platform/platform.ts region='longform'}\n         * @abstract\n         * @param {?} componentFactory\n         * @return {?}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentFactory) { };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.tick = function () { };\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.componentTypes = function () { };\n        /**\n         * Get a list of components registered to this application.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.components = function () { };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         * @abstract\n         * @param {?} view\n         * @return {?}\n         */\n        ApplicationRef.prototype.attachView = function (view) { };\n        /**\n         * Detaches a view from dirty checking again.\n         * @abstract\n         * @param {?} view\n         * @return {?}\n         */\n        ApplicationRef.prototype.detachView = function (view) { };\n        /**\n         * Returns the number of attached views.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.viewCount = function () { };\n        return ApplicationRef;\n    }());\n    var ApplicationRef_ = (function (_super) {\n        __extends$3(ApplicationRef_, _super);\n        /**\n         * @param {?} _zone\n         * @param {?} _console\n         * @param {?} _injector\n         * @param {?} _exceptionHandler\n         * @param {?} _componentFactoryResolver\n         * @param {?} _initStatus\n         * @param {?} _testabilityRegistry\n         * @param {?} _testability\n         */\n        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n            var _this = this;\n            _super.call(this);\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._testabilityRegistry = _testabilityRegistry;\n            this._testability = _testability;\n            this._bootstrapListeners = [];\n            this._rootComponents = [];\n            this._rootComponentTypes = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        }\n        /**\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype.attachView = function (viewRef) {\n            var /** @type {?} */ view = ((viewRef)).internalView;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype.detachView = function (viewRef) {\n            var /** @type {?} */ view = ((viewRef)).internalView;\n            ListWrapper.remove(this._views, view);\n            view.detach();\n        };\n        /**\n         * @param {?} componentOrFactory\n         * @return {?}\n         */\n        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var /** @type {?} */ componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this._rootComponentTypes.push(componentFactory.componentType);\n            var /** @type {?} */ compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * @param {?} componentRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this._rootComponents.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var /** @type {?} */ listeners = (this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n                .concat(this._bootstrapListeners));\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        /**\n         * @param {?} componentRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            ListWrapper.remove(this._rootComponents, componentRef);\n        };\n        /**\n         * @return {?}\n         */\n        ApplicationRef_.prototype.tick = function () {\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var /** @type {?} */ scope = ApplicationRef_._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.ref.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.ref.checkNoChanges(); });\n                }\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        ApplicationRef_.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._rootComponentTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._rootComponents; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationRef_.ctorParameters = function () { return [\n            { type: NgZone, },\n            { type: Console, },\n            { type: Injector, },\n            { type: ErrorHandler, },\n            { type: ComponentFactoryResolver, },\n            { type: ApplicationInitStatus, },\n            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n            { type: Testability, decorators: [{ type: Optional },] },\n        ]; };\n        return ApplicationRef_;\n    }(ApplicationRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var NgModuleRef = (function () {\n        function NgModuleRef() {\n        }\n        /**\n         * The injector that contains all of the providers of the NgModule.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.injector = function () { };\n        /**\n         * The ComponentFactoryResolver to get hold of the ComponentFactories\n         * declared in the `entryComponents` property of the module.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.componentFactoryResolver = function () { };\n        /**\n         * The NgModule instance.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.instance = function () { };\n        /**\n         * Destroys the module instance and all of the data structures associated with it.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.destroy = function () { };\n        /**\n         * Allows to register a callback that will be called when the module is destroyed.\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        NgModuleRef.prototype.onDestroy = function (callback) { };\n        return NgModuleRef;\n    }());\n    /**\n     * \\@experimental\n     */\n    var NgModuleFactory = (function () {\n        /**\n         * @param {?} _injectorClass\n         * @param {?} _moduleType\n         */\n        function NgModuleFactory(_injectorClass, _moduleType) {\n            this._injectorClass = _injectorClass;\n            this._moduleType = _moduleType;\n        }\n        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._moduleType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} parentInjector\n         * @return {?}\n         */\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            if (!parentInjector) {\n                parentInjector = Injector.NULL;\n            }\n            var /** @type {?} */ instance = new this._injectorClass(parentInjector);\n            instance.create();\n            return instance;\n        };\n        return NgModuleFactory;\n    }());\n    var /** @type {?} */ _UNDEFINED = new Object();\n    /**\n     * @abstract\n     */\n    var NgModuleInjector = (function (_super) {\n        __extends$9(NgModuleInjector, _super);\n        /**\n         * @param {?} parent\n         * @param {?} factories\n         * @param {?} bootstrapFactories\n         */\n        function NgModuleInjector(parent, factories, bootstrapFactories) {\n            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n            this.parent = parent;\n            this.bootstrapFactories = bootstrapFactories;\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * @return {?}\n         */\n        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        NgModuleInjector.prototype.createInternal = function () { };\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (token === Injector || token === ComponentFactoryResolver) {\n                return this;\n            }\n            var /** @type {?} */ result = this.getInternal(token, _UNDEFINED);\n            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n        };\n        /**\n         * @abstract\n         * @param {?} token\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        NgModuleInjector.prototype.getInternal = function (token, notFoundValue) { };\n        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgModuleInjector.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            this.destroyInternal();\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        NgModuleInjector.prototype.destroyInternal = function () { };\n        return NgModuleInjector;\n    }(CodegenComponentFactoryResolver));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     * \\@stable\n     * @abstract\n     */\n    var NgModuleFactoryLoader = (function () {\n        function NgModuleFactoryLoader() {\n        }\n        /**\n         * @abstract\n         * @param {?} path\n         * @return {?}\n         */\n        NgModuleFactoryLoader.prototype.load = function (path) { };\n        return NgModuleFactoryLoader;\n    }());\n    var /** @type {?} */ moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * \\@experimental\n     * @param {?} id\n     * @param {?} factory\n     * @return {?}\n     */\n    function registerModuleFactory(id, factory) {\n        var /** @type {?} */ existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * \\@experimental\n     * @param {?} id\n     * @return {?}\n     */\n    function getModuleFactory(id) {\n        var /** @type {?} */ factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * \\@Component({...})\n     * class Container {\n     *   \\@ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     * \\@stable\n     */\n    var QueryList = (function () {\n        function QueryList() {\n            this._dirty = true;\n            this._results = [];\n            this._emitter = new EventEmitter();\n        }\n        Object.defineProperty(QueryList.prototype, \"changes\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._emitter; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"length\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._results.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"first\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._results[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"last\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._results[this.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.find = function (fn) { return this._results.find(fn); };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         * @param {?} fn\n         * @param {?} init\n         * @return {?}\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype[getSymbolIterator()] = function () { return ((this._results))[getSymbolIterator()](); };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * @param {?} res\n         * @return {?}\n         */\n        QueryList.prototype.reset = function (res) {\n            this._results = ListWrapper.flatten(res);\n            this._dirty = false;\n        };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n        /**\n         * internal\n         * @return {?}\n         */\n        QueryList.prototype.setDirty = function () { this._dirty = true; };\n        Object.defineProperty(QueryList.prototype, \"dirty\", {\n            /**\n             * internal\n             * @return {?}\n             */\n            get: function () { return this._dirty; },\n            enumerable: true,\n            configurable: true\n        });\n        return QueryList;\n    }());\n\n    var /** @type {?} */ _SEPARATOR = '#';\n    var /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * \\@experimental\n     * @abstract\n     */\n    var SystemJsNgModuleLoaderConfig = (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var /** @type {?} */ DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * \\@experimental\n     */\n    var SystemJsNgModuleLoader = (function () {\n        /**\n         * @param {?} _compiler\n         * @param {?=} config\n         */\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler, },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    /**\n     * @param {?} value\n     * @param {?} modulePath\n     * @param {?} exportName\n     * @return {?}\n     */\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n     * `TemplateRef` from a Component or a Directive via {\\@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use\n     * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n     * View Container.\n     * \\@stable\n     * @abstract\n     */\n    var TemplateRef = (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        TemplateRef.prototype.elementRef = function () { };\n        /**\n         * @abstract\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateRef.prototype.createEmbeddedView = function (context) { };\n        return TemplateRef;\n    }());\n    var TemplateRef_ = (function (_super) {\n        __extends$10(TemplateRef_, _super);\n        /**\n         * @param {?} _parentView\n         * @param {?} _nodeIndex\n         * @param {?} _nativeElement\n         */\n        function TemplateRef_(_parentView, _nodeIndex, _nativeElement) {\n            _super.call(this);\n            this._parentView = _parentView;\n            this._nodeIndex = _nodeIndex;\n            this._nativeElement = _nativeElement;\n        }\n        /**\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            var /** @type {?} */ view = this._parentView.createEmbeddedViewInternal(this._nodeIndex);\n            view.create(context || ({}));\n            return view.ref;\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n     * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n     * \\@stable\n     * @abstract\n     */\n    var ViewContainerRef = (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * Anchor element that specifies the location of this container in the containing View.\n         * <!-- TODO: rename to anchorElement -->\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.element = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.injector = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.parentInjector = function () { };\n        /**\n         * Destroys all Views in this container.\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.clear = function () { };\n        /**\n         * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n         * @abstract\n         * @param {?} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.get = function (index) { };\n        /**\n         * Returns the number of Views currently attached to this container.\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.length = function () { };\n        /**\n         * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n         * into this container at the specified `index`.\n         *\n         * If `index` is not specified, the new View will be inserted as the last View in the container.\n         *\n         * Returns the {\\@link ViewRef} for the newly created View.\n         * @abstract\n         * @param {?} templateRef\n         * @param {?=} context\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) { };\n        /**\n         * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n         * specified `index`.\n         *\n         * The component is instantiated using its {\\@link ComponentFactory} which can be\n         * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n         *\n         * If `index` is not specified, the new View will be inserted as the last View in the container.\n         *\n         * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n         *\n         * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n         * @abstract\n         * @param {?} componentFactory\n         * @param {?=} index\n         * @param {?=} injector\n         * @param {?=} projectableNodes\n         * @return {?}\n         */\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) { };\n        /**\n         * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n         *\n         * If `index` is not specified, the new View will be inserted as the last View in the container.\n         *\n         * Returns the inserted {\\@link ViewRef}.\n         * @abstract\n         * @param {?} viewRef\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.insert = function (viewRef, index) { };\n        /**\n         * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n         *\n         * Returns the inserted {\\@link ViewRef}.\n         * @abstract\n         * @param {?} viewRef\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        ViewContainerRef.prototype.move = function (viewRef, currentIndex) { };\n        /**\n         * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n         * `-1` if this container doesn't contain the View.\n         * @abstract\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ViewContainerRef.prototype.indexOf = function (viewRef) { };\n        /**\n         * Destroys a View attached to this container at the specified `index`.\n         *\n         * If `index` is not specified, the last View in the container will be removed.\n         * @abstract\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.remove = function (index) { };\n        /**\n         * Use along with {\\@link #insert} to move a View within the current container.\n         *\n         * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n         * @abstract\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.detach = function (index) { };\n        return ViewContainerRef;\n    }());\n    var ViewContainerRef_ = (function () {\n        /**\n         * @param {?} _element\n         */\n        function ViewContainerRef_(_element) {\n            this._element = _element;\n            /** @internal */\n            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n            /** @internal */\n            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n            /** @internal */\n            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n            /** @internal */\n            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ views = this._element.nestedViews;\n                return isPresent(views) ? views.length : 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._element.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._element.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._element.parentInjector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} templateRef\n         * @param {?=} context\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            if (context === void 0) { context = null; }\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context);\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        /**\n         * @param {?} componentFactory\n         * @param {?=} index\n         * @param {?=} injector\n         * @param {?=} projectableNodes\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n            if (index === void 0) { index = -1; }\n            if (injector === void 0) { injector = null; }\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            var /** @type {?} */ s = this._createComponentInContainerScope();\n            var /** @type {?} */ contextInjector = injector || this._element.parentInjector;\n            var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n            this.insert(componentRef.hostView, index);\n            return wtfLeave(s, componentRef);\n        };\n        /**\n         * @param {?} viewRef\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ s = this._insertScope();\n            if (index == -1)\n                index = this.length;\n            var /** @type {?} */ viewRef_ = (viewRef);\n            this._element.attachView(viewRef_.internalView, index);\n            return wtfLeave(s, viewRef_);\n        };\n        /**\n         * @param {?} viewRef\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            var /** @type {?} */ s = this._insertScope();\n            if (currentIndex == -1)\n                return;\n            var /** @type {?} */ viewRef_ = (viewRef);\n            this._element.moveView(viewRef_.internalView, currentIndex);\n            return wtfLeave(s, viewRef_);\n        };\n        /**\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this.length ? this._element.nestedViews.indexOf(((viewRef)).internalView) :\n                -1;\n        };\n        /**\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.remove = function (index) {\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ s = this._removeScope();\n            if (index == -1)\n                index = this.length - 1;\n            var /** @type {?} */ view = this._element.detachView(index);\n            view.destroy();\n            // view is intentionally not returned to the client.\n            wtfLeave(s);\n        };\n        /**\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.detach = function (index) {\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ s = this._detachScope();\n            if (index == -1)\n                index = this.length - 1;\n            var /** @type {?} */ view = this._element.detachView(index);\n            return wtfLeave(s, view.ref);\n        };\n        /**\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.clear = function () {\n            for (var /** @type {?} */ i = this.length - 1; i >= 0; i--) {\n                this.remove(i);\n            }\n        };\n        return ViewContainerRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     * @abstract\n     */\n    var ViewRef = (function (_super) {\n        __extends$11(ViewRef, _super);\n        function ViewRef() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * Destroys the view and all of the data structures associated with it.\n         * @abstract\n         * @return {?}\n         */\n        ViewRef.prototype.destroy = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ViewRef.prototype.destroyed = function () { };\n        /**\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        ViewRef.prototype.onDestroy = function (callback) { };\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {\\@link TemplateRef}s:\n     *\n     * Outer {\\@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n     * </ul>\n     * ```\n     *\n     * Inner {\\@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n     *\n     * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <template view-container-ref></template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * \\@experimental\n     * @abstract\n     */\n    var EmbeddedViewRef = (function (_super) {\n        __extends$11(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        EmbeddedViewRef.prototype.context = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        EmbeddedViewRef.prototype.rootNodes = function () { };\n        return EmbeddedViewRef;\n    }(ViewRef));\n    var ViewRef_ = (function () {\n        /**\n         * @param {?} _view\n         * @param {?} animationQueue\n         */\n        function ViewRef_(_view, animationQueue) {\n            this._view = _view;\n            this.animationQueue = animationQueue;\n            this._view = _view;\n            this._originalMode = this._view.cdMode;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.flatRootNodes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.detectChanges = function () {\n            this._view.detectChanges(false);\n            this.animationQueue.flush();\n        };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.reattach = function () {\n            this._view.cdMode = this._originalMode;\n            this.markForCheck();\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.destroy = function () { this._view.detachAndDestroy(); };\n        return ViewRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var EventListener = (function () {\n        /**\n         * @param {?} name\n         * @param {?} callback\n         */\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        ;\n        return EventListener;\n    }());\n    /**\n     * \\@experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = (function () {\n        /**\n         * @param {?} nativeNode\n         * @param {?} parent\n         * @param {?} _debugInfo\n         */\n        function DebugNode(nativeNode, parent, _debugInfo) {\n            this._debugInfo = _debugInfo;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.injector : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.component : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.context : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._debugInfo ? this._debugInfo.references : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.providerTokens : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"source\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.source : null; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * \\@experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = (function (_super) {\n        __extends$12(DebugElement, _super);\n        /**\n         * @param {?} nativeNode\n         * @param {?} parent\n         * @param {?} _debugInfo\n         */\n        function DebugElement(nativeNode, parent, _debugInfo) {\n            _super.call(this, nativeNode, parent, _debugInfo);\n            this.properties = {};\n            this.attributes = {};\n            this.classes = {};\n            this.styles = {};\n            this.childNodes = [];\n            this.nativeElement = nativeNode;\n        }\n        /**\n         * @param {?} child\n         * @return {?}\n         */\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        /**\n         * @param {?} child\n         * @return {?}\n         */\n        DebugElement.prototype.removeChild = function (child) {\n            var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        /**\n         * @param {?} child\n         * @param {?} newChildren\n         * @return {?}\n         */\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                var /** @type {?} */ previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n                var /** @type {?} */ nextChildren = this.childNodes.slice(siblingIndex + 1);\n                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n                for (var /** @type {?} */ i = 0; i < newChildren.length; ++i) {\n                    var /** @type {?} */ newChild = newChildren[i];\n                    if (newChild.parent) {\n                        newChild.parent.removeChild(newChild);\n                    }\n                    newChild.parent = this;\n                }\n            }\n        };\n        /**\n         * @param {?} predicate\n         * @return {?}\n         */\n        DebugElement.prototype.query = function (predicate) {\n            var /** @type {?} */ results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        /**\n         * @param {?} predicate\n         * @return {?}\n         */\n        DebugElement.prototype.queryAll = function (predicate) {\n            var /** @type {?} */ matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        /**\n         * @param {?} predicate\n         * @return {?}\n         */\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var /** @type {?} */ matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} eventName\n         * @param {?} eventObj\n         * @return {?}\n         */\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * \\@experimental\n     * @param {?} debugEls\n     * @return {?}\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    /**\n     * @param {?} element\n     * @param {?} predicate\n     * @param {?} matches\n     * @return {?}\n     */\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    /**\n     * @param {?} parentNode\n     * @param {?} predicate\n     * @param {?} matches\n     * @return {?}\n     */\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var /** @type {?} */ _nativeNodeToDebugNode = new Map();\n    /**\n     * \\@experimental\n     * @param {?} nativeNode\n     * @return {?}\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @return {?}\n     */\n    function _reflector() {\n        return reflector;\n    }\n    var /** @type {?} */ _CORE_PLATFORM_PROVIDERS = [\n        PlatformRef_,\n        { provide: PlatformRef, useExisting: PlatformRef_ },\n        { provide: Reflector, useFactory: _reflector, deps: [] },\n        { provide: ReflectorReader, useExisting: Reflector },\n        TestabilityRegistry,\n        Console,\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var /** @type {?} */ LOCALE_ID = new OpaqueToken('LocaleId');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var /** @type {?} */ TRANSLATIONS = new OpaqueToken('Translations');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var /** @type {?} */ TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\n    /**\n     * @return {?}\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    /**\n     * @return {?}\n     */\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    /**\n     * @param {?=} locale\n     * @return {?}\n     */\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * This module includes the providers of \\@angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * \\@experimental\n     */\n    var ApplicationModule = (function () {\n        function ApplicationModule() {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{\n                        providers: [\n                            ApplicationRef_,\n                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                            ApplicationInitStatus,\n                            Compiler,\n                            APP_ID_RANDOM_PROVIDER,\n                            ViewUtils,\n                            AnimationQueue,\n                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                            {\n                                provide: LOCALE_ID,\n                                useFactory: _localeFactory,\n                                deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                            },\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return []; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n    var /** @type {?} */ ANY_STATE = '*';\n    var /** @type {?} */ DEFAULT_STATE = '*';\n    var /** @type {?} */ EMPTY_STATE = 'void';\n\n    var AnimationGroupPlayer = (function () {\n        /**\n         * @param {?} _players\n         */\n        function AnimationGroupPlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            var count = 0;\n            var total = this._players.length;\n            if (total == 0) {\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else {\n                this._players.forEach(function (player) {\n                    player.parentPlayer = _this;\n                    player.onDone(function () {\n                        if (++count >= total) {\n                            _this._onFinish();\n                        }\n                    });\n                });\n            }\n        }\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._players.forEach(function (player) { return player.play(); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.setPosition = function (p) {\n            this._players.forEach(function (player) { player.setPosition(p); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.getPosition = function () {\n            var /** @type {?} */ min = 0;\n            this._players.forEach(function (player) {\n                var /** @type {?} */ p = player.getPosition();\n                min = Math.min(p, min);\n            });\n            return min;\n        };\n        Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._players; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupPlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `AnimationKeyframe` consists of a series of styles (contained within {\\@link AnimationStyles\n     * `AnimationStyles`})\n     * and an offset value indicating when those styles are applied within the `duration/delay/easing`\n     * timings.\n     * `AnimationKeyframe` is mostly an internal class which is designed to be used alongside {\\@link\n     * Renderer#animate-anchor `Renderer.animate`}.\n     *\n     * \\@experimental Animation support is experimental\n     */\n    var AnimationKeyframe = (function () {\n        /**\n         * @param {?} offset\n         * @param {?} styles\n         */\n        function AnimationKeyframe(offset, styles) {\n            this.offset = offset;\n            this.styles = styles;\n        }\n        return AnimationKeyframe;\n    }());\n\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationPlayer = (function () {\n        function AnimationPlayer() {\n        }\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationPlayer.prototype.onDone = function (fn) { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationPlayer.prototype.onStart = function (fn) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.init = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.hasStarted = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.play = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.pause = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.restart = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.finish = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.destroy = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.reset = function () { };\n        /**\n         * @abstract\n         * @param {?} p\n         * @return {?}\n         */\n        AnimationPlayer.prototype.setPosition = function (p) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.getPosition = function () { };\n        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n            /**\n             * @return {?}\n             */\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            /**\n             * @param {?} player\n             * @return {?}\n             */\n            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationPlayer;\n    }());\n    var NoOpAnimationPlayer = (function () {\n        function NoOpAnimationPlayer() {\n            var _this = this;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._started = false;\n            this.parentPlayer = null;\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype._onFinish = function () {\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.init = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.play = function () {\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n            }\n            this._started = true;\n        };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.pause = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.restart = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.destroy = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.reset = function () { };\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.setPosition = function (p) { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n        return NoOpAnimationPlayer;\n    }());\n\n    var AnimationSequencePlayer = (function () {\n        /**\n         * @param {?} _players\n         */\n        function AnimationSequencePlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._currentIndex = 0;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            this._players.forEach(function (player) { player.parentPlayer = _this; });\n            this._onNext(false);\n        }\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype._onNext = function (start) {\n            var _this = this;\n            if (this._finished)\n                return;\n            if (this._players.length == 0) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else if (this._currentIndex >= this._players.length) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                this._onFinish();\n            }\n            else {\n                var /** @type {?} */ player = this._players[this._currentIndex++];\n                player.onDone(function () { return _this._onNext(true); });\n                this._activePlayer = player;\n                if (start) {\n                    player.play();\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._activePlayer.play();\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.restart = function () {\n            this.reset();\n            if (this._players.length > 0) {\n                this._players[0].restart();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n                this._activePlayer = new NoOpAnimationPlayer();\n            }\n        };\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.setPosition = function (p) { this._players[0].setPosition(p); };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n        Object.defineProperty(AnimationSequencePlayer.prototype, \"players\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._players; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequencePlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var /** @type {?} */ AUTO_STYLE = '*';\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link trigger trigger\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationEntryMetadata = (function () {\n        /**\n         * @param {?} name\n         * @param {?} definitions\n         */\n        function AnimationEntryMetadata(name, definitions) {\n            this.name = name;\n            this.definitions = definitions;\n        }\n        return AnimationEntryMetadata;\n    }());\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationStateMetadata = (function () {\n        function AnimationStateMetadata() {\n        }\n        return AnimationStateMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link state state animation\n     * function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationStateDeclarationMetadata = (function (_super) {\n        __extends$13(AnimationStateDeclarationMetadata, _super);\n        /**\n         * @param {?} stateNameExpr\n         * @param {?} styles\n         */\n        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n            _super.call(this);\n            this.stateNameExpr = stateNameExpr;\n            this.styles = styles;\n        }\n        return AnimationStateDeclarationMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the\n     * {\\@link transition transition animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationStateTransitionMetadata = (function (_super) {\n        __extends$13(AnimationStateTransitionMetadata, _super);\n        /**\n         * @param {?} stateChangeExpr\n         * @param {?} steps\n         */\n        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n            _super.call(this);\n            this.stateChangeExpr = stateChangeExpr;\n            this.steps = steps;\n        }\n        return AnimationStateTransitionMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationMetadata = (function () {\n        function AnimationMetadata() {\n        }\n        return AnimationMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link keyframes keyframes\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationKeyframesSequenceMetadata = (function (_super) {\n        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n        /**\n         * @param {?} steps\n         */\n        function AnimationKeyframesSequenceMetadata(steps) {\n            _super.call(this);\n            this.steps = steps;\n        }\n        return AnimationKeyframesSequenceMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link style style animation\n     * function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationStyleMetadata = (function (_super) {\n        __extends$13(AnimationStyleMetadata, _super);\n        /**\n         * @param {?} styles\n         * @param {?=} offset\n         */\n        function AnimationStyleMetadata(styles, offset) {\n            if (offset === void 0) { offset = null; }\n            _super.call(this);\n            this.styles = styles;\n            this.offset = offset;\n        }\n        return AnimationStyleMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link animate animate\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationAnimateMetadata = (function (_super) {\n        __extends$13(AnimationAnimateMetadata, _super);\n        /**\n         * @param {?} timings\n         * @param {?} styles\n         */\n        function AnimationAnimateMetadata(timings, styles) {\n            _super.call(this);\n            this.timings = timings;\n            this.styles = styles;\n        }\n        return AnimationAnimateMetadata;\n    }(AnimationMetadata));\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationWithStepsMetadata = (function (_super) {\n        __extends$13(AnimationWithStepsMetadata, _super);\n        function AnimationWithStepsMetadata() {\n            _super.call(this);\n        }\n        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n            /**\n             * @return {?}\n             */\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationWithStepsMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link sequence sequence\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationSequenceMetadata = (function (_super) {\n        __extends$13(AnimationSequenceMetadata, _super);\n        /**\n         * @param {?} _steps\n         */\n        function AnimationSequenceMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequenceMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link group group animation\n     * function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationGroupMetadata = (function (_super) {\n        __extends$13(AnimationGroupMetadata, _super);\n        /**\n         * @param {?} _steps\n         */\n        function AnimationGroupMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n     * amount of\n     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n     * used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link transition\n     * transition}.\n     *\n     * ### Usage\n     *\n     * The `animate` function accepts two input parameters: `timing` and `styles`:\n     *\n     * - `timing` is a string based value that can be a combination of a duration with optional\n     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n     * delay=100, easing=ease-out`.\n     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n     * form.\n     * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n     * keyframes keyframes}.\n     * If left empty then the styles from the destination state will be collected and used (this is\n     * useful when\n     * describing an animation step that will complete an animation by {\\@link\n     * transition#the-final-animate-call animating to the final state}).\n     *\n     * ```typescript\n     * // various functions for specifying timing data\n     * animate(500, style(...))\n     * animate(\"1s\", style(...))\n     * animate(\"100ms 0.5s\", style(...))\n     * animate(\"5s ease\", style(...))\n     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n     *\n     * // either style() of keyframes() can be used\n     * animate(500, style({ background: \"red\" }))\n     * animate(500, keyframes([\n     *   style({ background: \"blue\" })),\n     *   style({ background: \"red\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} timing\n     * @param {?=} styles\n     * @return {?}\n     */\n    function animate(timing, styles) {\n        if (styles === void 0) { styles = null; }\n        var /** @type {?} */ stylesEntry = styles;\n        if (!isPresent(stylesEntry)) {\n            var /** @type {?} */ EMPTY_STYLE = {};\n            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n        }\n        return new AnimationAnimateMetadata(timing, stylesEntry);\n    }\n    /**\n     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n     * are useful when a series of styles must be animated/closed off\n     * at different statrting/ending times.\n     *\n     * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n     * transition}\n     * and it will only continue to the next instruction once all of the inner animation steps\n     * have completed.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `group` animation function can either consist\n     * of {\\@link style style} or {\\@link animate animate} function calls. Each call to `style()` or\n     * `animate()`\n     * within a group will be executed instantly (use {\\@link keyframes keyframes} or a\n     * {\\@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n     * time).\n     *\n     * ```typescript\n     * group([\n     *   animate(\"1s\", { background: \"black\" }))\n     *   animate(\"2s\", { color: \"white\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} steps\n     * @return {?}\n     */\n    function group(steps) {\n        return new AnimationGroupMetadata(steps);\n    }\n    /**\n     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n     * by default when an array is passed as animation data into {\\@link transition transition}.)\n     *\n     * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n     * transition}\n     * and it will only continue to the next instruction once each of the inner animation steps\n     * have completed.\n     *\n     * To perform animation styling in parallel with other animation steps then\n     * have a look at the {\\@link group group} animation function.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `sequence` animation function can either consist\n     * of {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply\n     * the\n     * provided styling data immediately while a call to `animate()` will apply its styling\n     * data over a given time depending on its timing data.\n     *\n     * ```typescript\n     * sequence([\n     *   style({ opacity: 0 })),\n     *   animate(\"1s\", { opacity: 1 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} steps\n     * @return {?}\n     */\n    function sequence(steps) {\n        return new AnimationSequenceMetadata(steps);\n    }\n    /**\n     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `style` declares a key/value object containing CSS properties/styles that can then\n     * be used for {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as\n     * styling data for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n     *\n     * ### Usage\n     *\n     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n     * pairs to be defined.\n     *\n     * ```typescript\n     * // string values are used for css properties\n     * style({ background: \"red\", color: \"blue\" })\n     *\n     * // numerical (pixel) values are also supported\n     * style({ width: 100, height: 0 })\n     * ```\n     *\n     * #### Auto-styles (using `*`)\n     *\n     * When an asterix (`*`) character is used as a value then it will be detected from the element\n     * being animated\n     * and applied as animation data when the animation starts.\n     *\n     * This feature proves useful for a state depending on layout and/or environment factors; in such\n     * cases\n     * the styles are calculated just before the animation starts.\n     *\n     * ```typescript\n     * // the steps below will animate from 0 to the\n     * // actual height of the element\n     * style({ height: 0 }),\n     * animate(\"1s\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} tokens\n     * @return {?}\n     */\n    function style(tokens) {\n        var /** @type {?} */ input;\n        var /** @type {?} */ offset = null;\n        if (typeof tokens === 'string') {\n            input = [(tokens)];\n        }\n        else {\n            if (Array.isArray(tokens)) {\n                input = (tokens);\n            }\n            else {\n                input = [(tokens)];\n            }\n            input.forEach(function (entry) {\n                var /** @type {?} */ entryOffset = ((entry) /** TODO #9100 */)['offset'];\n                if (isPresent(entryOffset)) {\n                    offset = offset == null ? parseFloat(entryOffset) : offset;\n                }\n            });\n        }\n        return new AnimationStyleMetadata(input, offset);\n    }\n    /**\n     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `state` declares an animation state within the given trigger. When a state is\n     * active within a component then its associated styles will persist on\n     * the element that the trigger is attached to (even when the animation ends).\n     *\n     * To animate between states, have a look at the animation {\\@link transition transition}\n     * DSL function. To register states to an animation trigger please have a look\n     * at the {\\@link trigger trigger} function.\n     *\n     * #### The `void` state\n     *\n     * The `void` state value is a reserved word that angular uses to determine when the element is not\n     * apart\n     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n     * associated element\n     * is void).\n     *\n     * #### The `*` (default) state\n     *\n     * The `*` state (when styled) is a fallback state that will be used if\n     * the state that is being animated is not declared within the trigger.\n     *\n     * ### Usage\n     *\n     * `state` will declare an animation state with its associated styles\n     * within the given trigger.\n     *\n     * - `stateNameExpr` can be one or more state names separated by commas.\n     * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n     * the state\n     * has been reached.\n     *\n     * ```typescript\n     * // \"void\" is a reserved name for a state and is used to represent\n     * // the state in which an element is detached from from the application.\n     * state(\"void\", style({ height: 0 }))\n     *\n     * // user-defined states\n     * state(\"closed\", style({ height: 0 }))\n     * state(\"open, visible\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     * @return {?}\n     */\n    function state(stateNameExpr, styles) {\n        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n    }\n    /**\n     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n     * by an `offset` value.\n     *\n     * ### Usage\n     *\n     * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n     * animation function. Instead of applying animations from where they are\n     * currently to their destination, keyframes can describe how each style entry is applied\n     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n     *\n     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n     * what percentage of the animate time the styles will be applied.\n     *\n     * ```typescript\n     * // the provided offset values describe when each backgroundColor value is applied.\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\", offset: 0 }),\n     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n     *   style({ backgroundColor: \"black\", offset: 1 })\n     * ]))\n     * ```\n     *\n     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n     * will\n     * be calculated automatically.\n     *\n     * ```typescript\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\" }) // offset = 0\n     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n     *   style({ backgroundColor: \"black\" }) // offset = 1\n     * ]))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} steps\n     * @return {?}\n     */\n    function keyframes(steps) {\n        return new AnimationKeyframesSequenceMetadata(steps);\n    }\n    /**\n     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n     * provided\n     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n     * which consists\n     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n     *\n     * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n     * to animate to\n     * a state value and persist its styles then one or more {\\@link state animation states} is expected\n     * to be defined.\n     *\n     * ### Usage\n     *\n     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n     * what the\n     * previous state is and what the current state has become. In other words, if a transition is\n     * defined that\n     * matches the old/current state criteria then the associated animation will be triggered.\n     *\n     * ```typescript\n     * // all transition/state changes are defined within an animation trigger\n     * trigger(\"myAnimationTrigger\", [\n     *   // if a state is defined then its styles will be persisted when the\n     *   // animation has fully completed itself\n     *   state(\"on\", style({ background: \"green\" })),\n     *   state(\"off\", style({ background: \"grey\" })),\n     *\n     *   // a transition animation that will be kicked off when the state value\n     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n     *   transition(\"on => off\", animate(500)),\n     *\n     *   // it is also possible to do run the same animation for both directions\n     *   transition(\"on <=> off\", animate(500)),\n     *\n     *   // or to define multiple states pairs separated by commas\n     *   transition(\"on => off, off => void\", animate(500)),\n     *\n     *   // this is a catch-all state change for when an element is inserted into\n     *   // the page and the destination state is unknown\n     *   transition(\"void => *\", [\n     *     style({ opacity: 0 }),\n     *     animate(500)\n     *   ]),\n     *\n     *   // this will capture a state change between any states\n     *   transition(\"* => *\", animate(\"1s 0s\")),\n     * ])\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * #### The final `animate` call\n     *\n     * If the final step within the transition steps is a call to `animate()` that **only**\n     * uses a timing value with **no style data** then it will be automatically used as the final\n     * animation\n     * arc for the element to animate itself to the final state. This involves an automatic mix of\n     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n     * applied state to be presented correctly.\n     *\n     * ```\n     * // start off by hiding the element, but make sure that it animates properly to whatever state\n     * // is currently active for \"myAnimationTrigger\"\n     * transition(\"void => *\", [\n     *   style({ opacity: 0 }),\n     *   animate(500)\n     * ])\n     * ```\n     *\n     * ### Transition Aliases (`:enter` and `:leave`)\n     *\n     * Given that enter (insertion) and leave (removal) animations are so common,\n     * the `transition` function accepts both `:enter` and `:leave` values which\n     * are aliases for the `void => *` and `* => void` state changes.\n     *\n     * ```\n     * transition(\":enter\", [\n     *   style({ opacity: 0 }),\n     *   animate(500, style({ opacity: 1 }))\n     * ])\n     * transition(\":leave\", [\n     *   animate(500, style({ opacity: 0 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     * @return {?}\n     */\n    function transition(stateChangeExpr, steps) {\n        var /** @type {?} */ animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n    }\n    /**\n     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n     * transition transition}\n     * entries that will be evaluated when the expression bound to the trigger changes.\n     *\n     * Triggers are registered within the component annotation data under the\n     * {\\@link Component#animations-anchor animations section}. An animation trigger can\n     * be placed on an element within a template by referencing the name of the\n     * trigger followed by the expression value that the trigger is bound to\n     * (in the form of `[\\@triggerName]=\"expression\"`.\n     *\n     * ### Usage\n     *\n     * `trigger` will create an animation trigger reference based on the provided `name` value.\n     * The provided `animation` value is expected to be an array consisting of {\\@link state state} and\n     * {\\@link transition transition}\n     * declarations.\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-component',\n     *   templateUrl: 'my-component-tpl.html',\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *       state(...),\n     *       state(...),\n     *       transition(...),\n     *       transition(...)\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   myStatusExp = \"something\";\n     * }\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} name\n     * @param {?} animation\n     * @return {?}\n     */\n    function trigger(name, animation) {\n        return new AnimationEntryMetadata(name, animation);\n    }\n\n    /**\n     * @param {?} previousStyles\n     * @param {?} newStyles\n     * @param {?=} nullValue\n     * @return {?}\n     */\n    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n        if (nullValue === void 0) { nullValue = null; }\n        var /** @type {?} */ finalStyles = {};\n        Object.keys(newStyles).forEach(function (prop) {\n            var /** @type {?} */ value = newStyles[prop];\n            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n        });\n        Object.keys(previousStyles).forEach(function (prop) {\n            if (!isPresent(finalStyles[prop])) {\n                finalStyles[prop] = nullValue;\n            }\n        });\n        return finalStyles;\n    }\n    /**\n     * @param {?} collectedStyles\n     * @param {?} finalStateStyles\n     * @param {?} keyframes\n     * @return {?}\n     */\n    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n        var /** @type {?} */ limit = keyframes.length - 1;\n        var /** @type {?} */ firstKeyframe = keyframes[0];\n        // phase 1: copy all the styles from the first keyframe into the lookup map\n        var /** @type {?} */ flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n        var /** @type {?} */ extraFirstKeyframeStyles = {};\n        var /** @type {?} */ hasExtraFirstStyles = false;\n        Object.keys(collectedStyles).forEach(function (prop) {\n            var /** @type {?} */ value = (collectedStyles[prop]);\n            // if the style is already defined in the first keyframe then\n            // we do not replace it.\n            if (!flatenedFirstKeyframeStyles[prop]) {\n                flatenedFirstKeyframeStyles[prop] = value;\n                extraFirstKeyframeStyles[prop] = value;\n                hasExtraFirstStyles = true;\n            }\n        });\n        var /** @type {?} */ keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n        // phase 2: normalize the final keyframe\n        var /** @type {?} */ finalKeyframe = keyframes[limit];\n        finalKeyframe.styles.styles.unshift(finalStateStyles);\n        var /** @type {?} */ flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n        var /** @type {?} */ extraFinalKeyframeStyles = {};\n        var /** @type {?} */ hasExtraFinalStyles = false;\n        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFinalStyles = true;\n            }\n        });\n        if (hasExtraFinalStyles) {\n            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n        }\n        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFirstStyles = true;\n            }\n        });\n        if (hasExtraFirstStyles) {\n            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n        }\n        collectAndResolveStyles(collectedStyles, [finalStateStyles]);\n        return keyframes;\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    function clearStyles(styles) {\n        var /** @type {?} */ finalStyles = {};\n        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n        return finalStyles;\n    }\n    /**\n     * @param {?} collection\n     * @param {?} styles\n     * @return {?}\n     */\n    function collectAndResolveStyles(collection, styles) {\n        return styles.map(function (entry) {\n            var /** @type {?} */ stylesObj = {};\n            Object.keys(entry).forEach(function (prop) {\n                var /** @type {?} */ value = entry[prop];\n                if (value == FILL_STYLE_FLAG) {\n                    value = collection[prop];\n                    if (!isPresent(value)) {\n                        value = AUTO_STYLE;\n                    }\n                }\n                collection[prop] = value;\n                stylesObj[prop] = value;\n            });\n            return stylesObj;\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} styles\n     * @return {?}\n     */\n    function renderStyles(element, renderer, styles) {\n        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    function flattenStyles(styles) {\n        var /** @type {?} */ finalStyles = {};\n        styles.forEach(function (entry) {\n            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = (entry[prop]); });\n        });\n        return finalStyles;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `AnimationStyles` consists of a collection of key/value maps containing CSS-based style data\n     * that can either be used as initial styling data or apart of a series of keyframes within an\n     * animation.\n     * This class is mostly internal, and it is designed to be used alongside\n     * {\\@link AnimationKeyframe `AnimationKeyframe`} and {\\@link Renderer#animate-anchor\n     * `Renderer.animate`}.\n     *\n     * \\@experimental Animation support is experimental\n     */\n    var AnimationStyles = (function () {\n        /**\n         * @param {?} styles\n         */\n        function AnimationStyles(styles) {\n            this.styles = styles;\n        }\n        return AnimationStyles;\n    }());\n\n    /**\n     * An instance of this class is returned as an event parameter when an animation\n     * callback is captured for an animation either during the start or done phase.\n     *\n     * ```typescript\n     * \\@Component({\n     *   host: {\n     *     '[\\@myAnimationTrigger]': 'someExpression',\n     *     '(\\@myAnimationTrigger.start)': 'captureStartEvent($event)',\n     *     '(\\@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n     *   },\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *        // ...\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   someExpression: any = false;\n     *   captureStartEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     *\n     *   captureDoneEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     * }\n     * ```\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationTransitionEvent = (function () {\n        /**\n         * @param {?} __0\n         */\n        function AnimationTransitionEvent(_a) {\n            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n            this.fromState = fromState;\n            this.toState = toState;\n            this.totalTime = totalTime;\n            this.phaseName = phaseName;\n        }\n        return AnimationTransitionEvent;\n    }());\n\n    var AnimationTransition = (function () {\n        /**\n         * @param {?} _player\n         * @param {?} _fromState\n         * @param {?} _toState\n         * @param {?} _totalTime\n         */\n        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n            this._player = _player;\n            this._fromState = _fromState;\n            this._toState = _toState;\n            this._totalTime = _totalTime;\n        }\n        /**\n         * @param {?} phaseName\n         * @return {?}\n         */\n        AnimationTransition.prototype._createEvent = function (phaseName) {\n            return new AnimationTransitionEvent({\n                fromState: this._fromState,\n                toState: this._toState,\n                totalTime: this._totalTime,\n                phaseName: phaseName\n            });\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        AnimationTransition.prototype.onStart = function (callback) {\n            var _this = this;\n            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('start')); }, 'player.onStart'));\n            this._player.onStart(fn);\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        AnimationTransition.prototype.onDone = function (callback) {\n            var _this = this;\n            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('done')); }, 'player.onDone'));\n            this._player.onDone(fn);\n        };\n        return AnimationTransition;\n    }());\n\n    var DebugDomRootRenderer = (function () {\n        /**\n         * @param {?} _delegate\n         */\n        function DebugDomRootRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        /**\n         * @param {?} componentProto\n         * @return {?}\n         */\n        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n        };\n        return DebugDomRootRenderer;\n    }());\n    var DebugDomRenderer = (function () {\n        /**\n         * @param {?} _delegate\n         */\n        function DebugDomRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        /**\n         * @param {?} selectorOrNode\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var /** @type {?} */ nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n            var /** @type {?} */ debugEl = new DebugElement(nativeEl, null, debugInfo);\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} name\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n            var /** @type {?} */ nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n            var /** @type {?} */ debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        /**\n         * @param {?} hostElement\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n        /**\n         * @param {?} parentElement\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var /** @type {?} */ comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n            var /** @type {?} */ debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return comment;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} value\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var /** @type {?} */ text = this._delegate.createText(parentElement, value, debugInfo);\n            var /** @type {?} */ debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return text;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} nodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            var /** @type {?} */ debugParent = getDebugNode(parentElement);\n            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n                var /** @type {?} */ debugElement_1 = debugParent;\n                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n            }\n            this._delegate.projectNodes(parentElement, nodes);\n        };\n        /**\n         * @param {?} node\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var /** @type {?} */ debugNode = getDebugNode(node);\n            if (isPresent(debugNode)) {\n                var /** @type {?} */ debugParent = debugNode.parent;\n                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n                    var /** @type {?} */ debugViewRootNodes_1 = [];\n                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes_1.push(getDebugNode(rootNode)); });\n                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes_1);\n                }\n            }\n            this._delegate.attachViewAfter(node, viewRootNodes);\n        };\n        /**\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n            viewRootNodes.forEach(function (node) {\n                var /** @type {?} */ debugNode = getDebugNode(node);\n                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n                    debugNode.parent.removeChild(debugNode);\n                }\n            });\n            this._delegate.detachView(viewRootNodes);\n        };\n        /**\n         * @param {?} hostElement\n         * @param {?} viewAllNodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            viewAllNodes = viewAllNodes || [];\n            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n            this._delegate.destroyView(hostElement, viewAllNodes);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl)) {\n                debugEl.listeners.push(new EventListener(name, callback));\n            }\n            return this._delegate.listen(renderElement, name, callback);\n        };\n        /**\n         * @param {?} target\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._delegate.listenGlobal(target, name, callback);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.properties[propertyName] = propertyValue;\n            }\n            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} attributeName\n         * @param {?} attributeValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.attributes[attributeName] = attributeValue;\n            }\n            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} className\n         * @param {?} isAdd\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.classes[className] = isAdd;\n            }\n            this._delegate.setElementClass(renderElement, className, isAdd);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.styles[styleName] = styleValue;\n            }\n            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} methodName\n         * @param {?=} args\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            this._delegate.invokeElementMethod(renderElement, methodName, args);\n        };\n        /**\n         * @param {?} renderNode\n         * @param {?} text\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n        };\n        return DebugDomRenderer;\n    }());\n\n    var ViewType = {};\n    ViewType.HOST = 0;\n    ViewType.COMPONENT = 1;\n    ViewType.EMBEDDED = 2;\n    ViewType[ViewType.HOST] = \"HOST\";\n    ViewType[ViewType.COMPONENT] = \"COMPONENT\";\n    ViewType[ViewType.EMBEDDED] = \"EMBEDDED\";\n\n    var StaticNodeDebugInfo = (function () {\n        /**\n         * @param {?} providerTokens\n         * @param {?} componentToken\n         * @param {?} refTokens\n         */\n        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n            this.providerTokens = providerTokens;\n            this.componentToken = componentToken;\n            this.refTokens = refTokens;\n        }\n        return StaticNodeDebugInfo;\n    }());\n    var DebugContext = (function () {\n        /**\n         * @param {?} _view\n         * @param {?} _nodeIndex\n         * @param {?} _tplRow\n         * @param {?} _tplCol\n         */\n        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n            this._tplRow = _tplRow;\n            this._tplCol = _tplCol;\n        }\n        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"context\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"component\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n                    return this.injector.get(staticNodeInfo.componentToken);\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ componentView = this._view;\n                while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n                    componentView = (componentView.parentView);\n                }\n                return componentView.parentElement;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.injector(this._nodeIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n                    return this._view.allNodes[this._nodeIndex];\n                }\n                else {\n                    return null;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"source\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"references\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var _this = this;\n                var /** @type {?} */ varValues = {};\n                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo)) {\n                    var /** @type {?} */ refs_1 = staticNodeInfo.refTokens;\n                    Object.keys(refs_1).forEach(function (refName) {\n                        var /** @type {?} */ refToken = refs_1[refName];\n                        var /** @type {?} */ varValue;\n                        if (isBlank(refToken)) {\n                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n                        }\n                        else {\n                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n                        }\n                        varValues[refName] = varValue;\n                    });\n                }\n                return varValues;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugContext;\n    }());\n\n    var ViewAnimationMap = (function () {\n        function ViewAnimationMap() {\n            this._map = new Map();\n            this._allPlayers = [];\n        }\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.find = function (element, animationName) {\n            var /** @type {?} */ playersByAnimation = this._map.get(element);\n            if (isPresent(playersByAnimation)) {\n                return playersByAnimation[animationName];\n            }\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n            var /** @type {?} */ el = this._map.get(element);\n            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n        };\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @param {?} player\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n            var /** @type {?} */ playersByAnimation = this._map.get(element);\n            if (!isPresent(playersByAnimation)) {\n                playersByAnimation = {};\n            }\n            var /** @type {?} */ existingEntry = playersByAnimation[animationName];\n            if (isPresent(existingEntry)) {\n                this.remove(element, animationName);\n            }\n            playersByAnimation[animationName] = player;\n            this._allPlayers.push(player);\n            this._map.set(element, playersByAnimation);\n        };\n        /**\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @param {?=} targetPlayer\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.remove = function (element, animationName, targetPlayer) {\n            if (targetPlayer === void 0) { targetPlayer = null; }\n            var /** @type {?} */ playersByAnimation = this._map.get(element);\n            if (playersByAnimation) {\n                var /** @type {?} */ player = playersByAnimation[animationName];\n                if (!targetPlayer || player === targetPlayer) {\n                    delete playersByAnimation[animationName];\n                    var /** @type {?} */ index = this._allPlayers.indexOf(player);\n                    this._allPlayers.splice(index, 1);\n                    if (Object.keys(playersByAnimation).length === 0) {\n                        this._map.delete(element);\n                    }\n                }\n            }\n        };\n        return ViewAnimationMap;\n    }());\n\n    var AnimationViewContext = (function () {\n        /**\n         * @param {?} _animationQueue\n         */\n        function AnimationViewContext(_animationQueue) {\n            this._animationQueue = _animationQueue;\n            this._players = new ViewAnimationMap();\n        }\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n            var /** @type {?} */ activeAnimationPlayers = this._players.getAllPlayers();\n            // we check for the length to avoid having GroupAnimationPlayer\n            // issue an unnecessary microtask when zero players are passed in\n            if (activeAnimationPlayers.length) {\n                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n            }\n            else {\n                callback();\n            }\n        };\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @param {?} player\n         * @return {?}\n         */\n        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n            var _this = this;\n            this._animationQueue.enqueue(player);\n            this._players.set(element, animationName, player);\n            player.onDone(function () { return _this._players.remove(element, animationName, player); });\n        };\n        /**\n         * @param {?} element\n         * @param {?=} animationName\n         * @return {?}\n         */\n        AnimationViewContext.prototype.getAnimationPlayers = function (element, animationName) {\n            if (animationName === void 0) { animationName = null; }\n            var /** @type {?} */ players = [];\n            if (animationName) {\n                var /** @type {?} */ currentPlayer = this._players.find(element, animationName);\n                if (currentPlayer) {\n                    _recursePlayers(currentPlayer, players);\n                }\n            }\n            else {\n                this._players.findAllPlayersByElement(element).forEach(function (player) { return _recursePlayers(player, players); });\n            }\n            return players;\n        };\n        return AnimationViewContext;\n    }());\n    /**\n     * @param {?} player\n     * @param {?} collectedPlayers\n     * @return {?}\n     */\n    function _recursePlayers(player, collectedPlayers) {\n        if ((player instanceof AnimationGroupPlayer) || (player instanceof AnimationSequencePlayer)) {\n            player.players.forEach(function (player) { return _recursePlayers(player, collectedPlayers); });\n        }\n        else {\n            collectedPlayers.push(player);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$15 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var ElementInjector = (function (_super) {\n        __extends$15(ElementInjector, _super);\n        /**\n         * @param {?} _view\n         * @param {?} _nodeIndex\n         */\n        function ElementInjector(_view, _nodeIndex) {\n            _super.call(this);\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n        }\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        ElementInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n        };\n        return ElementInjector;\n    }(Injector));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$14 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n    /**\n     * @experimental\n     */\n    var /** @type {?} */ EMPTY_CONTEXT = new Object();\n    var /** @type {?} */ UNDEFINED$1 = new Object();\n    /**\n     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n     *\n     * @abstract\n     */\n    var AppView = (function () {\n        /**\n         * @param {?} clazz\n         * @param {?} componentType\n         * @param {?} type\n         * @param {?} viewUtils\n         * @param {?} parentView\n         * @param {?} parentIndex\n         * @param {?} parentElement\n         * @param {?} cdMode\n         * @param {?=} declaredViewContainer\n         */\n        function AppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentElement, cdMode, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            this.clazz = clazz;\n            this.componentType = componentType;\n            this.type = type;\n            this.viewUtils = viewUtils;\n            this.parentView = parentView;\n            this.parentIndex = parentIndex;\n            this.parentElement = parentElement;\n            this.cdMode = cdMode;\n            this.declaredViewContainer = declaredViewContainer;\n            this.numberOfChecks = 0;\n            this.ref = new ViewRef_(this, viewUtils.animationQueue);\n            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n                this.renderer = viewUtils.renderComponent(componentType);\n            }\n            else {\n                this.renderer = parentView.renderer;\n            }\n            this._directRenderer = this.renderer.directRenderer;\n        }\n        Object.defineProperty(AppView.prototype, \"animationContext\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                if (!this._animationContext) {\n                    this._animationContext = new AnimationViewContext(this.viewUtils.animationQueue);\n                }\n                return this._animationContext;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"destroyed\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} context\n         * @return {?}\n         */\n        AppView.prototype.create = function (context) {\n            this.context = context;\n            return this.createInternal(null);\n        };\n        /**\n         * @param {?} rootSelectorOrNode\n         * @param {?} hostInjector\n         * @param {?} projectableNodes\n         * @return {?}\n         */\n        AppView.prototype.createHostView = function (rootSelectorOrNode, hostInjector, projectableNodes) {\n            this.context = (EMPTY_CONTEXT);\n            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n            this._hostInjector = hostInjector;\n            this._hostProjectableNodes = projectableNodes;\n            return this.createInternal(rootSelectorOrNode);\n        };\n        /**\n         * Overwritten by implementations.\n         * Returns the ComponentRef for the host element for ViewType.HOST.\n         * @param {?} rootSelectorOrNode\n         * @return {?}\n         */\n        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n        /**\n         * Overwritten by implementations.\n         * @param {?} templateNodeIndex\n         * @return {?}\n         */\n        AppView.prototype.createEmbeddedViewInternal = function (templateNodeIndex) { return null; };\n        /**\n         * @param {?} lastRootNode\n         * @param {?} allNodes\n         * @param {?} disposables\n         * @return {?}\n         */\n        AppView.prototype.init = function (lastRootNode, allNodes, disposables) {\n            this.lastRootNode = lastRootNode;\n            this.allNodes = allNodes;\n            this.disposables = disposables;\n            if (this.type === ViewType.COMPONENT) {\n                this.dirtyParentQueriesInternal();\n            }\n        };\n        /**\n         * @param {?} token\n         * @param {?} nodeIndex\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            var /** @type {?} */ result = UNDEFINED$1;\n            var /** @type {?} */ view = this;\n            while (result === UNDEFINED$1) {\n                if (isPresent(nodeIndex)) {\n                    result = view.injectorGetInternal(token, nodeIndex, UNDEFINED$1);\n                }\n                if (result === UNDEFINED$1 && view.type === ViewType.HOST) {\n                    result = view._hostInjector.get(token, notFoundValue);\n                }\n                nodeIndex = view.parentIndex;\n                view = view.parentView;\n            }\n            return result;\n        };\n        /**\n         * Overwritten by implementations\n         * @param {?} token\n         * @param {?} nodeIndex\n         * @param {?} notFoundResult\n         * @return {?}\n         */\n        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n            return notFoundResult;\n        };\n        /**\n         * @param {?} nodeIndex\n         * @return {?}\n         */\n        AppView.prototype.injector = function (nodeIndex) { return new ElementInjector(this, nodeIndex); };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.detachAndDestroy = function () {\n            if (this.viewContainer) {\n                this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n            }\n            else if (this.appRef) {\n                this.appRef.detachView(this.ref);\n            }\n            else if (this._hasExternalHostElement) {\n                this.detach();\n            }\n            this.destroy();\n        };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.destroy = function () {\n            var _this = this;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                return;\n            }\n            var /** @type {?} */ hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n            if (this.disposables) {\n                for (var /** @type {?} */ i = 0; i < this.disposables.length; i++) {\n                    this.disposables[i]();\n                }\n            }\n            this.destroyInternal();\n            this.dirtyParentQueriesInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n            }\n            else {\n                this.renderer.destroyView(hostElement, this.allNodes);\n            }\n            this.cdMode = ChangeDetectorStatus.Destroyed;\n        };\n        /**\n         * Overwritten by implementations\n         * @return {?}\n         */\n        AppView.prototype.destroyInternal = function () { };\n        /**\n         * Overwritten by implementations\n         * @return {?}\n         */\n        AppView.prototype.detachInternal = function () { };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.detach = function () {\n            var _this = this;\n            this.detachInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this._renderDetach(); });\n            }\n            else {\n                this._renderDetach();\n            }\n            if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer &&\n                this.declaredViewContainer.projectedViews) {\n                var /** @type {?} */ projectedViews = this.declaredViewContainer.projectedViews;\n                var /** @type {?} */ index = projectedViews.indexOf(this);\n                // perf: pop is faster than splice!\n                if (index >= projectedViews.length - 1) {\n                    projectedViews.pop();\n                }\n                else {\n                    projectedViews.splice(index, 1);\n                }\n            }\n            this.appRef = null;\n            this.viewContainer = null;\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @return {?}\n         */\n        AppView.prototype._renderDetach = function () {\n            if (this._directRenderer) {\n                this.visitRootNodesInternal(this._directRenderer.remove, null);\n            }\n            else {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n        };\n        /**\n         * @param {?} appRef\n         * @return {?}\n         */\n        AppView.prototype.attachToAppRef = function (appRef) {\n            if (this.viewContainer) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this.appRef = appRef;\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @param {?} viewContainer\n         * @param {?} prevView\n         * @return {?}\n         */\n        AppView.prototype.attachAfter = function (viewContainer, prevView) {\n            if (this.appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._renderAttach(viewContainer, prevView);\n            this.viewContainer = viewContainer;\n            if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n                if (!this.declaredViewContainer.projectedViews) {\n                    this.declaredViewContainer.projectedViews = [];\n                }\n                this.declaredViewContainer.projectedViews.push(this);\n            }\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @param {?} viewContainer\n         * @param {?} prevView\n         * @return {?}\n         */\n        AppView.prototype.moveAfter = function (viewContainer, prevView) {\n            this._renderAttach(viewContainer, prevView);\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @param {?} viewContainer\n         * @param {?} prevView\n         * @return {?}\n         */\n        AppView.prototype._renderAttach = function (viewContainer, prevView) {\n            var /** @type {?} */ prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n            if (this._directRenderer) {\n                var /** @type {?} */ nextSibling = this._directRenderer.nextSibling(prevNode);\n                if (nextSibling) {\n                    this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n                }\n                else {\n                    var /** @type {?} */ parentElement = this._directRenderer.parentElement(prevNode);\n                    if (parentElement) {\n                        this.visitRootNodesInternal(this._directRenderer.appendChild, parentElement);\n                    }\n                }\n            }\n            else {\n                this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n            }\n        };\n        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ nodes = [];\n                this.visitRootNodesInternal(addToArray, nodes);\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} parentElement\n         * @param {?} ngContentIndex\n         * @return {?}\n         */\n        AppView.prototype.projectNodes = function (parentElement, ngContentIndex) {\n            if (this._directRenderer) {\n                this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n            }\n            else {\n                var /** @type {?} */ nodes = [];\n                this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n                this.renderer.projectNodes(parentElement, nodes);\n            }\n        };\n        /**\n         * @param {?} ngContentIndex\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        AppView.prototype.visitProjectedNodes = function (ngContentIndex, cb, c) {\n            switch (this.type) {\n                case ViewType.EMBEDDED:\n                    this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n                    break;\n                case ViewType.COMPONENT:\n                    if (this.parentView.type === ViewType.HOST) {\n                        var /** @type {?} */ nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n                        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n                            cb(nodes[i], c);\n                        }\n                    }\n                    else {\n                        this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n                    }\n                    break;\n            }\n        };\n        /**\n         * Overwritten by implementations\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        AppView.prototype.visitRootNodesInternal = function (cb, c) { };\n        /**\n         * Overwritten by implementations\n         * @param {?} nodeIndex\n         * @param {?} ngContentIndex\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        AppView.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, c) { };\n        /**\n         * Overwritten by implementations\n         * @return {?}\n         */\n        AppView.prototype.dirtyParentQueriesInternal = function () { };\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        AppView.prototype.internalDetectChanges = function (throwOnChange) {\n            if (this.cdMode !== ChangeDetectorStatus.Detached) {\n                this.detectChanges(throwOnChange);\n            }\n        };\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        AppView.prototype.detectChanges = function (throwOnChange) {\n            var /** @type {?} */ s = _scope_check(this.clazz);\n            if (this.cdMode === ChangeDetectorStatus.Checked ||\n                this.cdMode === ChangeDetectorStatus.Errored)\n                return;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                this.throwDestroyedError('detectChanges');\n            }\n            this.detectChangesInternal(throwOnChange);\n            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n                this.cdMode = ChangeDetectorStatus.Checked;\n            this.numberOfChecks++;\n            wtfLeave(s);\n        };\n        /**\n         * Overwritten by implementations\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        AppView.prototype.detectChangesInternal = function (throwOnChange) { };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.markPathToRootAsCheckOnce = function () {\n            var /** @type {?} */ c = this;\n            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n                if (c.cdMode === ChangeDetectorStatus.Checked) {\n                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n                }\n                if (c.type === ViewType.COMPONENT) {\n                    c = c.parentView;\n                }\n                else {\n                    c = c.viewContainer ? c.viewContainer.parentView : null;\n                }\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        AppView.prototype.eventHandler = function (cb) {\n            return cb;\n        };\n        /**\n         * @param {?} details\n         * @return {?}\n         */\n        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n        return AppView;\n    }());\n    var DebugAppView = (function (_super) {\n        __extends$14(DebugAppView, _super);\n        /**\n         * @param {?} clazz\n         * @param {?} componentType\n         * @param {?} type\n         * @param {?} viewUtils\n         * @param {?} parentView\n         * @param {?} parentIndex\n         * @param {?} parentNode\n         * @param {?} cdMode\n         * @param {?} staticNodeDebugInfos\n         * @param {?=} declaredViewContainer\n         */\n        function DebugAppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, staticNodeDebugInfos, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            _super.call(this, clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, declaredViewContainer);\n            this.staticNodeDebugInfos = staticNodeDebugInfos;\n            this._currentDebugContext = null;\n        }\n        /**\n         * @param {?} context\n         * @return {?}\n         */\n        DebugAppView.prototype.create = function (context) {\n            this._resetDebug();\n            try {\n                return _super.prototype.create.call(this, context);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} rootSelectorOrNode\n         * @param {?} injector\n         * @param {?=} projectableNodes\n         * @return {?}\n         */\n        DebugAppView.prototype.createHostView = function (rootSelectorOrNode, injector, projectableNodes) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            this._resetDebug();\n            try {\n                return _super.prototype.createHostView.call(this, rootSelectorOrNode, injector, projectableNodes);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} token\n         * @param {?} nodeIndex\n         * @param {?=} notFoundResult\n         * @return {?}\n         */\n        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            this._resetDebug();\n            try {\n                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DebugAppView.prototype.detach = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.detach.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DebugAppView.prototype.destroy = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.destroy.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n            this._resetDebug();\n            try {\n                _super.prototype.detectChanges.call(this, throwOnChange);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} rowNum\n         * @param {?} colNum\n         * @return {?}\n         */\n        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n        };\n        /**\n         * @param {?} e\n         * @return {?}\n         */\n        DebugAppView.prototype._rethrowWithContext = function (e) {\n            if (!(e instanceof ViewWrappedError)) {\n                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n                    this.cdMode = ChangeDetectorStatus.Errored;\n                }\n                if (isPresent(this._currentDebugContext)) {\n                    throw new ViewWrappedError(e, this._currentDebugContext);\n                }\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        DebugAppView.prototype.eventHandler = function (cb) {\n            var _this = this;\n            var /** @type {?} */ superHandler = _super.prototype.eventHandler.call(this, cb);\n            return function (eventName, event) {\n                _this._resetDebug();\n                try {\n                    return superHandler.call(_this, eventName, event);\n                }\n                catch (e) {\n                    _this._rethrowWithContext(e);\n                    throw e;\n                }\n            };\n        };\n        return DebugAppView;\n    }(AppView));\n\n    /**\n     * A ViewContainer is created for elements that have a ViewContainerRef\n     * to keep track of the nested views.\n     */\n    var ViewContainer = (function () {\n        /**\n         * @param {?} index\n         * @param {?} parentIndex\n         * @param {?} parentView\n         * @param {?} nativeElement\n         */\n        function ViewContainer(index, parentIndex, parentView, nativeElement) {\n            this.index = index;\n            this.parentIndex = parentIndex;\n            this.parentView = parentView;\n            this.nativeElement = nativeElement;\n        }\n        Object.defineProperty(ViewContainer.prototype, \"elementRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ElementRef(this.nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"vcRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ViewContainerRef_(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"parentInjector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.parentView.injector(this.parentIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.parentView.injector(this.index); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        ViewContainer.prototype.detectChangesInNestedViews = function (throwOnChange) {\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].detectChanges(throwOnChange);\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        ViewContainer.prototype.destroyNestedViews = function () {\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].destroy();\n                }\n            }\n        };\n        /**\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        ViewContainer.prototype.visitNestedViewRootNodes = function (cb, c) {\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].visitRootNodesInternal(cb, c);\n                }\n            }\n        };\n        /**\n         * @param {?} nestedViewClass\n         * @param {?} callback\n         * @return {?}\n         */\n        ViewContainer.prototype.mapNestedViews = function (nestedViewClass, callback) {\n            var /** @type {?} */ result = [];\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    var /** @type {?} */ nestedView = this.nestedViews[i];\n                    if (nestedView.clazz === nestedViewClass) {\n                        result.push(callback(nestedView));\n                    }\n                }\n            }\n            if (this.projectedViews) {\n                for (var /** @type {?} */ i = 0; i < this.projectedViews.length; i++) {\n                    var /** @type {?} */ projectedView = this.projectedViews[i];\n                    if (projectedView.clazz === nestedViewClass) {\n                        result.push(callback(projectedView));\n                    }\n                }\n            }\n            return result;\n        };\n        /**\n         * @param {?} view\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        ViewContainer.prototype.moveView = function (view, currentIndex) {\n            var /** @type {?} */ previousIndex = this.nestedViews.indexOf(view);\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var /** @type {?} */ nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            nestedViews.splice(previousIndex, 1);\n            nestedViews.splice(currentIndex, 0, view);\n            var /** @type {?} */ prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n            view.moveAfter(this, prevView);\n        };\n        /**\n         * @param {?} view\n         * @param {?} viewIndex\n         * @return {?}\n         */\n        ViewContainer.prototype.attachView = function (view, viewIndex) {\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var /** @type {?} */ nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            // perf: array.push is faster than array.splice!\n            if (viewIndex >= nestedViews.length) {\n                nestedViews.push(view);\n            }\n            else {\n                nestedViews.splice(viewIndex, 0, view);\n            }\n            var /** @type {?} */ prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n            view.attachAfter(this, prevView);\n        };\n        /**\n         * @param {?} viewIndex\n         * @return {?}\n         */\n        ViewContainer.prototype.detachView = function (viewIndex) {\n            var /** @type {?} */ view = this.nestedViews[viewIndex];\n            // perf: array.pop is faster than array.splice!\n            if (viewIndex >= this.nestedViews.length - 1) {\n                this.nestedViews.pop();\n            }\n            else {\n                this.nestedViews.splice(viewIndex, 1);\n            }\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            view.detach();\n            return view;\n        };\n        return ViewContainer;\n    }());\n\n    var /** @type {?} */ __core_private__ = {\n        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n        ChangeDetectorStatus: ChangeDetectorStatus,\n        constructDependencies: constructDependencies,\n        LifecycleHooks: LifecycleHooks,\n        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n        ReflectorReader: ReflectorReader,\n        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n        ComponentRef_: ComponentRef_,\n        ViewContainer: ViewContainer,\n        AppView: AppView,\n        DebugAppView: DebugAppView,\n        NgModuleInjector: NgModuleInjector,\n        registerModuleFactory: registerModuleFactory,\n        ViewType: ViewType,\n        view_utils: view_utils,\n        ViewMetadata: ViewMetadata,\n        DebugContext: DebugContext,\n        StaticNodeDebugInfo: StaticNodeDebugInfo,\n        devModeEqual: devModeEqual,\n        UNINITIALIZED: UNINITIALIZED,\n        ValueUnwrapper: ValueUnwrapper,\n        RenderDebugInfo: RenderDebugInfo,\n        TemplateRef_: TemplateRef_,\n        ReflectionCapabilities: ReflectionCapabilities,\n        makeDecorator: makeDecorator,\n        DebugDomRootRenderer: DebugDomRootRenderer,\n        Console: Console,\n        reflector: reflector,\n        Reflector: Reflector,\n        NoOpAnimationPlayer: NoOpAnimationPlayer,\n        AnimationPlayer: AnimationPlayer,\n        AnimationSequencePlayer: AnimationSequencePlayer,\n        AnimationGroupPlayer: AnimationGroupPlayer,\n        AnimationKeyframe: AnimationKeyframe,\n        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n        balanceAnimationKeyframes: balanceAnimationKeyframes,\n        flattenStyles: flattenStyles,\n        clearStyles: clearStyles,\n        renderStyles: renderStyles,\n        collectAndResolveStyles: collectAndResolveStyles,\n        APP_ID_RANDOM_PROVIDER: APP_ID_RANDOM_PROVIDER,\n        AnimationStyles: AnimationStyles,\n        ANY_STATE: ANY_STATE,\n        DEFAULT_STATE: DEFAULT_STATE,\n        EMPTY_STATE: EMPTY_STATE,\n        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n        ComponentStillLoadingError: ComponentStillLoadingError,\n        isPromise: isPromise,\n        isObservable: isObservable,\n        AnimationTransition: AnimationTransition\n    };\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n    exports.AnimationPlayer = AnimationPlayer;\n    exports.AnimationStyles = AnimationStyles;\n    exports.AnimationKeyframe = AnimationKeyframe;\n    exports.Sanitizer = Sanitizer;\n    exports.SecurityContext = SecurityContext;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.AfterContentChecked = AfterContentChecked;\n    exports.AfterContentInit = AfterContentInit;\n    exports.AfterViewChecked = AfterViewChecked;\n    exports.AfterViewInit = AfterViewInit;\n    exports.DoCheck = DoCheck;\n    exports.OnChanges = OnChanges;\n    exports.OnDestroy = OnDestroy;\n    exports.OnInit = OnInit;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.ViewEncapsulation = ViewEncapsulation;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.Class = Class;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.OpaqueToken = OpaqueToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Injectable = Injectable;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectionStrategy = ChangeDetectionStrategy;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.CollectionChangeRecord = CollectionChangeRecord;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.__core_private__ = __core_private__;\n    exports.AUTO_STYLE = AUTO_STYLE;\n    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n    exports.AnimationStateMetadata = AnimationStateMetadata;\n    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n    exports.AnimationMetadata = AnimationMetadata;\n    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n    exports.animate = animate;\n    exports.group = group;\n    exports.sequence = sequence;\n    exports.style = style;\n    exports.state = state;\n    exports.keyframes = keyframes;\n    exports.transition = transition;\n    exports.trigger = trigger;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/core/bundles/core.umd.js\n// module id = 1\n// module chunks = 0","/*! version: \"0.1.0\" */\n!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)(\"object\"==typeof exports?exports:t)[n]=r[n]}}(this,function(){return function(t){function e(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return t[n].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var r={};return e.m=t,e.c=r,e.p=\"/static/\",e(0)}([function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=r(12),i=function(){function t(){this.events={}}return t.prototype.publish=function(t,e,r){return void 0===r&&(r=1),this.getSubjectByEventName(t,r).next(e),this},t.prototype.subscribe=function(t,e,r){if(void 0===r&&(r=1),!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t,r).subscribe(e);return n},t.prototype.subscribeOnce=function(t,e){var r=this;if(!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t).subscribe(function(t){e(t),r.unsubscribe(n)});return n},t.prototype.unsubscribe=function(t){return t&&t.unsubscribe(),this},t.prototype.unsubscribeAll=function(t){return t&&t.forEach(function(t){t.unsubscribe()}),this},t.prototype.dispose=function(t){return this.events[t]?(this.getSubjectByEventName(t).unsubscribe(),delete this.events[t]):console.warn(\"The event [\"+t+\"] doesn't exist!\"),this},t.prototype.hasSubscribers=function(t){var e=!1;return this.events[t]&&this.getSubjectByEventName(t).observers.length>0&&(e=!0),e},t.prototype.getEvents=function(){return this.events},t.prototype.getSubjects=function(){return this.getEvents()},t.prototype.getSubjectByEventName=function(t,e){return void 0===e&&(e=1),this.events[t]||(this.events[t]=new n.ReplaySubject(e)),this.events[t]},t.prototype.isCallback=function(t){return!(!t||\"function\"!=typeof t)||(console.warn(\"Callback is missing! Subscription cancelled!\"),!1)},t}();e.RxPubSub=i},function(t,e,r){\"use strict\";function n(t){return t.reduce(function(t,e){return t.concat(e instanceof h.UnsubscriptionError?e.errors:e)},[])}var i=r(24),s=r(25),o=r(10),c=r(27),u=r(9),h=r(23),p=function(){function t(t){this.closed=!1,this._parent=null,this._parents=null,this._subscriptions=null,t&&(this._unsubscribe=t)}return t.prototype.unsubscribe=function(){var t,e=!1;if(!this.closed){var r=this,p=r._parent,a=r._parents,b=r._unsubscribe,f=r._subscriptions;this.closed=!0,this._parent=null,this._parents=null,this._subscriptions=null;for(var l=-1,d=a?a.length:0;p;)p.remove(this),p=++l<d&&a[l]||null;if(o.isFunction(b)){var y=c.tryCatch(b).call(this);y===u.errorObject&&(e=!0,t=t||(u.errorObject.e instanceof h.UnsubscriptionError?n(u.errorObject.e.errors):[u.errorObject.e]))}if(i.isArray(f))for(l=-1,d=f.length;++l<d;){var v=f[l];if(s.isObject(v)){var y=c.tryCatch(v.unsubscribe).call(v);if(y===u.errorObject){e=!0,t=t||[];var w=u.errorObject.e;w instanceof h.UnsubscriptionError?t=t.concat(n(w.errors)):t.push(w)}}}if(e)throw new h.UnsubscriptionError(t)}},t.prototype.add=function(e){if(!e||e===t.EMPTY)return t.EMPTY;if(e===this)return this;var r=e;switch(typeof e){case\"function\":r=new t(e);case\"object\":if(r.closed||\"function\"!=typeof r.unsubscribe)return r;if(this.closed)return r.unsubscribe(),r;if(\"function\"!=typeof r._addParent){var n=r;r=new t,r._subscriptions=[n]}break;default:throw new Error(\"unrecognized teardown \"+e+\" added to Subscription.\")}var i=this._subscriptions||(this._subscriptions=[]);return i.push(r),r._addParent(this),r},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var r=e.indexOf(t);r!==-1&&e.splice(r,1)}},t.prototype._addParent=function(t){var e=this,r=e._parent,n=e._parents;r&&r!==t?n?n.indexOf(t)===-1&&n.push(t):this._parents=[t]:this._parent=t},t.EMPTY=function(t){return t.closed=!0,t}(new t),t}();e.Subscription=p},function(t,e){(function(t){\"use strict\";var r=\"undefined\"!=typeof window&&window,n=\"undefined\"!=typeof self&&\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,i=\"undefined\"!=typeof t&&t,s=r||i||n;e.root=s,function(){if(!s)throw new Error(\"RxJS could not find any global context (window, self, global)\")}()}).call(e,function(){return this}())},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(10),s=r(1),o=r(6),c=r(4),u=function(t){function e(r,n,i){switch(t.call(this),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=o.empty;break;case 1:if(!r){this.destination=o.empty;break}if(\"object\"==typeof r){r instanceof e?(this.destination=r,this.destination.add(this)):(this.syncErrorThrowable=!0,this.destination=new h(this,r));break}default:this.syncErrorThrowable=!0,this.destination=new h(this,r,n,i)}}return n(e,t),e.prototype[c.rxSubscriber]=function(){return this},e.create=function(t,r,n){var i=new e(t,r,n);return i.syncErrorThrowable=!1,i},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this,e=t._parent,r=t._parents;return this._parent=null,this._parents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parent=e,this._parents=r,this},e}(s.Subscription);e.Subscriber=u;var h=function(t){function e(e,r,n,s){t.call(this),this._parentSubscriber=e;var c,u=this;i.isFunction(r)?c=r:r&&(c=r.next,n=r.error,s=r.complete,r!==o.empty&&(u=Object.create(r),i.isFunction(u.unsubscribe)&&this.add(u.unsubscribe.bind(u)),u.unsubscribe=this.unsubscribe.bind(this))),this._context=u,this._next=c,this._error=n,this._complete=s}return n(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber;if(this._error)e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else{if(!e.syncErrorThrowable)throw this.unsubscribe(),t;e.syncErrorValue=t,e.syncErrorThrown=!0,this.unsubscribe()}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var r=function(){return t._complete.call(t._context)};e.syncErrorThrowable?(this.__tryOrSetError(e,r),this.unsubscribe()):(this.__tryOrUnsub(r),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){throw this.unsubscribe(),t}},e.prototype.__tryOrSetError=function(t,e,r){try{e.call(this._context,r)}catch(e){return t.syncErrorValue=e,t.syncErrorThrown=!0,!0}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(u)},function(t,e,r){\"use strict\";var n=r(2),i=n.root.Symbol;e.rxSubscriber=\"function\"==typeof i&&\"function\"==typeof i.for?i.for(\"rxSubscriber\"):\"@@rxSubscriber\",e.$$rxSubscriber=e.rxSubscriber},function(t,e,r){\"use strict\";var n=r(2),i=r(26),s=r(22),o=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var r=new t;return r.source=this,r.operator=e,r},t.prototype.subscribe=function(t,e,r){var n=this.operator,s=i.toSubscriber(t,e,r);if(n?n.call(s,this.source):s.add(this._trySubscribe(s)),s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){t.syncErrorThrown=!0,t.syncErrorValue=e,t.error(e)}},t.prototype.forEach=function(t,e){var r=this;if(e||(n.root.Rx&&n.root.Rx.config&&n.root.Rx.config.Promise?e=n.root.Rx.config.Promise:n.root.Promise&&(e=n.root.Promise)),!e)throw new Error(\"no Promise impl found\");return new e(function(e,n){var i;i=r.subscribe(function(e){if(i)try{t(e)}catch(t){n(t),i.unsubscribe()}else t(e)},n,e)})},t.prototype._subscribe=function(t){return this.source.subscribe(t)},t.prototype[s.observable]=function(){return this},t.create=function(e){return new t(e)},t}();e.Observable=o},function(t,e){\"use strict\";e.empty={closed:!0,next:function(t){},error:function(t){throw t},complete:function(){}}},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this),this.subject=e,this.subscriber=r,this.closed=!1}return n(e,t),e.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,e=t.observers;if(this.subject=null,e&&0!==e.length&&!t.isStopped&&!t.closed){var r=e.indexOf(this.subscriber);r!==-1&&e.splice(r,1)}}},e}(i.Subscription);e.SubjectSubscription=s},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(){var e=t.call(this,\"object unsubscribed\");this.name=e.name=\"ObjectUnsubscribedError\",this.stack=e.stack,this.message=e.message}return r(e,t),e}(Error);e.ObjectUnsubscribedError=n},function(t,e){\"use strict\";e.errorObject={e:{}}},function(t,e){\"use strict\";function r(t){return\"function\"==typeof t}e.isFunction=r},function(t,e,r){\"use strict\";var n=r(5),i=function(){function t(t,e,r){this.kind=t,this.value=e,this.error=r,this.hasValue=\"N\"===t}return t.prototype.observe=function(t){switch(this.kind){case\"N\":return t.next&&t.next(this.value);case\"E\":return t.error&&t.error(this.error);case\"C\":return t.complete&&t.complete()}},t.prototype.do=function(t,e,r){var n=this.kind;switch(n){case\"N\":return t&&t(this.value);case\"E\":return e&&e(this.error);case\"C\":return r&&r()}},t.prototype.accept=function(t,e,r){return t&&\"function\"==typeof t.next?this.observe(t):this.do(t,e,r)},t.prototype.toObservable=function(){var t=this.kind;switch(t){case\"N\":return n.Observable.of(this.value);case\"E\":return n.Observable.throw(this.error);case\"C\":return n.Observable.empty()}throw new Error(\"unexpected notification kind value\")},t.createNext=function(e){return\"undefined\"!=typeof e?new t(\"N\",e):this.undefinedValueNotification},t.createError=function(e){return new t(\"E\",void 0,e)},t.createComplete=function(){return this.completeNotification},t.completeNotification=new t(\"C\"),t.undefinedValueNotification=new t(\"N\",void 0),t}();e.Notification=i},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(14),s=r(21),o=r(1),c=r(15),u=r(8),h=r(7),p=function(t){function e(e,r,n){void 0===e&&(e=Number.POSITIVE_INFINITY),void 0===r&&(r=Number.POSITIVE_INFINITY),t.call(this),this.scheduler=n,this._events=[],this._bufferSize=e<1?1:e,this._windowTime=r<1?1:r}return n(e,t),e.prototype.next=function(e){var r=this._getNow();this._events.push(new a(r,e)),this._trimBufferThenGetEvents(),t.prototype.next.call(this,e)},e.prototype._subscribe=function(t){var e,r=this._trimBufferThenGetEvents(),n=this.scheduler;if(this.closed)throw new u.ObjectUnsubscribedError;this.hasError?e=o.Subscription.EMPTY:this.isStopped?e=o.Subscription.EMPTY:(this.observers.push(t),e=new h.SubjectSubscription(this,t)),n&&t.add(t=new c.ObserveOnSubscriber(t,n));for(var i=r.length,s=0;s<i&&!t.closed;s++)t.next(r[s].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),e},e.prototype._getNow=function(){return(this.scheduler||s.queue).now()},e.prototype._trimBufferThenGetEvents=function(){for(var t=this._getNow(),e=this._bufferSize,r=this._windowTime,n=this._events,i=n.length,s=0;s<i&&!(t-n[s].time<r);)s++;return i>e&&(s=Math.max(s,i-e)),s>0&&n.splice(0,s),n},e}(i.Subject);e.ReplaySubject=p;var a=function(){function t(t,e){this.time=t,this.value=e}return t}()},function(t,e){\"use strict\";var r=function(){function t(e,r){void 0===r&&(r=t.now),this.SchedulerAction=e,this.now=r}return t.prototype.schedule=function(t,e,r){return void 0===e&&(e=0),new this.SchedulerAction(this,t).schedule(r,e)},t.now=Date.now?Date.now:function(){return+new Date},t}();e.Scheduler=r},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(5),s=r(3),o=r(1),c=r(8),u=r(7),h=r(4),p=function(t){function e(e){t.call(this,e),this.destination=e}return n(e,t),e}(s.Subscriber);e.SubjectSubscriber=p;var a=function(t){function e(){t.call(this),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}return n(e,t),e.prototype[h.rxSubscriber]=function(){return new p(this)},e.prototype.lift=function(t){var e=new b(this,this);return e.operator=t,e},e.prototype.next=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;if(!this.isStopped)for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].next(t)},e.prototype.error=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].error(t);this.observers.length=0},e.prototype.complete=function(){if(this.closed)throw new c.ObjectUnsubscribedError;this.isStopped=!0;for(var t=this.observers,e=t.length,r=t.slice(),n=0;n<e;n++)r[n].complete();this.observers.length=0},e.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},e.prototype._trySubscribe=function(e){if(this.closed)throw new c.ObjectUnsubscribedError;return t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;return this.hasError?(t.error(this.thrownError),o.Subscription.EMPTY):this.isStopped?(t.complete(),o.Subscription.EMPTY):(this.observers.push(t),new u.SubjectSubscription(this,t))},e.prototype.asObservable=function(){var t=new i.Observable;return t.source=this,t},e.create=function(t,e){return new b(t,e)},e}(i.Observable);e.Subject=a;var b=function(t){function e(e,r){t.call(this),this.destination=e,this.source=r}return n(e,t),e.prototype.next=function(t){var e=this.destination;e&&e.next&&e.next(t)},e.prototype.error=function(t){var e=this.destination;e&&e.error&&this.destination.error(t)},e.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},e.prototype._subscribe=function(t){var e=this.source;return e?this.source.subscribe(t):o.Subscription.EMPTY},e}(a);e.AnonymousSubject=b},function(t,e,r){\"use strict\";function n(t,e){return void 0===e&&(e=0),this.lift(new c(t,e))}var i=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},s=r(3),o=r(11);e.observeOn=n;var c=function(){function t(t,e){void 0===e&&(e=0),this.scheduler=t,this.delay=e}return t.prototype.call=function(t,e){return e.subscribe(new u(t,this.scheduler,this.delay))},t}();e.ObserveOnOperator=c;var u=function(t){function e(e,r,n){void 0===n&&(n=0),t.call(this,e),this.scheduler=r,this.delay=n}return i(e,t),e.dispatch=function(t){var e=t.notification,r=t.destination;e.observe(r),this.unsubscribe()},e.prototype.scheduleMessage=function(t){this.add(this.scheduler.schedule(e.dispatch,this.delay,new h(t,this.destination)))},e.prototype._next=function(t){this.scheduleMessage(o.Notification.createNext(t))},e.prototype._error=function(t){this.scheduleMessage(o.Notification.createError(t))},e.prototype._complete=function(){this.scheduleMessage(o.Notification.createComplete())},e}(s.Subscriber);e.ObserveOnSubscriber=u;var h=function(){function t(t,e){this.notification=t,this.destination=e}return t}();e.ObserveOnMessage=h},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this)}return n(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(i.Subscription);e.Action=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(2),s=r(16),o=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r,this.pending=!1}return n(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t,this.pending=!0;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,e)),this.delay=e,this.id=this.id||this.requestAsyncId(n,this.id,e),this},e.prototype.requestAsyncId=function(t,e,r){return void 0===r&&(r=0),i.root.setInterval(t.flush.bind(t,this),r)},e.prototype.recycleAsyncId=function(t,e,r){return void 0===r&&(r=0),null!==r&&this.delay===r&&this.pending===!1?e:i.root.clearInterval(e)&&void 0||void 0},e.prototype.execute=function(t,e){if(this.closed)return new Error(\"executing a cancelled action\");this.pending=!1;var r=this._execute(t,e);return r?r:void(this.pending===!1&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null)))},e.prototype._execute=function(t,e){var r=!1,n=void 0;try{this.work(t)}catch(t){r=!0,n=!!t&&t||new Error(t)}if(r)return this.unsubscribe(),n},e.prototype._unsubscribe=function(){var t=this.id,e=this.scheduler,r=e.actions,n=r.indexOf(this);this.work=null,this.delay=null,this.state=null,this.pending=!1,this.scheduler=null,n!==-1&&r.splice(n,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null))},e}(s.Action);e.AsyncAction=o},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(13),s=function(t){function e(){t.apply(this,arguments),this.actions=[],this.active=!1,this.scheduled=void 0}return n(e,t),e.prototype.flush=function(t){var e=this.actions;if(this.active)return void e.push(t);var r;this.active=!0;do if(r=t.execute(t.state,t.delay))break;while(t=e.shift());if(this.active=!1,r){for(;t=e.shift();)t.unsubscribe();throw r}},e}(i.Scheduler);e.AsyncScheduler=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(17),s=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r}return n(e,t),e.prototype.schedule=function(e,r){return void 0===r&&(r=0),r>0?t.prototype.schedule.call(this,e,r):(this.delay=r,this.state=e,this.scheduler.flush(this),this)},e.prototype.execute=function(e,r){return r>0||this.closed?t.prototype.execute.call(this,e,r):this._execute(e,r)},e.prototype.requestAsyncId=function(e,r,n){return void 0===n&&(n=0),null!==n&&n>0||null===n&&this.delay>0?t.prototype.requestAsyncId.call(this,e,r,n):e.flush(this)},e}(i.AsyncAction);e.QueueAction=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(18),s=function(t){function e(){t.apply(this,arguments)}return n(e,t),e}(i.AsyncScheduler);e.QueueScheduler=s},function(t,e,r){\"use strict\";var n=r(19),i=r(20);e.queue=new i.QueueScheduler(n.QueueAction)},function(t,e,r){\"use strict\";function n(t){var e,r=t.Symbol;return\"function\"==typeof r?r.observable?e=r.observable:(e=r(\"observable\"),r.observable=e):e=\"@@observable\",e}var i=r(2);e.getSymbolObservable=n,e.observable=n(i.root),e.$$observable=e.observable},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(e){t.call(this),this.errors=e;var r=Error.call(this,e?e.length+\" errors occurred during unsubscription:\\n  \"+e.map(function(t,e){return e+1+\") \"+t.toString()}).join(\"\\n  \"):\"\");this.name=r.name=\"UnsubscriptionError\",this.stack=r.stack,this.message=r.message}return r(e,t),e}(Error);e.UnsubscriptionError=n},function(t,e){\"use strict\";e.isArray=Array.isArray||function(t){return t&&\"number\"==typeof t.length}},function(t,e){\"use strict\";function r(t){return null!=t&&\"object\"==typeof t}e.isObject=r},function(t,e,r){\"use strict\";function n(t,e,r){if(t){if(t instanceof i.Subscriber)return t;if(t[s.rxSubscriber])return t[s.rxSubscriber]()}return t||e||r?new i.Subscriber(t,e,r):new i.Subscriber(o.empty)}var i=r(3),s=r(4),o=r(6);e.toSubscriber=n},function(t,e,r){\"use strict\";function n(){try{return s.apply(this,arguments)}catch(t){return o.errorObject.e=t,o.errorObject}}function i(t){return s=t,n}var s,o=r(9);e.tryCatch=i}])});\n//# sourceMappingURL=rx-pubsub.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rx-pubsub/dist/rx-pubsub.min.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 5\n// module chunks = 0","/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n    /**\n     * This class should not be used directly by an application developer. Instead, use\n     * {\\@link Location}.\n     *\n     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n     * agnostic.\n     * This means that we can have different implementation of `PlatformLocation` for the different\n     * platforms\n     * that angular supports. For example, the default `PlatformLocation` is {\\@link\n     * BrowserPlatformLocation},\n     * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n     *\n     * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n     * when\n     * they need to interact with the DOM apis like pushState, popState, etc...\n     *\n     * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n     * by\n     * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n     * Router} /\n     * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n     * class\n     * they are all platform independent.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var PlatformLocation = (function () {\n        function PlatformLocation() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.getBaseHrefFromDOM = function () { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        PlatformLocation.prototype.onPopState = function (fn) { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        PlatformLocation.prototype.onHashChange = function (fn) { };\n        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        PlatformLocation.prototype.replaceState = function (state, title, url) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        PlatformLocation.prototype.pushState = function (state, title, url) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.forward = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.back = function () { };\n        return PlatformLocation;\n    }());\n    /**\n     * @whatItDoes indicates when a location is initialized\n     * @experimental\n     */\n    var /** @type {?} */ LOCATION_INITIALIZED = new _angular_core.OpaqueToken('Location Initialized');\n\n    /**\n     * `LocationStrategy` is responsible for representing and reading route state\n     * from the browser's URL. Angular provides two strategies:\n     * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n     *\n     * This is used under the hood of the {\\@link Location} service.\n     *\n     * Applications should use the {\\@link Router} or {\\@link Location} services to\n     * interact with application route state.\n     *\n     * For instance, {\\@link HashLocationStrategy} produces URLs like\n     * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n     * `http://example.com/foo` as an equivalent URL.\n     *\n     * See these two classes for more.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var LocationStrategy = (function () {\n        function LocationStrategy() {\n        }\n        /**\n         * @abstract\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        LocationStrategy.prototype.path = function (includeHash) { };\n        /**\n         * @abstract\n         * @param {?} internal\n         * @return {?}\n         */\n        LocationStrategy.prototype.prepareExternalUrl = function (internal) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        LocationStrategy.prototype.pushState = function (state, title, url, queryParams) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        LocationStrategy.prototype.replaceState = function (state, title, url, queryParams) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.forward = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.back = function () { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        LocationStrategy.prototype.onPopState = function (fn) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.getBaseHref = function () { };\n        return LocationStrategy;\n    }());\n    /**\n     * The `APP_BASE_HREF` token represents the base href to be used with the\n     * {@link PathLocationStrategy}.\n     *\n     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n     * representing the URL prefix that should be preserved when generating and recognizing\n     * URLs.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {Component, NgModule} from '@angular/core';\n     * import {APP_BASE_HREF} from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var /** @type {?} */ APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = (self);\n        }\n        else {\n            globalScope = (global);\n        }\n    }\n    else {\n        globalScope = (window);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var /** @type {?} */ _global = globalScope;\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var /** @type {?} */ res = token.toString();\n        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var /** @type {?} */ result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        return NumberWrapper;\n    }());\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    var /** @type {?} */ _symbolIterator = null;\n    /**\n     * @return {?}\n     */\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (((globalScope)).Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                    var /** @type {?} */ key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        ((Map)).prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n     * \\@description\n     * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n     * to the URL's path or the URL's hash segment.\n     *\n     * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n     * `Location` only if you need to interact with or create normalized URLs outside of\n     * routing.\n     *\n     * `Location` is responsible for normalizing the URL against the application's base href.\n     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n     * trailing slash:\n     * - `/my/app/user/123` is normalized\n     * - `my/app/user/123` **is not** normalized\n     * - `/my/app/user/123/` **is not** normalized\n     *\n     * ### Example\n     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n     * \\@stable\n     */\n    var Location = (function () {\n        /**\n         * @param {?} platformStrategy\n         */\n        function Location(platformStrategy) {\n            var _this = this;\n            /** @internal */\n            this._subject = new _angular_core.EventEmitter();\n            this._platformStrategy = platformStrategy;\n            var browserBaseHref = this._platformStrategy.getBaseHref();\n            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n            this._platformStrategy.onPopState(function (ev) {\n                _this._subject.emit({\n                    'url': _this.path(true),\n                    'pop': true,\n                    'type': ev.type,\n                });\n            });\n        }\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        Location.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            return this.normalize(this._platformStrategy.path(includeHash));\n        };\n        /**\n         * Normalizes the given path and compares to the current normalized path.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n            if (query === void 0) { query = ''; }\n            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n        };\n        /**\n         * Given a string representing a URL, returns the normalized URL path without leading or\n         * trailing slashes.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.prototype.normalize = function (url) {\n            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n        };\n        /**\n         * Given a string representing a URL, returns the platform-specific external URL path.\n         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.prototype.prepareExternalUrl = function (url) {\n            if (url && url[0] !== '/') {\n                url = '/' + url;\n            }\n            return this._platformStrategy.prepareExternalUrl(url);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n         * new item onto the platform's history.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.go = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.pushState(null, '', path, query);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and replaces\n         * the top item on the platform's history stack.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.replaceState = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.replaceState(null, '', path, query);\n        };\n        /**\n         * Navigates forward in the platform's history.\n         * @return {?}\n         */\n        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n        /**\n         * Navigates back in the platform's history.\n         * @return {?}\n         */\n        Location.prototype.back = function () { this._platformStrategy.back(); };\n        /**\n         * Subscribe to the platform's `popState` events.\n         * @param {?} onNext\n         * @param {?=} onThrow\n         * @param {?=} onReturn\n         * @return {?}\n         */\n        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n            if (onThrow === void 0) { onThrow = null; }\n            if (onReturn === void 0) { onReturn = null; }\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n        };\n        /**\n         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n         * is.\n         * @param {?} params\n         * @return {?}\n         */\n        Location.normalizeQueryParams = function (params) {\n            return params && params[0] !== '?' ? '?' + params : params;\n        };\n        /**\n         * Given 2 parts of a url, join them with a slash if needed.\n         * @param {?} start\n         * @param {?} end\n         * @return {?}\n         */\n        Location.joinWithSlash = function (start, end) {\n            if (start.length == 0) {\n                return end;\n            }\n            if (end.length == 0) {\n                return start;\n            }\n            var /** @type {?} */ slashes = 0;\n            if (start.endsWith('/')) {\n                slashes++;\n            }\n            if (end.startsWith('/')) {\n                slashes++;\n            }\n            if (slashes == 2) {\n                return start + end.substring(1);\n            }\n            if (slashes == 1) {\n                return start + end;\n            }\n            return start + '/' + end;\n        };\n        /**\n         * If url has a trailing slash, remove it, otherwise return url as is.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.stripTrailingSlash = function (url) { return url.replace(/\\/$/, ''); };\n        Location.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Location.ctorParameters = function () { return [\n            { type: LocationStrategy, },\n        ]; };\n        return Location;\n    }());\n    /**\n     * @param {?} baseHref\n     * @param {?} url\n     * @return {?}\n     */\n    function _stripBaseHref(baseHref, url) {\n        return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function _stripIndexHtml(url) {\n        return url.replace(/\\/index.html$/, '');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@whatItDoes Use URL hash for storing application location data.\n     * \\@description\n     * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n     * {\\@link Location} service to represent its state in the\n     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n     * of the browser's URL.\n     *\n     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n     * `example.com#/foo`.\n     *\n     * ### Example\n     *\n     * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n     *\n     * \\@stable\n     */\n    var HashLocationStrategy = (function (_super) {\n        __extends(HashLocationStrategy, _super);\n        /**\n         * @param {?} _platformLocation\n         * @param {?=} _baseHref\n         */\n        function HashLocationStrategy(_platformLocation, _baseHref) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            this._baseHref = '';\n            if (isPresent(_baseHref)) {\n                this._baseHref = _baseHref;\n            }\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            // the hash value is always prefixed with a `#`\n            // and if it is empty then it will stay empty\n            var /** @type {?} */ path = this._platformLocation.hash;\n            if (!isPresent(path))\n                path = '#';\n            return path.length > 0 ? path.substring(1) : path;\n        };\n        /**\n         * @param {?} internal\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            var /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n            return url.length > 0 ? ('#' + url) : url;\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} path\n         * @param {?} queryParams\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.pushState(state, title, url);\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} path\n         * @param {?} queryParams\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.replaceState(state, title, url);\n        };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        HashLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HashLocationStrategy.ctorParameters = function () { return [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ]; };\n        return HashLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@whatItDoes Use URL for storing application location data.\n     * \\@description\n     * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n     * {\\@link Location} service to represent its state in the\n     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n     * browser's URL.\n     *\n     * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n     * or add a base element to the document. This URL prefix that will be preserved\n     * when generating and recognizing URLs.\n     *\n     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * ### Example\n     *\n     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n     *\n     * \\@stable\n     */\n    var PathLocationStrategy = (function (_super) {\n        __extends$1(PathLocationStrategy, _super);\n        /**\n         * @param {?} _platformLocation\n         * @param {?=} href\n         */\n        function PathLocationStrategy(_platformLocation, href) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            if (isBlank(href)) {\n                href = this._platformLocation.getBaseHrefFromDOM();\n            }\n            if (isBlank(href)) {\n                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n            }\n            this._baseHref = href;\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        /**\n         * @param {?} internal\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            return Location.joinWithSlash(this._baseHref, internal);\n        };\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            var /** @type {?} */ pathname = this._platformLocation.pathname +\n                Location.normalizeQueryParams(this._platformLocation.search);\n            var /** @type {?} */ hash = this._platformLocation.hash;\n            return hash && includeHash ? \"\" + pathname + hash : pathname;\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.pushState(state, title, externalUrl);\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.replaceState(state, title, externalUrl);\n        };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        PathLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        PathLocationStrategy.ctorParameters = function () { return [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ]; };\n        return PathLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@experimental\n     * @abstract\n     */\n    var NgLocalization = (function () {\n        function NgLocalization() {\n        }\n        /**\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        NgLocalization.prototype.getPluralCategory = function (value) { };\n        return NgLocalization;\n    }());\n    /**\n     * Returns the plural category for a given value.\n     * - \"=value\" when the case exists,\n     * - the plural category otherwise\n     *\n     * \\@internal\n     * @param {?} value\n     * @param {?} cases\n     * @param {?} ngLocalization\n     * @return {?}\n     */\n    function getPluralCategory(value, cases, ngLocalization) {\n        var /** @type {?} */ key = \"=\" + value;\n        if (cases.indexOf(key) > -1) {\n            return key;\n        }\n        key = ngLocalization.getPluralCategory(value);\n        if (cases.indexOf(key) > -1) {\n            return key;\n        }\n        if (cases.indexOf('other') > -1) {\n            return 'other';\n        }\n        throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n    }\n    /**\n     * Returns the plural case based on the locale\n     *\n     * \\@experimental\n     */\n    var NgLocaleLocalization = (function (_super) {\n        __extends$2(NgLocaleLocalization, _super);\n        /**\n         * @param {?} _locale\n         */\n        function NgLocaleLocalization(_locale) {\n            _super.call(this);\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n            var /** @type {?} */ plural = getPluralCase(this._locale, value);\n            switch (plural) {\n                case Plural.Zero:\n                    return 'zero';\n                case Plural.One:\n                    return 'one';\n                case Plural.Two:\n                    return 'two';\n                case Plural.Few:\n                    return 'few';\n                case Plural.Many:\n                    return 'many';\n                default:\n                    return 'other';\n            }\n        };\n        NgLocaleLocalization.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        NgLocaleLocalization.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return NgLocaleLocalization;\n    }(NgLocalization));\n    var Plural = {};\n    Plural.Zero = 0;\n    Plural.One = 1;\n    Plural.Two = 2;\n    Plural.Few = 3;\n    Plural.Many = 4;\n    Plural.Other = 5;\n    Plural[Plural.Zero] = \"Zero\";\n    Plural[Plural.One] = \"One\";\n    Plural[Plural.Two] = \"Two\";\n    Plural[Plural.Few] = \"Few\";\n    Plural[Plural.Many] = \"Many\";\n    Plural[Plural.Other] = \"Other\";\n    /**\n     * Returns the plural case based on the locale\n     *\n     * \\@experimental\n     * @param {?} locale\n     * @param {?} nLike\n     * @return {?}\n     */\n    function getPluralCase(locale, nLike) {\n        // TODO(vicb): lazy compute\n        if (typeof nLike === 'string') {\n            nLike = parseInt(/** @type {?} */ (nLike), 10);\n        }\n        var /** @type {?} */ n = (nLike);\n        var /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var /** @type {?} */ i = Math.floor(Math.abs(n));\n        var /** @type {?} */ v = nDecimal.length;\n        var /** @type {?} */ f = parseInt(nDecimal, 10);\n        var /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'agq':\n            case 'bas':\n            case 'cu':\n            case 'dav':\n            case 'dje':\n            case 'dua':\n            case 'dyo':\n            case 'ebu':\n            case 'ewo':\n            case 'guz':\n            case 'kam':\n            case 'khq':\n            case 'ki':\n            case 'kln':\n            case 'kok':\n            case 'ksf':\n            case 'lrc':\n            case 'lu':\n            case 'luo':\n            case 'luy':\n            case 'mer':\n            case 'mfe':\n            case 'mgh':\n            case 'mua':\n            case 'mzn':\n            case 'nmg':\n            case 'nus':\n            case 'qu':\n            case 'rn':\n            case 'rw':\n            case 'sbp':\n            case 'twq':\n            case 'vai':\n            case 'yav':\n            case 'yue':\n            case 'zgh':\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            default:\n                return Plural.Other;\n        }\n    }\n\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n     *\n     * \\@howToUse\n     * ```\n     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n     * - `string` - the CSS classes listed in the string (space delimited) are added,\n     * - `Array` - the CSS classes declared as Array elements are added,\n     * - `Object` - keys are CSS classes that get added when the expression given in the value\n     *              evaluates to a truthy value, otherwise they are removed.\n     *\n     * \\@stable\n     */\n    var NgClass = (function () {\n        /**\n         * @param {?} _iterableDiffers\n         * @param {?} _keyValueDiffers\n         * @param {?} _ngEl\n         * @param {?} _renderer\n         */\n        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n            this._iterableDiffers = _iterableDiffers;\n            this._keyValueDiffers = _keyValueDiffers;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n            this._initialClasses = [];\n        }\n        Object.defineProperty(NgClass.prototype, \"klass\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._applyInitialClasses(true);\n                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n                this._applyInitialClasses(false);\n                this._applyClasses(this._rawClass, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._cleanupClasses(this._rawClass);\n                this._iterableDiffer = null;\n                this._keyValueDiffer = null;\n                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n                if (this._rawClass) {\n                    if (isListLikeIterable(this._rawClass)) {\n                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n                    }\n                    else {\n                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgClass.prototype.ngDoCheck = function () {\n            if (this._iterableDiffer) {\n                var /** @type {?} */ changes = this._iterableDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyIterableChanges(changes);\n                }\n            }\n            else if (this._keyValueDiffer) {\n                var /** @type {?} */ changes = this._keyValueDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyKeyValueChanges(changes);\n                }\n            }\n        };\n        /**\n         * @param {?} rawClassVal\n         * @return {?}\n         */\n        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n            this._applyClasses(rawClassVal, true);\n            this._applyInitialClasses(false);\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgClass.prototype._applyKeyValueChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachRemovedItem(function (record) {\n                if (record.previousValue) {\n                    _this._toggleClass(record.key, false);\n                }\n            });\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgClass.prototype._applyIterableChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) {\n                if (typeof record.item === 'string') {\n                    _this._toggleClass(record.item, true);\n                }\n                else {\n                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n                }\n            });\n            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n        };\n        /**\n         * @param {?} isCleanup\n         * @return {?}\n         */\n        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n            var _this = this;\n            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n        };\n        /**\n         * @param {?} rawClassVal\n         * @param {?} isCleanup\n         * @return {?}\n         */\n        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n            var _this = this;\n            if (rawClassVal) {\n                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                    ((rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n                }\n                else {\n                    Object.keys(rawClassVal).forEach(function (klass) {\n                        if (rawClassVal[klass] != null)\n                            _this._toggleClass(klass, !isCleanup);\n                    });\n                }\n            }\n        };\n        /**\n         * @param {?} klass\n         * @param {?} enabled\n         * @return {?}\n         */\n        NgClass.prototype._toggleClass = function (klass, enabled) {\n            var _this = this;\n            klass = klass.trim();\n            if (klass) {\n                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n            }\n        };\n        NgClass.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n        ];\n        /** @nocollapse */\n        NgClass.ctorParameters = function () { return [\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ]; };\n        NgClass.propDecorators = {\n            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n            'ngClass': [{ type: _angular_core.Input },],\n        };\n        return NgClass;\n    }());\n\n    var NgForRow = (function () {\n        /**\n         * @param {?} $implicit\n         * @param {?} index\n         * @param {?} count\n         */\n        function NgForRow($implicit, index, count) {\n            this.$implicit = $implicit;\n            this.index = index;\n            this.count = count;\n        }\n        Object.defineProperty(NgForRow.prototype, \"first\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"last\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index === this.count - 1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"even\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index % 2 === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"odd\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return !this.even; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgForRow;\n    }());\n    /**\n     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n     * each instantiated template inherits from the outer context with the given loop variable set\n     * to the current item from the iterable.\n     *\n     * ### Local Variables\n     *\n     * `NgFor` provides several exported values that can be aliased to local variables:\n     *\n     * * `index` will be set to the current loop iteration for each template context.\n     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n     *   iteration.\n     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n     *   iteration.\n     * * `even` will be set to a boolean value indicating whether this item has an even index.\n     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n     *\n     * ### Change Propagation\n     *\n     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n     *\n     * * When an item is added, a new instance of the template is added to the DOM.\n     * * When an item is removed, its template instance is removed from the DOM.\n     * * When items are reordered, their respective templates are reordered in the DOM.\n     * * Otherwise, the DOM element for that item will remain the same.\n     *\n     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n     * those changes in the DOM. This has important implications for animations and any stateful\n     * controls\n     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n     * as user input.\n     *\n     * It is possible for the identities of elements in the iterator to change while the data does not.\n     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n     * elements were deleted and all new elements inserted). This is an expensive operation and should\n     * be avoided if possible.\n     *\n     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n     * `trackBy` takes a function which has two arguments: `index` and `item`.\n     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n     *\n     * ### Syntax\n     *\n     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     *\n     * With `<template>` element:\n     *\n     * ```\n     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n     *   <li>...</li>\n     * </template>\n     * ```\n     *\n     * ### Example\n     *\n     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n     * example.\n     *\n     * \\@stable\n     */\n    var NgFor = (function () {\n        /**\n         * @param {?} _viewContainer\n         * @param {?} _template\n         * @param {?} _differs\n         * @param {?} _cdr\n         */\n        function NgFor(_viewContainer, _template, _differs, _cdr) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._differs = _differs;\n            this._cdr = _cdr;\n            this._differ = null;\n        }\n        Object.defineProperty(NgFor.prototype, \"ngForTrackBy\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._trackByFn; },\n            /**\n             * @param {?} fn\n             * @return {?}\n             */\n            set: function (fn) {\n                if (_angular_core.isDevMode() && fn != null && typeof fn !== 'function') {\n                    // TODO(vicb): use a log service once there is a public one available\n                    if ((console) && (console.warn)) {\n                        console.warn((\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \") +\n                            \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                    }\n                }\n                this._trackByFn = fn;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (value) {\n                    this._template = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgFor.prototype.ngOnChanges = function (changes) {\n            if ('ngForOf' in changes) {\n                // React on ngForOf changes only once all inputs have been initialized\n                var /** @type {?} */ value = changes['ngForOf'].currentValue;\n                if (!this._differ && value) {\n                    try {\n                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n                    }\n                    catch (e) {\n                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                    }\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgFor.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n                if (changes)\n                    this._applyChanges(changes);\n            }\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgFor.prototype._applyChanges = function (changes) {\n            var _this = this;\n            var /** @type {?} */ insertTuples = [];\n            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n                if (item.previousIndex == null) {\n                    var /** @type {?} */ view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n                    var /** @type {?} */ tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n                else if (currentIndex == null) {\n                    _this._viewContainer.remove(adjustedPreviousIndex);\n                }\n                else {\n                    var /** @type {?} */ view = _this._viewContainer.get(adjustedPreviousIndex);\n                    _this._viewContainer.move(view, currentIndex);\n                    var /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n                    insertTuples.push(tuple);\n                }\n            });\n            for (var /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n            }\n            for (var /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n                var /** @type {?} */ viewRef = (this._viewContainer.get(i));\n                viewRef.context.index = i;\n                viewRef.context.count = ilen;\n            }\n            changes.forEachIdentityChange(function (record) {\n                var /** @type {?} */ viewRef = (_this._viewContainer.get(record.currentIndex));\n                viewRef.context.$implicit = record.item;\n            });\n        };\n        /**\n         * @param {?} view\n         * @param {?} record\n         * @return {?}\n         */\n        NgFor.prototype._perViewChange = function (view, record) {\n            view.context.$implicit = record.item;\n        };\n        NgFor.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n        ];\n        /** @nocollapse */\n        NgFor.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.ChangeDetectorRef, },\n        ]; };\n        NgFor.propDecorators = {\n            'ngForOf': [{ type: _angular_core.Input },],\n            'ngForTrackBy': [{ type: _angular_core.Input },],\n            'ngForTemplate': [{ type: _angular_core.Input },],\n        };\n        return NgFor;\n    }());\n    var RecordViewTuple = (function () {\n        /**\n         * @param {?} record\n         * @param {?} view\n         */\n        function RecordViewTuple(record, view) {\n            this.record = record;\n            this.view = view;\n        }\n        return RecordViewTuple;\n    }());\n\n    /**\n     * Removes or recreates a portion of the DOM tree based on an {expression}.\n     *\n     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n     *\n     * ```\n     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n     *   <!-- Error message displayed when the errorCount property in the current context is greater\n     * than 0. -->\n     *   {{errorCount}} errors detected\n     * </div>\n     * ```\n     *\n     * ### Syntax\n     *\n     * - `<div *ngIf=\"condition\">...</div>`\n     * - `<div template=\"ngIf condition\">...</div>`\n     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n     *\n     * \\@stable\n     */\n    var NgIf = (function () {\n        /**\n         * @param {?} _viewContainer\n         * @param {?} _template\n         */\n        function NgIf(_viewContainer, _template) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._hasView = false;\n        }\n        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n            /**\n             * @param {?} condition\n             * @return {?}\n             */\n            set: function (condition) {\n                if (condition && !this._hasView) {\n                    this._hasView = true;\n                    this._viewContainer.createEmbeddedView(this._template);\n                }\n                else if (!condition && this._hasView) {\n                    this._hasView = false;\n                    this._viewContainer.clear();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgIf.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n        ];\n        /** @nocollapse */\n        NgIf.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n        ]; };\n        NgIf.propDecorators = {\n            'ngIf': [{ type: _angular_core.Input },],\n        };\n        return NgIf;\n    }());\n\n    var SwitchView = (function () {\n        /**\n         * @param {?} _viewContainerRef\n         * @param {?} _templateRef\n         */\n        function SwitchView(_viewContainerRef, _templateRef) {\n            this._viewContainerRef = _viewContainerRef;\n            this._templateRef = _templateRef;\n            this._created = false;\n        }\n        /**\n         * @return {?}\n         */\n        SwitchView.prototype.create = function () {\n            this._created = true;\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\n        };\n        /**\n         * @return {?}\n         */\n        SwitchView.prototype.destroy = function () {\n            this._created = false;\n            this._viewContainerRef.clear();\n        };\n        /**\n         * @param {?} created\n         * @return {?}\n         */\n        SwitchView.prototype.enforceState = function (created) {\n            if (created && !this._created) {\n                this.create();\n            }\n            else if (!created && this._created) {\n                this.destroy();\n            }\n        };\n        return SwitchView;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n     *             expression.\n     *\n     * \\@howToUse\n     * ```\n     *     <container-element [ngSwitch]=\"switch_expression\">\n     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n     *         <!-- use a ng-container to group multiple root nodes -->\n     *         <inner-element></inner-element>\n     *         <inner-other-element></inner-other-element>\n     *       </ng-container>\n     *       <some-element *ngSwitchDefault>...</some-element>\n     *     </container-element>\n     * ```\n     * \\@description\n     *\n     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n     * switch expression.\n     *\n     * In other words:\n     * - you define a container element (where you place the directive with a switch expression on the\n     * `[ngSwitch]=\"...\"` attribute)\n     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n     * root elements.\n     *\n     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n     * be preserved at the location.\n     *\n     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n     * expression is evaluated.\n     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n     * stamped out.\n     *\n     * \\@stable\n     */\n    var NgSwitch = (function () {\n        function NgSwitch() {\n            this._defaultUsed = false;\n            this._caseCount = 0;\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n            /**\n             * @param {?} newValue\n             * @return {?}\n             */\n            set: function (newValue) {\n                this._ngSwitch = newValue;\n                if (this._caseCount === 0) {\n                    this._updateDefaultCases(true);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n        /**\n         * \\@internal\n         * @param {?} view\n         * @return {?}\n         */\n        NgSwitch.prototype._addDefault = function (view) {\n            if (!this._defaultViews) {\n                this._defaultViews = [];\n            }\n            this._defaultViews.push(view);\n        };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        NgSwitch.prototype._matchCase = function (value) {\n            var /** @type {?} */ matched = value == this._ngSwitch;\n            this._lastCasesMatched = this._lastCasesMatched || matched;\n            this._lastCaseCheckIndex++;\n            if (this._lastCaseCheckIndex === this._caseCount) {\n                this._updateDefaultCases(!this._lastCasesMatched);\n                this._lastCaseCheckIndex = 0;\n                this._lastCasesMatched = false;\n            }\n            return matched;\n        };\n        /**\n         * @param {?} useDefault\n         * @return {?}\n         */\n        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n            if (this._defaultViews && useDefault !== this._defaultUsed) {\n                this._defaultUsed = useDefault;\n                for (var /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n                    var /** @type {?} */ defaultView = this._defaultViews[i];\n                    defaultView.enforceState(useDefault);\n                }\n            }\n        };\n        NgSwitch.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitch.ctorParameters = function () { return []; };\n        NgSwitch.propDecorators = {\n            'ngSwitch': [{ type: _angular_core.Input },],\n        };\n        return NgSwitch;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n     *             given expression evaluate to respectively the same/different value as the switch\n     *             expression.\n     *\n     * \\@howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     * </container-element>\n     * ```\n     * \\@description\n     *\n     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n     * expression.\n     *\n     * If multiple match expressions match the switch expression value, all of them are displayed.\n     *\n     * See {\\@link NgSwitch} for more details and example.\n     *\n     * \\@stable\n     */\n    var NgSwitchCase = (function () {\n        /**\n         * @param {?} viewContainer\n         * @param {?} templateRef\n         * @param {?} ngSwitch\n         */\n        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n            this.ngSwitch = ngSwitch;\n            ngSwitch._addCase();\n            this._view = new SwitchView(viewContainer, templateRef);\n        }\n        /**\n         * @return {?}\n         */\n        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n        NgSwitchCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchCase.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        NgSwitchCase.propDecorators = {\n            'ngSwitchCase': [{ type: _angular_core.Input },],\n        };\n        return NgSwitchCase;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n     * match the\n     *             switch expression.\n     *\n     * \\@howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n     * </container-element>\n     * ```\n     *\n     * \\@description\n     *\n     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n     * expression.\n     *\n     * See {\\@link NgSwitch} for more details and example.\n     *\n     * \\@stable\n     */\n    var NgSwitchDefault = (function () {\n        /**\n         * @param {?} viewContainer\n         * @param {?} templateRef\n         * @param {?} ngSwitch\n         */\n        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n        }\n        NgSwitchDefault.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchDefault.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        return NgSwitchDefault;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <template ngPluralCase=\"=0\">there is nothing</template>\n     *   <template ngPluralCase=\"=1\">there is one</template>\n     *   <template ngPluralCase=\"few\">there are a few</template>\n     * </some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n     * that match the switch expression's pluralization category.\n     *\n     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n     * expression:\n     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n     *   matches the switch expression exactly,\n     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n     *   value matches aren't found and the value maps to its category for the defined locale.\n     *\n     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n     *\n     * \\@experimental\n     */\n    var NgPlural = (function () {\n        /**\n         * @param {?} _localization\n         */\n        function NgPlural(_localization) {\n            this._localization = _localization;\n            this._caseViews = {};\n        }\n        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._switchValue = value;\n                this._updateView();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} value\n         * @param {?} switchView\n         * @return {?}\n         */\n        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n        /**\n         * @return {?}\n         */\n        NgPlural.prototype._updateView = function () {\n            this._clearViews();\n            var /** @type {?} */ cases = Object.keys(this._caseViews);\n            var /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n            this._activateView(this._caseViews[key]);\n        };\n        /**\n         * @return {?}\n         */\n        NgPlural.prototype._clearViews = function () {\n            if (this._activeView)\n                this._activeView.destroy();\n        };\n        /**\n         * @param {?} view\n         * @return {?}\n         */\n        NgPlural.prototype._activateView = function (view) {\n            if (view) {\n                this._activeView = view;\n                this._activeView.create();\n            }\n        };\n        NgPlural.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n        ];\n        /** @nocollapse */\n        NgPlural.ctorParameters = function () { return [\n            { type: NgLocalization, },\n        ]; };\n        NgPlural.propDecorators = {\n            'ngPlural': [{ type: _angular_core.Input },],\n        };\n        return NgPlural;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n     *             given expression matches the plural expression according to CLDR rules.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <template ngPluralCase=\"=0\">...</template>\n     *   <template ngPluralCase=\"other\">...</template>\n     * </some-element>\n     * ```\n     *\n     * See {\\@link NgPlural} for more details and example.\n     *\n     * \\@experimental\n     */\n    var NgPluralCase = (function () {\n        /**\n         * @param {?} value\n         * @param {?} template\n         * @param {?} viewContainer\n         * @param {?} ngPlural\n         */\n        function NgPluralCase(value, template, viewContainer, ngPlural) {\n            this.value = value;\n            var isANumber = !isNaN(Number(value));\n            ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n        }\n        NgPluralCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n        ];\n        /** @nocollapse */\n        NgPluralCase.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.ViewContainerRef, },\n            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        return NgPluralCase;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Update an HTML element styles.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"objExp\">...</some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * The styles are updated according to the value of the expression evaluation:\n     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n     * - values are the values assigned to those properties (expressed in the given unit).\n     *\n     * \\@stable\n     */\n    var NgStyle = (function () {\n        /**\n         * @param {?} _differs\n         * @param {?} _ngEl\n         * @param {?} _renderer\n         */\n        function NgStyle(_differs, _ngEl, _renderer) {\n            this._differs = _differs;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n        }\n        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._ngStyle = v;\n                if (!this._differ && v) {\n                    this._differ = this._differs.find(v).create(null);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgStyle.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n                if (changes) {\n                    this._applyChanges(changes);\n                }\n            }\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgStyle.prototype._applyChanges = function (changes) {\n            var _this = this;\n            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        };\n        /**\n         * @param {?} nameAndUnit\n         * @param {?} value\n         * @return {?}\n         */\n        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n            value = value && unit ? \"\" + value + unit : value;\n            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n        };\n        NgStyle.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n        ];\n        /** @nocollapse */\n        NgStyle.ctorParameters = function () { return [\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ]; };\n        NgStyle.propDecorators = {\n            'ngStyle': [{ type: _angular_core.Input },],\n        };\n        return NgStyle;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n     *\n     * \\@howToUse\n     * ```\n     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n     *           [ngOutletContext]=\"objectExpression\">\n     * </template>\n     * ```\n     *\n     * \\@description\n     *\n     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n     * available within the `TemplateRef`.\n     *\n     * Note: using the key `$implicit` in the context object will set it's value as default.\n     *\n     * \\@experimental\n     */\n    var NgTemplateOutlet = (function () {\n        /**\n         * @param {?} _viewContainerRef\n         */\n        function NgTemplateOutlet(_viewContainerRef) {\n            this._viewContainerRef = _viewContainerRef;\n        }\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n            /**\n             * @param {?} context\n             * @return {?}\n             */\n            set: function (context) { this._context = context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n            /**\n             * @param {?} templateRef\n             * @return {?}\n             */\n            set: function (templateRef) { this._templateRef = templateRef; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this._templateRef) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n            }\n        };\n        NgTemplateOutlet.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n        ];\n        /** @nocollapse */\n        NgTemplateOutlet.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n        ]; };\n        NgTemplateOutlet.propDecorators = {\n            'ngOutletContext': [{ type: _angular_core.Input },],\n            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n        };\n        return NgTemplateOutlet;\n    }());\n\n    /**\n     * A collection of Angular directives that are likely to be used in each and every Angular\n     * application.\n     */\n    var /** @type {?} */ COMMON_DIRECTIVES = [\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n    ];\n\n    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n    var /** @type {?} */ isObservable = _angular_core.__core_private__.isObservable;\n\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var BaseError = (function (_super) {\n        __extends$4(BaseError, _super);\n        /**\n         * @param {?} message\n         */\n        function BaseError(message) {\n            _super.call(this, message);\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            // TODO(bradfordcsmith): Remove this hack when\n            //     google/closure-compiler/issues/2102 is fixed.\n            var nativeError = new Error(message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.message; },\n            /**\n             * @param {?} message\n             * @return {?}\n             */\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return ((this._nativeError)).stack; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) { ((this._nativeError)).stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * \\@stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$4(WrappedError, _super);\n        /**\n         * @param {?} message\n         * @param {?} error\n         */\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var InvalidPipeArgumentError = (function (_super) {\n        __extends$3(InvalidPipeArgumentError, _super);\n        /**\n         * @param {?} type\n         * @param {?} value\n         */\n        function InvalidPipeArgumentError(type, value) {\n            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n        }\n        return InvalidPipeArgumentError;\n    }(BaseError));\n\n    var ObservableStrategy = (function () {\n        function ObservableStrategy() {\n        }\n        /**\n         * @param {?} async\n         * @param {?} updateLatestValue\n         * @return {?}\n         */\n        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n        };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n        return ObservableStrategy;\n    }());\n    var PromiseStrategy = (function () {\n        function PromiseStrategy() {\n        }\n        /**\n         * @param {?} async\n         * @param {?} updateLatestValue\n         * @return {?}\n         */\n        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.then(updateLatestValue, function (e) { throw e; });\n        };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        PromiseStrategy.prototype.dispose = function (subscription) { };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n        return PromiseStrategy;\n    }());\n    var /** @type {?} */ _promiseStrategy = new PromiseStrategy();\n    var /** @type {?} */ _observableStrategy = new ObservableStrategy();\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n     * \\@howToUse `observable_or_promise_expression | async`\n     * \\@description\n     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n     * potential memory leaks.\n     *\n     *\n     * ## Examples\n     *\n     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n     * promise.\n     *\n     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n     *\n     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n     * to the view. The Observable continuously updates the view with the current time.\n     *\n     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n     *\n     * \\@stable\n     */\n    var AsyncPipe = (function () {\n        /**\n         * @param {?} _ref\n         */\n        function AsyncPipe(_ref) {\n            this._ref = _ref;\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n            this._strategy = null;\n        }\n        /**\n         * @return {?}\n         */\n        AsyncPipe.prototype.ngOnDestroy = function () {\n            if (this._subscription) {\n                this._dispose();\n            }\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype.transform = function (obj) {\n            if (!this._obj) {\n                if (obj) {\n                    this._subscribe(obj);\n                }\n                this._latestReturnedValue = this._latestValue;\n                return this._latestValue;\n            }\n            if (obj !== this._obj) {\n                this._dispose();\n                return this.transform(obj);\n            }\n            if (this._latestValue === this._latestReturnedValue) {\n                return this._latestReturnedValue;\n            }\n            this._latestReturnedValue = this._latestValue;\n            return _angular_core.WrappedValue.wrap(this._latestValue);\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype._subscribe = function (obj) {\n            var _this = this;\n            this._obj = obj;\n            this._strategy = this._selectStrategy(obj);\n            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype._selectStrategy = function (obj) {\n            if (isPromise(obj)) {\n                return _promiseStrategy;\n            }\n            if (isObservable(obj)) {\n                return _observableStrategy;\n            }\n            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n        };\n        /**\n         * @return {?}\n         */\n        AsyncPipe.prototype._dispose = function () {\n            this._strategy.dispose(this._subscription);\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n        };\n        /**\n         * @param {?} async\n         * @param {?} value\n         * @return {?}\n         */\n        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n            if (async === this._obj) {\n                this._latestValue = value;\n                this._ref.markForCheck();\n            }\n        };\n        AsyncPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n        ];\n        /** @nocollapse */\n        AsyncPipe.ctorParameters = function () { return [\n            { type: _angular_core.ChangeDetectorRef, },\n        ]; };\n        return AsyncPipe;\n    }());\n\n    var NumberFormatStyle = {};\n    NumberFormatStyle.Decimal = 0;\n    NumberFormatStyle.Percent = 1;\n    NumberFormatStyle.Currency = 2;\n    NumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n    var NumberFormatter = (function () {\n        function NumberFormatter() {\n        }\n        /**\n         * @param {?} num\n         * @param {?} locale\n         * @param {?} style\n         * @param {?=} __3\n         * @return {?}\n         */\n        NumberFormatter.format = function (num, locale, style, _a) {\n            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n            var /** @type {?} */ options = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                minimumFractionDigits: minimumFractionDigits,\n                maximumFractionDigits: maximumFractionDigits,\n                style: NumberFormatStyle[style].toLowerCase()\n            };\n            if (style == NumberFormatStyle.Currency) {\n                options.currency = currency;\n                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n            }\n            return new Intl.NumberFormat(locale, options).format(num);\n        };\n        return NumberFormatter;\n    }());\n    var /** @type {?} */ DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n    var /** @type {?} */ PATTERN_ALIASES = {\n        // Keys are quoted so they do not get renamed during closure compilation.\n        'yMMMdjms': datePartGetterFactory(combine([\n            digitCondition('year', 1),\n            nameCondition('month', 3),\n            digitCondition('day', 1),\n            digitCondition('hour', 1),\n            digitCondition('minute', 1),\n            digitCondition('second', 1),\n        ])),\n        'yMdjm': datePartGetterFactory(combine([\n            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n            digitCondition('hour', 1), digitCondition('minute', 1)\n        ])),\n        'yMMMMEEEEd': datePartGetterFactory(combine([\n            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n            digitCondition('day', 1)\n        ])),\n        'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n        'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n        'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n        'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n        'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n    };\n    var /** @type {?} */ DATE_FORMATS = {\n        // Keys are quoted so they do not get renamed.\n        'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n        'yy': datePartGetterFactory(digitCondition('year', 2)),\n        'y': datePartGetterFactory(digitCondition('year', 1)),\n        'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n        'MMM': datePartGetterFactory(nameCondition('month', 3)),\n        'MM': datePartGetterFactory(digitCondition('month', 2)),\n        'M': datePartGetterFactory(digitCondition('month', 1)),\n        'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n        'L': datePartGetterFactory(nameCondition('month', 1)),\n        'dd': datePartGetterFactory(digitCondition('day', 2)),\n        'd': datePartGetterFactory(digitCondition('day', 1)),\n        'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n        'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n        'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n        'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'jj': datePartGetterFactory(digitCondition('hour', 2)),\n        'j': datePartGetterFactory(digitCondition('hour', 1)),\n        'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n        'm': datePartGetterFactory(digitCondition('minute', 1)),\n        'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n        's': datePartGetterFactory(digitCondition('second', 1)),\n        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n        // fractions\n        'sss': datePartGetterFactory(digitCondition('second', 3)),\n        'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n        'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n        'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n        'E': datePartGetterFactory(nameCondition('weekday', 1)),\n        'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'Z': timeZoneGetter('short'),\n        'z': timeZoneGetter('long'),\n        'ww': datePartGetterFactory({}),\n        // first Thursday of the year. not support ?\n        'w': datePartGetterFactory({}),\n        // of the year not support ?\n        'G': datePartGetterFactory(nameCondition('era', 1)),\n        'GG': datePartGetterFactory(nameCondition('era', 2)),\n        'GGG': datePartGetterFactory(nameCondition('era', 3)),\n        'GGGG': datePartGetterFactory(nameCondition('era', 4))\n    };\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function digitModifier(inner) {\n        return function (date, locale) {\n            var /** @type {?} */ result = inner(date, locale);\n            return result.length == 1 ? '0' + result : result;\n        };\n    }\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function hourClockExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n    }\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function hourExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n    }\n    /**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} options\n     * @return {?}\n     */\n    function intlDateFormat(date, locale, options) {\n        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * @param {?} timezone\n     * @return {?}\n     */\n    function timeZoneGetter(timezone) {\n        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n        var /** @type {?} */ options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n        return function (date, locale) {\n            var /** @type {?} */ result = intlDateFormat(date, locale, options);\n            // Then extract first 3 letters that related to hours\n            return result ? result.substring(3) : '';\n        };\n    }\n    /**\n     * @param {?} options\n     * @param {?} value\n     * @return {?}\n     */\n    function hour12Modify(options, value) {\n        options.hour12 = value;\n        return options;\n    }\n    /**\n     * @param {?} prop\n     * @param {?} len\n     * @return {?}\n     */\n    function digitCondition(prop, len) {\n        var /** @type {?} */ result = {};\n        result[prop] = len === 2 ? '2-digit' : 'numeric';\n        return result;\n    }\n    /**\n     * @param {?} prop\n     * @param {?} len\n     * @return {?}\n     */\n    function nameCondition(prop, len) {\n        var /** @type {?} */ result = {};\n        if (len < 4) {\n            result[prop] = len > 1 ? 'short' : 'narrow';\n        }\n        else {\n            result[prop] = 'long';\n        }\n        return result;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    function combine(options) {\n        return (_a = ((Object))).assign.apply(_a, [{}].concat(options));\n        var _a;\n    }\n    /**\n     * @param {?} ret\n     * @return {?}\n     */\n    function datePartGetterFactory(ret) {\n        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n    }\n    var /** @type {?} */ DATE_FORMATTER_CACHE = new Map();\n    /**\n     * @param {?} format\n     * @param {?} date\n     * @param {?} locale\n     * @return {?}\n     */\n    function dateFormatter(format, date, locale) {\n        var /** @type {?} */ fn = PATTERN_ALIASES[format];\n        if (fn)\n            return fn(date, locale);\n        var /** @type {?} */ cacheKey = format;\n        var /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n        if (!parts) {\n            parts = [];\n            var /** @type {?} */ match = void 0;\n            DATE_FORMATS_SPLIT.exec(format);\n            while (format) {\n                match = DATE_FORMATS_SPLIT.exec(format);\n                if (match) {\n                    parts = parts.concat(match.slice(1));\n                    format = parts.pop();\n                }\n                else {\n                    parts.push(format);\n                    format = null;\n                }\n            }\n            DATE_FORMATTER_CACHE.set(cacheKey, parts);\n        }\n        return parts.reduce(function (text, part) {\n            var /** @type {?} */ fn = DATE_FORMATS[part];\n            return text + (fn ? fn(date, locale) : partToTime(part));\n        }, '');\n    }\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    function partToTime(part) {\n        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    }\n    var DateFormatter = (function () {\n        function DateFormatter() {\n        }\n        /**\n         * @param {?} date\n         * @param {?} locale\n         * @param {?} pattern\n         * @return {?}\n         */\n        DateFormatter.format = function (date, locale, pattern) {\n            return dateFormatter(pattern, date, locale);\n        };\n        return DateFormatter;\n    }());\n\n    var /** @type {?} */ ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a date according to locale rules.\n     * \\@howToUse `date_expression | date[:format]`\n     * \\@description\n     *\n     * Where:\n     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n     * (https://www.w3.org/TR/NOTE-datetime).\n     * - `format` indicates which date/time components to include. The format can be predefined as\n     *   shown below or custom as shown in the table.\n     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n     *\n     *\n     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n     *\n     * In javascript, only the components specified will be respected (not the ordering,\n     * punctuations, ...) and details of the formatting will be dependent on the locale.\n     *\n     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n     *\n     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n     * applied and the formatted text will have the same day, month and year of the expression.\n     *\n     * WARNINGS:\n     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n     *   Instead users should treat the date as an immutable object and change the reference when the\n     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n     *   which would be an expensive operation).\n     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n     *   browsers.\n     *\n     * ### Examples\n     *\n     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n     * in the _local_ time and locale is 'en-US':\n     *\n     * ```\n     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n     * ```\n     *\n     * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n     *\n     * \\@stable\n     */\n    var DatePipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function DatePipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} pattern\n         * @return {?}\n         */\n        DatePipe.prototype.transform = function (value, pattern) {\n            if (pattern === void 0) { pattern = 'mediumDate'; }\n            var /** @type {?} */ date;\n            if (isBlank$1(value) || value !== value)\n                return null;\n            if (typeof value === 'string') {\n                value = value.trim();\n            }\n            if (isDate(value)) {\n                date = value;\n            }\n            else if (NumberWrapper.isNumeric(value)) {\n                date = new Date(parseFloat(value));\n            }\n            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n                /**\n                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n                * before Date creation to avoid time offset and errors in the new Date.\n                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n                * is applied\n                * Note: ISO months are 0 for January, 1 for February, ...\n                */\n                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n                date = new Date(y, m - 1, d);\n            }\n            else {\n                date = new Date(value);\n            }\n            if (!isDate(date)) {\n                var /** @type {?} */ match = void 0;\n                if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                    date = isoStringToDate(match);\n                }\n                else {\n                    throw new InvalidPipeArgumentError(DatePipe, value);\n                }\n            }\n            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n        };\n        /** @internal */\n        DatePipe._ALIASES = {\n            'medium': 'yMMMdjms',\n            'short': 'yMdjm',\n            'fullDate': 'yMMMMEEEEd',\n            'longDate': 'yMMMMd',\n            'mediumDate': 'yMMMd',\n            'shortDate': 'yMd',\n            'mediumTime': 'jms',\n            'shortTime': 'jm'\n        };\n        DatePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n        ];\n        /** @nocollapse */\n        DatePipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return DatePipe;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank$1(obj) {\n        return obj == null || obj === '';\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isDate(obj) {\n        return obj instanceof Date && !isNaN(obj.valueOf());\n    }\n    /**\n     * @param {?} match\n     * @return {?}\n     */\n    function isoStringToDate(match) {\n        var /** @type {?} */ date = new Date(0);\n        var /** @type {?} */ tzHour = 0;\n        var /** @type {?} */ tzMin = 0;\n        var /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n        var /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n        if (match[9]) {\n            tzHour = toInt(match[9] + match[10]);\n            tzMin = toInt(match[9] + match[11]);\n        }\n        dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n        var /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n        var /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n        var /** @type {?} */ s = toInt(match[6] || '0');\n        var /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n        timeSetter.call(date, h, m, s, ms);\n        return date;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    function toInt(str) {\n        return parseInt(str, 10);\n    }\n\n    var /** @type {?} */ _INTERPOLATION_REGEXP = /#/g;\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n     * \\@howToUse `expression | i18nPlural:mapping`\n     * \\@description\n     *\n     *  Where:\n     *  - `expression` is a number.\n     *  - `mapping` is an object that mimics the ICU format, see\n     *    http://userguide.icu-project.org/formatparse/messages\n     *\n     *  ## Example\n     *\n     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n     *\n     * \\@experimental\n     */\n    var I18nPluralPipe = (function () {\n        /**\n         * @param {?} _localization\n         */\n        function I18nPluralPipe(_localization) {\n            this._localization = _localization;\n        }\n        /**\n         * @param {?} value\n         * @param {?} pluralMap\n         * @return {?}\n         */\n        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n            if (value == null)\n                return '';\n            if (typeof pluralMap !== 'object' || pluralMap === null) {\n                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n            }\n            var /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n        };\n        I18nPluralPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nPluralPipe.ctorParameters = function () { return [\n            { type: NgLocalization, },\n        ]; };\n        return I18nPluralPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Generic selector that displays the string that matches the current value.\n     * \\@howToUse `expression | i18nSelect:mapping`\n     * \\@description\n     *\n     *  Where `mapping` is an object that indicates the text that should be displayed\n     *  for different values of the provided `expression`.\n     *  If none of the keys of the mapping match the value of the `expression`, then the content\n     *  of the `other` key is returned when present, otherwise an empty string is returned.\n     *\n     *  ## Example\n     *\n     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n     *\n     *  \\@experimental\n     */\n    var I18nSelectPipe = (function () {\n        function I18nSelectPipe() {\n        }\n        /**\n         * @param {?} value\n         * @param {?} mapping\n         * @return {?}\n         */\n        I18nSelectPipe.prototype.transform = function (value, mapping) {\n            if (value == null)\n                return '';\n            if (typeof mapping !== 'object' || typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n            }\n            if (mapping.hasOwnProperty(value)) {\n                return mapping[value];\n            }\n            if (mapping.hasOwnProperty('other')) {\n                return mapping['other'];\n            }\n            return '';\n        };\n        I18nSelectPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nSelectPipe.ctorParameters = function () { return []; };\n        return I18nSelectPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Converts value into JSON string.\n     * \\@howToUse `expression | json`\n     * \\@description\n     *\n     * Converts value into string using `JSON.stringify`. Useful for debugging.\n     *\n     * ### Example\n     * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n     *\n     * \\@stable\n     */\n    var JsonPipe = (function () {\n        function JsonPipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n        JsonPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n        ];\n        /** @nocollapse */\n        JsonPipe.ctorParameters = function () { return []; };\n        return JsonPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Transforms string to lowercase.\n     * \\@howToUse `expression | lowercase`\n     * \\@description\n     *\n     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * \\@stable\n     */\n    var LowerCasePipe = (function () {\n        function LowerCasePipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        LowerCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n            }\n            return value.toLowerCase();\n        };\n        LowerCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n        ];\n        /** @nocollapse */\n        LowerCasePipe.ctorParameters = function () { return []; };\n        return LowerCasePipe;\n    }());\n\n    var /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n    /**\n     * @param {?} pipe\n     * @param {?} locale\n     * @param {?} value\n     * @param {?} style\n     * @param {?} digits\n     * @param {?=} currency\n     * @param {?=} currencyAsSymbol\n     * @return {?}\n     */\n    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n        if (currency === void 0) { currency = null; }\n        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n        if (value == null)\n            return null;\n        // Convert strings to numbers\n        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n        if (typeof value !== 'number') {\n            throw new InvalidPipeArgumentError(pipe, value);\n        }\n        var /** @type {?} */ minInt;\n        var /** @type {?} */ minFraction;\n        var /** @type {?} */ maxFraction;\n        if (style !== NumberFormatStyle.Currency) {\n            // rely on Intl default for currency\n            minInt = 1;\n            minFraction = 0;\n            maxFraction = 3;\n        }\n        if (digits) {\n            var /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digits + \" is not a valid digit info for number pipes\");\n            }\n            if (parts[1] != null) {\n                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n            }\n            if (parts[3] != null) {\n                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n            }\n            if (parts[5] != null) {\n                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n            }\n        }\n        return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n            minimumIntegerDigits: minInt,\n            minimumFractionDigits: minFraction,\n            maximumFractionDigits: maxFraction,\n            currency: currency,\n            currencyAsSymbol: currencyAsSymbol,\n        });\n    }\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number according to locale rules.\n     * \\@howToUse `number_expression | number[:digitInfo]`\n     *\n     * Formats a number as text. Group sizing and separator and other locale-specific\n     * configurations are based on the active locale.\n     *\n     * where `expression` is a number:\n     *  - `digitInfo` is a `string` which has a following format: <br>\n     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n     *\n     * For more information on the acceptable range for each of these numbers and other\n     * details see your native internationalization library.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n     *\n     * \\@stable\n     */\n    var DecimalPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function DecimalPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} digits\n         * @return {?}\n         */\n        DecimalPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n        };\n        DecimalPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n        ];\n        /** @nocollapse */\n        DecimalPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return DecimalPipe;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number as a percentage according to locale rules.\n     * \\@howToUse `number_expression | percent[:digitInfo]`\n     *\n     * \\@description\n     *\n     * Formats a number as percentage.\n     *\n     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n     *\n     * \\@stable\n     */\n    var PercentPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function PercentPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} digits\n         * @return {?}\n         */\n        PercentPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n        };\n        PercentPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n        ];\n        /** @nocollapse */\n        PercentPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return PercentPipe;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number as currency using locale rules.\n     * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n     * \\@description\n     *\n     * Use `currency` to format a number as currency.\n     *\n     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n     *    as `USD` for the US dollar and `EUR` for the euro.\n     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n     *   - `true`: use symbol (e.g. `$`).\n     *   - `false`(default): use code (e.g. `USD`).\n     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n     *\n     * \\@stable\n     */\n    var CurrencyPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function CurrencyPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} currencyCode\n         * @param {?=} symbolDisplay\n         * @param {?=} digits\n         * @return {?}\n         */\n        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n            if (currencyCode === void 0) { currencyCode = 'USD'; }\n            if (symbolDisplay === void 0) { symbolDisplay = false; }\n            if (digits === void 0) { digits = null; }\n            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n        };\n        CurrencyPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n        ];\n        /** @nocollapse */\n        CurrencyPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return CurrencyPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n     * \\@howToUse `array_or_string_expression | slice:start[:end]`\n     * \\@description\n     *\n     * Where the input expression is a `List` or `String`, and:\n     * - `start`: The starting index of the subset to return.\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * - `end`: The ending index of the subset to return.\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     *\n     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n     * and `String.prototype.slice()`.\n     *\n     * When operating on a [List], the returned list is always a copy even when all\n     * the elements are being returned.\n     *\n     * When operating on a blank value, the pipe returns the blank value.\n     *\n     * ## List Example\n     *\n     * This `ngFor` example:\n     *\n     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n     *\n     * produces the following:\n     *\n     *     <li>b</li>\n     *     <li>c</li>\n     *\n     * ## String Examples\n     *\n     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n     *\n     * \\@stable\n     */\n    var SlicePipe = (function () {\n        function SlicePipe() {\n        }\n        /**\n         * @param {?} value\n         * @param {?} start\n         * @param {?=} end\n         * @return {?}\n         */\n        SlicePipe.prototype.transform = function (value, start, end) {\n            if (value == null)\n                return value;\n            if (!this.supports(value)) {\n                throw new InvalidPipeArgumentError(SlicePipe, value);\n            }\n            return value.slice(start, end);\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n        SlicePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n        ];\n        /** @nocollapse */\n        SlicePipe.ctorParameters = function () { return []; };\n        return SlicePipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Transforms string to uppercase.\n     * \\@howToUse `expression | uppercase`\n     * \\@description\n     *\n     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * \\@stable\n     */\n    var UpperCasePipe = (function () {\n        function UpperCasePipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        UpperCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n            }\n            return value.toUpperCase();\n        };\n        UpperCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n        ];\n        /** @nocollapse */\n        UpperCasePipe.ctorParameters = function () { return []; };\n        return UpperCasePipe;\n    }());\n\n    /**\n     * A collection of Angular pipes that are likely to be used in each and every application.\n     */\n    var /** @type {?} */ COMMON_PIPES = [\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n    ];\n\n    /**\n     * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgFor}, ...\n     *\n     * \\@stable\n     */\n    var CommonModule = (function () {\n        function CommonModule() {\n        }\n        CommonModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        providers: [\n                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        CommonModule.ctorParameters = function () { return []; };\n        return CommonModule;\n    }());\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.10');\n\n    exports.NgLocalization = NgLocalization;\n    exports.CommonModule = CommonModule;\n    exports.NgClass = NgClass;\n    exports.NgFor = NgFor;\n    exports.NgIf = NgIf;\n    exports.NgPlural = NgPlural;\n    exports.NgPluralCase = NgPluralCase;\n    exports.NgStyle = NgStyle;\n    exports.NgSwitch = NgSwitch;\n    exports.NgSwitchCase = NgSwitchCase;\n    exports.NgSwitchDefault = NgSwitchDefault;\n    exports.NgTemplateOutlet = NgTemplateOutlet;\n    exports.AsyncPipe = AsyncPipe;\n    exports.DatePipe = DatePipe;\n    exports.I18nPluralPipe = I18nPluralPipe;\n    exports.I18nSelectPipe = I18nSelectPipe;\n    exports.JsonPipe = JsonPipe;\n    exports.LowerCasePipe = LowerCasePipe;\n    exports.CurrencyPipe = CurrencyPipe;\n    exports.DecimalPipe = DecimalPipe;\n    exports.PercentPipe = PercentPipe;\n    exports.SlicePipe = SlicePipe;\n    exports.UpperCasePipe = UpperCasePipe;\n    exports.VERSION = VERSION;\n    exports.Version = _angular_core.Version;\n    exports.PlatformLocation = PlatformLocation;\n    exports.LOCATION_INITIALIZED = LOCATION_INITIALIZED;\n    exports.LocationStrategy = LocationStrategy;\n    exports.APP_BASE_HREF = APP_BASE_HREF;\n    exports.HashLocationStrategy = HashLocationStrategy;\n    exports.PathLocationStrategy = PathLocationStrategy;\n    exports.Location = Location;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/common/bundles/common.umd.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 10\n// module chunks = 0","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 12\n// module chunks = 0","(function(r){return function(){var h=function(g,m,h,n){n=function(e){return h[e]?m[e]:(h[e]=1,m[e]={},m[e]=g[e](m[e]))};g[1]=function(e){var g=n(2);var k=function(a){var b;if(a){var c={};if(\"object\"!==typeof a)c[a]=!0;else{Array.isArray(a)||(a=Object.keys(a));var e=0;for(b=a.length;e<b;e++){var d=a[e];c[d]=!0}}return c}};var c=function(a){var b=function(a){var c=arguments.length;for(var d=-1,e=Array(c);++d<c;)e[d]=arguments[d];b.options.target?c=b.options.target:(c=a,e.shift());return g(b.options,\nc,e)};a&&(b.isBase=!0);b.options={};Object.defineProperties(b,h);return b};var h={deep:{get:function(){var a=this.isBase?c():this;a.options.deep=!0;return a}},own:{get:function(){var a=this.isBase?c():this;a.options.own=!0;return a}},allowNull:{get:function(){var a=this.isBase?c():this;a.options.allowNull=!0;return a}},nullDeletes:{get:function(){var a=this.isBase?c():this;a.options.nullDeletes=!0;return a}},concat:{get:function(){var a=this.isBase?c():this;a.options.concat=!0;return a}},clone:{get:function(){var a=\nthis.isBase?c():this;a.options.target={};return a}},notDeep:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notDeep=k(b);return a}}},deepOnly:{get:function(){var a=this.isBase?c():this;return function(b){a.options.deepOnly=k(b);return a}}},keys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.keys=k(b);return a}}},notKeys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notKeys=k(b);return a}}},transform:{get:function(){var a=this.isBase?\nc():this;return function(b){\"function\"===typeof b?a.options.globalTransform=b:b&&\"object\"===typeof b&&(a.options.transforms=b);return a}}},filter:{get:function(){var a=this.isBase?c():this;return function(b){\"function\"===typeof b?a.options.globalFilter=b:b&&\"object\"===typeof b&&(a.options.filters=b);return a}}}};return e=c(!0)};g[2]=function(e){var g;var k=function(a){return Array.isArray(a)};var c=function(a){return a&&\"[object Object]\"===Object.prototype.toString.call(a)||k(a)};var h=function(a,\nb,c){if(a.deep)return a.notDeep?!a.notDeep[b]:!0;if(a.deepOnly)return a.deepOnly[b]||c&&h(a,c)};return e=g=function(a,b,e,m){var d,n;if(!b||\"object\"!==typeof b&&\"function\"!==typeof b)b={};var q=0;for(n=e.length;q<n;q++){var l=e[q];if(null!=l)for(d in l){var f=l[d];var p=b[d];if(!(f===b||void 0===f||null===f&&!a.allowNull&&!a.nullDeletes||a.keys&&!a.keys[d]||a.notKeys&&a.notKeys[d]||a.own&&!l.hasOwnProperty(d)||a.globalFilter&&!a.globalFilter(f,d,l)||a.filters&&a.filters[d]&&!a.filters[d](f,d,l)))if(null===\nf&&a.nullDeletes)delete b[d];else switch(a.globalTransform&&(f=a.globalTransform(f,d,l)),a.transforms&&a.transforms[d]&&(f=a.transforms[d](f,d,l)),!1){case !(a.concat&&k(f)&&k(p)):b[d]=p.concat(f);break;case !(h(a,d,m)&&c(f)):p=c(p)?p:k(f)?[]:{};b[d]=g(a,p,[f],d);break;default:b[d]=f}}}return b}};return n};h=h({},{},{});return function(){var g=h(1);null!=(\"undefined\"!==typeof module&&null!==module?module.exports:void 0)?module.exports=g:\"function\"===typeof define&&define.amd?define([\"smart-extend\"],\nfunction(){return g}):window.extend=g}()}})(this)();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/smart-extend/lib/browser.js\n// module id = 13\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar rx_pubsub_1 = require(\"rx-pubsub\");\r\nvar extend = require(\"smart-extend\");\r\nvar xdom_util_1 = require(\"xdom-util\");\r\nvar component_injector_1 = require(\"component-injector\");\r\nvar ModalWindowComponent = (function () {\r\n    function ModalWindowComponent(pubsub, componentInjector) {\r\n        this.pubsub = pubsub;\r\n        this.componentInjector = componentInjector;\r\n        this.animationClass = 'fade';\r\n        this.showModalClass = 'in';\r\n        this.bodyOpenModalClass = 'modal-open';\r\n        this.defaultButtonsProperties = {\r\n            visible: true,\r\n            cancel: {\r\n                visible: true,\r\n                label: 'Cancel',\r\n                event: false\r\n            },\r\n            success: {\r\n                visible: true,\r\n                label: 'Save',\r\n                event: false\r\n            }\r\n        };\r\n        this.defaultProperties = {\r\n            title: '',\r\n            show: false,\r\n            hide: false,\r\n            componentSelector: false,\r\n            componentInputs: false,\r\n            htmlContent: '',\r\n            overlayClick: true,\r\n            customClass: '',\r\n            buttons: {\r\n                visible: true,\r\n                cancel: {\r\n                    visible: true,\r\n                    label: 'Cancel',\r\n                    event: false\r\n                },\r\n                success: {\r\n                    visible: true,\r\n                    label: 'Save',\r\n                    event: false\r\n                }\r\n            }\r\n        };\r\n        this.properties = {};\r\n    }\r\n    Object.defineProperty(ModalWindowComponent.prototype, \"id\", {\r\n        set: function (eventName) {\r\n            if (eventName) {\r\n                this.eventName = eventName;\r\n                // remove previous subscription and create new one\r\n                this.unsubscribe();\r\n                this.subscribeToEvent();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ModalWindowComponent.prototype.ngOnInit = function () {\r\n    };\r\n    ModalWindowComponent.prototype.ngOnDestroy = function () {\r\n        this.unsubscribe();\r\n        this.resetInjectedComponent();\r\n    };\r\n    ModalWindowComponent.prototype.cancelAction = function () {\r\n        if (this.properties.buttons.cancel.event) {\r\n            this.pubsub.publish(this.properties.buttons.cancel.event, true);\r\n        }\r\n        this.hide();\r\n    };\r\n    ModalWindowComponent.prototype.successAction = function () {\r\n        if (this.properties.buttons.success.event) {\r\n            this.pubsub.publish(this.properties.buttons.success.event, true);\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.overlayClick = function () {\r\n        if (this.properties.overlayClick) {\r\n            this.cancelAction();\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.show = function () {\r\n        // add class to modal DOM element to make it visible\r\n        var modalDom = this.modalWindow.nativeElement;\r\n        if (!xdom_util_1.XDomUtil.hasClass(modalDom, this.showModalClass)) {\r\n            xdom_util_1.XDomUtil.addClass(modalDom, this.showModalClass);\r\n        }\r\n        // add class to modal body to disable the scrolling\r\n        var body = document.querySelector('body');\r\n        if (!xdom_util_1.XDomUtil.hasClass(body, this.bodyOpenModalClass)) {\r\n            xdom_util_1.XDomUtil.addClass(body, this.bodyOpenModalClass);\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.hide = function () {\r\n        var element = this.modalWindow.nativeElement;\r\n        xdom_util_1.XDomUtil.removeClass(element, this.showModalClass);\r\n        var body = document.querySelector('body');\r\n        xdom_util_1.XDomUtil.removeClass(body, this.bodyOpenModalClass);\r\n    };\r\n    ModalWindowComponent.prototype.subscribeToEvent = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.pubsub.subscribe(this.eventName, function (data) {\r\n            _this.initModal(data);\r\n        });\r\n    };\r\n    ModalWindowComponent.prototype.initModal = function (properties) {\r\n        if (properties.show) {\r\n            // remove previously injected component\r\n            this.resetInjectedComponent();\r\n            // reset the properties\r\n            this.setProperties(properties);\r\n            // inject component\r\n            if (this.properties.componentSelector) {\r\n                this.injectedComponentRef = this.injectComponent(this.properties.componentSelector);\r\n                // set the components properties\r\n                this.setComponentProperties();\r\n            }\r\n            // display the modal\r\n            this.show();\r\n            // reset modal event subscriber\r\n            this.resetModalEventSubscriber();\r\n        }\r\n        else if (properties.hide) {\r\n            // remove previously injected component\r\n            this.resetInjectedComponent();\r\n            // reset the properties\r\n            this.setProperties(properties);\r\n            // hide the modal\r\n            this.hide();\r\n            // reset modal event subscriber\r\n            this.resetModalEventSubscriber();\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.unsubscribe = function () {\r\n        if (this.eventSubscriber) {\r\n            this.pubsub.unsubscribe(this.eventSubscriber);\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.injectComponent = function (componentSelector) {\r\n        var result;\r\n        if (componentSelector) {\r\n            result = this.componentInjector.inject(this.injectContainer, componentSelector);\r\n        }\r\n        return result;\r\n    };\r\n    ModalWindowComponent.prototype.setComponentProperties = function () {\r\n        if (this.properties.componentInputs && this.injectedComponentRef) {\r\n            this.componentInjector.setProperties(this.injectedComponentRef, this.properties.componentInputs);\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.resetInjectedComponent = function () {\r\n        if (this.injectedComponentRef) {\r\n            this.componentInjector.remove(this.injectedComponentRef);\r\n            this.injectedComponentRef = null;\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.setProperties = function (properties) {\r\n        this.properties = extend.deep({}, this.defaultProperties, properties);\r\n    };\r\n    ModalWindowComponent.prototype.resetModalEventSubscriber = function () {\r\n        // reset modal show/hide display\r\n        this.pubsub.publish(this.eventName, {});\r\n    };\r\n    return ModalWindowComponent;\r\n}());\r\n__decorate([\r\n    core_1.ViewChild('modalWindow'),\r\n    __metadata(\"design:type\", core_1.ElementRef)\r\n], ModalWindowComponent.prototype, \"modalWindow\", void 0);\r\n__decorate([\r\n    core_1.ViewChild('injectContainer', { read: core_1.ViewContainerRef }),\r\n    __metadata(\"design:type\", core_1.ViewContainerRef)\r\n], ModalWindowComponent.prototype, \"injectContainer\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", String)\r\n], ModalWindowComponent.prototype, \"animationClass\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], ModalWindowComponent.prototype, \"id\", null);\r\nModalWindowComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'app-modal-window',\r\n        templateUrl: './modal-window.component.html',\r\n        styleUrls: ['./modal-window.component.css']\r\n    }),\r\n    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub, component_injector_1.ComponentInjector])\r\n], ModalWindowComponent);\r\nexports.ModalWindowComponent = ModalWindowComponent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/modal-window/modal-window.component.ts\n// module id = 14\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar rx_pubsub_1 = require(\"rx-pubsub\");\r\nvar ModalWindowService = (function () {\r\n    function ModalWindowService(pubsub) {\r\n        this.pubsub = pubsub;\r\n    }\r\n    ModalWindowService.prototype.showModal = function (modalId, options) {\r\n        if (options === void 0) { options = {}; }\r\n        options.show = true;\r\n        options.hide = null;\r\n        this.pubsub.publish(modalId, options);\r\n    };\r\n    ModalWindowService.prototype.hideModal = function (modalId) {\r\n        var options = { hide: true };\r\n        this.pubsub.publish(modalId, options);\r\n    };\r\n    ModalWindowService.prototype.resetEventsSubscribers = function (eventsList) {\r\n        var _this = this;\r\n        eventsList.forEach(function (eventName) {\r\n            if (eventName && _this.pubsub.hasSubscribers(eventName)) {\r\n                _this.pubsub.dispose(eventName);\r\n            }\r\n        });\r\n    };\r\n    return ModalWindowService;\r\n}());\r\nModalWindowService = __decorate([\r\n    core_1.Injectable(),\r\n    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub])\r\n], ModalWindowService);\r\nexports.ModalWindowService = ModalWindowService;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/services/modal-window.service.ts\n// module id = 15\n// module chunks = 0","/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}),global.ng.common,global.ng.core));\n}(this, function (exports,_angular_common,core) { 'use strict';\n\n    var /** @type {?} */ DebugDomRootRenderer = core.__core_private__.DebugDomRootRenderer;\n    var /** @type {?} */ NoOpAnimationPlayer = core.__core_private__.NoOpAnimationPlayer;\n\n    /**\n     * \\@experimental\n     */\n    var NoOpAnimationDriver = (function () {\n        function NoOpAnimationDriver() {\n        }\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        NoOpAnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            return new NoOpAnimationPlayer();\n        };\n        return NoOpAnimationDriver;\n    }());\n    /**\n     * \\@experimental\n     * @abstract\n     */\n    var AnimationDriver = (function () {\n        function AnimationDriver() {\n        }\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        AnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n        AnimationDriver.NOOP = new NoOpAnimationDriver();\n        return AnimationDriver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = (self);\n        }\n        else {\n            globalScope = (global);\n        }\n    }\n    else {\n        globalScope = (window);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var /** @type {?} */ global$1 = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var /** @type {?} */ res = token.toString();\n        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * @param {?} global\n     * @param {?} path\n     * @param {?} value\n     * @return {?}\n     */\n    function setValueOnPath(global, path, value) {\n        var /** @type {?} */ parts = path.split('.');\n        var /** @type {?} */ obj = global;\n        while (parts.length > 1) {\n            var /** @type {?} */ name_1 = parts.shift();\n            if (obj.hasOwnProperty(name_1) && obj[name_1] != null) {\n                obj = obj[name_1];\n            }\n            else {\n                obj = obj[name_1] = {};\n            }\n        }\n        if (obj === undefined || obj === null) {\n            obj = {};\n        }\n        obj[parts.shift()] = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ _DOM = null;\n    /**\n     * @return {?}\n     */\n    function getDOM() {\n        return _DOM;\n    }\n    /**\n     * @param {?} adapter\n     * @return {?}\n     */\n    function setRootDomAdapter(adapter) {\n        if (!_DOM) {\n            _DOM = adapter;\n        }\n    }\n    /**\n     * Provides DOM operations in an environment-agnostic way.\n     *\n     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     * @abstract\n     */\n    var DomAdapter = (function () {\n        function DomAdapter() {\n            this.resourceLoaderType = null;\n        }\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.hasProperty = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setProperty = function (el, name, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getProperty = function (el, name) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} methodName\n         * @param {?} args\n         * @return {?}\n         */\n        DomAdapter.prototype.invoke = function (el, methodName, args) { };\n        /**\n         * @abstract\n         * @param {?} error\n         * @return {?}\n         */\n        DomAdapter.prototype.logError = function (error) { };\n        /**\n         * @abstract\n         * @param {?} error\n         * @return {?}\n         */\n        DomAdapter.prototype.log = function (error) { };\n        /**\n         * @abstract\n         * @param {?} error\n         * @return {?}\n         */\n        DomAdapter.prototype.logGroup = function (error) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.logGroupEnd = function () { };\n        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n            /**\n             * Maps attribute names to their corresponding property names for cases\n             * where attribute name doesn't match property name.\n             * @return {?}\n             */\n            get: function () { return this._attrToPropMap; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) { this._attrToPropMap = value; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        ;\n        /**\n         * @abstract\n         * @param {?} templateHtml\n         * @return {?}\n         */\n        DomAdapter.prototype.parse = function (templateHtml) { };\n        /**\n         * @abstract\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.query = function (selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.querySelector = function (el /** TODO #9100 */, selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.querySelectorAll = function (el /** TODO #9100 */, selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        DomAdapter.prototype.on = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        DomAdapter.prototype.onAndCancel = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} evt\n         * @return {?}\n         */\n        DomAdapter.prototype.dispatchEvent = function (el /** TODO #9100 */, evt) { };\n        /**\n         * @abstract\n         * @param {?} eventType\n         * @return {?}\n         */\n        DomAdapter.prototype.createMouseEvent = function (eventType) { };\n        /**\n         * @abstract\n         * @param {?} eventType\n         * @return {?}\n         */\n        DomAdapter.prototype.createEvent = function (eventType) { };\n        /**\n         * @abstract\n         * @param {?} evt\n         * @return {?}\n         */\n        DomAdapter.prototype.preventDefault = function (evt) { };\n        /**\n         * @abstract\n         * @param {?} evt\n         * @return {?}\n         */\n        DomAdapter.prototype.isPrevented = function (evt) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getInnerHTML = function (el) { };\n        /**\n         * Returns content if el is a <template> element, null otherwise.\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getTemplateContent = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getOuterHTML = function (el) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.nodeName = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.nodeValue = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.type = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.content = function (node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.firstChild = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.nextSibling = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.parentElement = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.childNodes = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.childNodesAsList = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.clearNodes = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.appendChild = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.removeChild = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} newNode\n         * @param {?} oldNode\n         * @return {?}\n         */\n        DomAdapter.prototype.replaceChild = function (el /** TODO #9100 */, newNode /** TODO #9100 */, oldNode) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.remove = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.insertBefore = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} nodes\n         * @return {?}\n         */\n        DomAdapter.prototype.insertAllBefore = function (el /** TODO #9100 */, nodes) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.insertAfter = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setInnerHTML = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getText = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setText = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getValue = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setValue = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getChecked = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setChecked = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} text\n         * @return {?}\n         */\n        DomAdapter.prototype.createComment = function (text) { };\n        /**\n         * @abstract\n         * @param {?} html\n         * @return {?}\n         */\n        DomAdapter.prototype.createTemplate = function (html) { };\n        /**\n         * @abstract\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createElement = function (tagName /** TODO #9100 */, doc) { };\n        /**\n         * @abstract\n         * @param {?} ns\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createElementNS = function (ns, tagName, doc) { };\n        /**\n         * @abstract\n         * @param {?} text\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createTextNode = function (text, doc) { };\n        /**\n         * @abstract\n         * @param {?} attrName\n         * @param {?} attrValue\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) { };\n        /**\n         * @abstract\n         * @param {?} css\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createStyleElement = function (css, doc) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.createShadowRoot = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getShadowRoot = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getHost = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getDistributedNodes = function (el) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.clone /*<T extends Node>*/ = function (node) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getElementsByClassName = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getElementsByTagName = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.classList = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        DomAdapter.prototype.addClass = function (element /** TODO #9100 */, className) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        DomAdapter.prototype.removeClass = function (element /** TODO #9100 */, className) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        DomAdapter.prototype.hasClass = function (element /** TODO #9100 */, className) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        DomAdapter.prototype.setStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @return {?}\n         */\n        DomAdapter.prototype.removeStyle = function (element /** TODO #9100 */, styleName) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @return {?}\n         */\n        DomAdapter.prototype.getStyle = function (element /** TODO #9100 */, styleName) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?=} styleValue\n         * @return {?}\n         */\n        DomAdapter.prototype.hasStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.tagName = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.attributeMap = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.hasAttribute = function (element /** TODO #9100 */, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.hasAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.getAttribute = function (element /** TODO #9100 */, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.getAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setAttribute = function (element /** TODO #9100 */, name, value) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setAttributeNS = function (element /** TODO #9100 */, ns, name, value) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.removeAttribute = function (element /** TODO #9100 */, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.removeAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.templateAwareRoot = function (el) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.createHtmlDocument = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.defaultDoc = function () { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getBoundingClientRect = function (el) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getTitle = function () { };\n        /**\n         * @abstract\n         * @param {?} newTitle\n         * @return {?}\n         */\n        DomAdapter.prototype.setTitle = function (newTitle) { };\n        /**\n         * @abstract\n         * @param {?} n\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.elementMatches = function (n /** TODO #9100 */, selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.isTemplateElement = function (el) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isTextNode = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isCommentNode = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isElementNode = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.hasShadowRoot = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isShadowRoot = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.importIntoDoc /*<T extends Node>*/ = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.adoptNode /*<T extends Node>*/ = function (node) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.getHref = function (element) { };\n        /**\n         * @abstract\n         * @param {?} event\n         * @return {?}\n         */\n        DomAdapter.prototype.getEventKey = function (event) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} baseUrl\n         * @param {?} href\n         * @return {?}\n         */\n        DomAdapter.prototype.resolveAndSetHref = function (element /** TODO #9100 */, baseUrl, href) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsDOMEvents = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsNativeShadowDOM = function () { };\n        /**\n         * @abstract\n         * @param {?} target\n         * @return {?}\n         */\n        DomAdapter.prototype.getGlobalEventTarget = function (target) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getHistory = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getLocation = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getBaseHref = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.resetBaseElement = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getUserAgent = function () { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setData = function (element /** TODO #9100 */, name, value) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.getComputedStyle = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getData = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setGlobalVar = function (name, value) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsWebAnimation = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.performanceNow = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getAnimationPrefix = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getTransitionEnd = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsAnimation = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsCookies = function () { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getCookie = function (name) { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setCookie = function (name, value) { };\n        return DomAdapter;\n    }());\n\n    var WebAnimationsPlayer = (function () {\n        /**\n         * @param {?} element\n         * @param {?} keyframes\n         * @param {?} options\n         * @param {?=} previousPlayers\n         */\n        function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n            var _this = this;\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            this.element = element;\n            this.keyframes = keyframes;\n            this.options = options;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._initialized = false;\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            this._duration = options['duration'];\n            this.previousStyles = {};\n            previousPlayers.forEach(function (player) {\n                var styles = player._captureStyles();\n                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n            });\n        }\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.init = function () {\n            var _this = this;\n            if (this._initialized)\n                return;\n            this._initialized = true;\n            var /** @type {?} */ keyframes = this.keyframes.map(function (styles) {\n                var /** @type {?} */ formattedKeyframe = {};\n                Object.keys(styles).forEach(function (prop, index) {\n                    var /** @type {?} */ value = styles[prop];\n                    if (value == core.AUTO_STYLE) {\n                        value = _computeStyle(_this.element, prop);\n                    }\n                    if (value != undefined) {\n                        formattedKeyframe[prop] = value;\n                    }\n                });\n                return formattedKeyframe;\n            });\n            var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n            if (previousStyleProps.length) {\n                var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n                var /** @type {?} */ missingStyleProps_1 = [];\n                previousStyleProps.forEach(function (prop) {\n                    if (!isPresent(startingKeyframe_1[prop])) {\n                        missingStyleProps_1.push(prop);\n                    }\n                    startingKeyframe_1[prop] = _this.previousStyles[prop];\n                });\n                if (missingStyleProps_1.length) {\n                    var _loop_1 = function(i) {\n                        var /** @type {?} */ kf = keyframes[i];\n                        missingStyleProps_1.forEach(function (prop) { kf[prop] = _computeStyle(_this.element, prop); });\n                    };\n                    for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n            this._finalKeyframe = _copyKeyframeStyles(keyframes[keyframes.length - 1]);\n            // this is required so that the player doesn't start to animate right away\n            this._resetDomPlayerState();\n            this._player.addEventListener('finish', function () { return _this._onFinish(); });\n        };\n        /**\n         * \\@internal\n         * @param {?} element\n         * @param {?} keyframes\n         * @param {?} options\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n            // jscompiler doesn't seem to know animate is a native property because it's not fully\n            // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n            return (element['animate'](keyframes, options));\n        };\n        Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._player; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.play = function () {\n            this.init();\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._player.play();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.pause = function () {\n            this.init();\n            this._player.pause();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.finish = function () {\n            this.init();\n            this._onFinish();\n            this._player.finish();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.reset = function () {\n            this._resetDomPlayerState();\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._resetDomPlayerState = function () {\n            if (this._player) {\n                this._player.cancel();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.restart = function () {\n            this.reset();\n            this.play();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._resetDomPlayerState();\n                this._onFinish();\n                this._destroyed = true;\n            }\n        };\n        Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._duration; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.totalTime; };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.totalTime; };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._captureStyles = function () {\n            var _this = this;\n            var /** @type {?} */ styles = {};\n            if (this.hasStarted()) {\n                Object.keys(this._finalKeyframe).forEach(function (prop) {\n                    if (prop != 'offset') {\n                        styles[prop] =\n                            _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                    }\n                });\n            }\n            return styles;\n        };\n        return WebAnimationsPlayer;\n    }());\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @return {?}\n     */\n    function _computeStyle(element, prop) {\n        return getDOM().getComputedStyle(element)[prop];\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    function _copyKeyframeStyles(styles) {\n        var /** @type {?} */ newStyles = {};\n        Object.keys(styles).forEach(function (prop) {\n            if (prop != 'offset') {\n                newStyles[prop] = styles[prop];\n            }\n        });\n        return newStyles;\n    }\n\n    var WebAnimationsDriver = (function () {\n        function WebAnimationsDriver() {\n        }\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        WebAnimationsDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            var /** @type {?} */ formattedSteps = [];\n            var /** @type {?} */ startingStyleLookup = {};\n            if (isPresent(startingStyles)) {\n                startingStyleLookup = _populateStyles(startingStyles, {});\n            }\n            keyframes.forEach(function (keyframe) {\n                var /** @type {?} */ data = _populateStyles(keyframe.styles, startingStyleLookup);\n                data['offset'] = Math.max(0, Math.min(1, keyframe.offset));\n                formattedSteps.push(data);\n            });\n            // Styling passed into element.animate() must always be balanced.\n            // The special cases below can occur if only style() calls exist\n            // within an animation or when a style() calls are used prior\n            // to a group() animation being issued or if the renderer is\n            // invoked by the user directly.\n            if (formattedSteps.length == 0) {\n                formattedSteps = [startingStyleLookup, startingStyleLookup];\n            }\n            else if (formattedSteps.length == 1) {\n                var /** @type {?} */ start = startingStyleLookup;\n                var /** @type {?} */ end = formattedSteps[0];\n                end['offset'] = null;\n                formattedSteps = [start, end];\n            }\n            var /** @type {?} */ playerOptions = {\n                'duration': duration,\n                'delay': delay,\n                'fill': 'both' // we use `both` because it allows for styling at 0% to work with `delay`\n            };\n            // we check for this to avoid having a null|undefined value be present\n            // for the easing (which results in an error for certain browsers #9752)\n            if (easing) {\n                playerOptions['easing'] = easing;\n            }\n            // there may be a chance a NoOp player is returned depending\n            // on when the previous animation was cancelled\n            previousPlayers = previousPlayers.filter(filterWebAnimationPlayerFn);\n            return new WebAnimationsPlayer(element, formattedSteps, playerOptions, /** @type {?} */ (previousPlayers));\n        };\n        return WebAnimationsDriver;\n    }());\n    /**\n     * @param {?} styles\n     * @param {?} defaultStyles\n     * @return {?}\n     */\n    function _populateStyles(styles, defaultStyles) {\n        var /** @type {?} */ data = {};\n        styles.styles.forEach(function (entry) { Object.keys(entry).forEach(function (prop) { data[prop] = entry[prop]; }); });\n        Object.keys(defaultStyles).forEach(function (prop) {\n            if (!isPresent(data[prop])) {\n                data[prop] = defaultStyles[prop];\n            }\n        });\n        return data;\n    }\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    function filterWebAnimationPlayerFn(player) {\n        return player instanceof WebAnimationsPlayer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides DOM operations in any browser environment.\n     *\n     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     * @abstract\n     */\n    var GenericBrowserDomAdapter = (function (_super) {\n        __extends$1(GenericBrowserDomAdapter, _super);\n        function GenericBrowserDomAdapter() {\n            var _this = this;\n            _super.call(this);\n            this._animationPrefix = null;\n            this._transitionEnd = null;\n            try {\n                var element_1 = this.createElement('div', this.defaultDoc());\n                if (isPresent(this.getStyle(element_1, 'animationName'))) {\n                    this._animationPrefix = '';\n                }\n                else {\n                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                    for (var i = 0; i < domPrefixes.length; i++) {\n                        if (isPresent(this.getStyle(element_1, domPrefixes[i] + 'AnimationName'))) {\n                            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                            break;\n                        }\n                    }\n                }\n                var transEndEventNames_1 = {\n                    WebkitTransition: 'webkitTransitionEnd',\n                    MozTransition: 'transitionend',\n                    OTransition: 'oTransitionEnd otransitionend',\n                    transition: 'transitionend'\n                };\n                Object.keys(transEndEventNames_1).forEach(function (key) {\n                    if (isPresent(_this.getStyle(element_1, key))) {\n                        _this._transitionEnd = transEndEventNames_1[key];\n                    }\n                });\n            }\n            catch (e) {\n                this._animationPrefix = null;\n                this._transitionEnd = null;\n            }\n        }\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return ((el)).getDistributedNodes(); };\n        /**\n         * @param {?} el\n         * @param {?} baseUrl\n         * @param {?} href\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n        };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n            return typeof ((this.defaultDoc().body)).createShadowRoot === 'function';\n        };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n            return isPresent(this._animationPrefix) && isPresent(this._transitionEnd);\n        };\n        return GenericBrowserDomAdapter;\n    }(DomAdapter));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ _attrToPropMap = {\n        'class': 'className',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    var /** @type {?} */ DOM_KEY_LOCATION_NUMPAD = 3;\n    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n    var /** @type {?} */ _keyMap = {\n        // The following values are here for cross-browser compatibility and to match the W3C standard\n        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n        '\\b': 'Backspace',\n        '\\t': 'Tab',\n        '\\x7F': 'Delete',\n        '\\x1B': 'Escape',\n        'Del': 'Delete',\n        'Esc': 'Escape',\n        'Left': 'ArrowLeft',\n        'Right': 'ArrowRight',\n        'Up': 'ArrowUp',\n        'Down': 'ArrowDown',\n        'Menu': 'ContextMenu',\n        'Scroll': 'ScrollLock',\n        'Win': 'OS'\n    };\n    // There is a bug in Chrome for numeric keypad keys:\n    // https://code.google.com/p/chromium/issues/detail?id=155654\n    // 1, 2, 3 ... are reported as A, B, C ...\n    var /** @type {?} */ _chromeNumKeyPadMap = {\n        'A': '1',\n        'B': '2',\n        'C': '3',\n        'D': '4',\n        'E': '5',\n        'F': '6',\n        'G': '7',\n        'H': '8',\n        'I': '9',\n        'J': '*',\n        'K': '+',\n        'M': '-',\n        'N': '.',\n        'O': '/',\n        '\\x60': '0',\n        '\\x90': 'NumLock'\n    };\n    var BrowserDomAdapter = (function (_super) {\n        __extends(BrowserDomAdapter, _super);\n        function BrowserDomAdapter() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} templateHtml\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n        /**\n         * @param {?} el\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { ((el))[name] = value; };\n        /**\n         * @param {?} el\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getProperty = function (el, name) { return ((el))[name]; };\n        /**\n         * @param {?} el\n         * @param {?} methodName\n         * @param {?} args\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (_a = ((el)))[methodName].apply(_a, args); var _a; };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.logError = function (error) {\n            if (window.console) {\n                if (console.error) {\n                    console.error(error);\n                }\n                else {\n                    console.log(error);\n                }\n            }\n        };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.log = function (error) {\n            if (window.console) {\n                window.console.log && window.console.log(error);\n            }\n        };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.logGroup = function (error) {\n            if (window.console) {\n                window.console.group && window.console.group(error);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.logGroupEnd = function () {\n            if (window.console) {\n                window.console.groupEnd && window.console.groupEnd();\n            }\n        };\n        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return _attrToPropMap; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\n        /**\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.querySelector = function (el, selector) {\n            return (el.querySelector(selector));\n        };\n        /**\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n        /**\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n        /**\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n            el.addEventListener(evt, listener, false);\n            // Needed to follow Dart's subscription semantic, until fix of\n            // https://code.google.com/p/dart/issues/detail?id=17406\n            return function () { el.removeEventListener(evt, listener, false); };\n        };\n        /**\n         * @param {?} el\n         * @param {?} evt\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n        /**\n         * @param {?} eventType\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n            var /** @type {?} */ evt = document.createEvent('MouseEvent');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        /**\n         * @param {?} eventType\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createEvent = function (eventType) {\n            var /** @type {?} */ evt = document.createEvent('Event');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        /**\n         * @param {?} evt\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.preventDefault = function (evt) {\n            evt.preventDefault();\n            evt.returnValue = false;\n        };\n        /**\n         * @param {?} evt\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isPrevented = function (evt) {\n            return evt.defaultPrevented || isPresent(evt.returnValue) && !evt.returnValue;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n            return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.content = function (node) {\n            if (this.hasProperty(node, 'content')) {\n                return ((node)).content;\n            }\n            else {\n                return node;\n            }\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n            var /** @type {?} */ childNodes = el.childNodes;\n            var /** @type {?} */ res = new Array(childNodes.length);\n            for (var /** @type {?} */ i = 0; i < childNodes.length; i++) {\n                res[i] = childNodes[i];\n            }\n            return res;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.clearNodes = function (el) {\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n        };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n        /**\n         * @param {?} el\n         * @param {?} newChild\n         * @param {?} oldChild\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.remove = function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n            return node;\n        };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\n        /**\n         * @param {?} el\n         * @param {?} nodes\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {\n            nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); });\n        };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n        /**\n         * @param {?} html\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createTemplate = function (html) {\n            var /** @type {?} */ t = document.createElement('template');\n            t.innerHTML = html;\n            return t;\n        };\n        /**\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElement(tagName);\n        };\n        /**\n         * @param {?} ns\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElementNS(ns, tagName);\n        };\n        /**\n         * @param {?} text\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createTextNode(text);\n        };\n        /**\n         * @param {?} attrName\n         * @param {?} attrValue\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n            if (doc === void 0) { doc = document; }\n            var /** @type {?} */ el = (doc.createElement('SCRIPT'));\n            el.setAttribute(attrName, attrValue);\n            return el;\n        };\n        /**\n         * @param {?} css\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n            if (doc === void 0) { doc = document; }\n            var /** @type {?} */ style = (doc.createElement('style'));\n            this.appendChild(style, this.createTextNode(css));\n            return style;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return ((el)).createShadowRoot(); };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return ((el)).shadowRoot; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getHost = function (el) { return ((el)).host; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n            return element.getElementsByClassName(name);\n        };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n            return element.getElementsByTagName(name);\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n        /**\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n        /**\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n        /**\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasClass = function (element, className) {\n            return element.classList.contains(className);\n        };\n        /**\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n            element.style[styleName] = styleValue;\n        };\n        /**\n         * @param {?} element\n         * @param {?} stylename\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            element.style[stylename] = '';\n        };\n        /**\n         * @param {?} element\n         * @param {?} stylename\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n        /**\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?=} styleValue\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n            if (styleValue === void 0) { styleValue = null; }\n            var /** @type {?} */ value = this.getStyle(element, styleName) || '';\n            return styleValue ? value == styleValue : value.length > 0;\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.attributeMap = function (element) {\n            var /** @type {?} */ res = new Map();\n            var /** @type {?} */ elAttrs = element.attributes;\n            for (var /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n                var /** @type {?} */ attrib = elAttrs[i];\n                res.set(attrib.name, attrib.value);\n            }\n            return res;\n        };\n        /**\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n            return element.hasAttribute(attribute);\n        };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n            return element.hasAttributeNS(ns, attribute);\n        };\n        /**\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n            return element.getAttribute(attribute);\n        };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n            return element.getAttributeNS(ns, name);\n        };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n            element.setAttributeNS(ns, name, value);\n        };\n        /**\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n            element.removeAttributeNS(ns, name);\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createHtmlDocument = function () {\n            return document.implementation.createHTMLDocument('fakeTitle');\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n            try {\n                return el.getBoundingClientRect();\n            }\n            catch (e) {\n                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\n        /**\n         * @param {?} newTitle\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\n        /**\n         * @param {?} n\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n            if (n instanceof HTMLElement) {\n                return n.matches && n.matches(selector) ||\n                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n            }\n            return false;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n            return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n        };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n            return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n        };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getHref = function (el) { return ((el)).href; };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getEventKey = function (event) {\n            var /** @type {?} */ key = event.key;\n            if (isBlank(key)) {\n                key = event.keyIdentifier;\n                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n                // Safari cf\n                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n                if (isBlank(key)) {\n                    return 'Unidentified';\n                }\n                if (key.startsWith('U+')) {\n                    key = String.fromCharCode(parseInt(key.substring(2), 16));\n                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                        // There is a bug in Chrome for numeric keypad keys:\n                        // https://code.google.com/p/chromium/issues/detail?id=155654\n                        // 1, 2, 3 ... are reported as A, B, C ...\n                        key = ((_chromeNumKeyPadMap))[key];\n                    }\n                }\n            }\n            return _keyMap[key] || key;\n        };\n        /**\n         * @param {?} target\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\n            if (target === 'window') {\n                return window;\n            }\n            if (target === 'document') {\n                return document;\n            }\n            if (target === 'body') {\n                return document.body;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getBaseHref = function () {\n            var /** @type {?} */ href = getBaseElementHref();\n            return isBlank(href) ? null : relativePath(href);\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setData = function (element, name, value) {\n            this.setAttribute(element, 'data-' + name, value);\n        };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getData = function (element, name) {\n            return this.getAttribute(element, 'data-' + name);\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n        /**\n         * @param {?} path\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(global$1, path, value); };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n            return typeof ((Element)).prototype['animate'] === 'function';\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.performanceNow = function () {\n            // performance.now() is not available in all browsers, see\n            // http://caniuse.com/#search=performance.now\n            return window.performance && window.performance.now ? window.performance.now() :\n                new Date().getTime();\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setCookie = function (name, value) {\n            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n            // not clear other cookies.\n            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n        };\n        return BrowserDomAdapter;\n    }(GenericBrowserDomAdapter));\n    var /** @type {?} */ baseElement = null;\n    /**\n     * @return {?}\n     */\n    function getBaseElementHref() {\n        if (!baseElement) {\n            baseElement = document.querySelector('base');\n            if (!baseElement) {\n                return null;\n            }\n        }\n        return baseElement.getAttribute('href');\n    }\n    // based on urlUtils.js in AngularJS 1\n    var /** @type {?} */ urlParsingNode;\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function relativePath(url) {\n        if (!urlParsingNode) {\n            urlParsingNode = document.createElement('a');\n        }\n        urlParsingNode.setAttribute('href', url);\n        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname;\n    }\n    /**\n     * @param {?} cookieStr\n     * @param {?} name\n     * @return {?}\n     */\n    function parseCookieValue(cookieStr, name) {\n        name = encodeURIComponent(name);\n        for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n            var cookie = _a[_i];\n            var /** @type {?} */ eqIndex = cookie.indexOf('=');\n            var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     * @return {?}\n     */\n    function supportsState() {\n        return !!window.history.pushState;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n     * This class should not be used directly by an application developer. Instead, use\n     * {\\@link Location}.\n     */\n    var BrowserPlatformLocation = (function (_super) {\n        __extends$2(BrowserPlatformLocation, _super);\n        function BrowserPlatformLocation() {\n            _super.call(this);\n            this._init();\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype._init = function () {\n            this._location = getDOM().getLocation();\n            this._history = getDOM().getHistory();\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.onPopState = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location.pathname; },\n            /**\n             * @param {?} newPath\n             * @return {?}\n             */\n            set: function (newPath) { this._location.pathname = newPath; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location.search; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location.hash; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.pushState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.replaceState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n        /**\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n        BrowserPlatformLocation.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        BrowserPlatformLocation.ctorParameters = function () { return []; };\n        return BrowserPlatformLocation;\n    }(_angular_common.PlatformLocation));\n\n    var BrowserGetTestability = (function () {\n        function BrowserGetTestability() {\n        }\n        /**\n         * @return {?}\n         */\n        BrowserGetTestability.init = function () { core.setTestabilityGetter(new BrowserGetTestability()); };\n        /**\n         * @param {?} registry\n         * @return {?}\n         */\n        BrowserGetTestability.prototype.addToWindow = function (registry) {\n            global$1.getAngularTestability = function (elem, findInAncestors) {\n                if (findInAncestors === void 0) { findInAncestors = true; }\n                var /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n                if (testability == null) {\n                    throw new Error('Could not find testability for element.');\n                }\n                return testability;\n            };\n            global$1.getAllAngularTestabilities = function () { return registry.getAllTestabilities(); };\n            global$1.getAllAngularRootElements = function () { return registry.getAllRootElements(); };\n            var /** @type {?} */ whenAllStable = function (callback /** TODO #9100 */) {\n                var /** @type {?} */ testabilities = global$1.getAllAngularTestabilities();\n                var /** @type {?} */ count = testabilities.length;\n                var /** @type {?} */ didWork = false;\n                var /** @type {?} */ decrement = function (didWork_ /** TODO #9100 */) {\n                    didWork = didWork || didWork_;\n                    count--;\n                    if (count == 0) {\n                        callback(didWork);\n                    }\n                };\n                testabilities.forEach(function (testability /** TODO #9100 */) {\n                    testability.whenStable(decrement);\n                });\n            };\n            if (!global$1['frameworkStabilizers']) {\n                global$1['frameworkStabilizers'] = [];\n            }\n            global$1['frameworkStabilizers'].push(whenAllStable);\n        };\n        /**\n         * @param {?} registry\n         * @param {?} elem\n         * @param {?} findInAncestors\n         * @return {?}\n         */\n        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            if (elem == null) {\n                return null;\n            }\n            var /** @type {?} */ t = registry.getTestability(elem);\n            if (isPresent(t)) {\n                return t;\n            }\n            else if (!findInAncestors) {\n                return null;\n            }\n            if (getDOM().isShadowRoot(elem)) {\n                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n            }\n            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n        };\n        return BrowserGetTestability;\n    }());\n\n    /**\n     * A service that can be used to get and set the title of a current HTML document.\n     *\n     * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n     * title value.\n     *\n     * \\@experimental\n     */\n    var Title = (function () {\n        function Title() {\n        }\n        /**\n         * Get the title of the current HTML document.\n         * @return {?}\n         */\n        Title.prototype.getTitle = function () { return getDOM().getTitle(); };\n        /**\n         * Set the title of the current HTML document.\n         * @param {?} newTitle\n         * @return {?}\n         */\n        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(newTitle); };\n        return Title;\n    }());\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.merge = function (m1, m2) {\n            var /** @type {?} */ m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.equals = function (m1, m2) {\n            var /** @type {?} */ k1 = Object.keys(m1);\n            var /** @type {?} */ k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n                var /** @type {?} */ key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n\n    /**\n     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n     *\n     * Note: Document might not be available in the Application Context when Application and Rendering\n     * Contexts are not the same (e.g. when running the application into a Web Worker).\n     *\n     * @stable\n     */\n    var /** @type {?} */ DOCUMENT = new core.OpaqueToken('DocumentToken');\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ EVENT_MANAGER_PLUGINS = new core.OpaqueToken('EventManagerPlugins');\n    /**\n     * \\@stable\n     */\n    var EventManager = (function () {\n        /**\n         * @param {?} plugins\n         * @param {?} _zone\n         */\n        function EventManager(plugins, _zone) {\n            var _this = this;\n            this._zone = _zone;\n            this._eventNameToPlugin = new Map();\n            plugins.forEach(function (p) { return p.manager = _this; });\n            this._plugins = plugins.slice().reverse();\n        }\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManager.prototype.addEventListener = function (element, eventName, handler) {\n            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n            return plugin.addEventListener(element, eventName, handler);\n        };\n        /**\n         * @param {?} target\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n            return plugin.addGlobalEventListener(target, eventName, handler);\n        };\n        /**\n         * @return {?}\n         */\n        EventManager.prototype.getZone = function () { return this._zone; };\n        /**\n         * \\@internal\n         * @param {?} eventName\n         * @return {?}\n         */\n        EventManager.prototype._findPluginFor = function (eventName) {\n            var /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n            if (plugin) {\n                return plugin;\n            }\n            var /** @type {?} */ plugins = this._plugins;\n            for (var /** @type {?} */ i = 0; i < plugins.length; i++) {\n                var /** @type {?} */ plugin_1 = plugins[i];\n                if (plugin_1.supports(eventName)) {\n                    this._eventNameToPlugin.set(eventName, plugin_1);\n                    return plugin_1;\n                }\n            }\n            throw new Error(\"No event manager plugin found for event \" + eventName);\n        };\n        EventManager.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        EventManager.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n            { type: core.NgZone, },\n        ]; };\n        return EventManager;\n    }());\n    /**\n     * @abstract\n     */\n    var EventManagerPlugin = (function () {\n        function EventManagerPlugin() {\n        }\n        /**\n         * @abstract\n         * @param {?} eventName\n         * @return {?}\n         */\n        EventManagerPlugin.prototype.supports = function (eventName) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) { };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n            var /** @type {?} */ target = getDOM().getGlobalEventTarget(element);\n            if (!target) {\n                throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n            }\n            return this.addEventListener(target, eventName, handler);\n        };\n        ;\n        return EventManagerPlugin;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var SharedStylesHost = (function () {\n        function SharedStylesHost() {\n            /** @internal */\n            this._stylesSet = new Set();\n        }\n        /**\n         * @param {?} styles\n         * @return {?}\n         */\n        SharedStylesHost.prototype.addStyles = function (styles) {\n            var _this = this;\n            var /** @type {?} */ additions = new Set();\n            styles.forEach(function (style) {\n                if (!_this._stylesSet.has(style)) {\n                    _this._stylesSet.add(style);\n                    additions.add(style);\n                }\n            });\n            this.onStylesAdded(additions);\n        };\n        /**\n         * @param {?} additions\n         * @return {?}\n         */\n        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n        /**\n         * @return {?}\n         */\n        SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n        SharedStylesHost.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        SharedStylesHost.ctorParameters = function () { return []; };\n        return SharedStylesHost;\n    }());\n    var DomSharedStylesHost = (function (_super) {\n        __extends$4(DomSharedStylesHost, _super);\n        /**\n         * @param {?} _doc\n         */\n        function DomSharedStylesHost(_doc) {\n            _super.call(this);\n            this._doc = _doc;\n            this._hostNodes = new Set();\n            this._styleNodes = new Set();\n            this._hostNodes.add(_doc.head);\n        }\n        /**\n         * @param {?} styles\n         * @param {?} host\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n            var _this = this;\n            styles.forEach(function (style) {\n                var /** @type {?} */ styleEl = _this._doc.createElement('style');\n                styleEl.textContent = style;\n                _this._styleNodes.add(host.appendChild(styleEl));\n            });\n        };\n        /**\n         * @param {?} hostNode\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.addHost = function (hostNode) {\n            this._addStylesToHost(this._stylesSet, hostNode);\n            this._hostNodes.add(hostNode);\n        };\n        /**\n         * @param {?} hostNode\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n        /**\n         * @param {?} additions\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n            var _this = this;\n            this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n        };\n        /**\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n        DomSharedStylesHost.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSharedStylesHost.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n        ]; };\n        return DomSharedStylesHost;\n    }(SharedStylesHost));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ NAMESPACE_URIS = {\n        'xlink': 'http://www.w3.org/1999/xlink',\n        'svg': 'http://www.w3.org/2000/svg',\n        'xhtml': 'http://www.w3.org/1999/xhtml'\n    };\n    var /** @type {?} */ TEMPLATE_COMMENT_TEXT = 'template bindings={}';\n    var /** @type {?} */ TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/;\n    /**\n     * @abstract\n     */\n    var DomRootRenderer = (function () {\n        /**\n         * @param {?} document\n         * @param {?} eventManager\n         * @param {?} sharedStylesHost\n         * @param {?} animationDriver\n         * @param {?} appId\n         */\n        function DomRootRenderer(document, eventManager, sharedStylesHost, animationDriver, appId) {\n            this.document = document;\n            this.eventManager = eventManager;\n            this.sharedStylesHost = sharedStylesHost;\n            this.animationDriver = animationDriver;\n            this.appId = appId;\n            this.registeredComponents = new Map();\n        }\n        /**\n         * @param {?} componentProto\n         * @return {?}\n         */\n        DomRootRenderer.prototype.renderComponent = function (componentProto) {\n            var /** @type {?} */ renderer = this.registeredComponents.get(componentProto.id);\n            if (!renderer) {\n                renderer = new DomRenderer(this, componentProto, this.animationDriver, this.appId + \"-\" + componentProto.id);\n                this.registeredComponents.set(componentProto.id, renderer);\n            }\n            return renderer;\n        };\n        return DomRootRenderer;\n    }());\n    var DomRootRenderer_ = (function (_super) {\n        __extends$3(DomRootRenderer_, _super);\n        /**\n         * @param {?} _document\n         * @param {?} _eventManager\n         * @param {?} sharedStylesHost\n         * @param {?} animationDriver\n         * @param {?} appId\n         */\n        function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animationDriver, appId) {\n            _super.call(this, _document, _eventManager, sharedStylesHost, animationDriver, appId);\n        }\n        DomRootRenderer_.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomRootRenderer_.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n            { type: EventManager, },\n            { type: DomSharedStylesHost, },\n            { type: AnimationDriver, },\n            { type: undefined, decorators: [{ type: core.Inject, args: [core.APP_ID,] },] },\n        ]; };\n        return DomRootRenderer_;\n    }(DomRootRenderer));\n    var /** @type {?} */ DIRECT_DOM_RENDERER = {\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        remove: function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        },\n        /**\n         * @param {?} node\n         * @param {?} parent\n         * @return {?}\n         */\n        appendChild: function (node, parent) { parent.appendChild(node); },\n        /**\n         * @param {?} node\n         * @param {?} refNode\n         * @return {?}\n         */\n        insertBefore: function (node, refNode) { refNode.parentNode.insertBefore(node, refNode); },\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        nextSibling: function (node) { return node.nextSibling; },\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        parentElement: function (node) { return (node.parentNode); }\n    };\n    var DomRenderer = (function () {\n        /**\n         * @param {?} _rootRenderer\n         * @param {?} componentProto\n         * @param {?} _animationDriver\n         * @param {?} styleShimId\n         */\n        function DomRenderer(_rootRenderer, componentProto, _animationDriver, styleShimId) {\n            this._rootRenderer = _rootRenderer;\n            this.componentProto = componentProto;\n            this._animationDriver = _animationDriver;\n            this.directRenderer = DIRECT_DOM_RENDERER;\n            this._styles = flattenStyles(styleShimId, componentProto.styles, []);\n            if (componentProto.encapsulation !== core.ViewEncapsulation.Native) {\n                this._rootRenderer.sharedStylesHost.addStyles(this._styles);\n            }\n            if (this.componentProto.encapsulation === core.ViewEncapsulation.Emulated) {\n                this._contentAttr = shimContentAttribute(styleShimId);\n                this._hostAttr = shimHostAttribute(styleShimId);\n            }\n            else {\n                this._contentAttr = null;\n                this._hostAttr = null;\n            }\n        }\n        /**\n         * @param {?} selectorOrNode\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var /** @type {?} */ el;\n            if (typeof selectorOrNode === 'string') {\n                el = this._rootRenderer.document.querySelector(selectorOrNode);\n                if (!el) {\n                    throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n                }\n            }\n            else {\n                el = selectorOrNode;\n            }\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n            return el;\n        };\n        /**\n         * @param {?} parent\n         * @param {?} name\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.createElement = function (parent, name, debugInfo) {\n            var /** @type {?} */ el;\n            if (isNamespaced(name)) {\n                var /** @type {?} */ nsAndName = splitNamespace(name);\n                el = document.createElementNS((NAMESPACE_URIS)[nsAndName[0]], nsAndName[1]);\n            }\n            else {\n                el = document.createElement(name);\n            }\n            if (this._contentAttr) {\n                el.setAttribute(this._contentAttr, '');\n            }\n            if (parent) {\n                parent.appendChild(el);\n            }\n            return el;\n        };\n        /**\n         * @param {?} hostElement\n         * @return {?}\n         */\n        DomRenderer.prototype.createViewRoot = function (hostElement) {\n            var /** @type {?} */ nodesParent;\n            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native) {\n                nodesParent = ((hostElement)).createShadowRoot();\n                for (var /** @type {?} */ i = 0; i < this._styles.length; i++) {\n                    var /** @type {?} */ styleEl = document.createElement('style');\n                    styleEl.textContent = this._styles[i];\n                    nodesParent.appendChild(styleEl);\n                }\n            }\n            else {\n                if (this._hostAttr) {\n                    hostElement.setAttribute(this._hostAttr, '');\n                }\n                nodesParent = hostElement;\n            }\n            return nodesParent;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var /** @type {?} */ comment = document.createComment(TEMPLATE_COMMENT_TEXT);\n            if (parentElement) {\n                parentElement.appendChild(comment);\n            }\n            return comment;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} value\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var /** @type {?} */ node = document.createTextNode(value);\n            if (parentElement) {\n                parentElement.appendChild(node);\n            }\n            return node;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} nodes\n         * @return {?}\n         */\n        DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            if (!parentElement)\n                return;\n            appendNodes(parentElement, nodes);\n        };\n        /**\n         * @param {?} node\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) { moveNodesAfterSibling(node, viewRootNodes); };\n        /**\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DomRenderer.prototype.detachView = function (viewRootNodes) {\n            for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n                var /** @type {?} */ node = viewRootNodes[i];\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n            }\n        };\n        /**\n         * @param {?} hostElement\n         * @param {?} viewAllNodes\n         * @return {?}\n         */\n        DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native && hostElement) {\n                this._rootRenderer.sharedStylesHost.removeHost(((hostElement)).shadowRoot);\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DomRenderer.prototype.listen = function (renderElement, name, callback) {\n            return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\n        };\n        /**\n         * @param {?} target\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            ((renderElement))[propertyName] = propertyValue;\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} attributeName\n         * @param {?} attributeValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var /** @type {?} */ attrNs;\n            var /** @type {?} */ attrNameWithoutNs = attributeName;\n            if (isNamespaced(attributeName)) {\n                var /** @type {?} */ nsAndName = splitNamespace(attributeName);\n                attrNameWithoutNs = nsAndName[1];\n                attributeName = nsAndName[0] + ':' + nsAndName[1];\n                attrNs = NAMESPACE_URIS[nsAndName[0]];\n            }\n            if (isPresent(attributeValue)) {\n                if (attrNs) {\n                    renderElement.setAttributeNS(attrNs, attributeName, attributeValue);\n                }\n                else {\n                    renderElement.setAttribute(attributeName, attributeValue);\n                }\n            }\n            else {\n                if (isPresent(attrNs)) {\n                    renderElement.removeAttributeNS(attrNs, attrNameWithoutNs);\n                }\n                else {\n                    renderElement.removeAttribute(attributeName);\n                }\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            if (renderElement.nodeType === Node.COMMENT_NODE) {\n                var /** @type {?} */ existingBindings = renderElement.nodeValue.replace(/\\n/g, '').match(TEMPLATE_BINDINGS_EXP);\n                var /** @type {?} */ parsedBindings = JSON.parse(existingBindings[1]);\n                parsedBindings[propertyName] = propertyValue;\n                renderElement.nodeValue =\n                    TEMPLATE_COMMENT_TEXT.replace('{}', JSON.stringify(parsedBindings, null, 2));\n            }\n            else {\n                this.setElementAttribute(renderElement, propertyName, propertyValue);\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} className\n         * @param {?} isAdd\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                renderElement.classList.add(className);\n            }\n            else {\n                renderElement.classList.remove(className);\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (isPresent(styleValue)) {\n                ((renderElement.style))[styleName] = stringify(styleValue);\n            }\n            else {\n                // IE requires '' instead of null\n                // see https://github.com/angular/angular/issues/7916\n                ((renderElement.style))[styleName] = '';\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} methodName\n         * @param {?} args\n         * @return {?}\n         */\n        DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            ((renderElement))[methodName].apply(renderElement, args);\n        };\n        /**\n         * @param {?} renderNode\n         * @param {?} text\n         * @return {?}\n         */\n        DomRenderer.prototype.setText = function (renderNode, text) { renderNode.nodeValue = text; };\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        DomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            if (this._rootRenderer.document.body.contains(element)) {\n                return this._animationDriver.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n            }\n            return new NoOpAnimationPlayer();\n        };\n        return DomRenderer;\n    }());\n    /**\n     * @param {?} sibling\n     * @param {?} nodes\n     * @return {?}\n     */\n    function moveNodesAfterSibling(sibling, nodes) {\n        var /** @type {?} */ parent = sibling.parentNode;\n        if (nodes.length > 0 && parent) {\n            var /** @type {?} */ nextSibling = sibling.nextSibling;\n            if (nextSibling) {\n                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n                    parent.insertBefore(nodes[i], nextSibling);\n                }\n            }\n            else {\n                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n                    parent.appendChild(nodes[i]);\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} parent\n     * @param {?} nodes\n     * @return {?}\n     */\n    function appendNodes(parent, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            parent.appendChild(nodes[i]);\n        }\n    }\n    /**\n     * @param {?} eventHandler\n     * @return {?}\n     */\n    function decoratePreventDefault(eventHandler) {\n        return function (event) {\n            var /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                // TODO(tbosch): move preventDefault into event plugins...\n                event.preventDefault();\n                event.returnValue = false;\n            }\n        };\n    }\n    var /** @type {?} */ COMPONENT_REGEX = /%COMP%/g;\n    var /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\n    var /** @type {?} */ HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n    var /** @type {?} */ CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n    /**\n     * @param {?} componentShortId\n     * @return {?}\n     */\n    function shimContentAttribute(componentShortId) {\n        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    /**\n     * @param {?} componentShortId\n     * @return {?}\n     */\n    function shimHostAttribute(componentShortId) {\n        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    /**\n     * @param {?} compId\n     * @param {?} styles\n     * @param {?} target\n     * @return {?}\n     */\n    function flattenStyles(compId, styles, target) {\n        for (var /** @type {?} */ i = 0; i < styles.length; i++) {\n            var /** @type {?} */ style = styles[i];\n            if (Array.isArray(style)) {\n                flattenStyles(compId, style, target);\n            }\n            else {\n                style = style.replace(COMPONENT_REGEX, compId);\n                target.push(style);\n            }\n        }\n        return target;\n    }\n    var /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    function isNamespaced(name) {\n        return name[0] === ':';\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    function splitNamespace(name) {\n        var /** @type {?} */ match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n\n    var /** @type {?} */ CORE_TOKENS = {\n        'ApplicationRef': core.ApplicationRef,\n        'NgZone': core.NgZone,\n    };\n    var /** @type {?} */ INSPECT_GLOBAL_NAME = 'ng.probe';\n    var /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n    /**\n     * Returns a {\\@link DebugElement} for the given native DOM element, or\n     * null if the given native element does not have an Angular view associated\n     * with it.\n     * @param {?} element\n     * @return {?}\n     */\n    function inspectNativeElement(element) {\n        return core.getDebugNode(element);\n    }\n    /**\n     * Deprecated. Use the one from '\\@angular/core'.\n     * @deprecated\n     */\n    var NgProbeToken = (function () {\n        /**\n         * @param {?} name\n         * @param {?} token\n         */\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * @param {?} rootRenderer\n     * @param {?} extraTokens\n     * @param {?} coreTokens\n     * @return {?}\n     */\n    function _createConditionalRootRenderer(rootRenderer, extraTokens, coreTokens) {\n        return core.isDevMode() ?\n            _createRootRenderer(rootRenderer, (extraTokens || []).concat(coreTokens || [])) :\n            rootRenderer;\n    }\n    /**\n     * @param {?} rootRenderer\n     * @param {?} extraTokens\n     * @return {?}\n     */\n    function _createRootRenderer(rootRenderer, extraTokens) {\n        getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n        getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n        return new DebugDomRootRenderer(rootRenderer);\n    }\n    /**\n     * @param {?} tokens\n     * @return {?}\n     */\n    function _ngProbeTokensToMap(tokens) {\n        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n    }\n    /**\n     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n     */\n    var /** @type {?} */ ELEMENT_PROBE_PROVIDERS = [{\n            provide: core.RootRenderer,\n            useFactory: _createConditionalRootRenderer,\n            deps: [\n                DomRootRenderer, [NgProbeToken, new core.Optional()],\n                [core.NgProbeToken, new core.Optional()]\n            ]\n        }];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var DomEventsPlugin = (function (_super) {\n        __extends$5(DomEventsPlugin, _super);\n        function DomEventsPlugin() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            element.addEventListener(eventName, /** @type {?} */ (handler), false);\n            return function () { return element.removeEventListener(eventName, /** @type {?} */ (handler), false); };\n        };\n        DomEventsPlugin.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomEventsPlugin.ctorParameters = function () { return []; };\n        return DomEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ EVENT_NAMES = {\n        // pan\n        'pan': true,\n        'panstart': true,\n        'panmove': true,\n        'panend': true,\n        'pancancel': true,\n        'panleft': true,\n        'panright': true,\n        'panup': true,\n        'pandown': true,\n        // pinch\n        'pinch': true,\n        'pinchstart': true,\n        'pinchmove': true,\n        'pinchend': true,\n        'pinchcancel': true,\n        'pinchin': true,\n        'pinchout': true,\n        // press\n        'press': true,\n        'pressup': true,\n        // rotate\n        'rotate': true,\n        'rotatestart': true,\n        'rotatemove': true,\n        'rotateend': true,\n        'rotatecancel': true,\n        // swipe\n        'swipe': true,\n        'swipeleft': true,\n        'swiperight': true,\n        'swipeup': true,\n        'swipedown': true,\n        // tap\n        'tap': true,\n    };\n    /**\n     * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure\n     * Hammer gestures.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ HAMMER_GESTURE_CONFIG = new core.OpaqueToken('HammerGestureConfig');\n    /**\n     * \\@experimental\n     */\n    var HammerGestureConfig = (function () {\n        function HammerGestureConfig() {\n            this.events = [];\n            this.overrides = {};\n        }\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        HammerGestureConfig.prototype.buildHammer = function (element) {\n            var /** @type {?} */ mc = new Hammer(element);\n            mc.get('pinch').set({ enable: true });\n            mc.get('rotate').set({ enable: true });\n            for (var eventName in this.overrides) {\n                mc.get(eventName).set(this.overrides[eventName]);\n            }\n            return mc;\n        };\n        HammerGestureConfig.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGestureConfig.ctorParameters = function () { return []; };\n        return HammerGestureConfig;\n    }());\n    var HammerGesturesPlugin = (function (_super) {\n        __extends$6(HammerGesturesPlugin, _super);\n        /**\n         * @param {?} _config\n         */\n        function HammerGesturesPlugin(_config) {\n            _super.call(this);\n            this._config = _config;\n        }\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        HammerGesturesPlugin.prototype.supports = function (eventName) {\n            if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n                return false;\n            }\n            if (!((window)).Hammer) {\n                throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n            }\n            return true;\n        };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var _this = this;\n            var /** @type {?} */ zone = this.manager.getZone();\n            eventName = eventName.toLowerCase();\n            return zone.runOutsideAngular(function () {\n                // Creating the manager bind events, must be done outside of angular\n                var /** @type {?} */ mc = _this._config.buildHammer(element);\n                var /** @type {?} */ callback = function (eventObj) {\n                    zone.runGuarded(function () { handler(eventObj); });\n                };\n                mc.on(eventName, callback);\n                return function () { return mc.off(eventName, callback); };\n            });\n        };\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n        HammerGesturesPlugin.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGesturesPlugin.ctorParameters = function () { return [\n            { type: HammerGestureConfig, decorators: [{ type: core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n        ]; };\n        return HammerGesturesPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n    var /** @type {?} */ MODIFIER_KEY_GETTERS = {\n        'alt': function (event) { return event.altKey; },\n        'control': function (event) { return event.ctrlKey; },\n        'meta': function (event) { return event.metaKey; },\n        'shift': function (event) { return event.shiftKey; }\n    };\n    /**\n     * \\@experimental\n     */\n    var KeyEventsPlugin = (function (_super) {\n        __extends$7(KeyEventsPlugin, _super);\n        function KeyEventsPlugin() {\n            _super.call(this);\n        }\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var /** @type {?} */ parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n            var /** @type {?} */ outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n            return this.manager.getZone().runOutsideAngular(function () {\n                return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n            });\n        };\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        KeyEventsPlugin.parseEventName = function (eventName) {\n            var /** @type {?} */ parts = eventName.toLowerCase().split('.');\n            var /** @type {?} */ domEventName = parts.shift();\n            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n                return null;\n            }\n            var /** @type {?} */ key = KeyEventsPlugin._normalizeKey(parts.pop());\n            var /** @type {?} */ fullKey = '';\n            MODIFIER_KEYS.forEach(function (modifierName) {\n                var /** @type {?} */ index = parts.indexOf(modifierName);\n                if (index > -1) {\n                    parts.splice(index, 1);\n                    fullKey += modifierName + '.';\n                }\n            });\n            fullKey += key;\n            if (parts.length != 0 || key.length === 0) {\n                // returning null instead of throwing to let another plugin process the event\n                return null;\n            }\n            var /** @type {?} */ result = {};\n            result['domEventName'] = domEventName;\n            result['fullKey'] = fullKey;\n            return result;\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        KeyEventsPlugin.getEventFullKey = function (event) {\n            var /** @type {?} */ fullKey = '';\n            var /** @type {?} */ key = getDOM().getEventKey(event);\n            key = key.toLowerCase();\n            if (key === ' ') {\n                key = 'space'; // for readability\n            }\n            else if (key === '.') {\n                key = 'dot'; // because '.' is used as a separator in event names\n            }\n            MODIFIER_KEYS.forEach(function (modifierName) {\n                if (modifierName != key) {\n                    var /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                    if (modifierGetter(event)) {\n                        fullKey += modifierName + '.';\n                    }\n                }\n            });\n            fullKey += key;\n            return fullKey;\n        };\n        /**\n         * @param {?} fullKey\n         * @param {?} handler\n         * @param {?} zone\n         * @return {?}\n         */\n        KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n            return function (event /** TODO #9100 */) {\n                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                    zone.runGuarded(function () { return handler(event); });\n                }\n            };\n        };\n        /**\n         * \\@internal\n         * @param {?} keyName\n         * @return {?}\n         */\n        KeyEventsPlugin._normalizeKey = function (keyName) {\n            // TODO: switch to a Map if the mapping grows too much\n            switch (keyName) {\n                case 'esc':\n                    return 'escape';\n                default:\n                    return keyName;\n            }\n        };\n        KeyEventsPlugin.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        KeyEventsPlugin.ctorParameters = function () { return []; };\n        return KeyEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var /** @type {?} */ SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var /** @type {?} */ DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    /**\n     * @param {?} srcset\n     * @return {?}\n     */\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\n    var /** @type {?} */ inertElement = null;\n    /** Lazily initialized to make sure the DOM adapter gets set before use. */\n    var /** @type {?} */ DOM = null;\n    /**\n     * Returns an HTML element that is guaranteed to not execute code when creating elements in it.\n     * @return {?}\n     */\n    function getInertElement() {\n        if (inertElement)\n            return inertElement;\n        DOM = getDOM();\n        // Prefer using <template> element if supported.\n        var /** @type {?} */ templateEl = DOM.createElement('template');\n        if ('content' in templateEl)\n            return templateEl;\n        var /** @type {?} */ doc = DOM.createHtmlDocument();\n        inertElement = DOM.querySelector(doc, 'body');\n        if (inertElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so we\n            // need to create one.\n            var /** @type {?} */ html = DOM.createElement('html', doc);\n            inertElement = DOM.createElement('body', doc);\n            DOM.appendChild(html, inertElement);\n            DOM.appendChild(doc, html);\n        }\n        return inertElement;\n    }\n    /**\n     * @param {?} tags\n     * @return {?}\n     */\n    function tagSet(tags) {\n        var /** @type {?} */ res = {};\n        for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n            var t = _a[_i];\n            res[t] = true;\n        }\n        return res;\n    }\n    /**\n     * @param {...?} sets\n     * @return {?}\n     */\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i - 0] = arguments[_i];\n        }\n        var /** @type {?} */ res = {};\n        for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n            var s = sets_1[_a];\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var /** @type {?} */ VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var /** @type {?} */ OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var /** @type {?} */ OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var /** @type {?} */ OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var /** @type {?} */ BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var /** @type {?} */ INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var /** @type {?} */ VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var /** @type {?} */ URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var /** @type {?} */ SRCSET_ATTRS = tagSet('srcset');\n    var /** @type {?} */ HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var /** @type {?} */ VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = (function () {\n        function SanitizingHtmlSerializer() {\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var /** @type {?} */ current = el.firstChild;\n            while (current) {\n                if (DOM.isElementNode(current)) {\n                    this.startElement(/** @type {?} */ (current));\n                }\n                else if (DOM.isTextNode(current)) {\n                    this.chars(DOM.nodeValue(current));\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (DOM.firstChild(current)) {\n                    current = DOM.firstChild(current);\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (DOM.isElementNode(current)) {\n                        this.endElement(/** @type {?} */ (current));\n                    }\n                    if (DOM.nextSibling(current)) {\n                        current = DOM.nextSibling(current);\n                        break;\n                    }\n                    current = DOM.parentElement(current);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var _this = this;\n            var /** @type {?} */ tagName = DOM.nodeName(element).toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            DOM.attributeMap(element).forEach(function (value, attrName) {\n                var /** @type {?} */ lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    _this.sanitizedSomething = true;\n                    return;\n                }\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                _this.buf.push(' ');\n                _this.buf.push(attrName);\n                _this.buf.push('=\"');\n                _this.buf.push(encodeEntities(value));\n                _this.buf.push('\"');\n            });\n            this.buf.push('>');\n        };\n        /**\n         * @param {?} current\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var /** @type {?} */ tagName = DOM.nodeName(current).toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        /**\n         * @param {?} chars\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.chars = function (chars /** TODO #9100 */) { this.buf.push(encodeEntities(chars)); };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var /** @type {?} */ SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var /** @type {?} */ NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param {?} value\n     * @return {?}\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var /** @type {?} */ hi = match.charCodeAt(0);\n            var /** @type {?} */ low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    function stripCustomNsAttrs(el) {\n        DOM.attributeMap(el).forEach(function (_, attrName) {\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                DOM.removeAttribute(el, attrName);\n            }\n        });\n        for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n            var n = _a[_i];\n            if (DOM.isElementNode(n))\n                stripCustomNsAttrs(/** @type {?} */ (n));\n        }\n    }\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     * @param {?} unsafeHtmlInput\n     * @return {?}\n     */\n    function sanitizeHtml(unsafeHtmlInput) {\n        try {\n            var /** @type {?} */ containerEl = getInertElement();\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var /** @type {?} */ mXSSAttempts = 5;\n            var /** @type {?} */ parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                DOM.setInnerHTML(containerEl, unsafeHtml);\n                if (((DOM.defaultDoc())).documentMode) {\n                    // strip custom-namespaced attributes on IE<=11\n                    stripCustomNsAttrs(containerEl);\n                }\n                parsedHtml = DOM.getInnerHTML(containerEl);\n            } while (unsafeHtml !== parsedHtml);\n            var /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n            var /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n            // Clear out the body element.\n            var /** @type {?} */ parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n            for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n                var child = _a[_i];\n                DOM.removeChild(parent_1, child);\n            }\n            if (core.isDevMode() && sanitizer.sanitizedSomething) {\n                DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        catch (e) {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            inertElement = null;\n            throw e;\n        }\n    }\n\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var /** @type {?} */ VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var /** @type {?} */ TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var /** @type {?} */ COLOR_FNS = '(?:rgb|hsl)a?';\n    var /** @type {?} */ GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var /** @type {?} */ CSS3_FNS = '(?:calc|attr)';\n    var /** @type {?} */ FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var /** @type {?} */ SAFE_STYLE_VALUE = new RegExp((\"^(\" + VALUES + \"|\") +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var /** @type {?} */ URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     * @param {?} value\n     * @return {?}\n     */\n    function hasBalancedQuotes(value) {\n        var /** @type {?} */ outsideSingle = true;\n        var /** @type {?} */ outsideDouble = true;\n        for (var /** @type {?} */ i = 0; i < value.length; i++) {\n            var /** @type {?} */ c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     * @param {?} value\n     * @return {?}\n     */\n    function sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var /** @type {?} */ urlMatch = value.match(URL_RE);\n        if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n     * values to be safe to use in the different DOM contexts.\n     *\n     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n     * the website.\n     *\n     * In specific situations, it might be necessary to disable sanitization, for example if the\n     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n     * methods, and then binding to that value from the template.\n     *\n     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n     * Cross Site Scripting (XSS) security bug!\n     *\n     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n     * close as possible to the source of the value, to make it easy to verify no security bug is\n     * created by its use.\n     *\n     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n     * code. The sanitizer leaves safe values intact.\n     *\n     * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n     * sanitization for the value passed in. Carefully check and audit all values and code paths going\n     * into this call. Make sure any user data is appropriately escaped for this security context.\n     * For more detail, see the [Security Guide](http://g.co/ng/security).\n     *\n     * \\@stable\n     * @abstract\n     */\n    var DomSanitizer = (function () {\n        function DomSanitizer() {\n        }\n        /**\n         * Sanitizes a value for use in the given SecurityContext.\n         *\n         * If value is trusted for the context, this method will unwrap the contained safe value and use\n         * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n         * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n         * is responsible to make sure that the value can definitely be safely used in the given context.\n         * @abstract\n         * @param {?} context\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.sanitize = function (context, value) { };\n        /**\n         * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n         * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n         * leave safe HTML intact, so in most situations this method should not be used.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustHtml = function (value) { };\n        /**\n         * Bypass security and trust the given value to be safe style value (CSS).\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustStyle = function (value) { };\n        /**\n         * Bypass security and trust the given value to be safe JavaScript.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustScript = function (value) { };\n        /**\n         * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n         * in hyperlinks or `<img src>`.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustUrl = function (value) { };\n        /**\n         * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n         * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustResourceUrl = function (value) { };\n        return DomSanitizer;\n    }());\n    var DomSanitizerImpl = (function (_super) {\n        __extends$8(DomSanitizerImpl, _super);\n        function DomSanitizerImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} ctx\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n            if (value == null)\n                return null;\n            switch (ctx) {\n                case core.SecurityContext.NONE:\n                    return value;\n                case core.SecurityContext.HTML:\n                    if (value instanceof SafeHtmlImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'HTML');\n                    return sanitizeHtml(String(value));\n                case core.SecurityContext.STYLE:\n                    if (value instanceof SafeStyleImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Style');\n                    return sanitizeStyle(value);\n                case core.SecurityContext.SCRIPT:\n                    if (value instanceof SafeScriptImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Script');\n                    throw new Error('unsafe value used in a script context');\n                case core.SecurityContext.URL:\n                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                        // Allow resource URLs in URL contexts, they are strictly more trusted.\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'URL');\n                    return sanitizeUrl(String(value));\n                case core.SecurityContext.RESOURCE_URL:\n                    if (value instanceof SafeResourceUrlImpl) {\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'ResourceURL');\n                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n                default:\n                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n            }\n        };\n        /**\n         * @param {?} value\n         * @param {?} expectedType\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n            if (value instanceof SafeValueImpl) {\n                throw new Error((\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \") +\n                    \"(see http://g.co/ng/security#xss)\");\n            }\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n            return new SafeResourceUrlImpl(value);\n        };\n        DomSanitizerImpl.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSanitizerImpl.ctorParameters = function () { return []; };\n        return DomSanitizerImpl;\n    }(DomSanitizer));\n    /**\n     * @abstract\n     */\n    var SafeValueImpl = (function () {\n        /**\n         * @param {?} changingThisBreaksApplicationSecurity\n         */\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n            // empty\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        SafeValueImpl.prototype.getTypeName = function () { };\n        /**\n         * @return {?}\n         */\n        SafeValueImpl.prototype.toString = function () {\n            return (\"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity) +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = (function (_super) {\n        __extends$8(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = (function (_super) {\n        __extends$8(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = (function (_super) {\n        __extends$8(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = (function (_super) {\n        __extends$8(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = (function (_super) {\n        __extends$8(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n\n    var /** @type {?} */ INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n        { provide: core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n        { provide: _angular_common.PlatformLocation, useClass: BrowserPlatformLocation }\n    ];\n    /**\n     * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n     * Attacker-controlled data introduced by an unsanitized provider could expose your\n     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n     * @experimental\n     */\n    var /** @type {?} */ BROWSER_SANITIZATION_PROVIDERS = [\n        { provide: core.Sanitizer, useExisting: DomSanitizer },\n        { provide: DomSanitizer, useClass: DomSanitizerImpl },\n    ];\n    /**\n     * @stable\n     */\n    var /** @type {?} */ platformBrowser = core.createPlatformFactory(core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n    /**\n     * @return {?}\n     */\n    function initDomAdapter() {\n        BrowserDomAdapter.makeCurrent();\n        BrowserGetTestability.init();\n    }\n    /**\n     * @return {?}\n     */\n    function errorHandler() {\n        return new core.ErrorHandler();\n    }\n    /**\n     * @return {?}\n     */\n    function _document() {\n        return getDOM().defaultDoc();\n    }\n    /**\n     * @return {?}\n     */\n    function _resolveDefaultAnimationDriver() {\n        if (getDOM().supportsWebAnimation()) {\n            return new WebAnimationsDriver();\n        }\n        return AnimationDriver.NOOP;\n    }\n    /**\n     * The ng module for the browser.\n     *\n     * \\@stable\n     */\n    var BrowserModule = (function () {\n        /**\n         * @param {?} parentModule\n         */\n        function BrowserModule(parentModule) {\n            if (parentModule) {\n                throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n            }\n        }\n        BrowserModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [\n                            BROWSER_SANITIZATION_PROVIDERS, { provide: core.ErrorHandler, useFactory: errorHandler, deps: [] },\n                            { provide: DOCUMENT, useFactory: _document, deps: [] },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n                            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n                            { provide: DomRootRenderer, useClass: DomRootRenderer_ },\n                            { provide: core.RootRenderer, useExisting: DomRootRenderer },\n                            { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n                            { provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver }, DomSharedStylesHost,\n                            core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Title\n                        ],\n                        exports: [_angular_common.CommonModule, core.ApplicationModule]\n                    },] },\n        ];\n        /** @nocollapse */\n        BrowserModule.ctorParameters = function () { return [\n            { type: BrowserModule, decorators: [{ type: core.Optional }, { type: core.SkipSelf },] },\n        ]; };\n        return BrowserModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * JS version of browser APIs. This library can only run in the browser.\n     */\n    var /** @type {?} */ win = typeof window !== 'undefined' && window || ({});\n\n    var ChangeDetectionPerfRecord = (function () {\n        /**\n         * @param {?} msPerTick\n         * @param {?} numTicks\n         */\n        function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n            this.msPerTick = msPerTick;\n            this.numTicks = numTicks;\n        }\n        return ChangeDetectionPerfRecord;\n    }());\n    /**\n     * Entry point for all Angular debug tools. This object corresponds to the `ng`\n     * global variable accessible in the dev console.\n     */\n    var AngularTools = (function () {\n        /**\n         * @param {?} ref\n         */\n        function AngularTools(ref) {\n            this.profiler = new AngularProfiler(ref);\n        }\n        return AngularTools;\n    }());\n    /**\n     * Entry point for all Angular profiling-related debug tools. This object\n     * corresponds to the `ng.profiler` in the dev console.\n     */\n    var AngularProfiler = (function () {\n        /**\n         * @param {?} ref\n         */\n        function AngularProfiler(ref) {\n            this.appRef = ref.injector.get(core.ApplicationRef);\n        }\n        /**\n         * Exercises change detection in a loop and then prints the average amount of\n         * time in milliseconds how long a single round of change detection takes for\n         * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n         * of 500 milliseconds.\n         *\n         * Optionally, a user may pass a `config` parameter containing a map of\n         * options. Supported options are:\n         *\n         * `record` (boolean) - causes the profiler to record a CPU profile while\n         * it exercises the change detector. Example:\n         *\n         * ```\n         * ng.profiler.timeChangeDetection({record: true})\n         * ```\n         * @param {?} config\n         * @return {?}\n         */\n        AngularProfiler.prototype.timeChangeDetection = function (config) {\n            var /** @type {?} */ record = config && config['record'];\n            var /** @type {?} */ profileName = 'Change Detection';\n            // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n            var /** @type {?} */ isProfilerAvailable = isPresent(win.console.profile);\n            if (record && isProfilerAvailable) {\n                win.console.profile(profileName);\n            }\n            var /** @type {?} */ start = getDOM().performanceNow();\n            var /** @type {?} */ numTicks = 0;\n            while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n                this.appRef.tick();\n                numTicks++;\n            }\n            var /** @type {?} */ end = getDOM().performanceNow();\n            if (record && isProfilerAvailable) {\n                // need to cast to <any> because type checker thinks there's no argument\n                // while in fact there is:\n                //\n                // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n                ((win.console.profileEnd))(profileName);\n            }\n            var /** @type {?} */ msPerTick = (end - start) / numTicks;\n            win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n            win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n            return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n        };\n        return AngularProfiler;\n    }());\n\n    var /** @type {?} */ context = (global$1);\n    /**\n     * Enabled Angular 2 debug tools that are accessible via your browser's\n     * developer console.\n     *\n     * Usage:\n     *\n     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n     * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n     *    then hit Enter.\n     *\n     * \\@experimental All debugging apis are currently experimental.\n     * @param {?} ref\n     * @return {?}\n     */\n    function enableDebugTools(ref) {\n        ((Object)).assign(context.ng, new AngularTools(ref));\n        return ref;\n    }\n    /**\n     * Disables Angular 2 tools.\n     *\n     * \\@experimental All debugging apis are currently experimental.\n     * @return {?}\n     */\n    function disableDebugTools() {\n        if (context.ng) {\n            delete context.ng.profiler;\n        }\n    }\n\n    /**\n     * Predicates for use with {\\@link DebugElement}'s query functions.\n     *\n     * \\@experimental All debugging apis are currently experimental.\n     */\n    var By = (function () {\n        function By() {\n        }\n        /**\n         * Match all elements.\n         *\n         * ## Example\n         *\n         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n         * @return {?}\n         */\n        By.all = function () { return function (debugElement) { return true; }; };\n        /**\n         * Match elements by the given CSS selector.\n         *\n         * ## Example\n         *\n         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n         * @param {?} selector\n         * @return {?}\n         */\n        By.css = function (selector) {\n            return function (debugElement) {\n                return isPresent(debugElement.nativeElement) ?\n                    getDOM().elementMatches(debugElement.nativeElement, selector) :\n                    false;\n            };\n        };\n        /**\n         * Match elements that have the given directive present.\n         *\n         * ## Example\n         *\n         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n         * @param {?} type\n         * @return {?}\n         */\n        By.directive = function (type) {\n            return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n        };\n        return By;\n    }());\n\n    var /** @type {?} */ __platform_browser_private__ = {\n        BrowserPlatformLocation: BrowserPlatformLocation,\n        DomAdapter: DomAdapter,\n        BrowserDomAdapter: BrowserDomAdapter,\n        BrowserGetTestability: BrowserGetTestability,\n        getDOM: getDOM,\n        setRootDomAdapter: setRootDomAdapter,\n        DomRootRenderer_: DomRootRenderer_,\n        DomRootRenderer: DomRootRenderer,\n        NAMESPACE_URIS: NAMESPACE_URIS,\n        shimContentAttribute: shimContentAttribute,\n        shimHostAttribute: shimHostAttribute,\n        flattenStyles: flattenStyles,\n        splitNamespace: splitNamespace,\n        isNamespaced: isNamespaced,\n        DomSharedStylesHost: DomSharedStylesHost,\n        SharedStylesHost: SharedStylesHost,\n        ELEMENT_PROBE_PROVIDERS: ELEMENT_PROBE_PROVIDERS,\n        DomEventsPlugin: DomEventsPlugin,\n        KeyEventsPlugin: KeyEventsPlugin,\n        HammerGesturesPlugin: HammerGesturesPlugin,\n        initDomAdapter: initDomAdapter,\n        INTERNAL_BROWSER_PLATFORM_PROVIDERS: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n        BROWSER_SANITIZATION_PROVIDERS: BROWSER_SANITIZATION_PROVIDERS,\n        WebAnimationsDriver: WebAnimationsDriver\n    };\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new core.Version('2.4.10');\n\n    exports.BrowserModule = BrowserModule;\n    exports.platformBrowser = platformBrowser;\n    exports.Title = Title;\n    exports.disableDebugTools = disableDebugTools;\n    exports.enableDebugTools = enableDebugTools;\n    exports.AnimationDriver = AnimationDriver;\n    exports.By = By;\n    exports.NgProbeToken = NgProbeToken;\n    exports.DOCUMENT = DOCUMENT;\n    exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;\n    exports.EventManager = EventManager;\n    exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;\n    exports.HammerGestureConfig = HammerGestureConfig;\n    exports.DomSanitizer = DomSanitizer;\n    exports.VERSION = VERSION;\n    exports.__platform_browser_private__ = __platform_browser_private__;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/platform-browser/bundles/platform-browser.umd.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subject.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/SubjectSubscription.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ObjectUnsubscribedError.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 22\n// module chunks = 0","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 24\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar ComponentInjector = (function () {\r\n    function ComponentInjector(resolver) {\r\n        this.resolver = resolver;\r\n    }\r\n    /**\r\n     * Inject a component into a ViewContainerRef element\r\n     * @param container ViewContainerRef element where to inject the component\r\n     * @param componentSelector string Selector of the component which should be injected\r\n     * @returns {ComponentRef<any>} Returns ComponentRef of the injected component\r\n     */\r\n    ComponentInjector.prototype.inject = function (container, componentSelector) {\r\n        var injectedComponent;\r\n        var componentFactory = this.getComponentFactory(componentSelector);\r\n        if (componentFactory) {\r\n            injectedComponent = this.injectComponentFactory(container, componentFactory);\r\n        }\r\n        else {\r\n            console.warn('Component [' + componentSelector + '] cannot be found! ' +\r\n                'Make sure it is included in the `entryComponents` list.');\r\n        }\r\n        return injectedComponent ? injectedComponent : null;\r\n    };\r\n    /**\r\n     * Set public properties of the component specified by the componentRef\r\n     * @param componentRef ComponentRef object where should be attached the properties\r\n     * @param properties Object which contains the keys (name of the property) and values (value of the property).\r\n     */\r\n    ComponentInjector.prototype.setProperties = function (componentRef, properties) {\r\n        if (componentRef) {\r\n            for (var property in properties) {\r\n                if (properties.hasOwnProperty(property)) {\r\n                    componentRef.instance[property] = properties[property];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Remove a component by its ComponentRef\r\n     * @param componentRef ComponentRef which should be removed\r\n     */\r\n    ComponentInjector.prototype.remove = function (componentRef) {\r\n        componentRef.destroy();\r\n        componentRef = null;\r\n    };\r\n    /**\r\n     * Get the component factory class from the _factories list based on its selector string name\r\n     * The list of the _factories is created based on the list of components listed in the entryComponents: [...]\r\n     * section of the @NgModule(...)\r\n     * @param componentSelector string Selector of the component\r\n     * @returns {ComponentFactory<any>|null} Returns the factory of the component or NULL if there is no such component\r\n     */\r\n    ComponentInjector.prototype.getComponentFactory = function (componentSelector) {\r\n        var componentFactory;\r\n        var factories = Array.from(this.resolver['_factories']);\r\n        var factory = factories.find(function (component) {\r\n            return component[1].selector === componentSelector;\r\n        });\r\n        if (factory) {\r\n            var factoryClass = factory[0];\r\n            componentFactory = this.resolver.resolveComponentFactory(factoryClass);\r\n        }\r\n        return componentFactory ? componentFactory : null;\r\n    };\r\n    /**\r\n     * Inject a componentFactory into a container element\r\n     * @param container ViewContainerRef container element where to inject the component\r\n     * @param componentFactory ComponentFactory which should be injected in the  container element\r\n     * @returns {ComponentRef<any>} returns ComponentRef of the injected componentFactory\r\n     */\r\n    ComponentInjector.prototype.injectComponentFactory = function (container, componentFactory) {\r\n        return container.createComponent(componentFactory);\r\n    };\r\n    return ComponentInjector;\r\n}());\r\nComponentInjector = __decorate([\r\n    core_1.Injectable(),\r\n    __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver])\r\n], ComponentInjector);\r\nexports.ComponentInjector = ComponentInjector;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-injector/src/component-injector.ts\n// module id = 25\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar TrustHtmlPipe = (function () {\r\n    function TrustHtmlPipe(sanitizer) {\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    TrustHtmlPipe.prototype.transform = function (htmlString) {\r\n        return this.sanitizer.bypassSecurityTrustHtml(htmlString);\r\n    };\r\n    return TrustHtmlPipe;\r\n}());\r\nTrustHtmlPipe = __decorate([\r\n    core_1.Pipe({\r\n        name: 'trustHtml'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [platform_browser_1.DomSanitizer])\r\n], TrustHtmlPipe);\r\nexports.TrustHtmlPipe = TrustHtmlPipe;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/trust-html-pipe/src/trust-html.pipe.ts\n// module id = 26\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar rx_pubsub_1 = require(\"rx-pubsub\");\r\nvar trust_html_pipe_1 = require(\"trust-html-pipe\");\r\nvar modal_window_component_1 = require(\"./components/modal-window/modal-window.component\");\r\nvar modal_window_service_1 = require(\"./services/modal-window.service\");\r\nvar ModalModule = (function () {\r\n    function ModalModule() {\r\n    }\r\n    return ModalModule;\r\n}());\r\nModalModule = __decorate([\r\n    core_1.NgModule({\r\n        imports: [\r\n            common_1.CommonModule\r\n        ],\r\n        declarations: [\r\n            modal_window_component_1.ModalWindowComponent,\r\n            trust_html_pipe_1.TrustHtmlPipe\r\n        ],\r\n        providers: [rx_pubsub_1.RxPubSub, modal_window_service_1.ModalWindowService],\r\n        exports: [modal_window_component_1.ModalWindowComponent]\r\n    })\r\n], ModalModule);\r\nexports.ModalModule = ModalModule;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modal.module.ts\n// module id = 27\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 28\n// module chunks = 0","/*! version: \"0.0.1\" */\n!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var o=t();for(var n in o)(\"object\"==typeof exports?exports:e)[n]=o[n]}}(this,function(){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p=\"/static/\",t(0)}([function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function e(){}return e.addClass=function(e,t){e.className=(e.className+\" \"+t).trim()},e.hasClass=function(e,t){return!(!t||(\" \"+e.className+\" \").indexOf(\" \"+t+\" \")==-1)},e.removeClass=function(e,t){var o=\" \"+e.className;e.className=o.replace(\" \"+t,\"\")},e}();t.XDomUtil=o}])});\n//# sourceMappingURL=xdom-util.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xdom-util/dist/xdom-util.min.js\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}