{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ng2-modal-module.js","webpack:///webpack/bootstrap 0d0521551e07c2a73498","webpack:///./index.ts","webpack:///./src/modal.module.ts","webpack:///./~/@angular/core/bundles/core.umd.js","webpack:///./~/rxjs/symbol/observable.js","webpack:///./~/rxjs/util/root.js","webpack:///./~/rxjs/Subject.js","webpack:///./~/rxjs/Observable.js","webpack:///./~/rxjs/util/toSubscriber.js","webpack:///./~/rxjs/Subscriber.js","webpack:///./~/rxjs/util/isFunction.js","webpack:///./~/rxjs/Subscription.js","webpack:///./~/rxjs/util/isArray.js","webpack:///./~/rxjs/util/isObject.js","webpack:///./~/rxjs/util/tryCatch.js","webpack:///./~/rxjs/util/errorObject.js","webpack:///./~/rxjs/util/UnsubscriptionError.js","webpack:///./~/rxjs/Observer.js","webpack:///./~/rxjs/symbol/rxSubscriber.js","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js","webpack:///./~/rxjs/SubjectSubscription.js","webpack:///./~/@angular/common/bundles/common.umd.js","webpack:///./~/rx-pubsub/dist/rx-pubsub.min.js","webpack:///./~/trust-html-pipe/src/trust-html.pipe.ts","webpack:///./~/@angular/platform-browser/bundles/platform-browser.umd.js","webpack:///./src/components/modal-window/modal-window.component.ts","webpack:///./~/smart-extend/lib/browser.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/xdom-util/dist/xdom-util.min.js","webpack:///./~/component-injector/src/component-injector.ts","webpack:///./src/services/modal-window.service.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","this","modules","parentHotUpdateCallback","webpackHotUpdateCallback","chunkId","moreModules","hotAddUpdateChunk","hotDownloadUpdateChunk","head","document","getElementsByTagName","script","createElement","type","charset","src","__webpack_require__","p","hotCurrentHash","appendChild","hotDownloadManifest","callback","XMLHttpRequest","Error","request","requestPath","open","timeout","send","err","onreadystatechange","readyState","status","update","JSON","parse","responseText","e","canDefineProperty","Object","defineProperty","get","x","hotApplyOnUpdate","hotCurrentModuleData","hotCurrentParents","hotCreateRequire","moduleId","me","installedModules","fn","hot","active","parents","indexOf","push","children","console","warn","name","prototype","hasOwnProperty","call","configurable","enumerable","set","value","ensure","hotStatus","hotSetStatus","hotChunksLoading","finishChunkLoading","hotWaitingFilesMap","hotEnsureUpdateChunk","hotWaitingFiles","hotUpdateDownloaded","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","accept","dep","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","l","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","newStatus","hotRequestedFilesMap","hotAvailibleFilesMap","hotCallback","hotUpdate","hotUpdateNewHash","toModuleId","id","isNumber","c","h","outdatedModules","options","getAffectedStuff","outdatedDependencies","queue","slice","pop","parentId","parent","addAllToSet","b","item","appliedUpdate","result","ignoreUnaccepted","outdatedSelfAcceptedModules","errorHandler","disposeHandlers","j","cb","child","moduleOutdatedDependencies","dependency","error","callbacks","loaded","m","modal_module_1","ModalModule","modal_window_service_1","ModalWindowService","modal_window_component_1","ModalWindowComponent","__decorate","decorators","target","key","desc","arguments","r","getOwnPropertyDescriptor","d","Reflect","decorate","core_1","common_1","rx_pubsub_1","trust_html_pipe_1","NgModule","imports","CommonModule","declarations","TrustHtmlPipe","providers","RxPubSub","global","ng","core","rxjs_symbol_observable","Rx","rxjs_Subject","rxjs_Observable","globalScope","window","WorkerGlobalScope","self","scheduleMicroTask","Zone","current","global$1","getTypeNameForDebugging","assert","condition","isPresent","obj","isBlank","stringify","token","overriddenName","res","toString","newLineIndex","substring","looseIdentical","isNaN","isJsObject","o","print","log","_symbolIterator","getSymbolIterator","Symbol","iterator","keys","getOwnPropertyNames","Map","isPrimitive","_nextClassId","extractAnnotation","annotation","applyParams","fnOrArray","String","Function","Number","Array","isArray","annotations","annoLength","paramsAnnotations","ii","paramAnnotations","defineMetadata","Class","clsDef","constructor","undefined","proto","extends","create","constructorName","makeDecorator","props","parentClass","chainFn","metaCtor","makeMetadataCtor","DecoratorFactory","objOrType","getOwnMetadata","annotationInstance","chainAnnotation","TypeDecorator","cls","annotationCls","ctor","_this","args","_i","forEach","prop","argVal","propName","makeParamDecorator","ParamDecoratorFactory","_a","bind","concat","ParamDecorator","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","Inject","Optional","Injectable","Self","SkipSelf","Host","OpaqueToken","_desc","ctorParameters","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","Query","ContentChildren","first","isViewQuery","descendants","read","ContentChild","ViewChildren","ViewChild","ChangeDetectionStrategy","OnPush","Default","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","isDefaultChangeDetectionStrategy","changeDetectionStrategy","Directive","selector","inputs","outputs","host","exportAs","queries","Component","viewProviders","changeDetection","templateUrl","template","styleUrls","styles","animations","encapsulation","interpolation","entryComponents","Pipe","pure","Input","Output","HostBinding","HostListener","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","LIFECYCLE_HOOKS_VALUES","ngOnChanges","changes","ngOnInit","ngDoCheck","ngOnDestroy","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","bootstrap","schemas","ViewEncapsulation","Emulated","Native","None","ViewMetadata","_b","Version","full","split","join","VERSION","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","notFoundValue","Injector","NULL","__extends$1","__extends","__","BaseError","_super","message","nativeError","_nativeError","stack","WrappedError","originalError","findFirstClosedCycle","constructResolvingPath","reversed","reverse","tokenStrs","map","k","AbstractProviderError","injector","constructResolvingMessage","injectors","addKey","NoProviderError","CyclicDependencyError","InstantiationError","originalException","originalStack","InvalidProviderError","provider","NoAnnotationError","typeOrFunc","params","_genMessage","signature","parameter","OutOfBoundsError","MixingMultiProvidersWithRegularProvidersError","provider1","provider2","ReflectiveKey","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","has","newKey","size","Type","isType","v","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","t","_zipTypesAndAnnotations","paramTypes","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParam","convertTsickleDecoratorIntoMetadata","fill","getParentCtor","_ownAnnotations","ownAnnotations","parentAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","getter","setter","method","functionBody","importUri","resolveIdentifier","moduleUrl","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","parentProto","getPrototypeOf","ReflectorReader","identifier","__extends$2","Reflector","reflectionCapabilities","updateCapabilities","caps","reflector","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","useClass","_dependenciesFor","useExisting","aliasInstance","useFactory","constructDependencies","deps","useValue","resolveReflectiveProvider","provide","multi","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","values","normalizedProvidersMap","existing","resolvedProvider","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","resolveAndCreateChild","createChildFromResolved","resolveAndInstantiate","instantiateResolved","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","inj","_instantiateProvider","getProviderAtIndex","_new","_getMaxNumberOfObjects","_instantiate","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","_mapProviders","displayName","ErrorHandler","rethrowError","_console","handleError","_findOriginalError","_findOriginalStack","context","_findContext","_extractMessage","StringMapWrapper","merge","m1","m2","_c","equals","k1","k2","ListWrapper","findLast","arr","removeAll","list","items","remove","el","flatten","reduce","flat","flatItem","isListLikeIterable","areIterablesEqual","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","isPromise","then","isObservable","$$observable","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","asyncInitPromises","initResult","_donePromise","Promise","all","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","__extends$4","ComponentStillLoadingError","compType","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getNgContentSelectors","component","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","createCompiler","ElementRef","nativeElement","__extends$6","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","Subject","NgZone","enableLongStackTrace","_hasPendingMicrotasks","_hasPendingMacrotasks","_isStable","_nesting","_onUnstable","_onMicrotaskEmpty","_onStable","_onErrorEvents","assertZonePatched","outer","inner","fork","forkInnerZoneWithAngularBehavior","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runGuarded","runOutsideAngular","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","source","invoke","onHasTask","hasTaskState","hasTask","change","setHasMicrotask","microTask","setHasMacrotask","macroTask","onHandleError","triggerError","hasMicrotasks","hasMacrotasks","AnimationQueue","_zone","entries","enqueue","player","flush","_triggerAnimations","shift","hasStarted","play","DefaultIterableDifferFactory","supports","cdRef","trackByFn","DefaultIterableDiffer","trackByIdentity","_trackByFn","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","forEachItem","record","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","onDestroy","_reset","mayBeDirty","itemTrackBy","index_1","trackById","_mismatch","_verifyReinsertion","_addIdentityChange","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","CollectionChangeRecord","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","previous","additions","moves","removals","identityChanges","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","afterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","records","oldSeqRecord","lastOldSeqRecord","lastNewSeqRecord","seqChanged","_forEach","newSeqRecord","_maybeAddToChanges","_removeFromSeq","KeyValueChangeRecord","currentValue","_addToAdditions","_isInRemovals","_removeFromRemovals","previousValue","lastRecord","rec","newValue","_addToChanges","IterableDiffers","factories","copied","extend","find","iterable","f","KeyValueDiffers","kv","UNINITIALIZED","devModeEqual","WrappedValue","wrapped","wrap","ValueUnwrapper","hasWrappedValue","unwrap","reset","SimpleChange","isFirstChange","ChangeDetectorRef","markForCheck","detach","detectChanges","checkNoChanges","reattach","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","RenderComponentType","slotCount","RenderDebugInfo","providerTokens","references","Renderer","selectRootElement","selectorOrNode","debugInfo","parentElement","createViewRoot","hostElement","createTemplateAnchor","createText","projectNodes","nodes","attachViewAfter","node","viewRootNodes","detachView","destroyView","viewAllNodes","listen","renderElement","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeName","attributeValue","setBindingDebugInfo","setElementClass","className","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode","text","animate","element","startingStyles","keyframes","duration","delay","easing","previousPlayers","RootRenderer","renderComponent","componentType","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Sanitizer","sanitize","__extends$7","ExpressionChangedAfterItHasBeenCheckedError","oldValue","currValue","msg","ViewWrappedError","ViewDestroyedError","details","ViewUtils","_renderer","sanitizer","animationQueue","renderComponentType","nextRenderComponentTypeId","createRenderComponentType","addToArray","array","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","checkBinding","throwOnChange","castByValue","input","EMPTY_ARRAY","EMPTY_MAP","pureProxy1","v0","p0","pureProxy2","v1","p1","pureProxy3","v2","p2","pureProxy4","v3","p3","pureProxy5","v4","p4","pureProxy6","v5","p5","pureProxy7","v6","p6","pureProxy8","v7","p7","pureProxy9","v8","p8","pureProxy10","v9","p9","setBindingDebugInfoForChanges","renderer","camelCaseToDashCase","CAMEL_CASE_REGEXP","replace","toLowerCase","createRenderElement","attrs","selectOrCreateRenderHostElement","elementName","rootSelectorOrNode","subscribeToRenderElement","view","eventNamesAndTargets","listener","disposables","createEmptyInlineArray","eventName","eventTarget","disposable","disposeInlineArray","noop","InlineArray2","InlineArray4","InlineArray8","InlineArray16","InlineArrayDynamic","InlineArray0","_v0","_v1","_v2","_v3","_v4","_v5","_v6","_v7","_v8","_v9","_v10","_v11","_v12","_v13","_v14","_v15","_values","EMPTY_INLINE_ARRAY","view_utils","freeze","__extends$5","ComponentRef","location","instance","hostView","changeDetectorRef","destroy","ComponentRef_","_index","_parentView","_nativeElement","_component","ref","detachAndDestroy","ComponentFactory","_viewClass","_componentType","projectableNodes","vu","createHostView","__extends$8","NoComponentFactoryError","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_factories","trace","events","detectWTF","wtf","createScope","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","s","wtfStartTimeRange","wtfEndTimeRange","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","onUnstable","onStable","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","isStable","hasPendingMacrotasks","whenStable","getPendingRequestCount","findBindings","using","exactMatch","findProviders","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","setTestabilityGetter","__extends$3","_devMode","_runModeLocked","_platform","enableProdMode","isDevMode","NgProbeToken","createPlatform","destroyed","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","marker","extraProviders","getPlatform","assertPlatform","requiredToken","platform","destroyPlatform","bootstrapModuleFactory","moduleFactory","bootstrapModule","compilerOptions","_callAndReportToErrorHandler","catch","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","_bootstrapModuleFactoryWithZone","ngZone","ngZoneInjector","moduleRef","exceptionHandler","onError","initStatus","donePromise","_moduleDoBootstrap","_bootstrapModuleWithZone","componentFactoryCallback","compilerFactory","compiler","appRef","ApplicationRef","bootstrapFactories","compFactory","ngDoBootstrap","componentFactory","tick","componentTypes","components","attachView","viewCount","ApplicationRef_","_exceptionHandler","_componentFactoryResolver","_initStatus","_testabilityRegistry","_testability","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","onMicrotaskEmpty","viewRef","internalView","attachToAppRef","componentOrFactory","compRef","_unloadComponent","_loadComponent","componentRef","listeners","_tickScope","__extends$9","NgModuleRef","componentFactoryResolver","NgModuleFactory","_injectorClass","_moduleType","parentInjector","_UNDEFINED","NgModuleInjector","createInternal","getInternal","destroyInternal","NgModuleFactoryLoader","load","path","moduleFactories","registerModuleFactory","getModuleFactory","QueryList","_dirty","_results","_emitter","filter","toArray","notifyOnChanges","setDirty","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","offlineMode","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","__extends$10","TemplateRef","elementRef","createEmbeddedView","TemplateRef_","_nodeIndex","createEmbeddedViewInternal","ViewContainerRef","templateRef","createComponent","insert","move","ViewContainerRef_","_element","_createComponentInContainerScope","_insertScope","_removeScope","_detachScope","nestedViews","views","contextInjector","viewRef_","moveView","__extends$11","ViewRef","EmbeddedViewRef","rootNodes","ViewRef_","_view","_originalMode","cdMode","flatRootNodes","markPathToRootAsCheckOnce","__extends$12","EventListener","DebugNode","nativeNode","_debugInfo","DebugElement","addChild","attributes","classes","childNodes","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","previousChildren","nextChildren","newChild","query","predicate","results","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","asNativeElements","debugEls","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","removeDebugNodeFromIndex","_reflector","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","FILL_STYLE_FLAG","ANY_STATE","DEFAULT_STATE","EMPTY_STATE","AnimationGroupPlayer","_players","_onDoneFns","_onStartFns","_finished","_started","parentPlayer","count","total","_onFinish","onDone","onStart","pause","restart","finish","setPosition","getPosition","min","AnimationKeyframe","AnimationPlayer","NoOpAnimationPlayer","AnimationSequencePlayer","_currentIndex","_onNext","start","_activePlayer","__extends$13","AUTO_STYLE","AnimationEntryMetadata","definitions","AnimationStateMetadata","AnimationStateDeclarationMetadata","stateNameExpr","AnimationStateTransitionMetadata","stateChangeExpr","steps","AnimationMetadata","AnimationKeyframesSequenceMetadata","AnimationStyleMetadata","AnimationAnimateMetadata","timings","AnimationWithStepsMetadata","AnimationSequenceMetadata","_steps","AnimationGroupMetadata","timing","stylesEntry","EMPTY_STYLE","group","sequence","style","tokens","entry","entryOffset","parseFloat","state","transition","animationData","trigger","animation","prepareFinalAnimationStyles","previousStyles","newStyles","nullValue","finalStyles","balanceAnimationKeyframes","collectedStyles","finalStateStyles","limit","firstKeyframe","flatenedFirstKeyframeStyles","flattenStyles","extraFirstKeyframeStyles","hasExtraFirstStyles","keyframeCollectedStyles","finalKeyframe","flatenedFinalKeyframeStyles","extraFinalKeyframeStyles","hasExtraFinalStyles","collectAndResolveStyles","clearStyles","stylesObj","renderStyles","AnimationStyles","AnimationTransitionEvent","fromState","toState","totalTime","phaseName","AnimationTransition","_player","_fromState","_toState","_totalTime","_createEvent","DebugDomRootRenderer","_delegate","componentProto","DebugDomRenderer","nativeEl","debugEl","comment","debugParent","debugElement_1","debugNode","debugViewRootNodes_1","rootNode","ViewType","HOST","COMPONENT","EMBEDDED","StaticNodeDebugInfo","componentToken","refTokens","DebugContext","_tplRow","_tplCol","staticNodeDebugInfos","staticNodeInfo","_staticNodeInfo","componentView","parentView","allNodes","varValues","refs_1","refName","refToken","varValue","injectorGet","ViewAnimationMap","_map","_allPlayers","animationName","playersByAnimation","findAllPlayersByElement","existingEntry","getAllPlayers","targetPlayer","AnimationViewContext","_animationQueue","onAllActiveAnimationsDone","activeAnimationPlayers","queueAnimation","getAnimationPlayers","players","currentPlayer","_recursePlayers","collectedPlayers","__extends$15","ElementInjector","__extends$14","_scope_check","EMPTY_CONTEXT","UNDEFINED$1","AppView","clazz","viewUtils","parentIndex","declaredViewContainer","numberOfChecks","_directRenderer","directRenderer","_animationContext","hostInjector","_hasExternalHostElement","_hostInjector","_hostProjectableNodes","templateNodeIndex","lastRootNode","dirtyParentQueriesInternal","nodeIndex","injectorGetInternal","notFoundResult","viewContainer","detachInternal","_renderDetach","projectedViews","visitRootNodesInternal","attachAfter","prevView","_renderAttach","moveAfter","prevNode","nextSibling","insertBefore","ngContentIndex","visitProjectedNodes","visitProjectableNodesInternal","internalDetectChanges","throwDestroyedError","detectChangesInternal","markAsCheckOnce","eventHandler","DebugAppView","_currentDebugContext","_resetDebug","_rethrowWithContext","debug","rowNum","colNum","superHandler","event","ViewContainer","detectChangesInNestedViews","destroyNestedViews","visitNestedViewRootNodes","mapNestedViews","nestedViewClass","nestedView","projectedView","viewIndex","__core_private__","root_1","getSymbolObservable","observable","__window","__self","__global","_root","Observable_1","Subscriber_1","Subscription_1","ObjectUnsubscribedError_1","SubjectSubscription_1","rxSubscriber_1","SubjectSubscriber","destination","Subscriber","observers","closed","isStopped","hasError","thrownError","rxSubscriber","lift","operator","subject","AnonymousSubject","ObjectUnsubscribedError","copy","unsubscribe","_trySubscribe","subscriber","_subscribe","Subscription","EMPTY","SubjectSubscription","asObservable","Observable","toSubscriber_1","observable_1","_isScalar","observerOrNext","sink","toSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","PromiseCtor","reject","subscription","Observer_1","nextOrObserver","empty","isFunction_1","destinationOrNext","SafeSubscriber","_error","_complete","_unsubscribeAndRecycle","_parents","_parentSubscriber","isFunction","_context","__tryOrUnsub","__tryOrSetError","wrappedComplete","_unsubscribe","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","_subscriptions","hasErrors","errors","trial","tryCatch","errorObject","UnsubscriptionError","flattenUnsubscriptionErrors","sub","isObject","teardown","_addParent","tmp","subscriptions","subscriptionIndex","errs","tryCatchTarget","tryCatcher","for","$$rxSubscriber","subscriberIndex","common","_angular_core","PlatformLocation","getBaseHrefFromDOM","onPopState","onHashChange","replaceState","title","url","pushState","forward","back","LOCATION_INITIALIZED","LocationStrategy","includeHash","prepareExternalUrl","internal","queryParams","getBaseHref","APP_BASE_HREF","_global","NumberWrapper","parseIntAutoRadix","parseInt","isNumeric","Location","platformStrategy","_subject","_platformStrategy","browserBaseHref","_baseHref","stripTrailingSlash","_stripIndexHtml","ev","normalize","isCurrentPathEqualTo","normalizeQueryParams","_stripBaseHref","go","onNext","onThrow","onReturn","joinWithSlash","end","slashes","endsWith","startsWith","baseHref","HashLocationStrategy","_platformLocation","hash","pathname","PathLocationStrategy","href","search","externalUrl","NgLocalization","getPluralCategory","cases","ngLocalization","NgLocaleLocalization","_locale","plural","getPluralCase","Plural","Zero","One","Two","Few","Many","Other","nLike","n","nDecimal","abs","lang","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_initialClasses","_applyInitialClasses","_applyClasses","_rawClass","_cleanupClasses","_iterableDiffer","_keyValueDiffer","_applyIterableChanges","_applyKeyValueChanges","rawClassVal","_toggleClass","isCleanup","klass","Set","enabled","trim","ngClass","NgForRow","$implicit","even","NgFor","_viewContainer","_template","_differs","_cdr","_differ","ngForTrackBy","ngForOf","_applyChanges","insertTuples","adjustedPreviousIndex","tuple","RecordViewTuple","_perViewChange","ilen","ngForTemplate","NgIf","_hasView","ngIf","SwitchView","_viewContainerRef","_templateRef","_created","enforceState","created","NgSwitch","_defaultUsed","_caseCount","_lastCaseCheckIndex","_lastCasesMatched","_ngSwitch","_updateDefaultCases","_addCase","_addDefault","_defaultViews","_matchCase","matched","useDefault","defaultView","ngSwitch","NgSwitchCase","ngSwitchCase","NgSwitchDefault","NgPlural","_localization","_caseViews","_switchValue","_updateView","addCase","switchView","_clearViews","_activateView","_activeView","ngPlural","NgPluralCase","isANumber","NgStyle","_ngStyle","_setStyle","nameAndUnit","unit","ngStyle","NgTemplateOutlet","_viewRef","ngOutletContext","ngTemplateOutlet","COMMON_DIRECTIVES","InvalidPipeArgumentError","ObservableStrategy","createSubscription","async","updateLatestValue","PromiseStrategy","_promiseStrategy","_observableStrategy","AsyncPipe","_ref","_latestValue","_latestReturnedValue","_subscription","_obj","_strategy","_dispose","transform","_selectStrategy","_updateLatestValue","NumberFormatStyle","Decimal","Percent","Currency","NumberFormatter","format","num","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","currency","currencyAsSymbol","currencyDisplay","Intl","NumberFormat","DATE_FORMATS_SPLIT","PATTERN_ALIASES","yMMMdjms","datePartGetterFactory","combine","digitCondition","nameCondition","yMdjm","yMMMMEEEEd","yMMMMd","yMMMd","yMd","jms","jm","DATE_FORMATS","yyyy","yy","y","MMMM","MMM","MM","M","LLLL","L","dd","HH","digitModifier","hourExtractor","hour12Modify","H","hh","jj","mm","ss","sss","EEEE","EEE","EE","E","hourClockExtractor","Z","timeZoneGetter","z","ww","w","G","GG","GGG","GGGG","date","intlDateFormat","DateTimeFormat","timezone","hour","hour12","timeZoneName","assign","ret","DATE_FORMATTER_CACHE","dateFormatter","cacheKey","parts","match","part","partToTime","DateFormatter","pattern","ISO8601_DATE_REGEX","DatePipe","isBlank$1","isDate","Date","test","val","isoStringToDate","_ALIASES","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","valueOf","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","toInt","ms","round","str","_INTERPOLATION_REGEXP","I18nPluralPipe","pluralMap","I18nSelectPipe","mapping","JsonPipe","LowerCasePipe","_NUMBER_FORMAT_REGEXP","formatNumber","pipe","digits","minInt","minFraction","maxFraction","DecimalPipe","PercentPipe","CurrencyPipe","currencyCode","symbolDisplay","SlicePipe","UpperCasePipe","toUpperCase","COMMON_PIPES","publish","getSubjectByEventName","isCallback","subscribeOnce","unsubscribeAll","hasSubscribers","getEvents","getSubjects","ReplaySubject","u","kind","hasValue","observe","do","toObservable","of","throw","createNext","undefinedValueNotification","createError","createComplete","completeNotification","Notification","POSITIVE_INFINITY","scheduler","_events","_bufferSize","_windowTime","_getNow","_trimBufferThenGetEvents","ObserveOnSubscriber","now","time","max","SchedulerAction","schedule","Scheduler","observeOn","ObserveOnOperator","dispatch","notification","scheduleMessage","ObserveOnMessage","Action","work","pending","recycleAsyncId","requestAsyncId","setInterval","clearInterval","execute","_execute","actions","AsyncAction","scheduled","AsyncScheduler","QueueAction","QueueScheduler","__metadata","platform_browser_1","htmlString","bypassSecurityTrustHtml","DomSanitizer","platformBrowser","_angular_common","NoOpAnimationDriver","AnimationDriver","NOOP","setValueOnPath","name_1","_DOM","getDOM","setRootDomAdapter","adapter","DomAdapter","resourceLoaderType","hasProperty","setProperty","getProperty","logError","logGroup","logGroupEnd","_attrToPropMap","templateHtml","querySelector","querySelectorAll","on","evt","onAndCancel","dispatchEvent","createMouseEvent","eventType","createEvent","preventDefault","isPrevented","getInnerHTML","getTemplateContent","getOuterHTML","nodeName","nodeValue","content","firstChild","childNodesAsList","clearNodes","replaceChild","newNode","oldNode","insertAllBefore","insertAfter","setInnerHTML","getText","getValue","setValue","getChecked","setChecked","createComment","createTemplate","html","tagName","doc","createElementNS","ns","createTextNode","createScriptTag","attrName","attrValue","createStyleElement","css","createShadowRoot","getShadowRoot","getHost","getDistributedNodes","clone","getElementsByClassName","classList","addClass","removeClass","hasClass","setStyle","removeStyle","getStyle","hasStyle","attributeMap","hasAttribute","attribute","hasAttributeNS","getAttribute","getAttributeNS","setAttribute","setAttributeNS","removeAttribute","removeAttributeNS","templateAwareRoot","createHtmlDocument","defaultDoc","getBoundingClientRect","getTitle","setTitle","newTitle","elementMatches","isTemplateElement","isTextNode","isCommentNode","isElementNode","hasShadowRoot","isShadowRoot","importIntoDoc","adoptNode","getHref","getEventKey","resolveAndSetHref","baseUrl","supportsDOMEvents","supportsNativeShadowDOM","getGlobalEventTarget","getHistory","getLocation","resetBaseElement","getUserAgent","setData","getComputedStyle","getData","setGlobalVar","supportsWebAnimation","performanceNow","getAnimationPrefix","getTransitionEnd","supportsAnimation","supportsCookies","getCookie","setCookie","WebAnimationsPlayer","_initialized","_duration","_captureStyles","formattedKeyframe","_computeStyle","previousStyleProps","startingKeyframe_1","missingStyleProps_1","_loop_1","kf","_triggerWebAnimation","_finalKeyframe","_copyKeyframeStyles","_resetDomPlayerState","addEventListener","cancel","currentTime","WebAnimationsDriver","formattedSteps","startingStyleLookup","_populateStyles","keyframe","playerOptions","filterWebAnimationPlayerFn","defaultStyles","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","class","innerHtml","readonly","tabindex","DOM_KEY_LOCATION_NUMPAD","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","F","I","J","K","N","O","`","","BrowserDomAdapter","makeCurrent","groupEnd","removeEventListener","initEvent","defaultPrevented","innerHTML","HTMLTemplateElement","outerHTML","oldChild","textContent","checked","shadowRoot","cloneNode","contains","stylename","elAttrs","attrib","implementation","createHTMLDocument","top","bottom","left","right","width","height","HTMLElement","msMatchesSelector","webkitMatchesSelector","nodeType","Node","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","DocumentFragment","importNode","keyIdentifier","body","history","getBaseElementHref","relativePath","baseElement","navigator","userAgent","performance","getTime","parseCookieValue","cookie","encodeURIComponent","urlParsingNode","charAt","cookieStr","eqIndex","cookieName","cookieValue","decodeURIComponent","supportsState","BrowserPlatformLocation","_init","_location","_history","newPath","BrowserGetTestability","getAngularTestability","getAllAngularTestabilities","getAllAngularRootElements","whenAllStable","testabilities","didWork","decrement","didWork_","Title","DOCUMENT","EVENT_MANAGER_PLUGINS","EventManager","plugins","_eventNameToPlugin","manager","_plugins","handler","plugin","_findPluginFor","addGlobalEventListener","getZone","plugin_1","EventManagerPlugin","SharedStylesHost","_stylesSet","addStyles","onStylesAdded","getAllStyles","DomSharedStylesHost","_doc","_hostNodes","_styleNodes","_addStylesToHost","styleEl","addHost","hostNode","removeHost","styleNode","NAMESPACE_URIS","xlink","svg","xhtml","TEMPLATE_COMMENT_TEXT","TEMPLATE_BINDINGS_EXP","DomRootRenderer","eventManager","sharedStylesHost","animationDriver","appId","registeredComponents","DomRenderer","DomRootRenderer_","_document","_eventManager","DIRECT_DOM_RENDERER","refNode","_rootRenderer","_animationDriver","styleShimId","_styles","_contentAttr","shimContentAttribute","_hostAttr","shimHostAttribute","isNamespaced","nsAndName","splitNamespace","nodesParent","appendNodes","moveNodesAfterSibling","decoratePreventDefault","attrNs","attrNameWithoutNs","existingBindings","parsedBindings","sibling","allowDefaultBehavior","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","componentShortId","compId","NS_PREFIX_RE","CORE_TOKENS","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","inspectNativeElement","_createConditionalRootRenderer","rootRenderer","extraTokens","coreTokens","_createRootRenderer","_ngProbeTokensToMap","ELEMENT_PROBE_PROVIDERS","DomEventsPlugin","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HAMMER_GESTURE_CONFIG","HammerGestureConfig","overrides","buildHammer","mc","Hammer","enable","HammerGesturesPlugin","isCustomEvent","zone","off","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","SAFE_URL_PATTERN","DATA_URL_PATTERN","sanitizeUrl","sanitizeSrcset","srcset","inertElement","DOM","getInertElement","templateEl","tagSet","tags","sets","sets_1","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","chars","endElement","lower","encodeEntities","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","hi","charCodeAt","low","stripCustomNsAttrs","_","sanitizeHtml","unsafeHtmlInput","containerEl","unsafeHtml","mXSSAttempts","parsedHtml","documentMode","safeHtml","parent_1","VALUES","TRANSFORMATION_FNS","COLOR_FNS","GRADIENTS","CSS3_FNS","FN_ARGS","SAFE_STYLE_VALUE","RegExp","URL_RE","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeStyle","urlMatch","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl","ctx","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","SafeStyleImpl","SafeScriptImpl","SafeResourceUrlImpl","SafeUrlImpl","expectedType","SafeValueImpl","getTypeName","INTERNAL_BROWSER_PLATFORM_PROVIDERS","initDomAdapter","BROWSER_SANITIZATION_PROVIDERS","_resolveDefaultAnimationDriver","BrowserModule","parentModule","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularTools","profiler","AngularProfiler","timeChangeDetection","profileName","isProfilerAvailable","profile","toFixed","enableDebugTools","disableDebugTools","By","debugElement","directive","__platform_browser_private__","xdom_util_1","component_injector_1","pubsub","componentInjector","animationClass","showModalClass","bodyOpenModalClass","defaultButtonsProperties","visible","label","success","defaultProperties","show","hide","componentSelector","componentInputs","htmlContent","overlayClick","customClass","buttons","subscribeToEvent","resetInjectedComponent","cancelAction","successAction","modalDom","modalWindow","XDomUtil","eventSubscriber","initModal","setProperties","injectedComponentRef","injectComponent","setComponentProperties","resetModalEventSubscriber","inject","injectContainer","deep","ComponentInjector","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","g","isBase","defineProperties","own","allowNull","nullDeletes","notDeep","deepOnly","notKeys","globalTransform","transforms","globalFilter","filters","q","webpackPolyfill","deprecate","paths","resolver","container","injectedComponent","getComponentFactory","injectComponentFactory","property","factoryClass","showModal","modalId","hideModal","resetEventsSubscribers","eventsList"],"mappings":"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ACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;wBACA,IAAAH,MAAA,GACA,OAAAR,OAAAE;wBACA,OAAAF,OAAAM;;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;wBACA,IAAAE,MAAAvlC,KAAAC,MAAAslC,WAAA,KAAAA,KAAA,GACA,OAAAR,OAAAE;wBACA,OAAAF,OAAAM;;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;wBACA,IAAAlrD,MAAA,KAAAorD,MAAA,GACA,OAAAR,OAAAE;wBACA,OAAAF,OAAAM;;sBACA;wBACA,IAAAE,MAAA,GACA,OAAAR,OAAAC;wBACA,IAAAO,MAAA,GACA,OAAAR,OAAAE;wBACA,IAAAM,MAAA,GACA,OAAAR,OAAAG;wBACA,IAAAK,IAAA,QAAAvlC,KAAAC,MAAAslC,IAAA,QAAAA,IAAA,YAAAA,IAAA,WACA,OAAAR,OAAAI;wBACA,IAAAI,IAAA,QAAAvlC,KAAAC,MAAAslC,IAAA,QAAAA,IAAA,aAAAA,IAAA,WACA,OAAAR,OAAAK;wBACA,OAAAL,OAAAM;;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;wBACA,IAAAlrD,MAAA,KAAAoa,MAAA,GACA,OAAAwwC,OAAAE;wBACA,OAAAF,OAAAM;;sBACA;wBACA,IAAAE,IAAA,cAAAA,IAAA,aACA,OAAAR,OAAAE;wBACA,IAAAM,IAAA,OAAAvlC,KAAAC,MAAAslC,IAAA,OAAAA,IAAA,WAAAA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","file":"ng2-modal-module.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \tvar parentHotUpdateCallback = this[\"webpackHotUpdate\"];\n/******/ \tthis[\"webpackHotUpdate\"] = \r\n/******/ \tfunction webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n/******/ \t\thotAddUpdateChunk(chunkId, moreModules);\r\n/******/ \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tvar head = document.getElementsByTagName(\"head\")[0];\r\n/******/ \t\tvar script = document.createElement(\"script\");\r\n/******/ \t\tscript.type = \"text/javascript\";\r\n/******/ \t\tscript.charset = \"utf-8\";\r\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\r\n/******/ \t\thead.appendChild(script);\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tif(typeof XMLHttpRequest === \"undefined\")\r\n/******/ \t\t\treturn callback(new Error(\"No browser support\"));\r\n/******/ \t\ttry {\r\n/******/ \t\t\tvar request = new XMLHttpRequest();\r\n/******/ \t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\r\n/******/ \t\t\trequest.open(\"GET\", requestPath, true);\r\n/******/ \t\t\trequest.timeout = 10000;\r\n/******/ \t\t\trequest.send(null);\r\n/******/ \t\t} catch(err) {\r\n/******/ \t\t\treturn callback(err);\r\n/******/ \t\t}\r\n/******/ \t\trequest.onreadystatechange = function() {\r\n/******/ \t\t\tif(request.readyState !== 4) return;\r\n/******/ \t\t\tif(request.status === 0) {\r\n/******/ \t\t\t\t// timeout\r\n/******/ \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\r\n/******/ \t\t\t} else if(request.status === 404) {\r\n/******/ \t\t\t\t// no update available\r\n/******/ \t\t\t\tcallback();\r\n/******/ \t\t\t} else if(request.status !== 200 && request.status !== 304) {\r\n/******/ \t\t\t\t// other failure\r\n/******/ \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\r\n/******/ \t\t\t} else {\r\n/******/ \t\t\t\t// success\r\n/******/ \t\t\t\ttry {\r\n/******/ \t\t\t\t\tvar update = JSON.parse(request.responseText);\r\n/******/ \t\t\t\t} catch(e) {\r\n/******/ \t\t\t\t\tcallback(e);\r\n/******/ \t\t\t\t\treturn;\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tcallback(null, update);\r\n/******/ \t\t\t}\r\n/******/ \t\t};\r\n/******/ \t}\r\n/******/\n/******/ \t\r\n/******/ \t\r\n/******/ \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n/******/ \tvar canDefineProperty = false;\r\n/******/ \ttry {\r\n/******/ \t\tObject.defineProperty({}, \"x\", {\r\n/******/ \t\t\tget: function() {}\r\n/******/ \t\t});\r\n/******/ \t\tcanDefineProperty = true;\r\n/******/ \t} catch(x) {\r\n/******/ \t\t// IE will fail on defineProperty\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tvar hotApplyOnUpdate = true;\r\n/******/ \tvar hotCurrentHash = \"0d0521551e07c2a73498\"; // eslint-disable-line no-unused-vars\r\n/******/ \tvar hotCurrentModuleData = {};\r\n/******/ \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n/******/ \t\r\n/******/ \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tvar me = installedModules[moduleId];\r\n/******/ \t\tif(!me) return __webpack_require__;\r\n/******/ \t\tvar fn = function(request) {\r\n/******/ \t\t\tif(me.hot.active) {\r\n/******/ \t\t\t\tif(installedModules[request]) {\r\n/******/ \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n/******/ \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n/******/ \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n/******/ \t\t\t\t\t\tme.children.push(request);\r\n/******/ \t\t\t\t} else hotCurrentParents = [moduleId];\r\n/******/ \t\t\t} else {\r\n/******/ \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n/******/ \t\t\t\thotCurrentParents = [];\r\n/******/ \t\t\t}\r\n/******/ \t\t\treturn __webpack_require__(request);\r\n/******/ \t\t};\r\n/******/ \t\tfor(var name in __webpack_require__) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n/******/ \t\t\t\tif(canDefineProperty) {\r\n/******/ \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n/******/ \t\t\t\t\t\treturn {\r\n/******/ \t\t\t\t\t\t\tconfigurable: true,\r\n/******/ \t\t\t\t\t\t\tenumerable: true,\r\n/******/ \t\t\t\t\t\t\tget: function() {\r\n/******/ \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n/******/ \t\t\t\t\t\t\t},\r\n/******/ \t\t\t\t\t\t\tset: function(value) {\r\n/******/ \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n/******/ \t\t\t\t\t\t\t}\r\n/******/ \t\t\t\t\t\t};\r\n/******/ \t\t\t\t\t}(name)));\r\n/******/ \t\t\t\t} else {\r\n/******/ \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\tfunction ensure(chunkId, callback) {\r\n/******/ \t\t\tif(hotStatus === \"ready\")\r\n/******/ \t\t\t\thotSetStatus(\"prepare\");\r\n/******/ \t\t\thotChunksLoading++;\r\n/******/ \t\t\t__webpack_require__.e(chunkId, function() {\r\n/******/ \t\t\t\ttry {\r\n/******/ \t\t\t\t\tcallback.call(null, fn);\r\n/******/ \t\t\t\t} finally {\r\n/******/ \t\t\t\t\tfinishChunkLoading();\r\n/******/ \t\t\t\t}\r\n/******/ \t\r\n/******/ \t\t\t\tfunction finishChunkLoading() {\r\n/******/ \t\t\t\t\thotChunksLoading--;\r\n/******/ \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n/******/ \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n/******/ \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n/******/ \t\t\t\t\t\t}\r\n/******/ \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n/******/ \t\t\t\t\t\t\thotUpdateDownloaded();\r\n/******/ \t\t\t\t\t\t}\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t});\r\n/******/ \t\t}\r\n/******/ \t\tif(canDefineProperty) {\r\n/******/ \t\t\tObject.defineProperty(fn, \"e\", {\r\n/******/ \t\t\t\tenumerable: true,\r\n/******/ \t\t\t\tvalue: ensure\r\n/******/ \t\t\t});\r\n/******/ \t\t} else {\r\n/******/ \t\t\tfn.e = ensure;\r\n/******/ \t\t}\r\n/******/ \t\treturn fn;\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tvar hot = {\r\n/******/ \t\t\t// private stuff\r\n/******/ \t\t\t_acceptedDependencies: {},\r\n/******/ \t\t\t_declinedDependencies: {},\r\n/******/ \t\t\t_selfAccepted: false,\r\n/******/ \t\t\t_selfDeclined: false,\r\n/******/ \t\t\t_disposeHandlers: [],\r\n/******/ \t\r\n/******/ \t\t\t// Module API\r\n/******/ \t\t\tactive: true,\r\n/******/ \t\t\taccept: function(dep, callback) {\r\n/******/ \t\t\t\tif(typeof dep === \"undefined\")\r\n/******/ \t\t\t\t\thot._selfAccepted = true;\r\n/******/ \t\t\t\telse if(typeof dep === \"function\")\r\n/******/ \t\t\t\t\thot._selfAccepted = dep;\r\n/******/ \t\t\t\telse if(typeof dep === \"object\")\r\n/******/ \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n/******/ \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n/******/ \t\t\t\telse\r\n/******/ \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n/******/ \t\t\t},\r\n/******/ \t\t\tdecline: function(dep) {\r\n/******/ \t\t\t\tif(typeof dep === \"undefined\")\r\n/******/ \t\t\t\t\thot._selfDeclined = true;\r\n/******/ \t\t\t\telse if(typeof dep === \"number\")\r\n/******/ \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n/******/ \t\t\t\telse\r\n/******/ \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n/******/ \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n/******/ \t\t\t},\r\n/******/ \t\t\tdispose: function(callback) {\r\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\r\n/******/ \t\t\t},\r\n/******/ \t\t\taddDisposeHandler: function(callback) {\r\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\r\n/******/ \t\t\t},\r\n/******/ \t\t\tremoveDisposeHandler: function(callback) {\r\n/******/ \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n/******/ \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n/******/ \t\t\t},\r\n/******/ \t\r\n/******/ \t\t\t// Management API\r\n/******/ \t\t\tcheck: hotCheck,\r\n/******/ \t\t\tapply: hotApply,\r\n/******/ \t\t\tstatus: function(l) {\r\n/******/ \t\t\t\tif(!l) return hotStatus;\r\n/******/ \t\t\t\thotStatusHandlers.push(l);\r\n/******/ \t\t\t},\r\n/******/ \t\t\taddStatusHandler: function(l) {\r\n/******/ \t\t\t\thotStatusHandlers.push(l);\r\n/******/ \t\t\t},\r\n/******/ \t\t\tremoveStatusHandler: function(l) {\r\n/******/ \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n/******/ \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n/******/ \t\t\t},\r\n/******/ \t\r\n/******/ \t\t\t//inherit from previous dispose call\r\n/******/ \t\t\tdata: hotCurrentModuleData[moduleId]\r\n/******/ \t\t};\r\n/******/ \t\treturn hot;\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tvar hotStatusHandlers = [];\r\n/******/ \tvar hotStatus = \"idle\";\r\n/******/ \t\r\n/******/ \tfunction hotSetStatus(newStatus) {\r\n/******/ \t\thotStatus = newStatus;\r\n/******/ \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n/******/ \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \t// while downloading\r\n/******/ \tvar hotWaitingFiles = 0;\r\n/******/ \tvar hotChunksLoading = 0;\r\n/******/ \tvar hotWaitingFilesMap = {};\r\n/******/ \tvar hotRequestedFilesMap = {};\r\n/******/ \tvar hotAvailibleFilesMap = {};\r\n/******/ \tvar hotCallback;\r\n/******/ \t\r\n/******/ \t// The update info\r\n/******/ \tvar hotUpdate, hotUpdateNewHash;\r\n/******/ \t\r\n/******/ \tfunction toModuleId(id) {\r\n/******/ \t\tvar isNumber = (+id) + \"\" === id;\r\n/******/ \t\treturn isNumber ? +id : id;\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotCheck(apply, callback) {\r\n/******/ \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n/******/ \t\tif(typeof apply === \"function\") {\r\n/******/ \t\t\thotApplyOnUpdate = false;\r\n/******/ \t\t\tcallback = apply;\r\n/******/ \t\t} else {\r\n/******/ \t\t\thotApplyOnUpdate = apply;\r\n/******/ \t\t\tcallback = callback || function(err) {\r\n/******/ \t\t\t\tif(err) throw err;\r\n/******/ \t\t\t};\r\n/******/ \t\t}\r\n/******/ \t\thotSetStatus(\"check\");\r\n/******/ \t\thotDownloadManifest(function(err, update) {\r\n/******/ \t\t\tif(err) return callback(err);\r\n/******/ \t\t\tif(!update) {\r\n/******/ \t\t\t\thotSetStatus(\"idle\");\r\n/******/ \t\t\t\tcallback(null, null);\r\n/******/ \t\t\t\treturn;\r\n/******/ \t\t\t}\r\n/******/ \t\r\n/******/ \t\t\thotRequestedFilesMap = {};\r\n/******/ \t\t\thotAvailibleFilesMap = {};\r\n/******/ \t\t\thotWaitingFilesMap = {};\r\n/******/ \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n/******/ \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n/******/ \t\t\thotUpdateNewHash = update.h;\r\n/******/ \t\r\n/******/ \t\t\thotSetStatus(\"prepare\");\r\n/******/ \t\t\thotCallback = callback;\r\n/******/ \t\t\thotUpdate = {};\r\n/******/ \t\t\tvar chunkId = 0;\r\n/******/ \t\t\t{ // eslint-disable-line no-lone-blocks\r\n/******/ \t\t\t\t/*globals chunkId */\r\n/******/ \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n/******/ \t\t\t}\r\n/******/ \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n/******/ \t\t\t\thotUpdateDownloaded();\r\n/******/ \t\t\t}\r\n/******/ \t\t});\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n/******/ \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n/******/ \t\t\treturn;\r\n/******/ \t\thotRequestedFilesMap[chunkId] = false;\r\n/******/ \t\tfor(var moduleId in moreModules) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n/******/ \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n/******/ \t\t\thotUpdateDownloaded();\r\n/******/ \t\t}\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotEnsureUpdateChunk(chunkId) {\r\n/******/ \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n/******/ \t\t\thotWaitingFilesMap[chunkId] = true;\r\n/******/ \t\t} else {\r\n/******/ \t\t\thotRequestedFilesMap[chunkId] = true;\r\n/******/ \t\t\thotWaitingFiles++;\r\n/******/ \t\t\thotDownloadUpdateChunk(chunkId);\r\n/******/ \t\t}\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotUpdateDownloaded() {\r\n/******/ \t\thotSetStatus(\"ready\");\r\n/******/ \t\tvar callback = hotCallback;\r\n/******/ \t\thotCallback = null;\r\n/******/ \t\tif(!callback) return;\r\n/******/ \t\tif(hotApplyOnUpdate) {\r\n/******/ \t\t\thotApply(hotApplyOnUpdate, callback);\r\n/******/ \t\t} else {\r\n/******/ \t\t\tvar outdatedModules = [];\r\n/******/ \t\t\tfor(var id in hotUpdate) {\r\n/******/ \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n/******/ \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t\tcallback(null, outdatedModules);\r\n/******/ \t\t}\r\n/******/ \t}\r\n/******/ \t\r\n/******/ \tfunction hotApply(options, callback) {\r\n/******/ \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n/******/ \t\tif(typeof options === \"function\") {\r\n/******/ \t\t\tcallback = options;\r\n/******/ \t\t\toptions = {};\r\n/******/ \t\t} else if(options && typeof options === \"object\") {\r\n/******/ \t\t\tcallback = callback || function(err) {\r\n/******/ \t\t\t\tif(err) throw err;\r\n/******/ \t\t\t};\r\n/******/ \t\t} else {\r\n/******/ \t\t\toptions = {};\r\n/******/ \t\t\tcallback = callback || function(err) {\r\n/******/ \t\t\t\tif(err) throw err;\r\n/******/ \t\t\t};\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\tfunction getAffectedStuff(module) {\r\n/******/ \t\t\tvar outdatedModules = [module];\r\n/******/ \t\t\tvar outdatedDependencies = {};\r\n/******/ \t\r\n/******/ \t\t\tvar queue = outdatedModules.slice();\r\n/******/ \t\t\twhile(queue.length > 0) {\r\n/******/ \t\t\t\tvar moduleId = queue.pop();\r\n/******/ \t\t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\t\tif(!module || module.hot._selfAccepted)\r\n/******/ \t\t\t\t\tcontinue;\r\n/******/ \t\t\t\tif(module.hot._selfDeclined) {\r\n/******/ \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tif(moduleId === 0) {\r\n/******/ \t\t\t\t\treturn;\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n/******/ \t\t\t\t\tvar parentId = module.parents[i];\r\n/******/ \t\t\t\t\tvar parent = installedModules[parentId];\r\n/******/ \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n/******/ \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n/******/ \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n/******/ \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n/******/ \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n/******/ \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n/******/ \t\t\t\t\t\tcontinue;\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n/******/ \t\t\t\t\toutdatedModules.push(parentId);\r\n/******/ \t\t\t\t\tqueue.push(parentId);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\r\n/******/ \t\t\treturn [outdatedModules, outdatedDependencies];\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\tfunction addAllToSet(a, b) {\r\n/******/ \t\t\tfor(var i = 0; i < b.length; i++) {\r\n/******/ \t\t\t\tvar item = b[i];\r\n/******/ \t\t\t\tif(a.indexOf(item) < 0)\r\n/******/ \t\t\t\t\ta.push(item);\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// at begin all updates modules are outdated\r\n/******/ \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n/******/ \t\tvar outdatedDependencies = {};\r\n/******/ \t\tvar outdatedModules = [];\r\n/******/ \t\tvar appliedUpdate = {};\r\n/******/ \t\tfor(var id in hotUpdate) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n/******/ \t\t\t\tvar moduleId = toModuleId(id);\r\n/******/ \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n/******/ \t\t\t\tif(!result) {\r\n/******/ \t\t\t\t\tif(options.ignoreUnaccepted)\r\n/******/ \t\t\t\t\t\tcontinue;\r\n/******/ \t\t\t\t\thotSetStatus(\"abort\");\r\n/******/ \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tif(result instanceof Error) {\r\n/******/ \t\t\t\t\thotSetStatus(\"abort\");\r\n/******/ \t\t\t\t\treturn callback(result);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n/******/ \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n/******/ \t\t\t\tfor(var moduleId in result[1]) {\r\n/******/ \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n/******/ \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n/******/ \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n/******/ \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Store self accepted outdated modules to require them later by the module system\r\n/******/ \t\tvar outdatedSelfAcceptedModules = [];\r\n/******/ \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n/******/ \t\t\tvar moduleId = outdatedModules[i];\r\n/******/ \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n/******/ \t\t\t\toutdatedSelfAcceptedModules.push({\r\n/******/ \t\t\t\t\tmodule: moduleId,\r\n/******/ \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n/******/ \t\t\t\t});\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Now in \"dispose\" phase\r\n/******/ \t\thotSetStatus(\"dispose\");\r\n/******/ \t\tvar queue = outdatedModules.slice();\r\n/******/ \t\twhile(queue.length > 0) {\r\n/******/ \t\t\tvar moduleId = queue.pop();\r\n/******/ \t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\tif(!module) continue;\r\n/******/ \t\r\n/******/ \t\t\tvar data = {};\r\n/******/ \t\r\n/******/ \t\t\t// Call dispose handlers\r\n/******/ \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n/******/ \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n/******/ \t\t\t\tvar cb = disposeHandlers[j];\r\n/******/ \t\t\t\tcb(data);\r\n/******/ \t\t\t}\r\n/******/ \t\t\thotCurrentModuleData[moduleId] = data;\r\n/******/ \t\r\n/******/ \t\t\t// disable module (this disables requires from this module)\r\n/******/ \t\t\tmodule.hot.active = false;\r\n/******/ \t\r\n/******/ \t\t\t// remove module from cache\r\n/******/ \t\t\tdelete installedModules[moduleId];\r\n/******/ \t\r\n/******/ \t\t\t// remove \"parents\" references from all children\r\n/******/ \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n/******/ \t\t\t\tvar child = installedModules[module.children[j]];\r\n/******/ \t\t\t\tif(!child) continue;\r\n/******/ \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n/******/ \t\t\t\tif(idx >= 0) {\r\n/******/ \t\t\t\t\tchild.parents.splice(idx, 1);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// remove outdated dependency from module children\r\n/******/ \t\tfor(var moduleId in outdatedDependencies) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n/******/ \t\t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n/******/ \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n/******/ \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n/******/ \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n/******/ \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Not in \"apply\" phase\r\n/******/ \t\thotSetStatus(\"apply\");\r\n/******/ \t\r\n/******/ \t\thotCurrentHash = hotUpdateNewHash;\r\n/******/ \t\r\n/******/ \t\t// insert new code\r\n/******/ \t\tfor(var moduleId in appliedUpdate) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n/******/ \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// call accept handlers\r\n/******/ \t\tvar error = null;\r\n/******/ \t\tfor(var moduleId in outdatedDependencies) {\r\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n/******/ \t\t\t\tvar module = installedModules[moduleId];\r\n/******/ \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n/******/ \t\t\t\tvar callbacks = [];\r\n/******/ \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n/******/ \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n/******/ \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n/******/ \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n/******/ \t\t\t\t\tcallbacks.push(cb);\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n/******/ \t\t\t\t\tvar cb = callbacks[i];\r\n/******/ \t\t\t\t\ttry {\r\n/******/ \t\t\t\t\t\tcb(outdatedDependencies);\r\n/******/ \t\t\t\t\t} catch(err) {\r\n/******/ \t\t\t\t\t\tif(!error)\r\n/******/ \t\t\t\t\t\t\terror = err;\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// Load self accepted modules\r\n/******/ \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n/******/ \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n/******/ \t\t\tvar moduleId = item.module;\r\n/******/ \t\t\thotCurrentParents = [moduleId];\r\n/******/ \t\t\ttry {\r\n/******/ \t\t\t\t__webpack_require__(moduleId);\r\n/******/ \t\t\t} catch(err) {\r\n/******/ \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n/******/ \t\t\t\t\ttry {\r\n/******/ \t\t\t\t\t\titem.errorHandler(err);\r\n/******/ \t\t\t\t\t} catch(err) {\r\n/******/ \t\t\t\t\t\tif(!error)\r\n/******/ \t\t\t\t\t\t\terror = err;\r\n/******/ \t\t\t\t\t}\r\n/******/ \t\t\t\t} else if(!error)\r\n/******/ \t\t\t\t\terror = err;\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\t// handle errors in accept handlers and self accepted module load\r\n/******/ \t\tif(error) {\r\n/******/ \t\t\thotSetStatus(\"fail\");\r\n/******/ \t\t\treturn callback(error);\r\n/******/ \t\t}\r\n/******/ \t\r\n/******/ \t\thotSetStatus(\"idle\");\r\n/******/ \t\tcallback(null, outdatedModules);\r\n/******/ \t}\r\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false,\n/******/ \t\t\thot: hotCreateModule(moduleId),\n/******/ \t\t\tparents: hotCurrentParents,\n/******/ \t\t\tchildren: []\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/\";\n/******/\n/******/ \t// __webpack_hash__\n/******/ \t__webpack_require__.h = function() { return hotCurrentHash; };\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn hotCreateRequire(0)(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar modal_module_1 = __webpack_require__(1);\r\n\texports.ModalModule = modal_module_1.ModalModule;\r\n\tvar modal_window_service_1 = __webpack_require__(29);\r\n\texports.ModalWindowService = modal_window_service_1.ModalWindowService;\r\n\tvar modal_window_component_1 = __webpack_require__(24);\r\n\texports.ModalWindowComponent = modal_window_component_1.ModalWindowComponent;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(20);\r\n\tvar rx_pubsub_1 = __webpack_require__(21);\r\n\tvar trust_html_pipe_1 = __webpack_require__(22);\r\n\tvar modal_window_component_1 = __webpack_require__(24);\r\n\tvar modal_window_service_1 = __webpack_require__(29);\r\n\tvar ModalModule = (function () {\r\n\t    function ModalModule() {\r\n\t    }\r\n\t    return ModalModule;\r\n\t}());\r\n\tModalModule = __decorate([\r\n\t    core_1.NgModule({\r\n\t        imports: [\r\n\t            common_1.CommonModule\r\n\t        ],\r\n\t        declarations: [\r\n\t            modal_window_component_1.ModalWindowComponent,\r\n\t            trust_html_pipe_1.TrustHtmlPipe\r\n\t        ],\r\n\t        providers: [rx_pubsub_1.RxPubSub, modal_window_service_1.ModalWindowService],\r\n\t        exports: [modal_window_component_1.ModalWindowComponent]\r\n\t    })\r\n\t], ModalModule);\r\n\texports.ModalModule = ModalModule;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.4.10\n\t * (c) 2010-2017 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(3), __webpack_require__(5), __webpack_require__(6)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/symbol/observable', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.rxjs_symbol_observable,global.Rx,global.Rx));\n\t}(this, function (exports,rxjs_symbol_observable,rxjs_Subject,rxjs_Observable) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = (self);\n\t        }\n\t        else {\n\t            globalScope = (global);\n\t        }\n\t    }\n\t    else {\n\t        globalScope = (window);\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function scheduleMicroTask(fn) {\n\t        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var /** @type {?} */ global$1 = globalScope;\n\t    /**\n\t     * @param {?} type\n\t     * @return {?}\n\t     */\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @return {?}\n\t     */\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return \"\" + token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return \"\" + token.name;\n\t        }\n\t        var /** @type {?} */ res = token.toString();\n\t        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @return {?}\n\t     */\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    /**\n\t     * @param {?} o\n\t     * @return {?}\n\t     */\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function print(obj) {\n\t        // tslint:disable-next-line:no-console\n\t        console.log(obj);\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function warn(obj) {\n\t        console.warn(obj);\n\t    }\n\t    var /** @type {?} */ _symbolIterator = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (((globalScope)).Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n\t                    var /** @type {?} */ key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        ((Map)).prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    var /** @type {?} */ _nextClassId = 0;\n\t    var /** @type {?} */ Reflect = global$1.Reflect;\n\t    /**\n\t     * @param {?} annotation\n\t     * @return {?}\n\t     */\n\t    function extractAnnotation(annotation) {\n\t        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n\t            // it is a decorator, extract annotation\n\t            annotation = annotation.annotation;\n\t        }\n\t        return annotation;\n\t    }\n\t    /**\n\t     * @param {?} fnOrArray\n\t     * @param {?} key\n\t     * @return {?}\n\t     */\n\t    function applyParams(fnOrArray, key) {\n\t        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n\t            fnOrArray === Number || fnOrArray === Array) {\n\t            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n\t        }\n\t        if (typeof fnOrArray === 'function') {\n\t            return fnOrArray;\n\t        }\n\t        if (Array.isArray(fnOrArray)) {\n\t            var /** @type {?} */ annotations = fnOrArray;\n\t            var /** @type {?} */ annoLength = annotations.length - 1;\n\t            var /** @type {?} */ fn = fnOrArray[annoLength];\n\t            if (typeof fn !== 'function') {\n\t                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n\t            }\n\t            if (annoLength != fn.length) {\n\t                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n\t            }\n\t            var /** @type {?} */ paramsAnnotations = [];\n\t            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n\t                var /** @type {?} */ paramAnnotations = [];\n\t                paramsAnnotations.push(paramAnnotations);\n\t                var /** @type {?} */ annotation = annotations[i];\n\t                if (Array.isArray(annotation)) {\n\t                    for (var /** @type {?} */ j = 0; j < annotation.length; j++) {\n\t                        paramAnnotations.push(extractAnnotation(annotation[j]));\n\t                    }\n\t                }\n\t                else if (typeof annotation === 'function') {\n\t                    paramAnnotations.push(extractAnnotation(annotation));\n\t                }\n\t                else {\n\t                    paramAnnotations.push(annotation);\n\t                }\n\t            }\n\t            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n\t            return fn;\n\t        }\n\t        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n\t    }\n\t    /**\n\t     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n\t     *\n\t     * ## Basic Example\n\t     *\n\t     * ```\n\t     * var Greeter = ng.Class({\n\t     *   constructor: function(name) {\n\t     *     this.name = name;\n\t     *   },\n\t     *\n\t     *   greet: function() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class Greeter {\n\t     *   constructor(name) {\n\t     *     this.name = name;\n\t     *   }\n\t     *\n\t     *   greet() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * or equivalent to ES5:\n\t     *\n\t     * ```\n\t     * var Greeter = function (name) {\n\t     *   this.name = name;\n\t     * }\n\t     *\n\t     * Greeter.prototype.greet = function () {\n\t     *   alert('Hello ' + this.name + '!');\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with parameter annotations\n\t     *\n\t     * ```\n\t     * var MyService = ng.Class({\n\t     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n\t     *     ...\n\t     *   }]\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class MyService {\n\t     *   constructor(name: string, \\@Optional() myService: Service) {\n\t     *     ...\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with inheritance\n\t     *\n\t     * ```\n\t     * var Shape = ng.Class({\n\t     *   constructor: (color) {\n\t     *     this.color = color;\n\t     *   }\n\t     * });\n\t     *\n\t     * var Square = ng.Class({\n\t     *   extends: Shape,\n\t     *   constructor: function(color, size) {\n\t     *     Shape.call(this, color);\n\t     *     this.size = size;\n\t     *   }\n\t     * });\n\t     * ```\n\t     * \\@stable\n\t     * @param {?} clsDef\n\t     * @return {?}\n\t     */\n\t    function Class(clsDef) {\n\t        var /** @type {?} */ constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\t        var /** @type {?} */ proto = constructor.prototype;\n\t        if (clsDef.hasOwnProperty('extends')) {\n\t            if (typeof clsDef.extends === 'function') {\n\t                ((constructor)).prototype = proto =\n\t                    Object.create(((clsDef.extends)).prototype);\n\t            }\n\t            else {\n\t                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n\t            }\n\t        }\n\t        for (var key in clsDef) {\n\t            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n\t                proto[key] = applyParams(clsDef[key], key);\n\t            }\n\t        }\n\t        if (this && this.annotations instanceof Array) {\n\t            Reflect.defineMetadata('annotations', this.annotations, constructor);\n\t        }\n\t        var /** @type {?} */ constructorName = constructor['name'];\n\t        if (!constructorName || constructorName === 'constructor') {\n\t            ((constructor))['overriddenName'] = \"class\" + _nextClassId++;\n\t        }\n\t        return (constructor);\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} props\n\t     * @param {?=} parentClass\n\t     * @param {?=} chainFn\n\t     * @return {?}\n\t     */\n\t    function makeDecorator(name, props, parentClass, chainFn) {\n\t        if (chainFn === void 0) { chainFn = null; }\n\t        var /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n\t        /**\n\t         * @param {?} objOrType\n\t         * @return {?}\n\t         */\n\t        function DecoratorFactory(objOrType) {\n\t            if (!(Reflect && Reflect.getOwnMetadata)) {\n\t                throw 'reflect-metadata shim is required when using class decorators';\n\t            }\n\t            if (this instanceof DecoratorFactory) {\n\t                metaCtor.call(this, objOrType);\n\t                return this;\n\t            }\n\t            var /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n\t            var /** @type {?} */ chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n\t            chainAnnotation.push(annotationInstance);\n\t            var /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n\t                var /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n\t                annotations.push(annotationInstance);\n\t                Reflect.defineMetadata('annotations', annotations, cls);\n\t                return cls;\n\t            });\n\t            TypeDecorator.annotations = chainAnnotation;\n\t            TypeDecorator.Class = Class;\n\t            if (chainFn)\n\t                chainFn(TypeDecorator);\n\t            return TypeDecorator;\n\t        }\n\t        if (parentClass) {\n\t            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ((DecoratorFactory)).annotationCls = DecoratorFactory;\n\t        return DecoratorFactory;\n\t    }\n\t    /**\n\t     * @param {?} props\n\t     * @return {?}\n\t     */\n\t    function makeMetadataCtor(props) {\n\t        return function ctor() {\n\t            var _this = this;\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            props.forEach(function (prop, i) {\n\t                var /** @type {?} */ argVal = args[i];\n\t                if (Array.isArray(prop)) {\n\t                    // plain parameter\n\t                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n\t                }\n\t                else {\n\t                    for (var propName in prop) {\n\t                        _this[propName] =\n\t                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n\t                    }\n\t                }\n\t            });\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} props\n\t     * @param {?=} parentClass\n\t     * @return {?}\n\t     */\n\t    function makeParamDecorator(name, props, parentClass) {\n\t        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n\t        /**\n\t         * @param {...?} args\n\t         * @return {?}\n\t         */\n\t        function ParamDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof ParamDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var /** @type {?} */ annotationInstance = new ((_a = ((ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n\t            ((ParamDecorator)).annotation = annotationInstance;\n\t            return ParamDecorator;\n\t            /**\n\t             * @param {?} cls\n\t             * @param {?} unusedKey\n\t             * @param {?} index\n\t             * @return {?}\n\t             */\n\t            function ParamDecorator(cls, unusedKey, index) {\n\t                var /** @type {?} */ parameters = Reflect.getOwnMetadata('parameters', cls) || [];\n\t                // there might be gaps if some in between parameters do not have annotations.\n\t                // we pad with nulls.\n\t                while (parameters.length <= index) {\n\t                    parameters.push(null);\n\t                }\n\t                parameters[index] = parameters[index] || [];\n\t                parameters[index].push(annotationInstance);\n\t                Reflect.defineMetadata('parameters', parameters, cls);\n\t                return cls;\n\t            }\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n\t        return ParamDecoratorFactory;\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} props\n\t     * @param {?=} parentClass\n\t     * @return {?}\n\t     */\n\t    function makePropDecorator(name, props, parentClass) {\n\t        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n\t        /**\n\t         * @param {...?} args\n\t         * @return {?}\n\t         */\n\t        function PropDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof PropDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var /** @type {?} */ decoratorInstance = new ((_a = ((PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n\t            return function PropDecorator(target, name) {\n\t                var /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n\t                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n\t                meta[name].unshift(decoratorInstance);\n\t                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n\t            };\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n\t        return PropDecoratorFactory;\n\t    }\n\t\n\t    /**\n\t     * Inject decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Inject = makeParamDecorator('Inject', [['token', undefined]]);\n\t    /**\n\t     * Optional decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Optional = makeParamDecorator('Optional', []);\n\t    /**\n\t     * Injectable decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Injectable = (makeDecorator('Injectable', []));\n\t    /**\n\t     * Self decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Self = makeParamDecorator('Self', []);\n\t    /**\n\t     * SkipSelf decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ SkipSelf = makeParamDecorator('SkipSelf', []);\n\t    /**\n\t     * Host decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Host = makeParamDecorator('Host', []);\n\t\n\t    var OpaqueToken = (function () {\n\t        /**\n\t         * @param {?} _desc\n\t         */\n\t        function OpaqueToken(_desc) {\n\t            this._desc = _desc;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n\t        OpaqueToken.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        OpaqueToken.ctorParameters = function () { return [\n\t            null,\n\t        ]; };\n\t        return OpaqueToken;\n\t    }());\n\t\n\t    /**\n\t     * This token can be used to create a virtual provider that will populate the\n\t     * `entryComponents` fields of components and ng modules based on its `useValue`.\n\t     * All components that are referenced in the `useValue` value (either directly\n\t     * or in a nested array or map) will be added to the `entryComponents` property.\n\t     *\n\t     * ### Example\n\t     * The following example shows how the router can populate the `entryComponents`\n\t     * field of an NgModule based on the router configuration which refers\n\t     * to components.\n\t     *\n\t     * ```typescript\n\t     * // helper function inside the router\n\t     * function provideRoutes(routes) {\n\t     *   return [\n\t     *     {provide: ROUTES, useValue: routes},\n\t     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n\t     *   ];\n\t     * }\n\t     *\n\t     * // user code\n\t     * let routes = [\n\t     *   {path: '/root', component: RootComp},\n\t     *   {path: '/teams', component: TeamsComp}\n\t     * ];\n\t     *\n\t     * @NgModule({\n\t     *   providers: [provideRoutes(routes)]\n\t     * })\n\t     * class ModuleWithRoutes {}\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n\t    /**\n\t     * Attribute decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n\t    /**\n\t     * Base class for query metadata.\n\t     *\n\t     * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n\t     * more information.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var Query = (function () {\n\t        function Query() {\n\t        }\n\t        return Query;\n\t    }());\n\t    /**\n\t     * ContentChildren decorator and metadata.\n\t     *\n\t     *  @stable\n\t     *  @Annotation\n\t     */\n\t    var /** @type {?} */ ContentChildren = (makePropDecorator('ContentChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: false,\n\t            descendants: false,\n\t            read: undefined,\n\t        }\n\t    ], Query));\n\t    /**\n\t     * ContentChild decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ ContentChild = makePropDecorator('ContentChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: false,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * ViewChildren decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ ViewChildren = makePropDecorator('ViewChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * ViewChild decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ ViewChild = makePropDecorator('ViewChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t\n\t    var ChangeDetectionStrategy = {};\n\t    ChangeDetectionStrategy.OnPush = 0;\n\t    ChangeDetectionStrategy.Default = 1;\n\t    ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\n\t    ChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\t    var ChangeDetectorStatus = {};\n\t    ChangeDetectorStatus.CheckOnce = 0;\n\t    ChangeDetectorStatus.Checked = 1;\n\t    ChangeDetectorStatus.CheckAlways = 2;\n\t    ChangeDetectorStatus.Detached = 3;\n\t    ChangeDetectorStatus.Errored = 4;\n\t    ChangeDetectorStatus.Destroyed = 5;\n\t    ChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\n\t    ChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\t    /**\n\t     * @param {?} changeDetectionStrategy\n\t     * @return {?}\n\t     */\n\t    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n\t        return isBlank(changeDetectionStrategy) ||\n\t            changeDetectionStrategy === ChangeDetectionStrategy.Default;\n\t    }\n\t\n\t    /**\n\t     * Directive decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Directive = (makeDecorator('Directive', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        providers: undefined,\n\t        exportAs: undefined,\n\t        queries: undefined\n\t    }));\n\t    /**\n\t     * Component decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Component = (makeDecorator('Component', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        exportAs: undefined,\n\t        moduleId: undefined,\n\t        providers: undefined,\n\t        viewProviders: undefined,\n\t        changeDetection: ChangeDetectionStrategy.Default,\n\t        queries: undefined,\n\t        templateUrl: undefined,\n\t        template: undefined,\n\t        styleUrls: undefined,\n\t        styles: undefined,\n\t        animations: undefined,\n\t        encapsulation: undefined,\n\t        interpolation: undefined,\n\t        entryComponents: undefined\n\t    }, Directive));\n\t    /**\n\t     * Pipe decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Pipe = (makeDecorator('Pipe', {\n\t        name: undefined,\n\t        pure: true,\n\t    }));\n\t    /**\n\t     * Input decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * Output decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n\t    /**\n\t     * HostListener decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var LifecycleHooks = {};\n\t    LifecycleHooks.OnInit = 0;\n\t    LifecycleHooks.OnDestroy = 1;\n\t    LifecycleHooks.DoCheck = 2;\n\t    LifecycleHooks.OnChanges = 3;\n\t    LifecycleHooks.AfterContentInit = 4;\n\t    LifecycleHooks.AfterContentChecked = 5;\n\t    LifecycleHooks.AfterViewInit = 6;\n\t    LifecycleHooks.AfterViewChecked = 7;\n\t    LifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\n\t    LifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\n\t    LifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\n\t    LifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\n\t    LifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\n\t    LifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\n\t    LifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\n\t    LifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\n\t    var /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n\t        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n\t        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n\t        LifecycleHooks.AfterViewChecked\n\t    ];\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n\t     *\n\t     * \\@description\n\t     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n\t     * and content children are checked if at least one of them has changed.\n\t     * The `changes` parameter contains the changed properties.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var OnChanges = (function () {\n\t        function OnChanges() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        OnChanges.prototype.ngOnChanges = function (changes) { };\n\t        return OnChanges;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n\t     * initialized.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n\t     *\n\t     * \\@description\n\t     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n\t     * first time, and before any of its children have been checked. It is invoked only once when the\n\t     * directive is instantiated.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var OnInit = (function () {\n\t        function OnInit() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        OnInit.prototype.ngOnInit = function () { };\n\t        return OnInit;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n\t     *\n\t     * \\@description\n\t     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n\t     * algorithm. The default change detection algorithm looks for differences by comparing\n\t     * bound-property values by reference across change detection runs.\n\t     *\n\t     * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n\t     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n\t     * detector detects changes.\n\t     *\n\t     * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n\t     * for collections.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var DoCheck = (function () {\n\t        function DoCheck() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DoCheck.prototype.ngDoCheck = function () { };\n\t        return DoCheck;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n\t     *\n\t     * \\@description\n\t     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n\t     * instance is destroyed.\n\t     *\n\t     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var OnDestroy = (function () {\n\t        function OnDestroy() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        OnDestroy.prototype.ngOnDestroy = function () { };\n\t        return OnDestroy;\n\t    }());\n\t    /**\n\t     *\n\t     * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n\t     * initialized.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterContentInit = (function () {\n\t        function AfterContentInit() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterContentInit.prototype.ngAfterContentInit = function () { };\n\t        return AfterContentInit;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterContentChecked = (function () {\n\t        function AfterContentChecked() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterContentChecked.prototype.ngAfterContentChecked = function () { };\n\t        return AfterContentChecked;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n\t     * initialized.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterViewInit = (function () {\n\t        function AfterViewInit() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterViewInit.prototype.ngAfterViewInit = function () { };\n\t        return AfterViewInit;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n\t     * \\@howToUse\n\t     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n\t     *\n\t     * \\@description\n\t     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AfterViewChecked = (function () {\n\t        function AfterViewChecked() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AfterViewChecked.prototype.ngAfterViewChecked = function () { };\n\t        return AfterViewChecked;\n\t    }());\n\t\n\t    /**\n\t     * Defines a schema that will allow:\n\t     * - any non-Angular elements with a `-` in their name,\n\t     * - any properties on elements with a `-` in their name which is the common rule for custom\n\t     * elements.\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA = {\n\t        name: 'custom-elements'\n\t    };\n\t    /**\n\t     * Defines a schema that will allow any property on any element.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ NO_ERRORS_SCHEMA = {\n\t        name: 'no-errors-schema'\n\t    };\n\t    /**\n\t     * NgModule decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var /** @type {?} */ NgModule = (makeDecorator('NgModule', {\n\t        providers: undefined,\n\t        declarations: undefined,\n\t        imports: undefined,\n\t        exports: undefined,\n\t        entryComponents: undefined,\n\t        bootstrap: undefined,\n\t        schemas: undefined,\n\t        id: undefined,\n\t    }));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var ViewEncapsulation = {};\n\t    ViewEncapsulation.Emulated = 0;\n\t    ViewEncapsulation.Native = 1;\n\t    ViewEncapsulation.None = 2;\n\t    ViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\n\t    ViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\n\t    ViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\t    /**\n\t     * Metadata properties available for configuring Views.\n\t     *\n\t     * For details on the `\\@Component` annotation, see {\\@link Component}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * \\@Component({\n\t     *   selector: 'greet',\n\t     *   template: 'Hello {{name}}!',\n\t     * })\n\t     * class Greet {\n\t     *   name: string;\n\t     *\n\t     *   constructor() {\n\t     *     this.name = 'World';\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @deprecated Use Component instead.\n\t     *\n\t     * {\\@link Component}\n\t     */\n\t    var ViewMetadata = (function () {\n\t        /**\n\t         * @param {?=} __0\n\t         */\n\t        function ViewMetadata(_a) {\n\t            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n\t            this.templateUrl = templateUrl;\n\t            this.template = template;\n\t            this.styleUrls = styleUrls;\n\t            this.styles = styles;\n\t            this.encapsulation = encapsulation;\n\t            this.animations = animations;\n\t            this.interpolation = interpolation;\n\t        }\n\t        return ViewMetadata;\n\t    }());\n\t\n\t    /**\n\t     * \\@whatItDoes Represents the version of Angular\n\t     *\n\t     * \\@stable\n\t     */\n\t    var Version = (function () {\n\t        /**\n\t         * @param {?} full\n\t         */\n\t        function Version(full) {\n\t            this.full = full;\n\t        }\n\t        Object.defineProperty(Version.prototype, \"major\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.full.split('.')[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(Version.prototype, \"minor\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.full.split('.')[1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(Version.prototype, \"patch\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.full.split('.').slice(2).join('.'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return Version;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new Version('2.4.10');\n\t\n\t    /**\n\t     * Allows to refer to references which are not yet defined.\n\t     *\n\t     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n\t     * DI is declared,\n\t     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n\t     * yet defined.\n\t     *\n\t     * ### Example\n\t     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n\t     * \\@experimental\n\t     * @param {?} forwardRefFn\n\t     * @return {?}\n\t     */\n\t    function forwardRef(forwardRefFn) {\n\t        ((forwardRefFn)).__forward_ref__ = forwardRef;\n\t        ((forwardRefFn)).toString = function () { return stringify(this()); };\n\t        return (((forwardRefFn)));\n\t    }\n\t    /**\n\t     * Lazily retrieves the reference value from a forwardRef.\n\t     *\n\t     * Acts as the identity function when given a non-forward-ref value.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n\t     *\n\t     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n\t     *\n\t     * See: {\\@link forwardRef}\n\t     * \\@experimental\n\t     * @param {?} type\n\t     * @return {?}\n\t     */\n\t    function resolveForwardRef(type) {\n\t        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n\t            type.__forward_ref__ === forwardRef) {\n\t            return ((type))();\n\t        }\n\t        else {\n\t            return type;\n\t        }\n\t    }\n\t\n\t    var /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\n\t    var /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t    var _NullInjector = (function () {\n\t        function _NullInjector() {\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        _NullInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n\t            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n\t                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n\t            }\n\t            return notFoundValue;\n\t        };\n\t        return _NullInjector;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Injector interface\n\t     * \\@howToUse\n\t     * ```\n\t     * const injector: Injector = ...;\n\t     * injector.get(...);\n\t     * ```\n\t     *\n\t     * \\@description\n\t     * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n\t     *\n\t     * `Injector` returns itself when given `Injector` as a token:\n\t     * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var Injector = (function () {\n\t        function Injector() {\n\t        }\n\t        /**\n\t         * Retrieves an instance from the injector based on the provided token.\n\t         * If not found:\n\t         * - Throws {\\@link NoProviderError} if no `notFoundValue` that is not equal to\n\t         * Injector.THROW_IF_NOT_FOUND is given\n\t         * - Returns the `notFoundValue` otherwise\n\t         * @abstract\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        Injector.prototype.get = function (token, notFoundValue) { };\n\t        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t        Injector.NULL = new _NullInjector();\n\t        return Injector;\n\t    }());\n\t\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends$1(BaseError, _super);\n\t        /**\n\t         * @param {?} message\n\t         */\n\t        function BaseError(message) {\n\t            _super.call(this, message);\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            // TODO(bradfordcsmith): Remove this hack when\n\t            //     google/closure-compiler/issues/2102 is fixed.\n\t            var nativeError = new Error(message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.message; },\n\t            /**\n\t             * @param {?} message\n\t             * @return {?}\n\t             */\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return ((this._nativeError)).stack; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) { ((this._nativeError)).stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends$1(WrappedError, _super);\n\t        /**\n\t         * @param {?} message\n\t         * @param {?} error\n\t         */\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @param {?} keys\n\t     * @return {?}\n\t     */\n\t    function findFirstClosedCycle(keys) {\n\t        var /** @type {?} */ res = [];\n\t        for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n\t            if (res.indexOf(keys[i]) > -1) {\n\t                res.push(keys[i]);\n\t                return res;\n\t            }\n\t            res.push(keys[i]);\n\t        }\n\t        return res;\n\t    }\n\t    /**\n\t     * @param {?} keys\n\t     * @return {?}\n\t     */\n\t    function constructResolvingPath(keys) {\n\t        if (keys.length > 1) {\n\t            var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n\t            var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n\t            return ' (' + tokenStrs.join(' -> ') + ')';\n\t        }\n\t        return '';\n\t    }\n\t    /**\n\t     * Base class for all errors arising from misconfigured providers.\n\t     * \\@stable\n\t     */\n\t    var AbstractProviderError = (function (_super) {\n\t        __extends(AbstractProviderError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         * @param {?} constructResolvingMessage\n\t         */\n\t        function AbstractProviderError(injector, key, constructResolvingMessage) {\n\t            _super.call(this, 'DI Error');\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t            this.constructResolvingMessage = constructResolvingMessage;\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        }\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         * @return {?}\n\t         */\n\t        AbstractProviderError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        };\n\t        return AbstractProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n\t     * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b:B) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var NoProviderError = (function (_super) {\n\t        __extends(NoProviderError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         */\n\t        function NoProviderError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                var first = stringify(keys[0].token);\n\t                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return NoProviderError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when dependencies form a cycle.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n\t     *\n\t     * ```typescript\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n\t     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n\t     * ]);\n\t     *\n\t     * expect(() => injector.get(\"one\")).toThrowError();\n\t     * ```\n\t     *\n\t     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n\t     * \\@stable\n\t     */\n\t    var CyclicDependencyError = (function (_super) {\n\t        __extends(CyclicDependencyError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         */\n\t        function CyclicDependencyError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return CyclicDependencyError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when a constructing type returns with an Error.\n\t     *\n\t     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n\t     * this object to be instantiated.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor() {\n\t     *     throw new Error('message');\n\t     *   }\n\t     * }\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t     * try {\n\t     *   injector.get(A);\n\t     * } catch (e) {\n\t     *   expect(e instanceof InstantiationError).toBe(true);\n\t     *   expect(e.originalException.message).toEqual(\"message\");\n\t     *   expect(e.originalStack).toBeDefined();\n\t     * }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var InstantiationError = (function (_super) {\n\t        __extends(InstantiationError, _super);\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} originalException\n\t         * @param {?} originalStack\n\t         * @param {?} key\n\t         */\n\t        function InstantiationError(injector, originalException, originalStack, key) {\n\t            _super.call(this, 'DI Error', originalException);\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t        }\n\t        /**\n\t         * @param {?} injector\n\t         * @param {?} key\n\t         * @return {?}\n\t         */\n\t        InstantiationError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t        };\n\t        Object.defineProperty(InstantiationError.prototype, \"message\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ first = stringify(this.keys[0].token);\n\t                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.keys[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return InstantiationError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n\t     * creation.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var InvalidProviderError = (function (_super) {\n\t        __extends(InvalidProviderError, _super);\n\t        /**\n\t         * @param {?} provider\n\t         */\n\t        function InvalidProviderError(provider) {\n\t            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n\t        }\n\t        return InvalidProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when the class has no annotation information.\n\t     *\n\t     * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n\t     * need to be injected into the constructor.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     *\n\t     * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n\t     *\n\t     * ```typescript\n\t     * class B {}\n\t     *\n\t     * class A {\n\t     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var NoAnnotationError = (function (_super) {\n\t        __extends(NoAnnotationError, _super);\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} params\n\t         */\n\t        function NoAnnotationError(typeOrFunc, params) {\n\t            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n\t        }\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} params\n\t         * @return {?}\n\t         */\n\t        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n\t            var /** @type {?} */ signature = [];\n\t            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n\t                var /** @type {?} */ parameter = params[i];\n\t                if (!parameter || parameter.length == 0) {\n\t                    signature.push('?');\n\t                }\n\t                else {\n\t                    signature.push(parameter.map(stringify).join(' '));\n\t                }\n\t            }\n\t            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n\t                signature.join(', ') + '). ' +\n\t                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n\t                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n\t        };\n\t        return NoAnnotationError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when getting an object by index.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {}\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t     *\n\t     * expect(() => injector.getAt(100)).toThrowError();\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var OutOfBoundsError = (function (_super) {\n\t        __extends(OutOfBoundsError, _super);\n\t        /**\n\t         * @param {?} index\n\t         */\n\t        function OutOfBoundsError(index) {\n\t            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n\t        }\n\t        return OutOfBoundsError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when a multi provider and a regular provider are bound to the same token.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\n\t     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n\t     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n\t     * ])).toThrowError();\n\t     * ```\n\t     */\n\t    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n\t        __extends(MixingMultiProvidersWithRegularProvidersError, _super);\n\t        /**\n\t         * @param {?} provider1\n\t         * @param {?} provider2\n\t         */\n\t        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n\t            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n\t                provider2.toString());\n\t        }\n\t        return MixingMultiProvidersWithRegularProvidersError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n\t     *\n\t     * Keys have:\n\t     * - a system-wide unique `id`.\n\t     * - a `token`.\n\t     *\n\t     * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n\t     * the\n\t     * injector to store created objects in a more efficient way.\n\t     *\n\t     * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n\t     * resolving\n\t     * providers.\n\t     * \\@experimental\n\t     */\n\t    var ReflectiveKey = (function () {\n\t        /**\n\t         * Private\n\t         * @param {?} token\n\t         * @param {?} id\n\t         */\n\t        function ReflectiveKey(token, id) {\n\t            this.token = token;\n\t            this.id = id;\n\t            if (!token) {\n\t                throw new Error('Token must be defined!');\n\t            }\n\t        }\n\t        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n\t            /**\n\t             * Returns a stringified token.\n\t             * @return {?}\n\t             */\n\t            get: function () { return stringify(this.token); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Retrieves a `Key` for a token.\n\t         * @param {?} token\n\t         * @return {?}\n\t         */\n\t        ReflectiveKey.get = function (token) {\n\t            return _globalKeyRegistry.get(resolveForwardRef(token));\n\t        };\n\t        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n\t            /**\n\t             * @return {?} the number of keys registered in the system.\n\t             */\n\t            get: function () { return _globalKeyRegistry.numberOfKeys; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ReflectiveKey;\n\t    }());\n\t    /**\n\t     * \\@internal\n\t     */\n\t    var KeyRegistry = (function () {\n\t        function KeyRegistry() {\n\t            this._allKeys = new Map();\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @return {?}\n\t         */\n\t        KeyRegistry.prototype.get = function (token) {\n\t            if (token instanceof ReflectiveKey)\n\t                return token;\n\t            if (this._allKeys.has(token)) {\n\t                return this._allKeys.get(token);\n\t            }\n\t            var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n\t            this._allKeys.set(token, newKey);\n\t            return newKey;\n\t        };\n\t        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._allKeys.size; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return KeyRegistry;\n\t    }());\n\t    var /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Represents a type that a Component or other object is instances of.\n\t     *\n\t     * @description\n\t     *\n\t     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n\t     * the `MyCustomComponent` constructor function.\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ Type = Function;\n\t    /**\n\t     * @param {?} v\n\t     * @return {?}\n\t     */\n\t    function isType(v) {\n\t        return typeof v === 'function';\n\t    }\n\t\n\t    /**\n\t     * Attention: This regex has to hold even if the code is minified!\n\t     */\n\t    var /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{\\s*(\"use strict\";)?\\s*(return\\s+)?\\S+\\.apply\\(this,\\s*arguments\\)/;\n\t    var ReflectionCapabilities = (function () {\n\t        /**\n\t         * @param {?=} reflect\n\t         */\n\t        function ReflectionCapabilities(reflect) {\n\t            this._reflect = reflect || global$1.Reflect;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n\t        /**\n\t         * @param {?} t\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            return new (t.bind.apply(t, [void 0].concat(args)))();\n\t        }; };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} paramTypes\n\t         * @param {?} paramAnnotations\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n\t            var /** @type {?} */ result;\n\t            if (typeof paramTypes === 'undefined') {\n\t                result = new Array(paramAnnotations.length);\n\t            }\n\t            else {\n\t                result = new Array(paramTypes.length);\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < result.length; i++) {\n\t                // TS outputs Object for parameters without types, while Traceur omits\n\t                // the annotations. For now we preserve the Traceur behavior to aid\n\t                // migration, but this can be revisited.\n\t                if (typeof paramTypes === 'undefined') {\n\t                    result[i] = [];\n\t                }\n\t                else if (paramTypes[i] != Object) {\n\t                    result[i] = [paramTypes[i]];\n\t                }\n\t                else {\n\t                    result[i] = [];\n\t                }\n\t                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n\t                    result[i] = result[i].concat(paramAnnotations[i]);\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} parentCtor\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n\t            // If we have no decorators, we only have function.length as metadata.\n\t            // In that case, to detect whether a child class declared an own constructor or not,\n\t            // we need to look inside of that constructor to check whether it is\n\t            // just calling the parent.\n\t            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n\t            // that sets 'design:paramtypes' to []\n\t            // if a class inherits from another class but has no ctor declared itself.\n\t            if (DELEGATE_CTOR.exec(type.toString())) {\n\t                return null;\n\t            }\n\t            // Prefer the direct API.\n\t            if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n\t                return ((type)).parameters;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            var /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n\t            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n\t                // Newer tsickle uses a function closure\n\t                // Retain the non-function case for compatibility with older tsickle\n\t                var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n\t                var /** @type {?} */ paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n\t                var /** @type {?} */ paramAnnotations = ctorParameters.map(function (ctorParam) {\n\t                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n\t                });\n\t                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (isPresent(this._reflect) && isPresent(this._reflect.getOwnMetadata)) {\n\t                var /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n\t                var /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n\t                if (paramTypes || paramAnnotations) {\n\t                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t                }\n\t            }\n\t            // If a class has no decorators, at least create metadata\n\t            // based on function.length.\n\t            // Note: We know that this is a real constructor as we checked\n\t            // the content of the constructor above.\n\t            return new Array(((type.length))).fill(undefined);\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.parameters = function (type) {\n\t            // Note: only report metadata if we have at least one class decorator\n\t            // to stay in sync with the static reflector.\n\t            if (!isType(type)) {\n\t                return [];\n\t            }\n\t            var /** @type {?} */ parentCtor = getParentCtor(type);\n\t            var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n\t            if (!parameters && parentCtor !== Object) {\n\t                parameters = this.parameters(parentCtor);\n\t            }\n\t            return parameters || [];\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} parentCtor\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n\t            // Prefer the direct API.\n\t            if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n\t                var /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n\t                if (typeof annotations === 'function' && annotations.annotations) {\n\t                    annotations = annotations.annotations;\n\t                }\n\t                return annotations;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n\t                return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getOwnMetadata) {\n\t                return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n\t            if (!isType(typeOrFunc)) {\n\t                return [];\n\t            }\n\t            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n\t            var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n\t            var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n\t            return parentAnnotations.concat(ownAnnotations);\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @param {?} parentCtor\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n\t            // Prefer the direct API.\n\t            if (((typeOrFunc)).propMetadata &&\n\t                ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n\t                var /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n\t                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n\t                    propMetadata = propMetadata.propMetadata;\n\t                }\n\t                return propMetadata;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (((typeOrFunc)).propDecorators &&\n\t                ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n\t                var /** @type {?} */ propDecorators_1 = ((typeOrFunc)).propDecorators;\n\t                var /** @type {?} */ propMetadata_1 = ({});\n\t                Object.keys(propDecorators_1).forEach(function (prop) {\n\t                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n\t                });\n\t                return propMetadata_1;\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getOwnMetadata) {\n\t                return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n\t            if (!isType(typeOrFunc)) {\n\t                return {};\n\t            }\n\t            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n\t            var /** @type {?} */ propMetadata = {};\n\t            if (parentCtor !== Object) {\n\t                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n\t                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n\t                    propMetadata[propName] = parentPropMetadata_1[propName];\n\t                });\n\t            }\n\t            var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n\t            if (ownPropMetadata) {\n\t                Object.keys(ownPropMetadata).forEach(function (propName) {\n\t                    var /** @type {?} */ decorators = [];\n\t                    if (propMetadata.hasOwnProperty(propName)) {\n\t                        decorators.push.apply(decorators, propMetadata[propName]);\n\t                    }\n\t                    decorators.push.apply(decorators, ownPropMetadata[propName]);\n\t                    propMetadata[propName] = decorators;\n\t                });\n\t            }\n\t            return propMetadata;\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} lcProperty\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return type instanceof Type && lcProperty in type.prototype;\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.getter = function (name) { return ((new Function('o', 'return o.' + name + ';'))); };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.setter = function (name) {\n\t            return ((new Function('o', 'v', 'return o.' + name + ' = v;')));\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.method = function (name) {\n\t            var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n\t            return ((new Function('o', 'args', functionBody)));\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.importUri = function (type) {\n\t            // StaticSymbol\n\t            if (typeof type === 'object' && type['filePath']) {\n\t                return type['filePath'];\n\t            }\n\t            // Runtime type\n\t            return \"./\" + stringify(type);\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} moduleUrl\n\t         * @param {?} runtime\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n\t        /**\n\t         * @param {?} enumIdentifier\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n\t        return ReflectionCapabilities;\n\t    }());\n\t    /**\n\t     * @param {?} decoratorInvocations\n\t     * @return {?}\n\t     */\n\t    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n\t        if (!decoratorInvocations) {\n\t            return [];\n\t        }\n\t        return decoratorInvocations.map(function (decoratorInvocation) {\n\t            var /** @type {?} */ decoratorType = decoratorInvocation.type;\n\t            var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n\t            var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n\t            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} ctor\n\t     * @return {?}\n\t     */\n\t    function getParentCtor(ctor) {\n\t        var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n\t        var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n\t        // Note: We always use `Object` as the null value\n\t        // to simplify checking later on.\n\t        return parentCtor || Object;\n\t    }\n\t\n\t    /**\n\t     * Provides read-only access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     * @abstract\n\t     */\n\t    var ReflectorReader = (function () {\n\t        function ReflectorReader() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.parameters = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.annotations = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.propMetadata = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.importUri = function (typeOrFunc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @param {?} moduleUrl\n\t         * @param {?} runtime\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} identifier\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        ReflectorReader.prototype.resolveEnum = function (identifier, name) { };\n\t        return ReflectorReader;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var Reflector = (function (_super) {\n\t        __extends$2(Reflector, _super);\n\t        /**\n\t         * @param {?} reflectionCapabilities\n\t         */\n\t        function Reflector(reflectionCapabilities) {\n\t            _super.call(this);\n\t            this.reflectionCapabilities = reflectionCapabilities;\n\t        }\n\t        /**\n\t         * @param {?} caps\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.parameters = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.parameters(typeOrFunc);\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.annotations = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.annotations(typeOrFunc);\n\t        };\n\t        /**\n\t         * @param {?} typeOrFunc\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.propMetadata = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n\t        };\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} lcProperty\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n\t        };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n\t        /**\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} moduleUrl\n\t         * @param {?} runtime\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n\t            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n\t        };\n\t        /**\n\t         * @param {?} identifier\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        Reflector.prototype.resolveEnum = function (identifier, name) {\n\t            return this.reflectionCapabilities.resolveEnum(identifier, name);\n\t        };\n\t        return Reflector;\n\t    }(ReflectorReader));\n\t\n\t    /**\n\t     * The {@link Reflector} used internally in Angular to access metadata\n\t     * about symbols.\n\t     */\n\t    var /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n\t\n\t    /**\n\t     * `Dependency` is used by the framework to extend DI.\n\t     * This is internal to Angular and should not be used directly.\n\t     */\n\t    var ReflectiveDependency = (function () {\n\t        /**\n\t         * @param {?} key\n\t         * @param {?} optional\n\t         * @param {?} visibility\n\t         */\n\t        function ReflectiveDependency(key, optional, visibility) {\n\t            this.key = key;\n\t            this.optional = optional;\n\t            this.visibility = visibility;\n\t        }\n\t        /**\n\t         * @param {?} key\n\t         * @return {?}\n\t         */\n\t        ReflectiveDependency.fromKey = function (key) {\n\t            return new ReflectiveDependency(key, false, null);\n\t        };\n\t        return ReflectiveDependency;\n\t    }());\n\t    var /** @type {?} */ _EMPTY_LIST = [];\n\t    var ResolvedReflectiveProvider_ = (function () {\n\t        /**\n\t         * @param {?} key\n\t         * @param {?} resolvedFactories\n\t         * @param {?} multiProvider\n\t         */\n\t        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n\t            this.key = key;\n\t            this.resolvedFactories = resolvedFactories;\n\t            this.multiProvider = multiProvider;\n\t        }\n\t        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.resolvedFactories[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ResolvedReflectiveProvider_;\n\t    }());\n\t    /**\n\t     * An internal resolved representation of a factory function created by resolving {\\@link\n\t     * Provider}.\n\t     * \\@experimental\n\t     */\n\t    var ResolvedReflectiveFactory = (function () {\n\t        /**\n\t         * @param {?} factory\n\t         * @param {?} dependencies\n\t         */\n\t        function ResolvedReflectiveFactory(factory, dependencies) {\n\t            this.factory = factory;\n\t            this.dependencies = dependencies;\n\t        }\n\t        return ResolvedReflectiveFactory;\n\t    }());\n\t    /**\n\t     * Resolve a single provider.\n\t     * @param {?} provider\n\t     * @return {?}\n\t     */\n\t    function resolveReflectiveFactory(provider) {\n\t        var /** @type {?} */ factoryFn;\n\t        var /** @type {?} */ resolvedDeps;\n\t        if (provider.useClass) {\n\t            var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n\t            factoryFn = reflector.factory(useClass);\n\t            resolvedDeps = _dependenciesFor(useClass);\n\t        }\n\t        else if (provider.useExisting) {\n\t            factoryFn = function (aliasInstance) { return aliasInstance; };\n\t            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n\t        }\n\t        else if (provider.useFactory) {\n\t            factoryFn = provider.useFactory;\n\t            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n\t        }\n\t        else {\n\t            factoryFn = function () { return provider.useValue; };\n\t            resolvedDeps = _EMPTY_LIST;\n\t        }\n\t        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n\t    }\n\t    /**\n\t     * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n\t     *\n\t     * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n\t     * convenience provider syntax.\n\t     * @param {?} provider\n\t     * @return {?}\n\t     */\n\t    function resolveReflectiveProvider(provider) {\n\t        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n\t    }\n\t    /**\n\t     * Resolve a list of Providers.\n\t     * @param {?} providers\n\t     * @return {?}\n\t     */\n\t    function resolveReflectiveProviders(providers) {\n\t        var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n\t        var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n\t        var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n\t        return Array.from(resolvedProviderMap.values());\n\t    }\n\t    /**\n\t     * Merges a list of ResolvedProviders into a list where\n\t     * each key is contained exactly once and multi providers\n\t     * have been merged.\n\t     * @param {?} providers\n\t     * @param {?} normalizedProvidersMap\n\t     * @return {?}\n\t     */\n\t    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n\t        for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n\t            var /** @type {?} */ provider = providers[i];\n\t            var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n\t            if (existing) {\n\t                if (provider.multiProvider !== existing.multiProvider) {\n\t                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n\t                }\n\t                if (provider.multiProvider) {\n\t                    for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n\t                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n\t                    }\n\t                }\n\t                else {\n\t                    normalizedProvidersMap.set(provider.key.id, provider);\n\t                }\n\t            }\n\t            else {\n\t                var /** @type {?} */ resolvedProvider = void 0;\n\t                if (provider.multiProvider) {\n\t                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n\t                }\n\t                else {\n\t                    resolvedProvider = provider;\n\t                }\n\t                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n\t            }\n\t        }\n\t        return normalizedProvidersMap;\n\t    }\n\t    /**\n\t     * @param {?} providers\n\t     * @param {?} res\n\t     * @return {?}\n\t     */\n\t    function _normalizeProviders(providers, res) {\n\t        providers.forEach(function (b) {\n\t            if (b instanceof Type) {\n\t                res.push({ provide: b, useClass: b });\n\t            }\n\t            else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n\t                res.push(/** @type {?} */ (b));\n\t            }\n\t            else if (b instanceof Array) {\n\t                _normalizeProviders(b, res);\n\t            }\n\t            else {\n\t                throw new InvalidProviderError(b);\n\t            }\n\t        });\n\t        return res;\n\t    }\n\t    /**\n\t     * @param {?} typeOrFunc\n\t     * @param {?} dependencies\n\t     * @return {?}\n\t     */\n\t    function constructDependencies(typeOrFunc, dependencies) {\n\t        if (!dependencies) {\n\t            return _dependenciesFor(typeOrFunc);\n\t        }\n\t        else {\n\t            var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n\t            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} typeOrFunc\n\t     * @return {?}\n\t     */\n\t    function _dependenciesFor(typeOrFunc) {\n\t        var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\t        if (!params)\n\t            return [];\n\t        if (params.some(function (p) { return p == null; })) {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n\t    }\n\t    /**\n\t     * @param {?} typeOrFunc\n\t     * @param {?} metadata\n\t     * @param {?} params\n\t     * @return {?}\n\t     */\n\t    function _extractToken(typeOrFunc, metadata, params) {\n\t        var /** @type {?} */ token = null;\n\t        var /** @type {?} */ optional = false;\n\t        if (!Array.isArray(metadata)) {\n\t            if (metadata instanceof Inject) {\n\t                return _createDependency(metadata.token, optional, null);\n\t            }\n\t            else {\n\t                return _createDependency(metadata, optional, null);\n\t            }\n\t        }\n\t        var /** @type {?} */ visibility = null;\n\t        for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n\t            var /** @type {?} */ paramMetadata = metadata[i];\n\t            if (paramMetadata instanceof Type) {\n\t                token = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Inject) {\n\t                token = paramMetadata.token;\n\t            }\n\t            else if (paramMetadata instanceof Optional) {\n\t                optional = true;\n\t            }\n\t            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n\t                visibility = paramMetadata;\n\t            }\n\t        }\n\t        token = resolveForwardRef(token);\n\t        if (token != null) {\n\t            return _createDependency(token, optional, visibility);\n\t        }\n\t        else {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @param {?} optional\n\t     * @param {?} visibility\n\t     * @return {?}\n\t     */\n\t    function _createDependency(token, optional, visibility) {\n\t        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n\t    }\n\t\n\t    // Threshold for the dynamic version\n\t    var /** @type {?} */ UNDEFINED = new Object();\n\t    /**\n\t     * A ReflectiveDependency injection container used for instantiating objects and resolving\n\t     * dependencies.\n\t     *\n\t     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n\t     * constructor dependencies.\n\t     *\n\t     * In typical use, application code asks for the dependencies in the constructor and they are\n\t     * resolved by the `Injector`.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n\t     *\n\t     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n\t     *\n\t     * ```typescript\n\t     * \\@Injectable()\n\t     * class Engine {\n\t     * }\n\t     *\n\t     * \\@Injectable()\n\t     * class Car {\n\t     *   constructor(public engine:Engine) {}\n\t     * }\n\t     *\n\t     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t     * var car = injector.get(Car);\n\t     * expect(car instanceof Car).toBe(true);\n\t     * expect(car.engine instanceof Engine).toBe(true);\n\t     * ```\n\t     *\n\t     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n\t     * resolve all of the object's dependencies automatically.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ReflectiveInjector = (function () {\n\t        function ReflectiveInjector() {\n\t        }\n\t        /**\n\t         * Turns an array of provider definitions into an array of resolved providers.\n\t         *\n\t         * A resolution is a process of flattening multiple nested arrays and converting individual\n\t         * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n\t         *\n\t         * expect(providers.length).toEqual(2);\n\t         *\n\t         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n\t         * expect(providers[0].key.displayName).toBe(\"Car\");\n\t         * expect(providers[0].dependencies.length).toEqual(1);\n\t         * expect(providers[0].factory).toBeDefined();\n\t         *\n\t         * expect(providers[1].key.displayName).toBe(\"Engine\");\n\t         * });\n\t         * ```\n\t         *\n\t         * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.resolve = function (providers) {\n\t            return resolveReflectiveProviders(providers);\n\t        };\n\t        /**\n\t         * Resolves an array of providers and creates an injector from those providers.\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `fromResolvedProviders`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {\\@link Injector#resolve} and {\\@link Injector#fromResolvedProviders}.\n\t         * @param {?} providers\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n\t        };\n\t        /**\n\t         * Creates an injector from previously resolved providers.\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n\t         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         * \\@experimental\n\t         * @param {?} providers\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            return new ReflectiveInjector_(providers, parent);\n\t        };\n\t        /**\n\t         * Parent of this injector.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n\t         *\n\t         * ```typescript\n\t         * var parent = ReflectiveInjector.resolveAndCreate([]);\n\t         * var child = parent.resolveAndCreateChild([]);\n\t         * expect(child.parent).toBe(parent);\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.parent = function () { };\n\t        /**\n\t         * Resolves an array of providers and creates a child injector from those providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n\t         * var child = parent.resolveAndCreateChild([ChildProvider]);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `createChildFromResolved`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {\\@link Injector#resolve} and {\\@link Injector#createChildFromResolved}.\n\t         * @abstract\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n\t        /**\n\t         * Creates a child injector from previously resolved providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n\t         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n\t         *\n\t         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n\t         * var child = parent.createChildFromResolved(childProviders);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         * @abstract\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n\t        /**\n\t         * Resolves a provider and instantiates an object in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         *\n\t         * var car = injector.resolveAndInstantiate(Car);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n\t         * ```\n\t         * @abstract\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n\t        /**\n\t         * Instantiates an object using a resolved provider in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * \\@Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n\t         * var car = injector.instantiateResolved(carProvider);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n\t         * ```\n\t         * @abstract\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n\t        return ReflectiveInjector;\n\t    }());\n\t    var ReflectiveInjector_ = (function () {\n\t        /**\n\t         * Private\n\t         * @param {?} _providers\n\t         * @param {?=} _parent\n\t         */\n\t        function ReflectiveInjector_(_providers, _parent) {\n\t            if (_parent === void 0) { _parent = null; }\n\t            /** @internal */\n\t            this._constructionCounter = 0;\n\t            this._providers = _providers;\n\t            this._parent = _parent;\n\t            var len = _providers.length;\n\t            this.keyIds = new Array(len);\n\t            this.objs = new Array(len);\n\t            for (var i = 0; i < len; i++) {\n\t                this.keyIds[i] = _providers[i].key.id;\n\t                this.objs[i] = UNDEFINED;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n\t        };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n\t            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return this.createChildFromResolved(ResolvedReflectiveProviders);\n\t        };\n\t        /**\n\t         * @param {?} providers\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n\t            var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n\t            inj._parent = this;\n\t            return inj;\n\t        };\n\t        /**\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n\t            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n\t        };\n\t        /**\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n\t            if (index < 0 || index >= this._providers.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this._providers[index];\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._new = function (provider) {\n\t            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n\t                throw new CyclicDependencyError(this, provider.key);\n\t            }\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n\t        /**\n\t         * @param {?} provider\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n\t            if (provider.multiProvider) {\n\t                var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n\t                for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n\t                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n\t                }\n\t                return res;\n\t            }\n\t            else {\n\t                return this._instantiate(provider, provider.resolvedFactories[0]);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} provider\n\t         * @param {?} ResolvedReflectiveFactory\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n\t            var _this = this;\n\t            var /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\t            var /** @type {?} */ deps;\n\t            try {\n\t                deps =\n\t                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n\t            }\n\t            catch (e) {\n\t                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n\t                    e.addKey(this, provider.key);\n\t                }\n\t                throw e;\n\t            }\n\t            var /** @type {?} */ obj;\n\t            try {\n\t                obj = factory.apply(void 0, deps);\n\t            }\n\t            catch (e) {\n\t                throw new InstantiationError(this, e, e.stack, provider.key);\n\t            }\n\t            return obj;\n\t        };\n\t        /**\n\t         * @param {?} dep\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n\t            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n\t        };\n\t        /**\n\t         * @param {?} key\n\t         * @param {?} visibility\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n\t            if (key === INJECTOR_KEY) {\n\t                return this;\n\t            }\n\t            if (visibility instanceof Self) {\n\t                return this._getByKeySelf(key, notFoundValue);\n\t            }\n\t            else {\n\t                return this._getByKeyDefault(key, notFoundValue, visibility);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} keyId\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n\t            for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n\t                if (this.keyIds[i] === keyId) {\n\t                    if (this.objs[i] === UNDEFINED) {\n\t                        this.objs[i] = this._new(this._providers[i]);\n\t                    }\n\t                    return this.objs[i];\n\t                }\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} key\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n\t            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n\t                return notFoundValue;\n\t            }\n\t            else {\n\t                throw new NoProviderError(this, key);\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} key\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n\t            var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n\t            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} key\n\t         * @param {?} notFoundValue\n\t         * @param {?} visibility\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n\t            var /** @type {?} */ inj;\n\t            if (visibility instanceof SkipSelf) {\n\t                inj = this._parent;\n\t            }\n\t            else {\n\t                inj = this;\n\t            }\n\t            while (inj instanceof ReflectiveInjector_) {\n\t                var /** @type {?} */ inj_ = (inj);\n\t                var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n\t                if (obj !== UNDEFINED)\n\t                    return obj;\n\t                inj = inj_._parent;\n\t            }\n\t            if (inj !== null) {\n\t                return inj.get(key.token, notFoundValue);\n\t            }\n\t            else {\n\t                return this._throwOrNull(key, notFoundValue);\n\t            }\n\t        };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n\t                    .join(', ');\n\t                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n\t        return ReflectiveInjector_;\n\t    }());\n\t    var /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n\t    /**\n\t     * @param {?} injector\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function _mapProviders(injector, fn) {\n\t        var /** @type {?} */ res = new Array(injector._providers.length);\n\t        for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n\t            res[i] = fn(injector.getProviderAtIndex(i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * \\@whatItDoes Provides a hook for centralized exception handling.\n\t     *\n\t     * \\@description\n\t     *\n\t     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n\t     * intercept error handling, write a custom exception handler that replaces this default as\n\t     * appropriate for your app.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * class MyErrorHandler implements ErrorHandler {\n\t     *   handleError(error) {\n\t     *     // do something with the exception\n\t     *   }\n\t     * }\n\t     *\n\t     * \\@NgModule({\n\t     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n\t     * })\n\t     * class MyModule {}\n\t     * ```\n\t     *\n\t     * \\@stable\n\t     */\n\t    var ErrorHandler = (function () {\n\t        /**\n\t         * @param {?=} rethrowError\n\t         */\n\t        function ErrorHandler(rethrowError) {\n\t            if (rethrowError === void 0) { rethrowError = true; }\n\t            /**\n\t             * @internal\n\t             */\n\t            this._console = console;\n\t            this.rethrowError = rethrowError;\n\t        }\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype.handleError = function (error) {\n\t            var /** @type {?} */ originalError = this._findOriginalError(error);\n\t            var /** @type {?} */ originalStack = this._findOriginalStack(error);\n\t            var /** @type {?} */ context = this._findContext(error);\n\t            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n\t            if (originalError) {\n\t                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n\t            }\n\t            if (originalStack) {\n\t                this._console.error('ORIGINAL STACKTRACE:');\n\t                this._console.error(originalStack);\n\t            }\n\t            if (context) {\n\t                this._console.error('ERROR CONTEXT:');\n\t                this._console.error(context);\n\t            }\n\t            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n\t            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n\t            if (this.rethrowError)\n\t                throw error;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._extractMessage = function (error) {\n\t            return error instanceof Error ? error.message : error.toString();\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._findContext = function (error) {\n\t            if (error) {\n\t                return error.context ? error.context :\n\t                    this._findContext(((error)).originalError);\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._findOriginalError = function (error) {\n\t            var /** @type {?} */ e = ((error)).originalError;\n\t            while (e && ((e)).originalError) {\n\t                e = ((e)).originalError;\n\t            }\n\t            return e;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        ErrorHandler.prototype._findOriginalStack = function (error) {\n\t            if (!(error instanceof Error))\n\t                return null;\n\t            var /** @type {?} */ e = error;\n\t            var /** @type {?} */ stack = e.stack;\n\t            while (e instanceof Error && ((e)).originalError) {\n\t                e = ((e)).originalError;\n\t                if (e instanceof Error && e.stack) {\n\t                    stack = e.stack;\n\t                }\n\t            }\n\t            return stack;\n\t        };\n\t        return ErrorHandler;\n\t    }());\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var /** @type {?} */ m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var /** @type {?} */ k1 = Object.keys(m1);\n\t            var /** @type {?} */ k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n\t                var /** @type {?} */ key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} arr\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        ListWrapper.findLast = function (arr, condition) {\n\t            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n\t                if (condition(arr[i])) {\n\t                    return arr[i];\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} items\n\t         * @return {?}\n\t         */\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n\t                var /** @type {?} */ index = list.indexOf(items[i]);\n\t                if (index > -1) {\n\t                    list.splice(index, 1);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        ListWrapper.remove = function (list, el) {\n\t            var /** @type {?} */ index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        /**\n\t         * @param {?} a\n\t         * @param {?} b\n\t         * @return {?}\n\t         */\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @return {?}\n\t         */\n\t        ListWrapper.flatten = function (list) {\n\t            return list.reduce(function (flat, item) {\n\t                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t                return ((flat)).concat(flatItem);\n\t            }, []);\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @param {?} comparator\n\t     * @return {?}\n\t     */\n\t    function areIterablesEqual(a, b, comparator) {\n\t        var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n\t        var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\t        while (true) {\n\t            var /** @type {?} */ item1 = iterator1.next();\n\t            var /** @type {?} */ item2 = iterator2.next();\n\t            if (item1.done && item2.done)\n\t                return true;\n\t            if (item1.done || item2.done)\n\t                return false;\n\t            if (!comparator(item1.value, item2.value))\n\t                return false;\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function iterateListLike(obj, fn) {\n\t        if (Array.isArray(obj)) {\n\t            for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n\t                fn(obj[i]);\n\t            }\n\t        }\n\t        else {\n\t            var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n\t            var /** @type {?} */ item = void 0;\n\t            while (!((item = iterator.next()).done)) {\n\t                fn(item.value);\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Determine if the argument is shaped like a Promise\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPromise(obj) {\n\t        // allow any Promise/A+ compliant thenable.\n\t        // It's up to the caller to ensure that obj.then conforms to the spec\n\t        return !!obj && typeof obj.then === 'function';\n\t    }\n\t    /**\n\t     * Determine if the argument is an Observable\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isObservable(obj) {\n\t        return !!(obj && obj[rxjs_symbol_observable.$$observable]);\n\t    }\n\t\n\t    /**\n\t     * A function that will be executed when an application is initialized.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_INITIALIZER = new OpaqueToken('Application Initializer');\n\t    /**\n\t     * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var ApplicationInitStatus = (function () {\n\t        /**\n\t         * @param {?} appInits\n\t         */\n\t        function ApplicationInitStatus(appInits) {\n\t            var _this = this;\n\t            this._done = false;\n\t            var asyncInitPromises = [];\n\t            if (appInits) {\n\t                for (var i = 0; i < appInits.length; i++) {\n\t                    var initResult = appInits[i]();\n\t                    if (isPromise(initResult)) {\n\t                        asyncInitPromises.push(initResult);\n\t                    }\n\t                }\n\t            }\n\t            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n\t            if (asyncInitPromises.length === 0) {\n\t                this._done = true;\n\t            }\n\t        }\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._done; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._donePromise; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ApplicationInitStatus.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationInitStatus.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n\t        ]; };\n\t        return ApplicationInitStatus;\n\t    }());\n\t\n\t    /**\n\t     * A DI Token representing a unique string id assigned to the application by Angular and used\n\t     * primarily for prefixing application attributes and CSS styles when\n\t     * {@link ViewEncapsulation#Emulated} is being used.\n\t     *\n\t     * If you need to avoid randomly generated value to be used as an application id, you can provide\n\t     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n\t     * using this token.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_ID = new OpaqueToken('AppId');\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _appIdRandomProviderFactory() {\n\t        return \"\" + _randomChar() + _randomChar() + _randomChar();\n\t    }\n\t    /**\n\t     * Providers that will generate a random APP_ID_TOKEN.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n\t        provide: APP_ID,\n\t        useFactory: _appIdRandomProviderFactory,\n\t        deps: /** @type {?} */ ([]),\n\t    };\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _randomChar() {\n\t        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n\t    }\n\t    /**\n\t     * A function that will be executed when a platform is initialized.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n\t    /**\n\t     * All callbacks provided via this token will be called for every component that is bootstrapped.\n\t     * Signature of the callback:\n\t     *\n\t     * `(componentRef: ComponentRef) => void`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n\t    /**\n\t     * A token which indicates the root directory of the application\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\t\n\t    var Console = (function () {\n\t        function Console() {\n\t        }\n\t        /**\n\t         * @param {?} message\n\t         * @return {?}\n\t         */\n\t        Console.prototype.log = function (message) { print(message); };\n\t        /**\n\t         * @param {?} message\n\t         * @return {?}\n\t         */\n\t        Console.prototype.warn = function (message) { warn(message); };\n\t        Console.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Console.ctorParameters = function () { return []; };\n\t        return Console;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a component is still being loaded in a synchronous compile.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var ComponentStillLoadingError = (function (_super) {\n\t        __extends$4(ComponentStillLoadingError, _super);\n\t        /**\n\t         * @param {?} compType\n\t         */\n\t        function ComponentStillLoadingError(compType) {\n\t            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n\t            this.compType = compType;\n\t        }\n\t        return ComponentStillLoadingError;\n\t    }(BaseError));\n\t    /**\n\t     * Combination of NgModuleFactory and ComponentFactorys.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var ModuleWithComponentFactories = (function () {\n\t        /**\n\t         * @param {?} ngModuleFactory\n\t         * @param {?} componentFactories\n\t         */\n\t        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n\t            this.ngModuleFactory = ngModuleFactory;\n\t            this.componentFactories = componentFactories;\n\t        }\n\t        return ModuleWithComponentFactories;\n\t    }());\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _throwError() {\n\t        throw new Error(\"Runtime compiler is not loaded\");\n\t    }\n\t    /**\n\t     * Low-level service for running the angular compiler during runtime\n\t     * to create {\\@link ComponentFactory}s, which\n\t     * can later be used to create and render a Component instance.\n\t     *\n\t     * Each `\\@NgModule` provides an own `Compiler` to its injector,\n\t     * that will use the directives/pipes of the ng module for compilation\n\t     * of components.\n\t     * \\@stable\n\t     */\n\t    var Compiler = (function () {\n\t        function Compiler() {\n\t        }\n\t        /**\n\t         * Compiles the given NgModule and all of its components. All templates of the components listed\n\t         * in `entryComponents`\n\t         * have to be inlined. Otherwise throws a {\\@link ComponentStillLoadingError}.\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Compiles the given NgModule and all of its components\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Same as {\\@link compileModuleSync} but also creates ComponentFactories for all components.\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Same as {\\@link compileModuleAsync} but also creates ComponentFactories for all components.\n\t         * @param {?} moduleType\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n\t         * the template of the given component.\n\t         * This is used by the `upgrade` library to compile the appropriate transclude content\n\t         * in the Angular 1 wrapper component.\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.getNgContentSelectors = function (component) { throw _throwError(); };\n\t        /**\n\t         * Clears all caches.\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.clearCache = function () { };\n\t        /**\n\t         * Clears the cache for the given component/ngModule.\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        Compiler.prototype.clearCacheFor = function (type) { };\n\t        Compiler.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Compiler.ctorParameters = function () { return []; };\n\t        return Compiler;\n\t    }());\n\t    /**\n\t     * Token to provide CompilerOptions in the platform injector.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n\t    /**\n\t     * A factory for creating a Compiler\n\t     *\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var CompilerFactory = (function () {\n\t        function CompilerFactory() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        CompilerFactory.prototype.createCompiler = function (options) { };\n\t        return CompilerFactory;\n\t    }());\n\t\n\t    var ElementRef = (function () {\n\t        /**\n\t         * @param {?} nativeElement\n\t         */\n\t        function ElementRef(nativeElement) {\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        return ElementRef;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * \\@Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * \\@stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$6(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         * @param {?=} isAsync\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        /**\n\t         * @param {?=} generatorOrNext\n\t         * @param {?=} error\n\t         * @param {?=} complete\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var /** @type {?} */ schedulerFn;\n\t            var /** @type {?} */ errorFn = function (err) { return null; };\n\t            var /** @type {?} */ completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * An injectable service for executing work inside or outside of the Angular zone.\n\t     *\n\t     * The most common use of this service is to optimize performance when starting a work consisting of\n\t     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n\t     * Angular. Such tasks can be kicked off via {\\@link runOutsideAngular} and if needed, these tasks\n\t     * can reenter the Angular zone via {\\@link run}.\n\t     *\n\t     * <!-- TODO: add/fix links to:\n\t     *   - docs explaining zones and the use of zones in Angular and change-detection\n\t     *   - link to runOutsideAngular/run (throughout this file!)\n\t     *   -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Component, NgZone} from '\\@angular/core';\n\t     * import {NgIf} from '\\@angular/common';\n\t     *\n\t     * \\@Component({\n\t     *   selector: 'ng-zone-demo'.\n\t     *   template: `\n\t     *     <h2>Demo: NgZone</h2>\n\t     *\n\t     *     <p>Progress: {{progress}}%</p>\n\t     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n\t     *\n\t     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n\t     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n\t     *   `,\n\t     * })\n\t     * export class NgZoneDemo {\n\t     *   progress: number = 0;\n\t     *   label: string;\n\t     *\n\t     *   constructor(private _ngZone: NgZone) {}\n\t     *\n\t     *   // Loop inside the Angular zone\n\t     *   // so the UI DOES refresh after each setTimeout cycle\n\t     *   processWithinAngularZone() {\n\t     *     this.label = 'inside';\n\t     *     this.progress = 0;\n\t     *     this._increaseProgress(() => console.log('Inside Done!'));\n\t     *   }\n\t     *\n\t     *   // Loop outside of the Angular zone\n\t     *   // so the UI DOES NOT refresh after each setTimeout cycle\n\t     *   processOutsideOfAngularZone() {\n\t     *     this.label = 'outside';\n\t     *     this.progress = 0;\n\t     *     this._ngZone.runOutsideAngular(() => {\n\t     *       this._increaseProgress(() => {\n\t     *       // reenter the Angular zone and display done\n\t     *       this._ngZone.run(() => {console.log('Outside Done!') });\n\t     *     }}));\n\t     *   }\n\t     *\n\t     *   _increaseProgress(doneCallback: () => void) {\n\t     *     this.progress += 1;\n\t     *     console.log(`Current progress: ${this.progress}%`);\n\t     *\n\t     *     if (this.progress < 100) {\n\t     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n\t     *     } else {\n\t     *       doneCallback();\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgZone = (function () {\n\t        /**\n\t         * @param {?} __0\n\t         */\n\t        function NgZone(_a) {\n\t            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n\t            this._hasPendingMicrotasks = false;\n\t            this._hasPendingMacrotasks = false;\n\t            this._isStable = true;\n\t            this._nesting = 0;\n\t            this._onUnstable = new EventEmitter(false);\n\t            this._onMicrotaskEmpty = new EventEmitter(false);\n\t            this._onStable = new EventEmitter(false);\n\t            this._onErrorEvents = new EventEmitter(false);\n\t            if (typeof Zone == 'undefined') {\n\t                throw new Error('Angular requires Zone.js prolyfill.');\n\t            }\n\t            Zone.assertZonePatched();\n\t            this.outer = this.inner = Zone.current;\n\t            if (Zone['wtfZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n\t            }\n\t            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n\t            }\n\t            this.forkInnerZoneWithAngularBehavior();\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.assertInAngularZone = function () {\n\t            if (!NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to be in Angular Zone, but it is not!');\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.assertNotInAngularZone = function () {\n\t            if (NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to not be in Angular Zone, but it is!');\n\t            }\n\t        };\n\t        /**\n\t         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n\t         * outside of the Angular zone (typically started via {\\@link runOutsideAngular}).\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * within the Angular zone.\n\t         *\n\t         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n\t        /**\n\t         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n\t         * rethrown.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n\t        /**\n\t         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n\t         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * outside of the Angular zone.\n\t         *\n\t         * Use {\\@link run} to reenter the Angular zone and do work that updates the application model.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n\t        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n\t            /**\n\t             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onUnstable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n\t            /**\n\t             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n\t             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n\t             * For this reason this event can fire multiple times per VM Turn.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onMicrotaskEmpty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onStable\", {\n\t            /**\n\t             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n\t             * implies we are about to relinquish VM turn.\n\t             * This event gets called just once.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onError\", {\n\t            /**\n\t             * Notify that an error has been delivered.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._onErrorEvents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"isStable\", {\n\t            /**\n\t             * Whether there are no outstanding microtasks or macrotasks.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._isStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._hasPendingMicrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._hasPendingMacrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.checkStable = function () {\n\t            var _this = this;\n\t            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n\t                try {\n\t                    this._nesting++;\n\t                    this._onMicrotaskEmpty.emit(null);\n\t                }\n\t                finally {\n\t                    this._nesting--;\n\t                    if (!this._hasPendingMicrotasks) {\n\t                        try {\n\t                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n\t                        }\n\t                        finally {\n\t                            this._isStable = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n\t            var _this = this;\n\t            this.inner = this.inner.fork({\n\t                name: 'angular',\n\t                properties: /** @type {?} */ ({ 'isAngularZone': true }),\n\t                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onHasTask: function (delegate, current, target, hasTaskState) {\n\t                    delegate.hasTask(target, hasTaskState);\n\t                    if (current === target) {\n\t                        // We are only interested in hasTask events which originate from our zone\n\t                        // (A child hasTask event is not interesting to us)\n\t                        if (hasTaskState.change == 'microTask') {\n\t                            _this.setHasMicrotask(hasTaskState.microTask);\n\t                        }\n\t                        else if (hasTaskState.change == 'macroTask') {\n\t                            _this.setHasMacrotask(hasTaskState.macroTask);\n\t                        }\n\t                    }\n\t                },\n\t                onHandleError: function (delegate, current, target, error) {\n\t                    delegate.handleError(target, error);\n\t                    _this.triggerError(error);\n\t                    return false;\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.onEnter = function () {\n\t            this._nesting++;\n\t            if (this._isStable) {\n\t                this._isStable = false;\n\t                this._onUnstable.emit(null);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.onLeave = function () {\n\t            this._nesting--;\n\t            this.checkStable();\n\t        };\n\t        /**\n\t         * @param {?} hasMicrotasks\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n\t            this._hasPendingMicrotasks = hasMicrotasks;\n\t            this.checkStable();\n\t        };\n\t        /**\n\t         * @param {?} hasMacrotasks\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n\t        return NgZone;\n\t    }());\n\t\n\t    var AnimationQueue = (function () {\n\t        /**\n\t         * @param {?} _zone\n\t         */\n\t        function AnimationQueue(_zone) {\n\t            this._zone = _zone;\n\t            this.entries = [];\n\t        }\n\t        /**\n\t         * @param {?} player\n\t         * @return {?}\n\t         */\n\t        AnimationQueue.prototype.enqueue = function (player) { this.entries.push(player); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationQueue.prototype.flush = function () {\n\t            var _this = this;\n\t            // given that each animation player may set aside\n\t            // microtasks and rely on DOM-based events, this\n\t            // will cause Angular to run change detection after\n\t            // each request. This sidesteps the issue. If a user\n\t            // hooks into an animation via (@anim.start) or (@anim.done)\n\t            // then those methods will automatically trigger change\n\t            // detection by wrapping themselves inside of a zone\n\t            if (this.entries.length) {\n\t                this._zone.runOutsideAngular(function () {\n\t                    // this code is wrapped into a single promise such that the\n\t                    // onStart and onDone player callbacks are triggered outside\n\t                    // of the digest cycle of animations\n\t                    Promise.resolve(null).then(function () { return _this._triggerAnimations(); });\n\t                });\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationQueue.prototype._triggerAnimations = function () {\n\t            NgZone.assertNotInAngularZone();\n\t            while (this.entries.length) {\n\t                var /** @type {?} */ player = this.entries.shift();\n\t                // in the event that an animation throws an error then we do\n\t                // not want to re-run animations on any previous animations\n\t                // if they have already been kicked off beforehand\n\t                if (!player.hasStarted()) {\n\t                    player.play();\n\t                }\n\t            }\n\t        };\n\t        AnimationQueue.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        AnimationQueue.ctorParameters = function () { return [\n\t            { type: NgZone, },\n\t        ]; };\n\t        return AnimationQueue;\n\t    }());\n\t\n\t    var DefaultIterableDifferFactory = (function () {\n\t        function DefaultIterableDifferFactory() {\n\t        }\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n\t        /**\n\t         * @param {?} cdRef\n\t         * @param {?=} trackByFn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n\t            return new DefaultIterableDiffer(trackByFn);\n\t        };\n\t        return DefaultIterableDifferFactory;\n\t    }());\n\t    var /** @type {?} */ trackByIdentity = function (index, item) { return item; };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var DefaultIterableDiffer = (function () {\n\t        /**\n\t         * @param {?=} _trackByFn\n\t         */\n\t        function DefaultIterableDiffer(_trackByFn) {\n\t            this._trackByFn = _trackByFn;\n\t            this._length = null;\n\t            this._collection = null;\n\t            this._linkedRecords = null;\n\t            this._unlinkedRecords = null;\n\t            this._previousItHead = null;\n\t            this._itHead = null;\n\t            this._itTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._movesHead = null;\n\t            this._movesTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t            this._identityChangesHead = null;\n\t            this._identityChangesTail = null;\n\t            this._trackByFn = this._trackByFn || trackByIdentity;\n\t        }\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._collection; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._itHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n\t            var /** @type {?} */ nextIt = this._itHead;\n\t            var /** @type {?} */ nextRemove = this._removalsHead;\n\t            var /** @type {?} */ addRemoveOffset = 0;\n\t            var /** @type {?} */ moveOffsets = null;\n\t            while (nextIt || nextRemove) {\n\t                // Figure out which is the next record to process\n\t                // Order: remove, add, move\n\t                var /** @type {?} */ record = !nextRemove ||\n\t                    nextIt &&\n\t                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n\t                    nextIt :\n\t                    nextRemove;\n\t                var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n\t                var /** @type {?} */ currentIndex = record.currentIndex;\n\t                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n\t                if (record === nextRemove) {\n\t                    addRemoveOffset--;\n\t                    nextRemove = nextRemove._nextRemoved;\n\t                }\n\t                else {\n\t                    nextIt = nextIt._next;\n\t                    if (record.previousIndex == null) {\n\t                        addRemoveOffset++;\n\t                    }\n\t                    else {\n\t                        // INVARIANT:  currentIndex < previousIndex\n\t                        if (!moveOffsets)\n\t                            moveOffsets = [];\n\t                        var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n\t                        var /** @type {?} */ localCurrentIndex = currentIndex - addRemoveOffset;\n\t                        if (localMovePreviousIndex != localCurrentIndex) {\n\t                            for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n\t                                var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n\t                                var /** @type {?} */ index = offset + i;\n\t                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n\t                                    moveOffsets[i] = offset + 1;\n\t                                }\n\t                            }\n\t                            var /** @type {?} */ previousIndex = record.previousIndex;\n\t                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n\t                        }\n\t                    }\n\t                }\n\t                if (adjPreviousIndex !== currentIndex) {\n\t                    fn(record, adjPreviousIndex, currentIndex);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} collection\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.diff = function (collection) {\n\t            if (isBlank(collection))\n\t                collection = [];\n\t            if (!isListLikeIterable(collection)) {\n\t                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n\t            }\n\t            if (this.check(collection)) {\n\t                return this;\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.onDestroy = function () { };\n\t        /**\n\t         * @param {?} collection\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.check = function (collection) {\n\t            var _this = this;\n\t            this._reset();\n\t            var /** @type {?} */ record = this._itHead;\n\t            var /** @type {?} */ mayBeDirty = false;\n\t            var /** @type {?} */ index;\n\t            var /** @type {?} */ item;\n\t            var /** @type {?} */ itemTrackBy;\n\t            if (Array.isArray(collection)) {\n\t                var /** @type {?} */ list = collection;\n\t                this._length = collection.length;\n\t                for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n\t                    item = list[index_1];\n\t                    itemTrackBy = this._trackByFn(index_1, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = this._mismatch(record, item, itemTrackBy, index_1);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                }\n\t            }\n\t            else {\n\t                index = 0;\n\t                iterateListLike(collection, function (item /** TODO #9100 */) {\n\t                    itemTrackBy = _this._trackByFn(index, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = _this._mismatch(record, item, itemTrackBy, index);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            _this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                    index++;\n\t                });\n\t                this._length = index;\n\t            }\n\t            this._truncate(record);\n\t            this._collection = collection;\n\t            return this.isDirty;\n\t        };\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._additionsHead !== null || this._movesHead !== null ||\n\t                    this._removalsHead !== null || this._identityChangesHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Reset the state of the change objects to show no changes. This means set previousKey to\n\t         * currentKey, and clear all of the queues (additions, moves, removals).\n\t         * Set the previousIndexes of moved and added items to their currentIndexes\n\t         * Reset the list of additions, moves and removals\n\t         *\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var /** @type {?} */ record = void 0;\n\t                var /** @type {?} */ nextRecord = void 0;\n\t                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                    record.previousIndex = record.currentIndex;\n\t                }\n\t                this._additionsHead = this._additionsTail = null;\n\t                for (record = this._movesHead; record !== null; record = nextRecord) {\n\t                    record.previousIndex = record.currentIndex;\n\t                    nextRecord = record._nextMoved;\n\t                }\n\t                this._movesHead = this._movesTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t                this._identityChangesHead = this._identityChangesTail = null;\n\t            }\n\t        };\n\t        /**\n\t         * This is the core function which handles differences between collections.\n\t         *\n\t         * - `record` is the record which we saw at this position last time. If null then it is a new\n\t         *   item.\n\t         * - `item` is the current item in the collection\n\t         * - `index` is the position of the item in the collection\n\t         *\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} item\n\t         * @param {?} itemTrackBy\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n\t            // The previous record after which we will append the current one.\n\t            var /** @type {?} */ previousRecord;\n\t            if (record === null) {\n\t                previousRecord = this._itTail;\n\t            }\n\t            else {\n\t                previousRecord = record._prev;\n\t                // Remove the record from the collection since we know it does not match the item.\n\t                this._remove(record);\n\t            }\n\t            // Attempt to see if we have seen the item before.\n\t            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n\t            if (record !== null) {\n\t                // We have seen this before, we need to move it forward in the collection.\n\t                // But first we need to check if identity changed, so we can update in view if necessary\n\t                if (!looseIdentical(record.item, item))\n\t                    this._addIdentityChange(record, item);\n\t                this._moveAfter(record, previousRecord, index);\n\t            }\n\t            else {\n\t                // Never seen it, check evicted list.\n\t                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t                if (record !== null) {\n\t                    // It is an item which we have evicted earlier: reinsert it back into the list.\n\t                    // But first we need to check if identity changed, so we can update in view if necessary\n\t                    if (!looseIdentical(record.item, item))\n\t                        this._addIdentityChange(record, item);\n\t                    this._reinsertAfter(record, previousRecord, index);\n\t                }\n\t                else {\n\t                    // It is a new item: add it.\n\t                    record =\n\t                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n\t                }\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n\t         *\n\t         * Use case: `[a, a]` => `[b, a, a]`\n\t         *\n\t         * If we did not have this check then the insertion of `b` would:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) leave `a` at index `1` as is. <-- this is wrong!\n\t         *   3) reinsert `a` at index 2. <-- this is wrong!\n\t         *\n\t         * The correct behavior is:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) reinsert `a` at index 1.\n\t         *   3) move `a` at from `1` to `2`.\n\t         *\n\t         *\n\t         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n\t         * have already been removed:\n\t         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n\t         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n\t         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n\t         * at the end.\n\t         *\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} item\n\t         * @param {?} itemTrackBy\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n\t            var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t            if (reinsertRecord !== null) {\n\t                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n\t            }\n\t            else if (record.currentIndex != index) {\n\t                record.currentIndex = index;\n\t                this._addToMoves(record, index);\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * Get rid of any excess {\\@link CollectionChangeRecord}s from the previous collection\n\t         *\n\t         * - `record` The first excess {\\@link CollectionChangeRecord}.\n\t         *\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._truncate = function (record) {\n\t            // Anything after that needs to be removed;\n\t            while (record !== null) {\n\t                var /** @type {?} */ nextRecord = record._next;\n\t                this._addToRemovals(this._unlink(record));\n\t                record = nextRecord;\n\t            }\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.clear();\n\t            }\n\t            if (this._additionsTail !== null) {\n\t                this._additionsTail._nextAdded = null;\n\t            }\n\t            if (this._movesTail !== null) {\n\t                this._movesTail._nextMoved = null;\n\t            }\n\t            if (this._itTail !== null) {\n\t                this._itTail._next = null;\n\t            }\n\t            if (this._removalsTail !== null) {\n\t                this._removalsTail._nextRemoved = null;\n\t            }\n\t            if (this._identityChangesTail !== null) {\n\t                this._identityChangesTail._nextIdentityChange = null;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.remove(record);\n\t            }\n\t            var /** @type {?} */ prev = record._prevRemoved;\n\t            var /** @type {?} */ next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n\t            this._unlink(record);\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n\t            this._insertAfter(record, prevRecord, index);\n\t            if (this._additionsTail === null) {\n\t                // todo(vicb)\n\t                // assert(this._additionsHead === null);\n\t                this._additionsTail = this._additionsHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_additionsTail._nextAdded === null);\n\t                // assert(record._nextAdded === null);\n\t                this._additionsTail = this._additionsTail._nextAdded = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} prevRecord\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n\t            // todo(vicb)\n\t            // assert(record != prevRecord);\n\t            // assert(record._next === null);\n\t            // assert(record._prev === null);\n\t            var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n\t            // todo(vicb)\n\t            // assert(next != record);\n\t            // assert(prevRecord != record);\n\t            record._next = next;\n\t            record._prev = prevRecord;\n\t            if (next === null) {\n\t                this._itTail = record;\n\t            }\n\t            else {\n\t                next._prev = record;\n\t            }\n\t            if (prevRecord === null) {\n\t                this._itHead = record;\n\t            }\n\t            else {\n\t                prevRecord._next = record;\n\t            }\n\t            if (this._linkedRecords === null) {\n\t                this._linkedRecords = new _DuplicateMap();\n\t            }\n\t            this._linkedRecords.put(record);\n\t            record.currentIndex = index;\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._remove = function (record) {\n\t            return this._addToRemovals(this._unlink(record));\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._unlink = function (record) {\n\t            if (this._linkedRecords !== null) {\n\t                this._linkedRecords.remove(record);\n\t            }\n\t            var /** @type {?} */ prev = record._prev;\n\t            var /** @type {?} */ next = record._next;\n\t            // todo(vicb)\n\t            // assert((record._prev = null) === null);\n\t            // assert((record._next = null) === null);\n\t            if (prev === null) {\n\t                this._itHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            if (next === null) {\n\t                this._itTail = prev;\n\t            }\n\t            else {\n\t                next._prev = prev;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} toIndex\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n\t            // todo(vicb)\n\t            // assert(record._nextMoved === null);\n\t            if (record.previousIndex === toIndex) {\n\t                return record;\n\t            }\n\t            if (this._movesTail === null) {\n\t                // todo(vicb)\n\t                // assert(_movesHead === null);\n\t                this._movesTail = this._movesHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_movesTail._nextMoved === null);\n\t                this._movesTail = this._movesTail._nextMoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._unlinkedRecords === null) {\n\t                this._unlinkedRecords = new _DuplicateMap();\n\t            }\n\t            this._unlinkedRecords.put(record);\n\t            record.currentIndex = null;\n\t            record._nextRemoved = null;\n\t            if (this._removalsTail === null) {\n\t                // todo(vicb)\n\t                // assert(_removalsHead === null);\n\t                this._removalsTail = this._removalsHead = record;\n\t                record._prevRemoved = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_removalsTail._nextRemoved === null);\n\t                // assert(record._nextRemoved === null);\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = this._removalsTail._nextRemoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @param {?} item\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n\t            record.item = item;\n\t            if (this._identityChangesTail === null) {\n\t                this._identityChangesTail = this._identityChangesHead = record;\n\t            }\n\t            else {\n\t                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultIterableDiffer.prototype.toString = function () {\n\t            var /** @type {?} */ list = [];\n\t            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n\t            var /** @type {?} */ previous = [];\n\t            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n\t            var /** @type {?} */ additions = [];\n\t            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n\t            var /** @type {?} */ moves = [];\n\t            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n\t            var /** @type {?} */ removals = [];\n\t            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n\t            var /** @type {?} */ identityChanges = [];\n\t            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n\t            return 'collection: ' + list.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'moves: ' + moves.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n' +\n\t                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n\t        };\n\t        return DefaultIterableDiffer;\n\t    }());\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var CollectionChangeRecord = (function () {\n\t        /**\n\t         * @param {?} item\n\t         * @param {?} trackById\n\t         */\n\t        function CollectionChangeRecord(item, trackById) {\n\t            this.item = item;\n\t            this.trackById = trackById;\n\t            this.currentIndex = null;\n\t            this.previousIndex = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._prev = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._prevDup = null;\n\t            /** @internal */\n\t            this._nextDup = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextMoved = null;\n\t            /** @internal */\n\t            this._nextIdentityChange = null;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        CollectionChangeRecord.prototype.toString = function () {\n\t            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n\t                stringify(this.item) + '[' +\n\t                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n\t        };\n\t        return CollectionChangeRecord;\n\t    }());\n\t    var _DuplicateItemRecordList = (function () {\n\t        function _DuplicateItemRecordList() {\n\t            /** @internal */\n\t            this._head = null;\n\t            /** @internal */\n\t            this._tail = null;\n\t        }\n\t        /**\n\t         * Append the record to the list of duplicates.\n\t         *\n\t         * Note: by design all records in the list of duplicates hold the same value in record.item.\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateItemRecordList.prototype.add = function (record) {\n\t            if (this._head === null) {\n\t                this._head = this._tail = record;\n\t                record._nextDup = null;\n\t                record._prevDup = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(record.item ==  _head.item ||\n\t                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n\t                this._tail._nextDup = record;\n\t                record._prevDup = this._tail;\n\t                record._nextDup = null;\n\t                this._tail = record;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} trackById\n\t         * @param {?} afterIndex\n\t         * @return {?}\n\t         */\n\t        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._head; record !== null; record = record._nextDup) {\n\t                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n\t                    looseIdentical(record.trackById, trackById)) {\n\t                    return record;\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * Remove one {\\@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * Returns whether the list of duplicates is empty.\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateItemRecordList.prototype.remove = function (record) {\n\t            // todo(vicb)\n\t            // assert(() {\n\t            //  // verify that the record being removed is in the list.\n\t            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n\t            //    if (identical(cursor, record)) return true;\n\t            //  }\n\t            //  return false;\n\t            //});\n\t            var /** @type {?} */ prev = record._prevDup;\n\t            var /** @type {?} */ next = record._nextDup;\n\t            if (prev === null) {\n\t                this._head = next;\n\t            }\n\t            else {\n\t                prev._nextDup = next;\n\t            }\n\t            if (next === null) {\n\t                this._tail = prev;\n\t            }\n\t            else {\n\t                next._prevDup = prev;\n\t            }\n\t            return this._head === null;\n\t        };\n\t        return _DuplicateItemRecordList;\n\t    }());\n\t    var _DuplicateMap = (function () {\n\t        function _DuplicateMap() {\n\t            this.map = new Map();\n\t        }\n\t        /**\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.put = function (record) {\n\t            var /** @type {?} */ key = record.trackById;\n\t            var /** @type {?} */ duplicates = this.map.get(key);\n\t            if (!duplicates) {\n\t                duplicates = new _DuplicateItemRecordList();\n\t                this.map.set(key, duplicates);\n\t            }\n\t            duplicates.add(record);\n\t        };\n\t        /**\n\t         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n\t         * have already iterated over, we use the afterIndex to pretend it is not there.\n\t         *\n\t         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n\t         * have any more `a`s needs to return the last `a` not the first or second.\n\t         * @param {?} trackById\n\t         * @param {?=} afterIndex\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n\t            if (afterIndex === void 0) { afterIndex = null; }\n\t            var /** @type {?} */ key = trackById;\n\t            var /** @type {?} */ recordList = this.map.get(key);\n\t            return recordList ? recordList.get(trackById, afterIndex) : null;\n\t        };\n\t        /**\n\t         * Removes a {\\@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * The list of duplicates also is removed from the map if it gets empty.\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.remove = function (record) {\n\t            var /** @type {?} */ key = record.trackById;\n\t            var /** @type {?} */ recordList = this.map.get(key);\n\t            // Remove the list of duplicates when it gets empty\n\t            if (recordList.remove(record)) {\n\t                this.map.delete(key);\n\t            }\n\t            return record;\n\t        };\n\t        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.map.size === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n\t        return _DuplicateMap;\n\t    }());\n\t    /**\n\t     * @param {?} item\n\t     * @param {?} addRemoveOffset\n\t     * @param {?} moveOffsets\n\t     * @return {?}\n\t     */\n\t    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n\t        var /** @type {?} */ previousIndex = item.previousIndex;\n\t        if (previousIndex === null)\n\t            return previousIndex;\n\t        var /** @type {?} */ moveOffset = 0;\n\t        if (moveOffsets && previousIndex < moveOffsets.length) {\n\t            moveOffset = moveOffsets[previousIndex];\n\t        }\n\t        return previousIndex + addRemoveOffset + moveOffset;\n\t    }\n\t\n\t    var DefaultKeyValueDifferFactory = (function () {\n\t        function DefaultKeyValueDifferFactory() {\n\t        }\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n\t        /**\n\t         * @param {?} cdRef\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n\t        return DefaultKeyValueDifferFactory;\n\t    }());\n\t    var DefaultKeyValueDiffer = (function () {\n\t        function DefaultKeyValueDiffer() {\n\t            this._records = new Map();\n\t            this._mapHead = null;\n\t            this._previousMapHead = null;\n\t            this._changesHead = null;\n\t            this._changesTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t        }\n\t        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._additionsHead !== null || this._changesHead !== null ||\n\t                    this._removalsHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var /** @type {?} */ record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} map\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.diff = function (map) {\n\t            if (!map) {\n\t                map = new Map();\n\t            }\n\t            else if (!(map instanceof Map || isJsObject(map))) {\n\t                throw new Error(\"Error trying to diff '\" + map + \"'\");\n\t            }\n\t            return this.check(map) ? this : null;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n\t        /**\n\t         * @param {?} map\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.check = function (map) {\n\t            var _this = this;\n\t            this._reset();\n\t            var /** @type {?} */ records = this._records;\n\t            var /** @type {?} */ oldSeqRecord = this._mapHead;\n\t            var /** @type {?} */ lastOldSeqRecord = null;\n\t            var /** @type {?} */ lastNewSeqRecord = null;\n\t            var /** @type {?} */ seqChanged = false;\n\t            this._forEach(map, function (value, key) {\n\t                var /** @type {?} */ newSeqRecord;\n\t                if (oldSeqRecord && key === oldSeqRecord.key) {\n\t                    newSeqRecord = oldSeqRecord;\n\t                    _this._maybeAddToChanges(newSeqRecord, value);\n\t                }\n\t                else {\n\t                    seqChanged = true;\n\t                    if (oldSeqRecord !== null) {\n\t                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n\t                        _this._addToRemovals(oldSeqRecord);\n\t                    }\n\t                    if (records.has(key)) {\n\t                        newSeqRecord = records.get(key);\n\t                        _this._maybeAddToChanges(newSeqRecord, value);\n\t                    }\n\t                    else {\n\t                        newSeqRecord = new KeyValueChangeRecord(key);\n\t                        records.set(key, newSeqRecord);\n\t                        newSeqRecord.currentValue = value;\n\t                        _this._addToAdditions(newSeqRecord);\n\t                    }\n\t                }\n\t                if (seqChanged) {\n\t                    if (_this._isInRemovals(newSeqRecord)) {\n\t                        _this._removeFromRemovals(newSeqRecord);\n\t                    }\n\t                    if (lastNewSeqRecord == null) {\n\t                        _this._mapHead = newSeqRecord;\n\t                    }\n\t                    else {\n\t                        lastNewSeqRecord._next = newSeqRecord;\n\t                    }\n\t                }\n\t                lastOldSeqRecord = oldSeqRecord;\n\t                lastNewSeqRecord = newSeqRecord;\n\t                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n\t            });\n\t            this._truncate(lastOldSeqRecord, oldSeqRecord);\n\t            return this.isDirty;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var /** @type {?} */ record = void 0;\n\t                // Record the state of the mapping\n\t                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                this._changesHead = this._changesTail = null;\n\t                this._additionsHead = this._additionsTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} lastRecord\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n\t            while (record !== null) {\n\t                if (lastRecord === null) {\n\t                    this._mapHead = null;\n\t                }\n\t                else {\n\t                    lastRecord._next = null;\n\t                }\n\t                var /** @type {?} */ nextRecord = record._next;\n\t                this._addToRemovals(record);\n\t                lastRecord = record;\n\t                record = nextRecord;\n\t            }\n\t            for (var /** @type {?} */ rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n\t                rec.previousValue = rec.currentValue;\n\t                rec.currentValue = null;\n\t                this._records.delete(rec.key);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} record\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n\t            if (!looseIdentical(newValue, record.currentValue)) {\n\t                record.previousValue = record.currentValue;\n\t                record.currentValue = newValue;\n\t                this._addToChanges(record);\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n\t            return record === this._removalsHead || record._nextRemoved !== null ||\n\t                record._prevRemoved !== null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._removalsHead === null) {\n\t                this._removalsHead = this._removalsTail = record;\n\t            }\n\t            else {\n\t                this._removalsTail._nextRemoved = record;\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = record;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} prev\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n\t            var /** @type {?} */ next = record._next;\n\t            if (prev === null) {\n\t                this._mapHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            record._next = null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n\t            var /** @type {?} */ prev = record._prevRemoved;\n\t            var /** @type {?} */ next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            record._prevRemoved = record._nextRemoved = null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n\t            if (this._additionsHead === null) {\n\t                this._additionsHead = this._additionsTail = record;\n\t            }\n\t            else {\n\t                this._additionsTail._nextAdded = record;\n\t                this._additionsTail = record;\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n\t            if (this._changesHead === null) {\n\t                this._changesHead = this._changesTail = record;\n\t            }\n\t            else {\n\t                this._changesTail._nextChanged = record;\n\t                this._changesTail = record;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype.toString = function () {\n\t            var /** @type {?} */ items = [];\n\t            var /** @type {?} */ previous = [];\n\t            var /** @type {?} */ changes = [];\n\t            var /** @type {?} */ additions = [];\n\t            var /** @type {?} */ removals = [];\n\t            var /** @type {?} */ record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                items.push(stringify(record));\n\t            }\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                previous.push(stringify(record));\n\t            }\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                changes.push(stringify(record));\n\t            }\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                additions.push(stringify(record));\n\t            }\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                removals.push(stringify(record));\n\t            }\n\t            return 'map: ' + items.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'changes: ' + changes.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n';\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} obj\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n\t            if (obj instanceof Map) {\n\t                obj.forEach(fn);\n\t            }\n\t            else {\n\t                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n\t            }\n\t        };\n\t        return DefaultKeyValueDiffer;\n\t    }());\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var KeyValueChangeRecord = (function () {\n\t        /**\n\t         * @param {?} key\n\t         */\n\t        function KeyValueChangeRecord(key) {\n\t            this.key = key;\n\t            this.previousValue = null;\n\t            this.currentValue = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextChanged = null;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        KeyValueChangeRecord.prototype.toString = function () {\n\t            return looseIdentical(this.previousValue, this.currentValue) ?\n\t                stringify(this.key) :\n\t                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n\t                    stringify(this.currentValue) + ']');\n\t        };\n\t        return KeyValueChangeRecord;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n\t     * \\@stable\n\t     */\n\t    var IterableDiffers = (function () {\n\t        /**\n\t         * @param {?} factories\n\t         */\n\t        function IterableDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        /**\n\t         * @param {?} factories\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        IterableDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var /** @type {?} */ copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new IterableDiffers(factories);\n\t            }\n\t            else {\n\t                return new IterableDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n\t         * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n\t         * {\\@link IterableDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t         * which will only be applied to the injector for this component and its children.\n\t         * This step is all that's required to make a new {\\@link IterableDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * \\@Component({\n\t         *   viewProviders: [\n\t         *     IterableDiffers.extend([new ImmutableListDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         * @param {?} factories\n\t         * @return {?}\n\t         */\n\t        IterableDiffers.extend = function (factories) {\n\t            return {\n\t                provide: IterableDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n\t                    }\n\t                    return IterableDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} iterable\n\t         * @return {?}\n\t         */\n\t        IterableDiffers.prototype.find = function (iterable) {\n\t            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n\t            }\n\t        };\n\t        return IterableDiffers;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n\t     * \\@stable\n\t     */\n\t    var KeyValueDiffers = (function () {\n\t        /**\n\t         * @param {?} factories\n\t         */\n\t        function KeyValueDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        /**\n\t         * @param {?} factories\n\t         * @param {?=} parent\n\t         * @return {?}\n\t         */\n\t        KeyValueDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var /** @type {?} */ copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t            else {\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n\t         * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n\t         * {\\@link KeyValueDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t         * which will only be applied to the injector for this component and its children.\n\t         * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * \\@Component({\n\t         *   viewProviders: [\n\t         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         * @param {?} factories\n\t         * @return {?}\n\t         */\n\t        KeyValueDiffers.extend = function (factories) {\n\t            return {\n\t                provide: KeyValueDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n\t                    }\n\t                    return KeyValueDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} kv\n\t         * @return {?}\n\t         */\n\t        KeyValueDiffers.prototype.find = function (kv) {\n\t            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n\t            }\n\t        };\n\t        return KeyValueDiffers;\n\t    }());\n\t\n\t    var /** @type {?} */ UNINITIALIZED = {\n\t        toString: function () { return 'CD_INIT_VALUE'; }\n\t    };\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @return {?}\n\t     */\n\t    function devModeEqual(a, b) {\n\t        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n\t            return areIterablesEqual(a, b, devModeEqual);\n\t        }\n\t        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n\t            return true;\n\t        }\n\t        else {\n\t            return looseIdentical(a, b);\n\t        }\n\t    }\n\t    /**\n\t     * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n\t     * reference\n\t     * has not changed.\n\t     *\n\t     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```\n\t     * if (this._latestValue === this._latestReturnedValue) {\n\t     *    return this._latestReturnedValue;\n\t     *  } else {\n\t     *    this._latestReturnedValue = this._latestValue;\n\t     *    return WrappedValue.wrap(this._latestValue); // this will force update\n\t     *  }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var WrappedValue = (function () {\n\t        /**\n\t         * @param {?} wrapped\n\t         */\n\t        function WrappedValue(wrapped) {\n\t            this.wrapped = wrapped;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n\t        return WrappedValue;\n\t    }());\n\t    /**\n\t     * Helper class for unwrapping WrappedValue s\n\t     */\n\t    var ValueUnwrapper = (function () {\n\t        function ValueUnwrapper() {\n\t            this.hasWrappedValue = false;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        ValueUnwrapper.prototype.unwrap = function (value) {\n\t            if (value instanceof WrappedValue) {\n\t                this.hasWrappedValue = true;\n\t                return value.wrapped;\n\t            }\n\t            return value;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n\t        return ValueUnwrapper;\n\t    }());\n\t    /**\n\t     * Represents a basic change from a previous to a new value.\n\t     * \\@stable\n\t     */\n\t    var SimpleChange = (function () {\n\t        /**\n\t         * @param {?} previousValue\n\t         * @param {?} currentValue\n\t         */\n\t        function SimpleChange(previousValue, currentValue) {\n\t            this.previousValue = previousValue;\n\t            this.currentValue = currentValue;\n\t        }\n\t        /**\n\t         * Check whether the new value is the first value assigned.\n\t         * @return {?}\n\t         */\n\t        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n\t        return SimpleChange;\n\t    }());\n\t\n\t    /**\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ChangeDetectorRef = (function () {\n\t        function ChangeDetectorRef() {\n\t        }\n\t        /**\n\t         * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on OnPush components -->\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n\t         *\n\t         * ```typescript\n\t         * \\@Component({\n\t         *   selector: 'cmp',\n\t         *   changeDetection: ChangeDetectionStrategy.OnPush,\n\t         *   template: `Number of ticks: {{numberOfTicks}}`\n\t         * })\n\t         * class Cmp {\n\t         *   numberOfTicks = 0;\n\t         *\n\t         *   constructor(ref: ChangeDetectorRef) {\n\t         *     setInterval(() => {\n\t         *       this.numberOfTicks ++\n\t         *       // the following is required, otherwise the view will not be updated\n\t         *       this.ref.markForCheck();\n\t         *     }, 1000);\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'app',\n\t         *   changeDetection: ChangeDetectionStrategy.OnPush,\n\t         *   template: `\n\t         *     <cmp><cmp>\n\t         *   `,\n\t         * })\n\t         * class App {\n\t         * }\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.markForCheck = function () { };\n\t        /**\n\t         * Detaches the change detector from the change detector tree.\n\t         *\n\t         * The detached change detector will not be checked until it is reattached.\n\t         *\n\t         * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n\t         * local change\n\t         * detection checks.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n\t         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n\t         *\n\t         * ### Example\n\t         *\n\t         * The following example defines a component with a large list of readonly data.\n\t         * Imagine the data changes constantly, many times per second. For performance reasons,\n\t         * we want to check and update the list every five seconds. We can do that by detaching\n\t         * the component's change detector and doing a local check every five seconds.\n\t         *\n\t         * ```typescript\n\t         * class DataProvider {\n\t         *   // in a real application the returned data will be different every time\n\t         *   get data() {\n\t         *     return [1,2,3,4,5];\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'giant-list',\n\t         *   template: `\n\t         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n\t         *   `,\n\t         * })\n\t         * class GiantList {\n\t         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n\t         *     ref.detach();\n\t         *     setInterval(() => {\n\t         *       this.ref.detectChanges();\n\t         *     }, 5000);\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'app',\n\t         *   providers: [DataProvider],\n\t         *   template: `\n\t         *     <giant-list><giant-list>\n\t         *   `,\n\t         * })\n\t         * class App {\n\t         * }\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.detach = function () { };\n\t        /**\n\t         * Checks the change detector and its children.\n\t         *\n\t         * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n\t         * change detection\n\t         * checks.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n\t         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n\t         *\n\t         * ### Example\n\t         *\n\t         * The following example defines a component with a large list of readonly data.\n\t         * Imagine, the data changes constantly, many times per second. For performance reasons,\n\t         * we want to check and update the list every five seconds.\n\t         *\n\t         * We can do that by detaching the component's change detector and doing a local change detection\n\t         * check\n\t         * every five seconds.\n\t         *\n\t         * See {\\@link ChangeDetectorRef#detach} for more information.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.detectChanges = function () { };\n\t        /**\n\t         * Checks the change detector and its children, and throws if any changes are detected.\n\t         *\n\t         * This is used in development mode to verify that running change detection doesn't introduce\n\t         * other changes.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.checkNoChanges = function () { };\n\t        /**\n\t         * Reattach the change detector to the change detector tree.\n\t         *\n\t         * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n\t         * checked during the next change detection run.\n\t         *\n\t         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n\t         *\n\t         * The following example creates a component displaying `live` data. The component will detach\n\t         * its change detector from the main change detector tree when the component's live property\n\t         * is set to false.\n\t         *\n\t         * ```typescript\n\t         * class DataProvider {\n\t         *   data = 1;\n\t         *\n\t         *   constructor() {\n\t         *     setInterval(() => {\n\t         *       this.data = this.data * 2;\n\t         *     }, 500);\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'live-data',\n\t         *   inputs: ['live'],\n\t         *   template: 'Data: {{dataProvider.data}}'\n\t         * })\n\t         * class LiveData {\n\t         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n\t         *\n\t         *   set live(value) {\n\t         *     if (value)\n\t         *       this.ref.reattach();\n\t         *     else\n\t         *       this.ref.detach();\n\t         *   }\n\t         * }\n\t         *\n\t         * \\@Component({\n\t         *   selector: 'app',\n\t         *   providers: [DataProvider],\n\t         *   template: `\n\t         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n\t         *     <live-data [live]=\"live\"><live-data>\n\t         *   `,\n\t         * })\n\t         * class App {\n\t         *   live = true;\n\t         * }\n\t         * ```\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ChangeDetectorRef.prototype.reattach = function () { };\n\t        return ChangeDetectorRef;\n\t    }());\n\t\n\t    /**\n\t     * Structural diffing for `Object`s and `Map`s.\n\t     */\n\t    var /** @type {?} */ keyValDiff = [new DefaultKeyValueDifferFactory()];\n\t    /**\n\t     * Structural diffing for `Iterable` types such as `Array`s.\n\t     */\n\t    var /** @type {?} */ iterableDiff = [new DefaultIterableDifferFactory()];\n\t    var /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\t    var /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var RenderComponentType = (function () {\n\t        /**\n\t         * @param {?} id\n\t         * @param {?} templateUrl\n\t         * @param {?} slotCount\n\t         * @param {?} encapsulation\n\t         * @param {?} styles\n\t         * @param {?} animations\n\t         */\n\t        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n\t            this.id = id;\n\t            this.templateUrl = templateUrl;\n\t            this.slotCount = slotCount;\n\t            this.encapsulation = encapsulation;\n\t            this.styles = styles;\n\t            this.animations = animations;\n\t        }\n\t        return RenderComponentType;\n\t    }());\n\t    /**\n\t     * @abstract\n\t     */\n\t    var RenderDebugInfo = (function () {\n\t        function RenderDebugInfo() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.injector = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.component = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.providerTokens = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.references = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.context = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        RenderDebugInfo.prototype.source = function () { };\n\t        return RenderDebugInfo;\n\t    }());\n\t    /**\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var Renderer = (function () {\n\t        function Renderer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} selectorOrNode\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?} name\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} hostElement\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createViewRoot = function (hostElement) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?} value\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} parentElement\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.detachView = function (viewRootNodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} hostElement\n\t         * @param {?} viewAllNodes\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.listen = function (renderElement, name, callback) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} target\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.listenGlobal = function (target, name, callback) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} attributeName\n\t         * @param {?} attributeValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n\t        /**\n\t         * Used only in debug mode to serialize property changes to dom nodes as attributes.\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} className\n\t         * @param {?} isAdd\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderElement\n\t         * @param {?} methodName\n\t         * @param {?=} args\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} renderNode\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.setText = function (renderNode, text) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n\t        return Renderer;\n\t    }());\n\t    /**\n\t     * Injectable service that provides a low-level interface for modifying the UI.\n\t     *\n\t     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n\t     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n\t     * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n\t     * respectively.\n\t     *\n\t     * If you are implementing a custom renderer, you must implement this interface.\n\t     *\n\t     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var RootRenderer = (function () {\n\t        function RootRenderer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} componentType\n\t         * @return {?}\n\t         */\n\t        RootRenderer.prototype.renderComponent = function (componentType) { };\n\t        return RootRenderer;\n\t    }());\n\t\n\t    var SecurityContext = {};\n\t    SecurityContext.NONE = 0;\n\t    SecurityContext.HTML = 1;\n\t    SecurityContext.STYLE = 2;\n\t    SecurityContext.SCRIPT = 3;\n\t    SecurityContext.URL = 4;\n\t    SecurityContext.RESOURCE_URL = 5;\n\t    SecurityContext[SecurityContext.NONE] = \"NONE\";\n\t    SecurityContext[SecurityContext.HTML] = \"HTML\";\n\t    SecurityContext[SecurityContext.STYLE] = \"STYLE\";\n\t    SecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\n\t    SecurityContext[SecurityContext.URL] = \"URL\";\n\t    SecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\t    /**\n\t     * Sanitizer is used by the views to sanitize potentially dangerous values.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var Sanitizer = (function () {\n\t        function Sanitizer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} context\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        Sanitizer.prototype.sanitize = function (context, value) { };\n\t        return Sanitizer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * An error thrown if application changes model breaking the top-down data flow.\n\t     *\n\t     * This exception is only thrown in dev mode.\n\t     *\n\t     * <!-- TODO: Add a link once the dev mode option is configurable -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * \\@Component({\n\t     *   selector: 'parent',\n\t     *   template: '<child [prop]=\"parentProp\"></child>',\n\t     * })\n\t     * class Parent {\n\t     *   parentProp = 'init';\n\t     * }\n\t     *\n\t     * \\@Directive({selector: 'child', inputs: ['prop']})\n\t     * class Child {\n\t     *   constructor(public parent: Parent) {}\n\t     *\n\t     *   set prop(v) {\n\t     *     // this updates the parent property, which is disallowed during change detection\n\t     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n\t     *     this.parent.parentProp = 'updated';\n\t     *   }\n\t     * }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n\t        __extends$7(ExpressionChangedAfterItHasBeenCheckedError, _super);\n\t        /**\n\t         * @param {?} oldValue\n\t         * @param {?} currValue\n\t         */\n\t        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n\t            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n\t            if (oldValue === UNINITIALIZED) {\n\t                msg +=\n\t                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n\t                        \" Has it been created in a change detection hook ?\";\n\t            }\n\t            _super.call(this, msg);\n\t        }\n\t        return ExpressionChangedAfterItHasBeenCheckedError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when an exception was raised during view creation, change detection or destruction.\n\t     *\n\t     * This error wraps the original exception to attach additional contextual information that can\n\t     * be useful for debugging.\n\t     * \\@stable\n\t     */\n\t    var ViewWrappedError = (function (_super) {\n\t        __extends$7(ViewWrappedError, _super);\n\t        /**\n\t         * @param {?} originalError\n\t         * @param {?} context\n\t         */\n\t        function ViewWrappedError(originalError, context) {\n\t            _super.call(this, \"Error in \" + context.source, originalError);\n\t            this.context = context;\n\t        }\n\t        return ViewWrappedError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when a destroyed view is used.\n\t     *\n\t     * This error indicates a bug in the framework.\n\t     *\n\t     * This is an internal Angular error.\n\t     * \\@stable\n\t     */\n\t    var ViewDestroyedError = (function (_super) {\n\t        __extends$7(ViewDestroyedError, _super);\n\t        /**\n\t         * @param {?} details\n\t         */\n\t        function ViewDestroyedError(details) {\n\t            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n\t        }\n\t        return ViewDestroyedError;\n\t    }(BaseError));\n\t\n\t    var ViewUtils = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} sanitizer\n\t         * @param {?} animationQueue\n\t         */\n\t        function ViewUtils(_renderer, sanitizer, animationQueue) {\n\t            this._renderer = _renderer;\n\t            this.animationQueue = animationQueue;\n\t            this.sanitizer = sanitizer;\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @param {?} renderComponentType\n\t         * @return {?}\n\t         */\n\t        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n\t            return this._renderer.renderComponent(renderComponentType);\n\t        };\n\t        ViewUtils.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ViewUtils.ctorParameters = function () { return [\n\t            { type: RootRenderer, },\n\t            { type: Sanitizer, },\n\t            { type: AnimationQueue, },\n\t        ]; };\n\t        return ViewUtils;\n\t    }());\n\t    var /** @type {?} */ nextRenderComponentTypeId = 0;\n\t    /**\n\t     * @param {?} templateUrl\n\t     * @param {?} slotCount\n\t     * @param {?} encapsulation\n\t     * @param {?} styles\n\t     * @param {?} animations\n\t     * @return {?}\n\t     */\n\t    function createRenderComponentType(templateUrl, slotCount, encapsulation, styles, animations) {\n\t        return new RenderComponentType(\"\" + nextRenderComponentTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n\t    }\n\t    /**\n\t     * @param {?} e\n\t     * @param {?} array\n\t     * @return {?}\n\t     */\n\t    function addToArray(e, array) {\n\t        array.push(e);\n\t    }\n\t    /**\n\t     * @param {?} valueCount\n\t     * @param {?} constAndInterp\n\t     * @return {?}\n\t     */\n\t    function interpolate(valueCount, constAndInterp) {\n\t        var /** @type {?} */ result = '';\n\t        for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n\t            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n\t        }\n\t        return result + constAndInterp[valueCount * 2];\n\t    }\n\t    /**\n\t     * @param {?} valueCount\n\t     * @param {?} c0\n\t     * @param {?} a1\n\t     * @param {?} c1\n\t     * @param {?=} a2\n\t     * @param {?=} c2\n\t     * @param {?=} a3\n\t     * @param {?=} c3\n\t     * @param {?=} a4\n\t     * @param {?=} c4\n\t     * @param {?=} a5\n\t     * @param {?=} c5\n\t     * @param {?=} a6\n\t     * @param {?=} c6\n\t     * @param {?=} a7\n\t     * @param {?=} c7\n\t     * @param {?=} a8\n\t     * @param {?=} c8\n\t     * @param {?=} a9\n\t     * @param {?=} c9\n\t     * @return {?}\n\t     */\n\t    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n\t        switch (valueCount) {\n\t            case 1:\n\t                return c0 + _toStringWithNull(a1) + c1;\n\t            case 2:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n\t            case 3:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3;\n\t            case 4:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4;\n\t            case 5:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n\t            case 6:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n\t            case 7:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7;\n\t            case 8:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n\t            case 9:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n\t            default:\n\t                throw new Error(\"Does not support more than 9 expressions\");\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} v\n\t     * @return {?}\n\t     */\n\t    function _toStringWithNull(v) {\n\t        return v != null ? v.toString() : '';\n\t    }\n\t    /**\n\t     * @param {?} throwOnChange\n\t     * @param {?} oldValue\n\t     * @param {?} newValue\n\t     * @return {?}\n\t     */\n\t    function checkBinding(throwOnChange, oldValue, newValue) {\n\t        if (throwOnChange) {\n\t            if (!devModeEqual(oldValue, newValue)) {\n\t                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n\t            }\n\t            return false;\n\t        }\n\t        else {\n\t            return !looseIdentical(oldValue, newValue);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} input\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function castByValue(input, value) {\n\t        return (input);\n\t    }\n\t    var /** @type {?} */ EMPTY_ARRAY = [];\n\t    var /** @type {?} */ EMPTY_MAP = {};\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy1(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0 = UNINITIALIZED;\n\t        return function (p0) {\n\t            if (!looseIdentical(v0, p0)) {\n\t                v0 = p0;\n\t                result = fn(p0);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy2(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0 = UNINITIALIZED;\n\t        var /** @type {?} */ v1 = UNINITIALIZED;\n\t        return function (p0, p1) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                result = fn(p0, p1);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy3(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0 = UNINITIALIZED;\n\t        var /** @type {?} */ v1 = UNINITIALIZED;\n\t        var /** @type {?} */ v2 = UNINITIALIZED;\n\t        return function (p0, p1, p2) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                result = fn(p0, p1, p2);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy4(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3;\n\t        v0 = v1 = v2 = v3 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                result = fn(p0, p1, p2, p3);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy5(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4;\n\t        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                result = fn(p0, p1, p2, p3, p4);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy6(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                result = fn(p0, p1, p2, p3, p4, p5);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy7(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy8(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy9(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} fn\n\t     * @return {?}\n\t     */\n\t    function pureProxy10(fn) {\n\t        var /** @type {?} */ result;\n\t        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8, /** @type {?} */ v9;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n\t                !looseIdentical(v9, p9)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                v9 = p9;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} el\n\t     * @param {?} changes\n\t     * @return {?}\n\t     */\n\t    function setBindingDebugInfoForChanges(renderer, el, changes) {\n\t        Object.keys(changes).forEach(function (propName) {\n\t            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} el\n\t     * @param {?} propName\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function setBindingDebugInfo(renderer, el, propName, value) {\n\t        try {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n\t        }\n\t        catch (e) {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n\t        }\n\t    }\n\t    var /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n\t    /**\n\t     * @param {?} input\n\t     * @return {?}\n\t     */\n\t    function camelCaseToDashCase(input) {\n\t        return input.replace(CAMEL_CASE_REGEXP, function () {\n\t            var m = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                m[_i - 0] = arguments[_i];\n\t            }\n\t            return '-' + m[1].toLowerCase();\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} parentElement\n\t     * @param {?} name\n\t     * @param {?} attrs\n\t     * @param {?=} debugInfo\n\t     * @return {?}\n\t     */\n\t    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n\t        var /** @type {?} */ el = renderer.createElement(parentElement, name, debugInfo);\n\t        for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n\t            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n\t        }\n\t        return el;\n\t    }\n\t    /**\n\t     * @param {?} renderer\n\t     * @param {?} elementName\n\t     * @param {?} attrs\n\t     * @param {?} rootSelectorOrNode\n\t     * @param {?=} debugInfo\n\t     * @return {?}\n\t     */\n\t    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n\t        var /** @type {?} */ hostElement;\n\t        if (isPresent(rootSelectorOrNode)) {\n\t            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n\t            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n\t                renderer.setElementAttribute(hostElement, attrs.get(i), attrs.get(i + 1));\n\t            }\n\t            renderer.setElementAttribute(hostElement, 'ng-version', VERSION.full);\n\t        }\n\t        else {\n\t            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n\t        }\n\t        return hostElement;\n\t    }\n\t    /**\n\t     * @param {?} view\n\t     * @param {?} element\n\t     * @param {?} eventNamesAndTargets\n\t     * @param {?} listener\n\t     * @return {?}\n\t     */\n\t    function subscribeToRenderElement(view, element, eventNamesAndTargets, listener) {\n\t        var /** @type {?} */ disposables = createEmptyInlineArray(eventNamesAndTargets.length / 2);\n\t        for (var /** @type {?} */ i = 0; i < eventNamesAndTargets.length; i += 2) {\n\t            var /** @type {?} */ eventName = eventNamesAndTargets.get(i);\n\t            var /** @type {?} */ eventTarget = eventNamesAndTargets.get(i + 1);\n\t            var /** @type {?} */ disposable = void 0;\n\t            if (eventTarget) {\n\t                disposable = view.renderer.listenGlobal(eventTarget, eventName, listener.bind(view, eventTarget + \":\" + eventName));\n\t            }\n\t            else {\n\t                disposable = view.renderer.listen(element, eventName, listener.bind(view, eventName));\n\t            }\n\t            disposables.set(i / 2, disposable);\n\t        }\n\t        return disposeInlineArray.bind(null, disposables);\n\t    }\n\t    /**\n\t     * @param {?} disposables\n\t     * @return {?}\n\t     */\n\t    function disposeInlineArray(disposables) {\n\t        for (var /** @type {?} */ i = 0; i < disposables.length; i++) {\n\t            disposables.get(i)();\n\t        }\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function noop() { }\n\t    /**\n\t     * @param {?} length\n\t     * @return {?}\n\t     */\n\t    function createEmptyInlineArray(length) {\n\t        var /** @type {?} */ ctor;\n\t        if (length <= 2) {\n\t            ctor = InlineArray2;\n\t        }\n\t        else if (length <= 4) {\n\t            ctor = InlineArray4;\n\t        }\n\t        else if (length <= 8) {\n\t            ctor = InlineArray8;\n\t        }\n\t        else if (length <= 16) {\n\t            ctor = InlineArray16;\n\t        }\n\t        else {\n\t            ctor = InlineArrayDynamic;\n\t        }\n\t        return new ctor(length);\n\t    }\n\t    var InlineArray0 = (function () {\n\t        function InlineArray0() {\n\t            this.length = 0;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray0.prototype.get = function (index) { return undefined; };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray0.prototype.set = function (index, value) { };\n\t        return InlineArray0;\n\t    }());\n\t    var InlineArray2 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         */\n\t        function InlineArray2(length, _v0, _v1) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray2.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray2.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray2;\n\t    }());\n\t    var InlineArray4 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         * @param {?=} _v2\n\t         * @param {?=} _v3\n\t         */\n\t        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray4.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray4.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray4;\n\t    }());\n\t    var InlineArray8 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         * @param {?=} _v2\n\t         * @param {?=} _v3\n\t         * @param {?=} _v4\n\t         * @param {?=} _v5\n\t         * @param {?=} _v6\n\t         * @param {?=} _v7\n\t         */\n\t        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray8.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray8.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t                case 4:\n\t                    this._v4 = value;\n\t                    break;\n\t                case 5:\n\t                    this._v5 = value;\n\t                    break;\n\t                case 6:\n\t                    this._v6 = value;\n\t                    break;\n\t                case 7:\n\t                    this._v7 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray8;\n\t    }());\n\t    var InlineArray16 = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {?=} _v0\n\t         * @param {?=} _v1\n\t         * @param {?=} _v2\n\t         * @param {?=} _v3\n\t         * @param {?=} _v4\n\t         * @param {?=} _v5\n\t         * @param {?=} _v6\n\t         * @param {?=} _v7\n\t         * @param {?=} _v8\n\t         * @param {?=} _v9\n\t         * @param {?=} _v10\n\t         * @param {?=} _v11\n\t         * @param {?=} _v12\n\t         * @param {?=} _v13\n\t         * @param {?=} _v14\n\t         * @param {?=} _v15\n\t         */\n\t        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t            this._v8 = _v8;\n\t            this._v9 = _v9;\n\t            this._v10 = _v10;\n\t            this._v11 = _v11;\n\t            this._v12 = _v12;\n\t            this._v13 = _v13;\n\t            this._v14 = _v14;\n\t            this._v15 = _v15;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArray16.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                case 8:\n\t                    return this._v8;\n\t                case 9:\n\t                    return this._v9;\n\t                case 10:\n\t                    return this._v10;\n\t                case 11:\n\t                    return this._v11;\n\t                case 12:\n\t                    return this._v12;\n\t                case 13:\n\t                    return this._v13;\n\t                case 14:\n\t                    return this._v14;\n\t                case 15:\n\t                    return this._v15;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArray16.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t                case 4:\n\t                    this._v4 = value;\n\t                    break;\n\t                case 5:\n\t                    this._v5 = value;\n\t                    break;\n\t                case 6:\n\t                    this._v6 = value;\n\t                    break;\n\t                case 7:\n\t                    this._v7 = value;\n\t                    break;\n\t                case 8:\n\t                    this._v8 = value;\n\t                    break;\n\t                case 9:\n\t                    this._v9 = value;\n\t                    break;\n\t                case 10:\n\t                    this._v10 = value;\n\t                    break;\n\t                case 11:\n\t                    this._v11 = value;\n\t                    break;\n\t                case 12:\n\t                    this._v12 = value;\n\t                    break;\n\t                case 13:\n\t                    this._v13 = value;\n\t                    break;\n\t                case 14:\n\t                    this._v14 = value;\n\t                    break;\n\t                case 15:\n\t                    this._v15 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray16;\n\t    }());\n\t    var InlineArrayDynamic = (function () {\n\t        /**\n\t         * @param {?} length\n\t         * @param {...?} values\n\t         */\n\t        function InlineArrayDynamic(length) {\n\t            var values = [];\n\t            for (var _i = 1; _i < arguments.length; _i++) {\n\t                values[_i - 1] = arguments[_i];\n\t            }\n\t            this.length = length;\n\t            this._values = values;\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        InlineArrayDynamic.prototype.set = function (index, value) { this._values[index] = value; };\n\t        return InlineArrayDynamic;\n\t    }());\n\t    var /** @type {?} */ EMPTY_INLINE_ARRAY = new InlineArray0();\n\t\n\t\n\t    var view_utils = Object.freeze({\n\t        ViewUtils: ViewUtils,\n\t        createRenderComponentType: createRenderComponentType,\n\t        addToArray: addToArray,\n\t        interpolate: interpolate,\n\t        inlineInterpolate: inlineInterpolate,\n\t        checkBinding: checkBinding,\n\t        castByValue: castByValue,\n\t        EMPTY_ARRAY: EMPTY_ARRAY,\n\t        EMPTY_MAP: EMPTY_MAP,\n\t        pureProxy1: pureProxy1,\n\t        pureProxy2: pureProxy2,\n\t        pureProxy3: pureProxy3,\n\t        pureProxy4: pureProxy4,\n\t        pureProxy5: pureProxy5,\n\t        pureProxy6: pureProxy6,\n\t        pureProxy7: pureProxy7,\n\t        pureProxy8: pureProxy8,\n\t        pureProxy9: pureProxy9,\n\t        pureProxy10: pureProxy10,\n\t        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n\t        setBindingDebugInfo: setBindingDebugInfo,\n\t        createRenderElement: createRenderElement,\n\t        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n\t        subscribeToRenderElement: subscribeToRenderElement,\n\t        noop: noop,\n\t        InlineArray2: InlineArray2,\n\t        InlineArray4: InlineArray4,\n\t        InlineArray8: InlineArray8,\n\t        InlineArray16: InlineArray16,\n\t        InlineArrayDynamic: InlineArrayDynamic,\n\t        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n\t    });\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n\t     *\n\t     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n\t     * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n\t     * method.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ComponentRef = (function () {\n\t        function ComponentRef() {\n\t        }\n\t        /**\n\t         * Location of the Host Element of this Component Instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.location = function () { };\n\t        /**\n\t         * The injector on which the component instance exists.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.injector = function () { };\n\t        /**\n\t         * The instance of the Component.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.instance = function () { };\n\t        /**\n\t         * The {\\@link ViewRef} of the Host View of this Component instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.hostView = function () { };\n\t        /**\n\t         * The {\\@link ChangeDetectorRef} of the Component instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.changeDetectorRef = function () { };\n\t        /**\n\t         * The component type.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.componentType = function () { };\n\t        /**\n\t         * Destroys the component instance and all of the data structures associated with it.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.destroy = function () { };\n\t        /**\n\t         * Allows to register a callback that will be called when the component is destroyed.\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ComponentRef.prototype.onDestroy = function (callback) { };\n\t        return ComponentRef;\n\t    }());\n\t    var ComponentRef_ = (function (_super) {\n\t        __extends$5(ComponentRef_, _super);\n\t        /**\n\t         * @param {?} _index\n\t         * @param {?} _parentView\n\t         * @param {?} _nativeElement\n\t         * @param {?} _component\n\t         */\n\t        function ComponentRef_(_index, _parentView, _nativeElement, _component) {\n\t            _super.call(this);\n\t            this._index = _index;\n\t            this._parentView = _parentView;\n\t            this._nativeElement = _nativeElement;\n\t            this._component = _component;\n\t        }\n\t        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ElementRef(this._nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parentView.injector(this._index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._component; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return (this._component.constructor); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ComponentRef_.prototype.destroy = function () { this._parentView.detachAndDestroy(); };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n\t        return ComponentRef_;\n\t    }(ComponentRef));\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var ComponentFactory = (function () {\n\t        /**\n\t         * @param {?} selector\n\t         * @param {?} _viewClass\n\t         * @param {?} _componentType\n\t         */\n\t        function ComponentFactory(selector, _viewClass, _componentType) {\n\t            this.selector = selector;\n\t            this._viewClass = _viewClass;\n\t            this._componentType = _componentType;\n\t        }\n\t        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._componentType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Creates a new component.\n\t         * @param {?} injector\n\t         * @param {?=} projectableNodes\n\t         * @param {?=} rootSelectorOrNode\n\t         * @return {?}\n\t         */\n\t        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n\t            var /** @type {?} */ vu = injector.get(ViewUtils);\n\t            if (!projectableNodes) {\n\t                projectableNodes = [];\n\t            }\n\t            var /** @type {?} */ hostView = new this._viewClass(vu, null, null, null);\n\t            return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n\t        };\n\t        return ComponentFactory;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var NoComponentFactoryError = (function (_super) {\n\t        __extends$8(NoComponentFactoryError, _super);\n\t        /**\n\t         * @param {?} component\n\t         */\n\t        function NoComponentFactoryError(component) {\n\t            _super.call(this, \"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n\t            this.component = component;\n\t        }\n\t        return NoComponentFactoryError;\n\t    }(BaseError));\n\t    var _NullComponentFactoryResolver = (function () {\n\t        function _NullComponentFactoryResolver() {\n\t        }\n\t        /**\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            throw new NoComponentFactoryError(component);\n\t        };\n\t        return _NullComponentFactoryResolver;\n\t    }());\n\t    /**\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ComponentFactoryResolver = (function () {\n\t        function ComponentFactoryResolver() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n\t        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n\t        return ComponentFactoryResolver;\n\t    }());\n\t    var CodegenComponentFactoryResolver = (function () {\n\t        /**\n\t         * @param {?} factories\n\t         * @param {?} _parent\n\t         */\n\t        function CodegenComponentFactoryResolver(factories, _parent) {\n\t            this._parent = _parent;\n\t            this._factories = new Map();\n\t            for (var i = 0; i < factories.length; i++) {\n\t                var factory = factories[i];\n\t                this._factories.set(factory.componentType, factory);\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} component\n\t         * @return {?}\n\t         */\n\t        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            var /** @type {?} */ result = this._factories.get(component);\n\t            if (!result) {\n\t                result = this._parent.resolveComponentFactory(component);\n\t            }\n\t            return result;\n\t        };\n\t        return CodegenComponentFactoryResolver;\n\t    }());\n\t\n\t    var /** @type {?} */ trace;\n\t    var /** @type {?} */ events;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function detectWTF() {\n\t        var /** @type {?} */ wtf = ((global$1) /** TODO #9100 */)['wtf'];\n\t        if (wtf) {\n\t            trace = wtf['trace'];\n\t            if (trace) {\n\t                events = trace['events'];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    /**\n\t     * @param {?} signature\n\t     * @param {?=} flags\n\t     * @return {?}\n\t     */\n\t    function createScope(signature, flags) {\n\t        if (flags === void 0) { flags = null; }\n\t        return events.createScope(signature, flags);\n\t    }\n\t    /**\n\t     * @param {?} scope\n\t     * @param {?=} returnValue\n\t     * @return {?}\n\t     */\n\t    function leave(scope, returnValue) {\n\t        trace.leaveScope(scope, returnValue);\n\t        return returnValue;\n\t    }\n\t    /**\n\t     * @param {?} rangeType\n\t     * @param {?} action\n\t     * @return {?}\n\t     */\n\t    function startTimeRange(rangeType, action) {\n\t        return trace.beginTimeRange(rangeType, action);\n\t    }\n\t    /**\n\t     * @param {?} range\n\t     * @return {?}\n\t     */\n\t    function endTimeRange(range) {\n\t        trace.endTimeRange(range);\n\t    }\n\t\n\t    /**\n\t     * True if WTF is enabled.\n\t     */\n\t    var /** @type {?} */ wtfEnabled = detectWTF();\n\t    /**\n\t     * @param {?=} arg0\n\t     * @param {?=} arg1\n\t     * @return {?}\n\t     */\n\t    function noopScope(arg0, arg1) {\n\t        return null;\n\t    }\n\t    /**\n\t     * Create trace scope.\n\t     *\n\t     * Scopes must be strictly nested and are analogous to stack frames, but\n\t     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n\t     * nesting. You may want to use\n\t     * [Event\n\t     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n\t     * as they are defined in WTF.\n\t     *\n\t     * Used to mark scope entry. The return value is used to leave the scope.\n\t     *\n\t     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n\t     *\n\t     *     someMethod() {\n\t     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n\t     *        // DO SOME WORK HERE\n\t     *        return wtfLeave(s, 123); // Return value 123\n\t     *     }\n\t     *\n\t     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n\t     * negatively impact the performance of your application. For this reason we recommend that\n\t     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n\t     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n\t     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n\t     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n\t     * an exception is expected during normal execution while profiling.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n\t    /**\n\t     * Used to mark end of Scope.\n\t     *\n\t     * - `scope` to end.\n\t     * - `returnValue` (optional) to be passed to the WTF.\n\t     *\n\t     * Returns the `returnValue for easy chaining.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n\t    /**\n\t     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n\t     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n\t     * enabled.\n\t     *\n\t     *     someMethod() {\n\t     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n\t     *        var future = new Future.delay(5).then((_) {\n\t     *          wtfEndTimeRange(s);\n\t     *        });\n\t     *     }\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n\t    /**\n\t     * Ends a async time range operation.\n\t     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n\t     * enabled.\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\t\n\t    /**\n\t     * The Testability service provides testing hooks that can be accessed from\n\t     * the browser and by services such as Protractor. Each bootstrapped Angular\n\t     * application on the page will have an instance of Testability.\n\t     * \\@experimental\n\t     */\n\t    var Testability = (function () {\n\t        /**\n\t         * @param {?} _ngZone\n\t         */\n\t        function Testability(_ngZone) {\n\t            this._ngZone = _ngZone;\n\t            /** @internal */\n\t            this._pendingCount = 0;\n\t            /** @internal */\n\t            this._isZoneStable = true;\n\t            /**\n\t             * Whether any work was done since the last 'whenStable' callback. This is\n\t             * useful to detect if this could have potentially destabilized another\n\t             * component while it is stabilizing.\n\t             * @internal\n\t             */\n\t            this._didWork = false;\n\t            /** @internal */\n\t            this._callbacks = [];\n\t            this._watchAngularEvents();\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        Testability.prototype._watchAngularEvents = function () {\n\t            var _this = this;\n\t            this._ngZone.onUnstable.subscribe({\n\t                next: function () {\n\t                    _this._didWork = true;\n\t                    _this._isZoneStable = false;\n\t                }\n\t            });\n\t            this._ngZone.runOutsideAngular(function () {\n\t                _this._ngZone.onStable.subscribe({\n\t                    next: function () {\n\t                        NgZone.assertNotInAngularZone();\n\t                        scheduleMicroTask(function () {\n\t                            _this._isZoneStable = true;\n\t                            _this._runCallbacksIfReady();\n\t                        });\n\t                    }\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.increasePendingRequestCount = function () {\n\t            this._pendingCount += 1;\n\t            this._didWork = true;\n\t            return this._pendingCount;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.decreasePendingRequestCount = function () {\n\t            this._pendingCount -= 1;\n\t            if (this._pendingCount < 0) {\n\t                throw new Error('pending async requests below zero');\n\t            }\n\t            this._runCallbacksIfReady();\n\t            return this._pendingCount;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.isStable = function () {\n\t            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        Testability.prototype._runCallbacksIfReady = function () {\n\t            var _this = this;\n\t            if (this.isStable()) {\n\t                // Schedules the call backs in a new frame so that it is always async.\n\t                scheduleMicroTask(function () {\n\t                    while (_this._callbacks.length !== 0) {\n\t                        (_this._callbacks.pop())(_this._didWork);\n\t                    }\n\t                    _this._didWork = false;\n\t                });\n\t            }\n\t            else {\n\t                // Not Ready\n\t                this._didWork = true;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.whenStable = function (callback) {\n\t            this._callbacks.push(callback);\n\t            this._runCallbacksIfReady();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n\t        /**\n\t         * @deprecated use findProviders\n\t         * @param {?} using\n\t         * @param {?} provider\n\t         * @param {?} exactMatch\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        /**\n\t         * @param {?} using\n\t         * @param {?} provider\n\t         * @param {?} exactMatch\n\t         * @return {?}\n\t         */\n\t        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Testability.ctorParameters = function () { return [\n\t            { type: NgZone, },\n\t        ]; };\n\t        return Testability;\n\t    }());\n\t    /**\n\t     * A global registry of {\\@link Testability} instances for specific elements.\n\t     * \\@experimental\n\t     */\n\t    var TestabilityRegistry = (function () {\n\t        function TestabilityRegistry() {\n\t            /** @internal */\n\t            this._applications = new Map();\n\t            _testabilityGetter.addToWindow(this);\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?} testability\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n\t            this._applications.set(token, testability);\n\t        };\n\t        /**\n\t         * @param {?} elem\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n\t        /**\n\t         * @param {?} elem\n\t         * @param {?=} findInAncestors\n\t         * @return {?}\n\t         */\n\t        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n\t            if (findInAncestors === void 0) { findInAncestors = true; }\n\t            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n\t        };\n\t        TestabilityRegistry.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        TestabilityRegistry.ctorParameters = function () { return []; };\n\t        return TestabilityRegistry;\n\t    }());\n\t    var _NoopGetTestability = (function () {\n\t        function _NoopGetTestability() {\n\t        }\n\t        /**\n\t         * @param {?} registry\n\t         * @return {?}\n\t         */\n\t        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n\t        /**\n\t         * @param {?} registry\n\t         * @param {?} elem\n\t         * @param {?} findInAncestors\n\t         * @return {?}\n\t         */\n\t        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            return null;\n\t        };\n\t        return _NoopGetTestability;\n\t    }());\n\t    /**\n\t     * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n\t     * \\@experimental\n\t     * @param {?} getter\n\t     * @return {?}\n\t     */\n\t    function setTestabilityGetter(getter) {\n\t        _testabilityGetter = getter;\n\t    }\n\t    var /** @type {?} */ _testabilityGetter = new _NoopGetTestability();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ _devMode = true;\n\t    var /** @type {?} */ _runModeLocked = false;\n\t    var /** @type {?} */ _platform;\n\t    /**\n\t     * Disable Angular's development mode, which turns off assertions and other\n\t     * checks within the framework.\n\t     *\n\t     * One important assertion this disables verifies that a change detection pass\n\t     * does not result in additional changes to any bindings (also known as\n\t     * unidirectional data flow).\n\t     *\n\t     * \\@stable\n\t     * @return {?}\n\t     */\n\t    function enableProdMode() {\n\t        if (_runModeLocked) {\n\t            throw new Error('Cannot enable prod mode after platform setup.');\n\t        }\n\t        _devMode = false;\n\t    }\n\t    /**\n\t     * Returns whether Angular is in development mode. After called once,\n\t     * the value is locked and won't change any more.\n\t     *\n\t     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @return {?}\n\t     */\n\t    function isDevMode() {\n\t        _runModeLocked = true;\n\t        return _devMode;\n\t    }\n\t    /**\n\t     * A token for third-party components that can register themselves with NgProbe.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgProbeToken = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} token\n\t         */\n\t        function NgProbeToken(name, token) {\n\t            this.name = name;\n\t            this.token = token;\n\t        }\n\t        return NgProbeToken;\n\t    }());\n\t    /**\n\t     * Creates a platform.\n\t     * Platforms have to be eagerly created via this function.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @param {?} injector\n\t     * @return {?}\n\t     */\n\t    function createPlatform(injector) {\n\t        if (_platform && !_platform.destroyed) {\n\t            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n\t        }\n\t        _platform = injector.get(PlatformRef);\n\t        var /** @type {?} */ inits = (injector.get(PLATFORM_INITIALIZER, null));\n\t        if (inits)\n\t            inits.forEach(function (init) { return init(); });\n\t        return _platform;\n\t    }\n\t    /**\n\t     * Creates a factory for a platform\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @param {?} parentPlatformFactory\n\t     * @param {?} name\n\t     * @param {?=} providers\n\t     * @return {?}\n\t     */\n\t    function createPlatformFactory(parentPlatformFactory, name, providers) {\n\t        if (providers === void 0) { providers = []; }\n\t        var /** @type {?} */ marker = new OpaqueToken(\"Platform: \" + name);\n\t        return function (extraProviders) {\n\t            if (extraProviders === void 0) { extraProviders = []; }\n\t            if (!getPlatform()) {\n\t                if (parentPlatformFactory) {\n\t                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n\t                }\n\t                else {\n\t                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n\t                }\n\t            }\n\t            return assertPlatform(marker);\n\t        };\n\t    }\n\t    /**\n\t     * Checks that there currently is a platform\n\t     * which contains the given token as a provider.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @param {?} requiredToken\n\t     * @return {?}\n\t     */\n\t    function assertPlatform(requiredToken) {\n\t        var /** @type {?} */ platform = getPlatform();\n\t        if (!platform) {\n\t            throw new Error('No platform exists!');\n\t        }\n\t        if (!platform.injector.get(requiredToken, null)) {\n\t            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n\t        }\n\t        return platform;\n\t    }\n\t    /**\n\t     * Destroy the existing platform.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @return {?}\n\t     */\n\t    function destroyPlatform() {\n\t        if (_platform && !_platform.destroyed) {\n\t            _platform.destroy();\n\t        }\n\t    }\n\t    /**\n\t     * Returns the current platform.\n\t     *\n\t     * \\@experimental APIs related to application bootstrap are currently under review.\n\t     * @return {?}\n\t     */\n\t    function getPlatform() {\n\t        return _platform && !_platform.destroyed ? _platform : null;\n\t    }\n\t    /**\n\t     * The Angular platform is the entry point for Angular on a web page. Each page\n\t     * has exactly one platform, and services (such as reflection) which are common\n\t     * to every Angular application running on the page are bound in its scope.\n\t     *\n\t     * A page's platform is initialized implicitly when {\\@link bootstrap}() is called, or\n\t     * explicitly by calling {\\@link createPlatform}().\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var PlatformRef = (function () {\n\t        function PlatformRef() {\n\t        }\n\t        /**\n\t         * Creates an instance of an `\\@NgModule` for the given platform\n\t         * for offline compilation.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * my_module.ts:\n\t         *\n\t         * \\@NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * main.ts:\n\t         * import {MyModuleNgFactory} from './my_module.ngfactory';\n\t         * import {platformBrowser} from '\\@angular/platform-browser';\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n\t         * ```\n\t         *\n\t         * \\@experimental APIs related to application bootstrap are currently under review.\n\t         * @abstract\n\t         * @param {?} moduleFactory\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) { };\n\t        /**\n\t         * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * \\@NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n\t         * ```\n\t         * \\@stable\n\t         * @abstract\n\t         * @param {?} moduleType\n\t         * @param {?=} compilerOptions\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) { };\n\t        /**\n\t         * Register a listener to be called when the platform is disposed.\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.onDestroy = function (callback) { };\n\t        /**\n\t         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n\t         * every Angular application on the page and provides singleton providers.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.injector = function () { };\n\t        /**\n\t         * Destroy the Angular platform and all Angular applications on the page.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.destroy = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformRef.prototype.destroyed = function () { };\n\t        return PlatformRef;\n\t    }());\n\t    /**\n\t     * @param {?} errorHandler\n\t     * @param {?} callback\n\t     * @return {?}\n\t     */\n\t    function _callAndReportToErrorHandler(errorHandler, callback) {\n\t        try {\n\t            var /** @type {?} */ result = callback();\n\t            if (isPromise(result)) {\n\t                return result.catch(function (e) {\n\t                    errorHandler.handleError(e);\n\t                    // rethrow as the exception handler might not do it\n\t                    throw e;\n\t                });\n\t            }\n\t            return result;\n\t        }\n\t        catch (e) {\n\t            errorHandler.handleError(e);\n\t            // rethrow as the exception handler might not do it\n\t            throw e;\n\t        }\n\t    }\n\t    var PlatformRef_ = (function (_super) {\n\t        __extends$3(PlatformRef_, _super);\n\t        /**\n\t         * @param {?} _injector\n\t         */\n\t        function PlatformRef_(_injector) {\n\t            _super.call(this);\n\t            this._injector = _injector;\n\t            this._modules = [];\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error('The platform has already been destroyed!');\n\t            }\n\t            this._modules.slice().forEach(function (module) { return module.destroy(); });\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t            this._destroyed = true;\n\t        };\n\t        /**\n\t         * @param {?} moduleFactory\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n\t        };\n\t        /**\n\t         * @param {?} moduleFactory\n\t         * @param {?} ngZone\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n\t            var _this = this;\n\t            // Note: We need to create the NgZone _before_ we instantiate the module,\n\t            // as instantiating the module creates some providers eagerly.\n\t            // So we create a mini parent injector that just contains the new NgZone and\n\t            // pass that as parent to the NgModuleFactory.\n\t            if (!ngZone)\n\t                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n\t            // Attention: Don't use ApplicationRef.run here,\n\t            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n\t            return ngZone.run(function () {\n\t                var /** @type {?} */ ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n\t                var /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n\t                var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n\t                if (!exceptionHandler) {\n\t                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n\t                }\n\t                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n\t                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n\t                return _callAndReportToErrorHandler(exceptionHandler, function () {\n\t                    var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n\t                    return initStatus.donePromise.then(function () {\n\t                        _this._moduleDoBootstrap(moduleRef);\n\t                        return moduleRef;\n\t                    });\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} moduleType\n\t         * @param {?=} compilerOptions\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n\t        };\n\t        /**\n\t         * @param {?} moduleType\n\t         * @param {?=} compilerOptions\n\t         * @param {?} ngZone\n\t         * @param {?=} componentFactoryCallback\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n\t            var _this = this;\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n\t            var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\t            // ugly internal api hack: generate host component factories for all declared components and\n\t            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n\t            // factories.\n\t            if (componentFactoryCallback) {\n\t                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n\t                    .then(function (_a) {\n\t                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n\t                    componentFactoryCallback(componentFactories);\n\t                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n\t                });\n\t            }\n\t            return compiler.compileModuleAsync(moduleType)\n\t                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n\t        };\n\t        /**\n\t         * @param {?} moduleRef\n\t         * @return {?}\n\t         */\n\t        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n\t            var /** @type {?} */ appRef = moduleRef.injector.get(ApplicationRef);\n\t            if (moduleRef.bootstrapFactories.length > 0) {\n\t                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n\t            }\n\t            else if (moduleRef.instance.ngDoBootstrap) {\n\t                moduleRef.instance.ngDoBootstrap(appRef);\n\t            }\n\t            else {\n\t                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n\t                    \"Please define one of these.\");\n\t            }\n\t            this._modules.push(moduleRef);\n\t        };\n\t        PlatformRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PlatformRef_.ctorParameters = function () { return [\n\t            { type: Injector, },\n\t        ]; };\n\t        return PlatformRef_;\n\t    }(PlatformRef));\n\t    /**\n\t     * A reference to an Angular application running on a page.\n\t     *\n\t     * For more about Angular applications, see the documentation for {\\@link bootstrap}.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ApplicationRef = (function () {\n\t        function ApplicationRef() {\n\t        }\n\t        /**\n\t         * Bootstrap a new component at the root level of the application.\n\t         *\n\t         * ### Bootstrap process\n\t         *\n\t         * When bootstrapping a new root component into an application, Angular mounts the\n\t         * specified application component onto DOM elements identified by the [componentType]'s\n\t         * selector and kicks off automatic change detection to finish initializing the component.\n\t         *\n\t         * ### Example\n\t         * {\\@example core/ts/platform/platform.ts region='longform'}\n\t         * @abstract\n\t         * @param {?} componentFactory\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.bootstrap = function (componentFactory) { };\n\t        /**\n\t         * Invoke this method to explicitly process change detection and its side-effects.\n\t         *\n\t         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n\t         * further changes are detected. If additional changes are picked up during this second cycle,\n\t         * bindings in the app have side-effects that cannot be resolved in a single change detection\n\t         * pass.\n\t         * In this case, Angular throws an error, since an Angular application can only have one change\n\t         * detection pass during which all change detection must complete.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.tick = function () { };\n\t        /**\n\t         * Get a list of component types registered to this application.\n\t         * This list is populated even before the component is created.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.componentTypes = function () { };\n\t        /**\n\t         * Get a list of components registered to this application.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.components = function () { };\n\t        /**\n\t         * Attaches a view so that it will be dirty checked.\n\t         * The view will be automatically detached when it is destroyed.\n\t         * This will throw if the view is already attached to a ViewContainer.\n\t         * @abstract\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.attachView = function (view) { };\n\t        /**\n\t         * Detaches a view from dirty checking again.\n\t         * @abstract\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.detachView = function (view) { };\n\t        /**\n\t         * Returns the number of attached views.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ApplicationRef.prototype.viewCount = function () { };\n\t        return ApplicationRef;\n\t    }());\n\t    var ApplicationRef_ = (function (_super) {\n\t        __extends$3(ApplicationRef_, _super);\n\t        /**\n\t         * @param {?} _zone\n\t         * @param {?} _console\n\t         * @param {?} _injector\n\t         * @param {?} _exceptionHandler\n\t         * @param {?} _componentFactoryResolver\n\t         * @param {?} _initStatus\n\t         * @param {?} _testabilityRegistry\n\t         * @param {?} _testability\n\t         */\n\t        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._zone = _zone;\n\t            this._console = _console;\n\t            this._injector = _injector;\n\t            this._exceptionHandler = _exceptionHandler;\n\t            this._componentFactoryResolver = _componentFactoryResolver;\n\t            this._initStatus = _initStatus;\n\t            this._testabilityRegistry = _testabilityRegistry;\n\t            this._testability = _testability;\n\t            this._bootstrapListeners = [];\n\t            this._rootComponents = [];\n\t            this._rootComponentTypes = [];\n\t            this._views = [];\n\t            this._runningTick = false;\n\t            this._enforceNoNewChanges = false;\n\t            this._enforceNoNewChanges = isDevMode();\n\t            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n\t        }\n\t        /**\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.attachView = function (viewRef) {\n\t            var /** @type {?} */ view = ((viewRef)).internalView;\n\t            this._views.push(view);\n\t            view.attachToAppRef(this);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.detachView = function (viewRef) {\n\t            var /** @type {?} */ view = ((viewRef)).internalView;\n\t            ListWrapper.remove(this._views, view);\n\t            view.detach();\n\t        };\n\t        /**\n\t         * @param {?} componentOrFactory\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n\t            var _this = this;\n\t            if (!this._initStatus.done) {\n\t                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n\t            }\n\t            var /** @type {?} */ componentFactory;\n\t            if (componentOrFactory instanceof ComponentFactory) {\n\t                componentFactory = componentOrFactory;\n\t            }\n\t            else {\n\t                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n\t            }\n\t            this._rootComponentTypes.push(componentFactory.componentType);\n\t            var /** @type {?} */ compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n\t            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n\t            var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n\t            if (testability) {\n\t                compRef.injector.get(TestabilityRegistry)\n\t                    .registerApplication(compRef.location.nativeElement, testability);\n\t            }\n\t            this._loadComponent(compRef);\n\t            if (isDevMode()) {\n\t                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n\t            }\n\t            return compRef;\n\t        };\n\t        /**\n\t         * @param {?} componentRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n\t            this.attachView(componentRef.hostView);\n\t            this.tick();\n\t            this._rootComponents.push(componentRef);\n\t            // Get the listeners lazily to prevent DI cycles.\n\t            var /** @type {?} */ listeners = (this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n\t                .concat(this._bootstrapListeners));\n\t            listeners.forEach(function (listener) { return listener(componentRef); });\n\t        };\n\t        /**\n\t         * @param {?} componentRef\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n\t            this.detachView(componentRef.hostView);\n\t            ListWrapper.remove(this._rootComponents, componentRef);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.tick = function () {\n\t            if (this._runningTick) {\n\t                throw new Error('ApplicationRef.tick is called recursively');\n\t            }\n\t            var /** @type {?} */ scope = ApplicationRef_._tickScope();\n\t            try {\n\t                this._runningTick = true;\n\t                this._views.forEach(function (view) { return view.ref.detectChanges(); });\n\t                if (this._enforceNoNewChanges) {\n\t                    this._views.forEach(function (view) { return view.ref.checkNoChanges(); });\n\t                }\n\t            }\n\t            finally {\n\t                this._runningTick = false;\n\t                wtfLeave(scope);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ApplicationRef_.prototype.ngOnDestroy = function () {\n\t            // TODO(alxhub): Dispose of the NgZone.\n\t            this._views.slice().forEach(function (view) { return view.destroy(); });\n\t        };\n\t        Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._views.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._rootComponentTypes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._rootComponents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n\t        ApplicationRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationRef_.ctorParameters = function () { return [\n\t            { type: NgZone, },\n\t            { type: Console, },\n\t            { type: Injector, },\n\t            { type: ErrorHandler, },\n\t            { type: ComponentFactoryResolver, },\n\t            { type: ApplicationInitStatus, },\n\t            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n\t            { type: Testability, decorators: [{ type: Optional },] },\n\t        ]; };\n\t        return ApplicationRef_;\n\t    }(ApplicationRef));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n\t     *\n\t     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n\t     * NgModule Instance.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var NgModuleRef = (function () {\n\t        function NgModuleRef() {\n\t        }\n\t        /**\n\t         * The injector that contains all of the providers of the NgModule.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.injector = function () { };\n\t        /**\n\t         * The ComponentFactoryResolver to get hold of the ComponentFactories\n\t         * declared in the `entryComponents` property of the module.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.componentFactoryResolver = function () { };\n\t        /**\n\t         * The NgModule instance.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.instance = function () { };\n\t        /**\n\t         * Destroys the module instance and all of the data structures associated with it.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.destroy = function () { };\n\t        /**\n\t         * Allows to register a callback that will be called when the module is destroyed.\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        NgModuleRef.prototype.onDestroy = function (callback) { };\n\t        return NgModuleRef;\n\t    }());\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var NgModuleFactory = (function () {\n\t        /**\n\t         * @param {?} _injectorClass\n\t         * @param {?} _moduleType\n\t         */\n\t        function NgModuleFactory(_injectorClass, _moduleType) {\n\t            this._injectorClass = _injectorClass;\n\t            this._moduleType = _moduleType;\n\t        }\n\t        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._moduleType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} parentInjector\n\t         * @return {?}\n\t         */\n\t        NgModuleFactory.prototype.create = function (parentInjector) {\n\t            if (!parentInjector) {\n\t                parentInjector = Injector.NULL;\n\t            }\n\t            var /** @type {?} */ instance = new this._injectorClass(parentInjector);\n\t            instance.create();\n\t            return instance;\n\t        };\n\t        return NgModuleFactory;\n\t    }());\n\t    var /** @type {?} */ _UNDEFINED = new Object();\n\t    /**\n\t     * @abstract\n\t     */\n\t    var NgModuleInjector = (function (_super) {\n\t        __extends$9(NgModuleInjector, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} factories\n\t         * @param {?} bootstrapFactories\n\t         */\n\t        function NgModuleInjector(parent, factories, bootstrapFactories) {\n\t            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n\t            this.parent = parent;\n\t            this.bootstrapFactories = bootstrapFactories;\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.createInternal = function () { };\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            if (token === Injector || token === ComponentFactoryResolver) {\n\t                return this;\n\t            }\n\t            var /** @type {?} */ result = this.getInternal(token, _UNDEFINED);\n\t            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n\t        };\n\t        /**\n\t         * @abstract\n\t         * @param {?} token\n\t         * @param {?} notFoundValue\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.getInternal = function (token, notFoundValue) { };\n\t        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n\t            }\n\t            this._destroyed = true;\n\t            this.destroyInternal();\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        NgModuleInjector.prototype.destroyInternal = function () { };\n\t        return NgModuleInjector;\n\t    }(CodegenComponentFactoryResolver));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Used to load ng module factories.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var NgModuleFactoryLoader = (function () {\n\t        function NgModuleFactoryLoader() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        NgModuleFactoryLoader.prototype.load = function (path) { };\n\t        return NgModuleFactoryLoader;\n\t    }());\n\t    var /** @type {?} */ moduleFactories = new Map();\n\t    /**\n\t     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n\t     * \\@experimental\n\t     * @param {?} id\n\t     * @param {?} factory\n\t     * @return {?}\n\t     */\n\t    function registerModuleFactory(id, factory) {\n\t        var /** @type {?} */ existing = moduleFactories.get(id);\n\t        if (existing) {\n\t            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n\t        }\n\t        moduleFactories.set(id, factory);\n\t    }\n\t    /**\n\t     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n\t     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n\t     * cannot be found.\n\t     * \\@experimental\n\t     * @param {?} id\n\t     * @return {?}\n\t     */\n\t    function getModuleFactory(id) {\n\t        var /** @type {?} */ factory = moduleFactories.get(id);\n\t        if (!factory)\n\t            throw new Error(\"No module with ID \" + id + \" loaded\");\n\t        return factory;\n\t    }\n\t\n\t    /**\n\t     * An unmodifiable list of items that Angular keeps up to date when the state\n\t     * of the application changes.\n\t     *\n\t     * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n\t     *\n\t     * Implements an iterable interface, therefore it can be used in both ES6\n\t     * javascript `for (var i of items)` loops as well as in Angular templates with\n\t     * `*ngFor=\"let i of myList\"`.\n\t     *\n\t     * Changes can be observed by subscribing to the changes `Observable`.\n\t     *\n\t     * NOTE: In the future this class will implement an `Observable` interface.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n\t     * ```typescript\n\t     * \\@Component({...})\n\t     * class Container {\n\t     *   \\@ViewChildren(Item) items:QueryList<Item>;\n\t     * }\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var QueryList = (function () {\n\t        function QueryList() {\n\t            this._dirty = true;\n\t            this._results = [];\n\t            this._emitter = new EventEmitter();\n\t        }\n\t        Object.defineProperty(QueryList.prototype, \"changes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._emitter; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"length\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._results.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"first\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._results[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"last\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._results[this.length - 1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * See\n\t         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n\t        /**\n\t         * See\n\t         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.filter = function (fn) {\n\t            return this._results.filter(fn);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.find = function (fn) { return this._results.find(fn); };\n\t        /**\n\t         * See\n\t         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n\t         * @param {?} fn\n\t         * @param {?} init\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.reduce = function (fn, init) {\n\t            return this._results.reduce(fn, init);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n\t        /**\n\t         * See\n\t         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.some = function (fn) {\n\t            return this._results.some(fn);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.toArray = function () { return this._results.slice(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype[getSymbolIterator()] = function () { return ((this._results))[getSymbolIterator()](); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.toString = function () { return this._results.toString(); };\n\t        /**\n\t         * @param {?} res\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.reset = function (res) {\n\t            this._results = ListWrapper.flatten(res);\n\t            this._dirty = false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n\t        /**\n\t         * internal\n\t         * @return {?}\n\t         */\n\t        QueryList.prototype.setDirty = function () { this._dirty = true; };\n\t        Object.defineProperty(QueryList.prototype, \"dirty\", {\n\t            /**\n\t             * internal\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._dirty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return QueryList;\n\t    }());\n\t\n\t    var /** @type {?} */ _SEPARATOR = '#';\n\t    var /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\n\t    /**\n\t     * Configuration for SystemJsNgModuleLoader.\n\t     * token.\n\t     *\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var SystemJsNgModuleLoaderConfig = (function () {\n\t        function SystemJsNgModuleLoaderConfig() {\n\t        }\n\t        return SystemJsNgModuleLoaderConfig;\n\t    }());\n\t    var /** @type {?} */ DEFAULT_CONFIG = {\n\t        factoryPathPrefix: '',\n\t        factoryPathSuffix: '.ngfactory',\n\t    };\n\t    /**\n\t     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n\t     * \\@experimental\n\t     */\n\t    var SystemJsNgModuleLoader = (function () {\n\t        /**\n\t         * @param {?} _compiler\n\t         * @param {?=} config\n\t         */\n\t        function SystemJsNgModuleLoader(_compiler, config) {\n\t            this._compiler = _compiler;\n\t            this._config = config || DEFAULT_CONFIG;\n\t        }\n\t        /**\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        SystemJsNgModuleLoader.prototype.load = function (path) {\n\t            var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n\t            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n\t        };\n\t        /**\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n\t            var _this = this;\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t            }\n\t            return System.import(module)\n\t                .then(function (module) { return module[exportName]; })\n\t                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n\t                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n\t        };\n\t        /**\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t                factoryClassSuffix = '';\n\t            }\n\t            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n\t                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n\t                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n\t        };\n\t        SystemJsNgModuleLoader.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SystemJsNgModuleLoader.ctorParameters = function () { return [\n\t            { type: Compiler, },\n\t            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n\t        ]; };\n\t        return SystemJsNgModuleLoader;\n\t    }());\n\t    /**\n\t     * @param {?} value\n\t     * @param {?} modulePath\n\t     * @param {?} exportName\n\t     * @return {?}\n\t     */\n\t    function checkNotEmpty(value, modulePath, exportName) {\n\t        if (!value) {\n\t            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n\t        }\n\t        return value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n\t     *\n\t     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n\t     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n\t     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n\t     * `TemplateRef` from a Component or a Directive via {\\@link Query}.\n\t     *\n\t     * To instantiate Embedded Views based on a Template, use\n\t     * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n\t     * View Container.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var TemplateRef = (function () {\n\t        function TemplateRef() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        TemplateRef.prototype.elementRef = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        TemplateRef.prototype.createEmbeddedView = function (context) { };\n\t        return TemplateRef;\n\t    }());\n\t    var TemplateRef_ = (function (_super) {\n\t        __extends$10(TemplateRef_, _super);\n\t        /**\n\t         * @param {?} _parentView\n\t         * @param {?} _nodeIndex\n\t         * @param {?} _nativeElement\n\t         */\n\t        function TemplateRef_(_parentView, _nodeIndex, _nativeElement) {\n\t            _super.call(this);\n\t            this._parentView = _parentView;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._nativeElement = _nativeElement;\n\t        }\n\t        /**\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        TemplateRef_.prototype.createEmbeddedView = function (context) {\n\t            var /** @type {?} */ view = this._parentView.createEmbeddedViewInternal(this._nodeIndex);\n\t            view.create(context || ({}));\n\t            return view.ref;\n\t        };\n\t        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ElementRef(this._nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef_;\n\t    }(TemplateRef));\n\t\n\t    /**\n\t     * Represents a container where one or more Views can be attached.\n\t     *\n\t     * The container can contain two kinds of Views. Host Views, created by instantiating a\n\t     * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n\t     * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n\t     *\n\t     * The location of the View Container within the containing View is specified by the Anchor\n\t     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n\t     * have a single View Container.\n\t     *\n\t     * Root elements of Views attached to this container become siblings of the Anchor Element in\n\t     * the Rendered View.\n\t     *\n\t     * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n\t     * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ViewContainerRef = (function () {\n\t        function ViewContainerRef() {\n\t        }\n\t        /**\n\t         * Anchor element that specifies the location of this container in the containing View.\n\t         * <!-- TODO: rename to anchorElement -->\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.element = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.injector = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.parentInjector = function () { };\n\t        /**\n\t         * Destroys all Views in this container.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.clear = function () { };\n\t        /**\n\t         * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n\t         * @abstract\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.get = function (index) { };\n\t        /**\n\t         * Returns the number of Views currently attached to this container.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.length = function () { };\n\t        /**\n\t         * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n\t         * into this container at the specified `index`.\n\t         *\n\t         * If `index` is not specified, the new View will be inserted as the last View in the container.\n\t         *\n\t         * Returns the {\\@link ViewRef} for the newly created View.\n\t         * @abstract\n\t         * @param {?} templateRef\n\t         * @param {?=} context\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) { };\n\t        /**\n\t         * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n\t         * specified `index`.\n\t         *\n\t         * The component is instantiated using its {\\@link ComponentFactory} which can be\n\t         * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n\t         *\n\t         * If `index` is not specified, the new View will be inserted as the last View in the container.\n\t         *\n\t         * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n\t         *\n\t         * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n\t         * @abstract\n\t         * @param {?} componentFactory\n\t         * @param {?=} index\n\t         * @param {?=} injector\n\t         * @param {?=} projectableNodes\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) { };\n\t        /**\n\t         * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n\t         *\n\t         * If `index` is not specified, the new View will be inserted as the last View in the container.\n\t         *\n\t         * Returns the inserted {\\@link ViewRef}.\n\t         * @abstract\n\t         * @param {?} viewRef\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.insert = function (viewRef, index) { };\n\t        /**\n\t         * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n\t         *\n\t         * Returns the inserted {\\@link ViewRef}.\n\t         * @abstract\n\t         * @param {?} viewRef\n\t         * @param {?} currentIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.move = function (viewRef, currentIndex) { };\n\t        /**\n\t         * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n\t         * `-1` if this container doesn't contain the View.\n\t         * @abstract\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.indexOf = function (viewRef) { };\n\t        /**\n\t         * Destroys a View attached to this container at the specified `index`.\n\t         *\n\t         * If `index` is not specified, the last View in the container will be removed.\n\t         * @abstract\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.remove = function (index) { };\n\t        /**\n\t         * Use along with {\\@link #insert} to move a View within the current container.\n\t         *\n\t         * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n\t         * @abstract\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef.prototype.detach = function (index) { };\n\t        return ViewContainerRef;\n\t    }());\n\t    var ViewContainerRef_ = (function () {\n\t        /**\n\t         * @param {?} _element\n\t         */\n\t        function ViewContainerRef_(_element) {\n\t            this._element = _element;\n\t            /** @internal */\n\t            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n\t            /** @internal */\n\t            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n\t            /** @internal */\n\t            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n\t            /** @internal */\n\t            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n\t        }\n\t        /**\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ views = this._element.nestedViews;\n\t                return isPresent(views) ? views.length : 0;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._element.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._element.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._element.parentInjector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} templateRef\n\t         * @param {?=} context\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n\t            if (context === void 0) { context = null; }\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context);\n\t            this.insert(viewRef, index);\n\t            return viewRef;\n\t        };\n\t        /**\n\t         * @param {?} componentFactory\n\t         * @param {?=} index\n\t         * @param {?=} injector\n\t         * @param {?=} projectableNodes\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n\t            if (index === void 0) { index = -1; }\n\t            if (injector === void 0) { injector = null; }\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            var /** @type {?} */ s = this._createComponentInContainerScope();\n\t            var /** @type {?} */ contextInjector = injector || this._element.parentInjector;\n\t            var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n\t            this.insert(componentRef.hostView, index);\n\t            return wtfLeave(s, componentRef);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ s = this._insertScope();\n\t            if (index == -1)\n\t                index = this.length;\n\t            var /** @type {?} */ viewRef_ = (viewRef);\n\t            this._element.attachView(viewRef_.internalView, index);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @param {?} currentIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n\t            var /** @type {?} */ s = this._insertScope();\n\t            if (currentIndex == -1)\n\t                return;\n\t            var /** @type {?} */ viewRef_ = (viewRef);\n\t            this._element.moveView(viewRef_.internalView, currentIndex);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        /**\n\t         * @param {?} viewRef\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n\t            return this.length ? this._element.nestedViews.indexOf(((viewRef)).internalView) :\n\t                -1;\n\t        };\n\t        /**\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.remove = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ s = this._removeScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var /** @type {?} */ view = this._element.detachView(index);\n\t            view.destroy();\n\t            // view is intentionally not returned to the client.\n\t            wtfLeave(s);\n\t        };\n\t        /**\n\t         * @param {?=} index\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.detach = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var /** @type {?} */ s = this._detachScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var /** @type {?} */ view = this._element.detachView(index);\n\t            return wtfLeave(s, view.ref);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewContainerRef_.prototype.clear = function () {\n\t            for (var /** @type {?} */ i = this.length - 1; i >= 0; i--) {\n\t                this.remove(i);\n\t            }\n\t        };\n\t        return ViewContainerRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var ViewRef = (function (_super) {\n\t        __extends$11(ViewRef, _super);\n\t        function ViewRef() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * Destroys the view and all of the data structures associated with it.\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewRef.prototype.destroy = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        ViewRef.prototype.destroyed = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ViewRef.prototype.onDestroy = function (callback) { };\n\t        return ViewRef;\n\t    }(ChangeDetectorRef));\n\t    /**\n\t     * Represents an Angular View.\n\t     *\n\t     * <!-- TODO: move the next two paragraphs to the dev guide -->\n\t     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n\t     * Elements which are created and destroyed together.\n\t     *\n\t     * Properties of elements in a View can change, but the structure (number and order) of elements in\n\t     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n\t     * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n\t     * <!-- /TODO -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * Given this template...\n\t     *\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * We have two {\\@link TemplateRef}s:\n\t     *\n\t     * Outer {\\@link TemplateRef}:\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * Inner {\\@link TemplateRef}:\n\t     * ```\n\t     *   <li>{{item}}</li>\n\t     * ```\n\t     *\n\t     * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n\t     *\n\t     * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n\t     *\n\t     * ```\n\t     * <!-- ViewRef: outer-0 -->\n\t     * Count: 2\n\t     * <ul>\n\t     *   <template view-container-ref></template>\n\t     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n\t     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n\t     * </ul>\n\t     * <!-- /ViewRef: outer-0 -->\n\t     * ```\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var EmbeddedViewRef = (function (_super) {\n\t        __extends$11(EmbeddedViewRef, _super);\n\t        function EmbeddedViewRef() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        EmbeddedViewRef.prototype.context = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        EmbeddedViewRef.prototype.rootNodes = function () { };\n\t        return EmbeddedViewRef;\n\t    }(ViewRef));\n\t    var ViewRef_ = (function () {\n\t        /**\n\t         * @param {?} _view\n\t         * @param {?} animationQueue\n\t         */\n\t        function ViewRef_(_view, animationQueue) {\n\t            this._view = _view;\n\t            this.animationQueue = animationQueue;\n\t            this._view = _view;\n\t            this._originalMode = this._view.cdMode;\n\t        }\n\t        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.flatRootNodes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"context\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.detectChanges = function () {\n\t            this._view.detectChanges(false);\n\t            this.animationQueue.flush();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.reattach = function () {\n\t            this._view.cdMode = this._originalMode;\n\t            this.markForCheck();\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.onDestroy = function (callback) {\n\t            if (!this._view.disposables) {\n\t                this._view.disposables = [];\n\t            }\n\t            this._view.disposables.push(callback);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewRef_.prototype.destroy = function () { this._view.detachAndDestroy(); };\n\t        return ViewRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var EventListener = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         */\n\t        function EventListener(name, callback) {\n\t            this.name = name;\n\t            this.callback = callback;\n\t        }\n\t        ;\n\t        return EventListener;\n\t    }());\n\t    /**\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugNode = (function () {\n\t        /**\n\t         * @param {?} nativeNode\n\t         * @param {?} parent\n\t         * @param {?} _debugInfo\n\t         */\n\t        function DebugNode(nativeNode, parent, _debugInfo) {\n\t            this._debugInfo = _debugInfo;\n\t            this.nativeNode = nativeNode;\n\t            if (parent && parent instanceof DebugElement) {\n\t                parent.addChild(this);\n\t            }\n\t            else {\n\t                this.parent = null;\n\t            }\n\t            this.listeners = [];\n\t        }\n\t        Object.defineProperty(DebugNode.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.injector : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.component : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"context\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.context : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"references\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._debugInfo ? this._debugInfo.references : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.providerTokens : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"source\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._debugInfo ? this._debugInfo.source : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugNode;\n\t    }());\n\t    /**\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugElement = (function (_super) {\n\t        __extends$12(DebugElement, _super);\n\t        /**\n\t         * @param {?} nativeNode\n\t         * @param {?} parent\n\t         * @param {?} _debugInfo\n\t         */\n\t        function DebugElement(nativeNode, parent, _debugInfo) {\n\t            _super.call(this, nativeNode, parent, _debugInfo);\n\t            this.properties = {};\n\t            this.attributes = {};\n\t            this.classes = {};\n\t            this.styles = {};\n\t            this.childNodes = [];\n\t            this.nativeElement = nativeNode;\n\t        }\n\t        /**\n\t         * @param {?} child\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.addChild = function (child) {\n\t            if (child) {\n\t                this.childNodes.push(child);\n\t                child.parent = this;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} child\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.removeChild = function (child) {\n\t            var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n\t            if (childIndex !== -1) {\n\t                child.parent = null;\n\t                this.childNodes.splice(childIndex, 1);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} child\n\t         * @param {?} newChildren\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n\t            var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n\t            if (siblingIndex !== -1) {\n\t                var /** @type {?} */ previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n\t                var /** @type {?} */ nextChildren = this.childNodes.slice(siblingIndex + 1);\n\t                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n\t                for (var /** @type {?} */ i = 0; i < newChildren.length; ++i) {\n\t                    var /** @type {?} */ newChild = newChildren[i];\n\t                    if (newChild.parent) {\n\t                        newChild.parent.removeChild(newChild);\n\t                    }\n\t                    newChild.parent = this;\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} predicate\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.query = function (predicate) {\n\t            var /** @type {?} */ results = this.queryAll(predicate);\n\t            return results[0] || null;\n\t        };\n\t        /**\n\t         * @param {?} predicate\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.queryAll = function (predicate) {\n\t            var /** @type {?} */ matches = [];\n\t            _queryElementChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        /**\n\t         * @param {?} predicate\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.queryAllNodes = function (predicate) {\n\t            var /** @type {?} */ matches = [];\n\t            _queryNodeChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        Object.defineProperty(DebugElement.prototype, \"children\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} eventName\n\t         * @param {?} eventObj\n\t         * @return {?}\n\t         */\n\t        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n\t            this.listeners.forEach(function (listener) {\n\t                if (listener.name == eventName) {\n\t                    listener.callback(eventObj);\n\t                }\n\t            });\n\t        };\n\t        return DebugElement;\n\t    }(DebugNode));\n\t    /**\n\t     * \\@experimental\n\t     * @param {?} debugEls\n\t     * @return {?}\n\t     */\n\t    function asNativeElements(debugEls) {\n\t        return debugEls.map(function (el) { return el.nativeElement; });\n\t    }\n\t    /**\n\t     * @param {?} element\n\t     * @param {?} predicate\n\t     * @param {?} matches\n\t     * @return {?}\n\t     */\n\t    function _queryElementChildren(element, predicate, matches) {\n\t        element.childNodes.forEach(function (node) {\n\t            if (node instanceof DebugElement) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                _queryElementChildren(node, predicate, matches);\n\t            }\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} parentNode\n\t     * @param {?} predicate\n\t     * @param {?} matches\n\t     * @return {?}\n\t     */\n\t    function _queryNodeChildren(parentNode, predicate, matches) {\n\t        if (parentNode instanceof DebugElement) {\n\t            parentNode.childNodes.forEach(function (node) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                if (node instanceof DebugElement) {\n\t                    _queryNodeChildren(node, predicate, matches);\n\t                }\n\t            });\n\t        }\n\t    }\n\t    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n\t    var /** @type {?} */ _nativeNodeToDebugNode = new Map();\n\t    /**\n\t     * \\@experimental\n\t     * @param {?} nativeNode\n\t     * @return {?}\n\t     */\n\t    function getDebugNode(nativeNode) {\n\t        return _nativeNodeToDebugNode.get(nativeNode);\n\t    }\n\t    /**\n\t     * @param {?} node\n\t     * @return {?}\n\t     */\n\t    function indexDebugNode(node) {\n\t        _nativeNodeToDebugNode.set(node.nativeNode, node);\n\t    }\n\t    /**\n\t     * @param {?} node\n\t     * @return {?}\n\t     */\n\t    function removeDebugNodeFromIndex(node) {\n\t        _nativeNodeToDebugNode.delete(node.nativeNode);\n\t    }\n\t\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _reflector() {\n\t        return reflector;\n\t    }\n\t    var /** @type {?} */ _CORE_PLATFORM_PROVIDERS = [\n\t        PlatformRef_,\n\t        { provide: PlatformRef, useExisting: PlatformRef_ },\n\t        { provide: Reflector, useFactory: _reflector, deps: [] },\n\t        { provide: ReflectorReader, useExisting: Reflector },\n\t        TestabilityRegistry,\n\t        Console,\n\t    ];\n\t    /**\n\t     * This platform has to be included in any other platform\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\t\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var /** @type {?} */ LOCALE_ID = new OpaqueToken('LocaleId');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var /** @type {?} */ TRANSLATIONS = new OpaqueToken('Translations');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var /** @type {?} */ TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\t\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _iterableDiffersFactory() {\n\t        return defaultIterableDiffers;\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _keyValueDiffersFactory() {\n\t        return defaultKeyValueDiffers;\n\t    }\n\t    /**\n\t     * @param {?=} locale\n\t     * @return {?}\n\t     */\n\t    function _localeFactory(locale) {\n\t        return locale || 'en-US';\n\t    }\n\t    /**\n\t     * This module includes the providers of \\@angular/core that are needed\n\t     * to bootstrap components via `ApplicationRef`.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var ApplicationModule = (function () {\n\t        function ApplicationModule() {\n\t        }\n\t        ApplicationModule.decorators = [\n\t            { type: NgModule, args: [{\n\t                        providers: [\n\t                            ApplicationRef_,\n\t                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n\t                            ApplicationInitStatus,\n\t                            Compiler,\n\t                            APP_ID_RANDOM_PROVIDER,\n\t                            ViewUtils,\n\t                            AnimationQueue,\n\t                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n\t                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n\t                            {\n\t                                provide: LOCALE_ID,\n\t                                useFactory: _localeFactory,\n\t                                deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n\t                            },\n\t                        ]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationModule.ctorParameters = function () { return []; };\n\t        return ApplicationModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n\t    var /** @type {?} */ ANY_STATE = '*';\n\t    var /** @type {?} */ DEFAULT_STATE = '*';\n\t    var /** @type {?} */ EMPTY_STATE = 'void';\n\t\n\t    var AnimationGroupPlayer = (function () {\n\t        /**\n\t         * @param {?} _players\n\t         */\n\t        function AnimationGroupPlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            var count = 0;\n\t            var total = this._players.length;\n\t            if (total == 0) {\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else {\n\t                this._players.forEach(function (player) {\n\t                    player.parentPlayer = _this;\n\t                    player.onDone(function () {\n\t                        if (++count >= total) {\n\t                            _this._onFinish();\n\t                        }\n\t                    });\n\t                });\n\t            }\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._players.forEach(function (player) { return player.play(); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._onFinish();\n\t                this._players.forEach(function (player) { return player.destroy(); });\n\t                this._destroyed = true;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.reset = function () {\n\t            this._players.forEach(function (player) { return player.reset(); });\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.setPosition = function (p) {\n\t            this._players.forEach(function (player) { player.setPosition(p); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationGroupPlayer.prototype.getPosition = function () {\n\t            var /** @type {?} */ min = 0;\n\t            this._players.forEach(function (player) {\n\t                var /** @type {?} */ p = player.getPosition();\n\t                min = Math.min(p, min);\n\t            });\n\t            return min;\n\t        };\n\t        Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._players; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationGroupPlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * `AnimationKeyframe` consists of a series of styles (contained within {\\@link AnimationStyles\n\t     * `AnimationStyles`})\n\t     * and an offset value indicating when those styles are applied within the `duration/delay/easing`\n\t     * timings.\n\t     * `AnimationKeyframe` is mostly an internal class which is designed to be used alongside {\\@link\n\t     * Renderer#animate-anchor `Renderer.animate`}.\n\t     *\n\t     * \\@experimental Animation support is experimental\n\t     */\n\t    var AnimationKeyframe = (function () {\n\t        /**\n\t         * @param {?} offset\n\t         * @param {?} styles\n\t         */\n\t        function AnimationKeyframe(offset, styles) {\n\t            this.offset = offset;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationKeyframe;\n\t    }());\n\t\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationPlayer = (function () {\n\t        function AnimationPlayer() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.onDone = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.onStart = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.init = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.hasStarted = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.play = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.pause = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.restart = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.finish = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.destroy = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.reset = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.setPosition = function (p) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AnimationPlayer.prototype.getPosition = function () { };\n\t        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            /**\n\t             * @param {?} player\n\t             * @return {?}\n\t             */\n\t            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationPlayer;\n\t    }());\n\t    var NoOpAnimationPlayer = (function () {\n\t        function NoOpAnimationPlayer() {\n\t            var _this = this;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            scheduleMicroTask(function () { return _this._onFinish(); });\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype._onFinish = function () {\n\t            this._onDoneFns.forEach(function (fn) { return fn(); });\n\t            this._onDoneFns = [];\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.init = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.play = function () {\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t            }\n\t            this._started = true;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.pause = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.restart = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.destroy = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.reset = function () { };\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.setPosition = function (p) { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n\t        return NoOpAnimationPlayer;\n\t    }());\n\t\n\t    var AnimationSequencePlayer = (function () {\n\t        /**\n\t         * @param {?} _players\n\t         */\n\t        function AnimationSequencePlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._currentIndex = 0;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            this._players.forEach(function (player) { player.parentPlayer = _this; });\n\t            this._onNext(false);\n\t        }\n\t        /**\n\t         * @param {?} start\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype._onNext = function (start) {\n\t            var _this = this;\n\t            if (this._finished)\n\t                return;\n\t            if (this._players.length == 0) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else if (this._currentIndex >= this._players.length) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                this._onFinish();\n\t            }\n\t            else {\n\t                var /** @type {?} */ player = this._players[this._currentIndex++];\n\t                player.onDone(function () { return _this._onNext(true); });\n\t                this._activePlayer = player;\n\t                if (start) {\n\t                    player.play();\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._activePlayer.play();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.restart = function () {\n\t            this.reset();\n\t            if (this._players.length > 0) {\n\t                this._players[0].restart();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.reset = function () {\n\t            this._players.forEach(function (player) { return player.reset(); });\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._onFinish();\n\t                this._players.forEach(function (player) { return player.destroy(); });\n\t                this._destroyed = true;\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.setPosition = function (p) { this._players[0].setPosition(p); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n\t        Object.defineProperty(AnimationSequencePlayer.prototype, \"players\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._players; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationSequencePlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$13 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var /** @type {?} */ AUTO_STYLE = '*';\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link trigger trigger\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationEntryMetadata = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} definitions\n\t         */\n\t        function AnimationEntryMetadata(name, definitions) {\n\t            this.name = name;\n\t            this.definitions = definitions;\n\t        }\n\t        return AnimationEntryMetadata;\n\t    }());\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationStateMetadata = (function () {\n\t        function AnimationStateMetadata() {\n\t        }\n\t        return AnimationStateMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link state state animation\n\t     * function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateDeclarationMetadata = (function (_super) {\n\t        __extends$13(AnimationStateDeclarationMetadata, _super);\n\t        /**\n\t         * @param {?} stateNameExpr\n\t         * @param {?} styles\n\t         */\n\t        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n\t            _super.call(this);\n\t            this.stateNameExpr = stateNameExpr;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStateDeclarationMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the\n\t     * {\\@link transition transition animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateTransitionMetadata = (function (_super) {\n\t        __extends$13(AnimationStateTransitionMetadata, _super);\n\t        /**\n\t         * @param {?} stateChangeExpr\n\t         * @param {?} steps\n\t         */\n\t        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n\t            _super.call(this);\n\t            this.stateChangeExpr = stateChangeExpr;\n\t            this.steps = steps;\n\t        }\n\t        return AnimationStateTransitionMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationMetadata = (function () {\n\t        function AnimationMetadata() {\n\t        }\n\t        return AnimationMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link keyframes keyframes\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationKeyframesSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n\t        /**\n\t         * @param {?} steps\n\t         */\n\t        function AnimationKeyframesSequenceMetadata(steps) {\n\t            _super.call(this);\n\t            this.steps = steps;\n\t        }\n\t        return AnimationKeyframesSequenceMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link style style animation\n\t     * function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationStyleMetadata = (function (_super) {\n\t        __extends$13(AnimationStyleMetadata, _super);\n\t        /**\n\t         * @param {?} styles\n\t         * @param {?=} offset\n\t         */\n\t        function AnimationStyleMetadata(styles, offset) {\n\t            if (offset === void 0) { offset = null; }\n\t            _super.call(this);\n\t            this.styles = styles;\n\t            this.offset = offset;\n\t        }\n\t        return AnimationStyleMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link animate animate\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationAnimateMetadata = (function (_super) {\n\t        __extends$13(AnimationAnimateMetadata, _super);\n\t        /**\n\t         * @param {?} timings\n\t         * @param {?} styles\n\t         */\n\t        function AnimationAnimateMetadata(timings, styles) {\n\t            _super.call(this);\n\t            this.timings = timings;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationAnimateMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * \\@experimental Animation support is experimental.\n\t     * @abstract\n\t     */\n\t    var AnimationWithStepsMetadata = (function (_super) {\n\t        __extends$13(AnimationWithStepsMetadata, _super);\n\t        function AnimationWithStepsMetadata() {\n\t            _super.call(this);\n\t        }\n\t        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationWithStepsMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link sequence sequence\n\t     * animation function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationSequenceMetadata, _super);\n\t        /**\n\t         * @param {?} _steps\n\t         */\n\t        function AnimationSequenceMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationSequenceMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {\\@link group group animation\n\t     * function} is called.\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationGroupMetadata = (function (_super) {\n\t        __extends$13(AnimationGroupMetadata, _super);\n\t        /**\n\t         * @param {?} _steps\n\t         */\n\t        function AnimationGroupMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationGroupMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n\t     * amount of\n\t     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n\t     * used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link transition\n\t     * transition}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `animate` function accepts two input parameters: `timing` and `styles`:\n\t     *\n\t     * - `timing` is a string based value that can be a combination of a duration with optional\n\t     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n\t     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n\t     * delay=100, easing=ease-out`.\n\t     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n\t     * form.\n\t     * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n\t     * keyframes keyframes}.\n\t     * If left empty then the styles from the destination state will be collected and used (this is\n\t     * useful when\n\t     * describing an animation step that will complete an animation by {\\@link\n\t     * transition#the-final-animate-call animating to the final state}).\n\t     *\n\t     * ```typescript\n\t     * // various functions for specifying timing data\n\t     * animate(500, style(...))\n\t     * animate(\"1s\", style(...))\n\t     * animate(\"100ms 0.5s\", style(...))\n\t     * animate(\"5s ease\", style(...))\n\t     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n\t     *\n\t     * // either style() of keyframes() can be used\n\t     * animate(500, style({ background: \"red\" }))\n\t     * animate(500, keyframes([\n\t     *   style({ background: \"blue\" })),\n\t     *   style({ background: \"red\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} timing\n\t     * @param {?=} styles\n\t     * @return {?}\n\t     */\n\t    function animate(timing, styles) {\n\t        if (styles === void 0) { styles = null; }\n\t        var /** @type {?} */ stylesEntry = styles;\n\t        if (!isPresent(stylesEntry)) {\n\t            var /** @type {?} */ EMPTY_STYLE = {};\n\t            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n\t        }\n\t        return new AnimationAnimateMetadata(timing, stylesEntry);\n\t    }\n\t    /**\n\t     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n\t     * are useful when a series of styles must be animated/closed off\n\t     * at different statrting/ending times.\n\t     *\n\t     * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once all of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `group` animation function can either consist\n\t     * of {\\@link style style} or {\\@link animate animate} function calls. Each call to `style()` or\n\t     * `animate()`\n\t     * within a group will be executed instantly (use {\\@link keyframes keyframes} or a\n\t     * {\\@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n\t     * time).\n\t     *\n\t     * ```typescript\n\t     * group([\n\t     *   animate(\"1s\", { background: \"black\" }))\n\t     *   animate(\"2s\", { color: \"white\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function group(steps) {\n\t        return new AnimationGroupMetadata(steps);\n\t    }\n\t    /**\n\t     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n\t     * by default when an array is passed as animation data into {\\@link transition transition}.)\n\t     *\n\t     * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once each of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * To perform animation styling in parallel with other animation steps then\n\t     * have a look at the {\\@link group group} animation function.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `sequence` animation function can either consist\n\t     * of {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply\n\t     * the\n\t     * provided styling data immediately while a call to `animate()` will apply its styling\n\t     * data over a given time depending on its timing data.\n\t     *\n\t     * ```typescript\n\t     * sequence([\n\t     *   style({ opacity: 0 })),\n\t     *   animate(\"1s\", { opacity: 1 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function sequence(steps) {\n\t        return new AnimationSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `style` declares a key/value object containing CSS properties/styles that can then\n\t     * be used for {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as\n\t     * styling data for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n\t     * pairs to be defined.\n\t     *\n\t     * ```typescript\n\t     * // string values are used for css properties\n\t     * style({ background: \"red\", color: \"blue\" })\n\t     *\n\t     * // numerical (pixel) values are also supported\n\t     * style({ width: 100, height: 0 })\n\t     * ```\n\t     *\n\t     * #### Auto-styles (using `*`)\n\t     *\n\t     * When an asterix (`*`) character is used as a value then it will be detected from the element\n\t     * being animated\n\t     * and applied as animation data when the animation starts.\n\t     *\n\t     * This feature proves useful for a state depending on layout and/or environment factors; in such\n\t     * cases\n\t     * the styles are calculated just before the animation starts.\n\t     *\n\t     * ```typescript\n\t     * // the steps below will animate from 0 to the\n\t     * // actual height of the element\n\t     * style({ height: 0 }),\n\t     * animate(\"1s\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} tokens\n\t     * @return {?}\n\t     */\n\t    function style(tokens) {\n\t        var /** @type {?} */ input;\n\t        var /** @type {?} */ offset = null;\n\t        if (typeof tokens === 'string') {\n\t            input = [(tokens)];\n\t        }\n\t        else {\n\t            if (Array.isArray(tokens)) {\n\t                input = (tokens);\n\t            }\n\t            else {\n\t                input = [(tokens)];\n\t            }\n\t            input.forEach(function (entry) {\n\t                var /** @type {?} */ entryOffset = ((entry) /** TODO #9100 */)['offset'];\n\t                if (isPresent(entryOffset)) {\n\t                    offset = offset == null ? parseFloat(entryOffset) : offset;\n\t                }\n\t            });\n\t        }\n\t        return new AnimationStyleMetadata(input, offset);\n\t    }\n\t    /**\n\t     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `state` declares an animation state within the given trigger. When a state is\n\t     * active within a component then its associated styles will persist on\n\t     * the element that the trigger is attached to (even when the animation ends).\n\t     *\n\t     * To animate between states, have a look at the animation {\\@link transition transition}\n\t     * DSL function. To register states to an animation trigger please have a look\n\t     * at the {\\@link trigger trigger} function.\n\t     *\n\t     * #### The `void` state\n\t     *\n\t     * The `void` state value is a reserved word that angular uses to determine when the element is not\n\t     * apart\n\t     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n\t     * associated element\n\t     * is void).\n\t     *\n\t     * #### The `*` (default) state\n\t     *\n\t     * The `*` state (when styled) is a fallback state that will be used if\n\t     * the state that is being animated is not declared within the trigger.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `state` will declare an animation state with its associated styles\n\t     * within the given trigger.\n\t     *\n\t     * - `stateNameExpr` can be one or more state names separated by commas.\n\t     * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n\t     * the state\n\t     * has been reached.\n\t     *\n\t     * ```typescript\n\t     * // \"void\" is a reserved name for a state and is used to represent\n\t     * // the state in which an element is detached from from the application.\n\t     * state(\"void\", style({ height: 0 }))\n\t     *\n\t     * // user-defined states\n\t     * state(\"closed\", style({ height: 0 }))\n\t     * state(\"open, visible\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} stateNameExpr\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function state(stateNameExpr, styles) {\n\t        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n\t    }\n\t    /**\n\t     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n\t     * by an `offset` value.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n\t     * animation function. Instead of applying animations from where they are\n\t     * currently to their destination, keyframes can describe how each style entry is applied\n\t     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n\t     *\n\t     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n\t     * what percentage of the animate time the styles will be applied.\n\t     *\n\t     * ```typescript\n\t     * // the provided offset values describe when each backgroundColor value is applied.\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\", offset: 0 }),\n\t     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n\t     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n\t     *   style({ backgroundColor: \"black\", offset: 1 })\n\t     * ]))\n\t     * ```\n\t     *\n\t     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n\t     * will\n\t     * be calculated automatically.\n\t     *\n\t     * ```typescript\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\" }) // offset = 0\n\t     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n\t     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n\t     *   style({ backgroundColor: \"black\" }) // offset = 1\n\t     * ]))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function keyframes(steps) {\n\t        return new AnimationKeyframesSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n\t     * provided\n\t     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n\t     * which consists\n\t     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n\t     *\n\t     * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n\t     * to animate to\n\t     * a state value and persist its styles then one or more {\\@link state animation states} is expected\n\t     * to be defined.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n\t     * what the\n\t     * previous state is and what the current state has become. In other words, if a transition is\n\t     * defined that\n\t     * matches the old/current state criteria then the associated animation will be triggered.\n\t     *\n\t     * ```typescript\n\t     * // all transition/state changes are defined within an animation trigger\n\t     * trigger(\"myAnimationTrigger\", [\n\t     *   // if a state is defined then its styles will be persisted when the\n\t     *   // animation has fully completed itself\n\t     *   state(\"on\", style({ background: \"green\" })),\n\t     *   state(\"off\", style({ background: \"grey\" })),\n\t     *\n\t     *   // a transition animation that will be kicked off when the state value\n\t     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n\t     *   transition(\"on => off\", animate(500)),\n\t     *\n\t     *   // it is also possible to do run the same animation for both directions\n\t     *   transition(\"on <=> off\", animate(500)),\n\t     *\n\t     *   // or to define multiple states pairs separated by commas\n\t     *   transition(\"on => off, off => void\", animate(500)),\n\t     *\n\t     *   // this is a catch-all state change for when an element is inserted into\n\t     *   // the page and the destination state is unknown\n\t     *   transition(\"void => *\", [\n\t     *     style({ opacity: 0 }),\n\t     *     animate(500)\n\t     *   ]),\n\t     *\n\t     *   // this will capture a state change between any states\n\t     *   transition(\"* => *\", animate(\"1s 0s\")),\n\t     * ])\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * #### The final `animate` call\n\t     *\n\t     * If the final step within the transition steps is a call to `animate()` that **only**\n\t     * uses a timing value with **no style data** then it will be automatically used as the final\n\t     * animation\n\t     * arc for the element to animate itself to the final state. This involves an automatic mix of\n\t     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n\t     * applied state to be presented correctly.\n\t     *\n\t     * ```\n\t     * // start off by hiding the element, but make sure that it animates properly to whatever state\n\t     * // is currently active for \"myAnimationTrigger\"\n\t     * transition(\"void => *\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500)\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Transition Aliases (`:enter` and `:leave`)\n\t     *\n\t     * Given that enter (insertion) and leave (removal) animations are so common,\n\t     * the `transition` function accepts both `:enter` and `:leave` values which\n\t     * are aliases for the `void => *` and `* => void` state changes.\n\t     *\n\t     * ```\n\t     * transition(\":enter\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500, style({ opacity: 1 }))\n\t     * ])\n\t     * transition(\":leave\", [\n\t     *   animate(500, style({ opacity: 0 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} stateChangeExpr\n\t     * @param {?} steps\n\t     * @return {?}\n\t     */\n\t    function transition(stateChangeExpr, steps) {\n\t        var /** @type {?} */ animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n\t        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n\t    }\n\t    /**\n\t     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {\\@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n\t     * transition transition}\n\t     * entries that will be evaluated when the expression bound to the trigger changes.\n\t     *\n\t     * Triggers are registered within the component annotation data under the\n\t     * {\\@link Component#animations-anchor animations section}. An animation trigger can\n\t     * be placed on an element within a template by referencing the name of the\n\t     * trigger followed by the expression value that the trigger is bound to\n\t     * (in the form of `[\\@triggerName]=\"expression\"`.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `trigger` will create an animation trigger reference based on the provided `name` value.\n\t     * The provided `animation` value is expected to be an array consisting of {\\@link state state} and\n\t     * {\\@link transition transition}\n\t     * declarations.\n\t     *\n\t     * ```typescript\n\t     * \\@Component({\n\t     *   selector: 'my-component',\n\t     *   templateUrl: 'my-component-tpl.html',\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *       state(...),\n\t     *       state(...),\n\t     *       transition(...),\n\t     *       transition(...)\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   myStatusExp = \"something\";\n\t     * }\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     * @param {?} name\n\t     * @param {?} animation\n\t     * @return {?}\n\t     */\n\t    function trigger(name, animation) {\n\t        return new AnimationEntryMetadata(name, animation);\n\t    }\n\t\n\t    /**\n\t     * @param {?} previousStyles\n\t     * @param {?} newStyles\n\t     * @param {?=} nullValue\n\t     * @return {?}\n\t     */\n\t    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n\t        if (nullValue === void 0) { nullValue = null; }\n\t        var /** @type {?} */ finalStyles = {};\n\t        Object.keys(newStyles).forEach(function (prop) {\n\t            var /** @type {?} */ value = newStyles[prop];\n\t            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n\t        });\n\t        Object.keys(previousStyles).forEach(function (prop) {\n\t            if (!isPresent(finalStyles[prop])) {\n\t                finalStyles[prop] = nullValue;\n\t            }\n\t        });\n\t        return finalStyles;\n\t    }\n\t    /**\n\t     * @param {?} collectedStyles\n\t     * @param {?} finalStateStyles\n\t     * @param {?} keyframes\n\t     * @return {?}\n\t     */\n\t    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n\t        var /** @type {?} */ limit = keyframes.length - 1;\n\t        var /** @type {?} */ firstKeyframe = keyframes[0];\n\t        // phase 1: copy all the styles from the first keyframe into the lookup map\n\t        var /** @type {?} */ flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n\t        var /** @type {?} */ extraFirstKeyframeStyles = {};\n\t        var /** @type {?} */ hasExtraFirstStyles = false;\n\t        Object.keys(collectedStyles).forEach(function (prop) {\n\t            var /** @type {?} */ value = (collectedStyles[prop]);\n\t            // if the style is already defined in the first keyframe then\n\t            // we do not replace it.\n\t            if (!flatenedFirstKeyframeStyles[prop]) {\n\t                flatenedFirstKeyframeStyles[prop] = value;\n\t                extraFirstKeyframeStyles[prop] = value;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        var /** @type {?} */ keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n\t        // phase 2: normalize the final keyframe\n\t        var /** @type {?} */ finalKeyframe = keyframes[limit];\n\t        finalKeyframe.styles.styles.unshift(finalStateStyles);\n\t        var /** @type {?} */ flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n\t        var /** @type {?} */ extraFinalKeyframeStyles = {};\n\t        var /** @type {?} */ hasExtraFinalStyles = false;\n\t        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n\t                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFinalStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFinalStyles) {\n\t            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n\t        }\n\t        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n\t                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFirstStyles) {\n\t            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n\t        }\n\t        collectAndResolveStyles(collectedStyles, [finalStateStyles]);\n\t        return keyframes;\n\t    }\n\t    /**\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function clearStyles(styles) {\n\t        var /** @type {?} */ finalStyles = {};\n\t        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n\t        return finalStyles;\n\t    }\n\t    /**\n\t     * @param {?} collection\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function collectAndResolveStyles(collection, styles) {\n\t        return styles.map(function (entry) {\n\t            var /** @type {?} */ stylesObj = {};\n\t            Object.keys(entry).forEach(function (prop) {\n\t                var /** @type {?} */ value = entry[prop];\n\t                if (value == FILL_STYLE_FLAG) {\n\t                    value = collection[prop];\n\t                    if (!isPresent(value)) {\n\t                        value = AUTO_STYLE;\n\t                    }\n\t                }\n\t                collection[prop] = value;\n\t                stylesObj[prop] = value;\n\t            });\n\t            return stylesObj;\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} element\n\t     * @param {?} renderer\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function renderStyles(element, renderer, styles) {\n\t        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n\t    }\n\t    /**\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function flattenStyles(styles) {\n\t        var /** @type {?} */ finalStyles = {};\n\t        styles.forEach(function (entry) {\n\t            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = (entry[prop]); });\n\t        });\n\t        return finalStyles;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * `AnimationStyles` consists of a collection of key/value maps containing CSS-based style data\n\t     * that can either be used as initial styling data or apart of a series of keyframes within an\n\t     * animation.\n\t     * This class is mostly internal, and it is designed to be used alongside\n\t     * {\\@link AnimationKeyframe `AnimationKeyframe`} and {\\@link Renderer#animate-anchor\n\t     * `Renderer.animate`}.\n\t     *\n\t     * \\@experimental Animation support is experimental\n\t     */\n\t    var AnimationStyles = (function () {\n\t        /**\n\t         * @param {?} styles\n\t         */\n\t        function AnimationStyles(styles) {\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStyles;\n\t    }());\n\t\n\t    /**\n\t     * An instance of this class is returned as an event parameter when an animation\n\t     * callback is captured for an animation either during the start or done phase.\n\t     *\n\t     * ```typescript\n\t     * \\@Component({\n\t     *   host: {\n\t     *     '[\\@myAnimationTrigger]': 'someExpression',\n\t     *     '(\\@myAnimationTrigger.start)': 'captureStartEvent($event)',\n\t     *     '(\\@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n\t     *   },\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *        // ...\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   someExpression: any = false;\n\t     *   captureStartEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     *\n\t     *   captureDoneEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * \\@experimental Animation support is experimental.\n\t     */\n\t    var AnimationTransitionEvent = (function () {\n\t        /**\n\t         * @param {?} __0\n\t         */\n\t        function AnimationTransitionEvent(_a) {\n\t            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n\t            this.fromState = fromState;\n\t            this.toState = toState;\n\t            this.totalTime = totalTime;\n\t            this.phaseName = phaseName;\n\t        }\n\t        return AnimationTransitionEvent;\n\t    }());\n\t\n\t    var AnimationTransition = (function () {\n\t        /**\n\t         * @param {?} _player\n\t         * @param {?} _fromState\n\t         * @param {?} _toState\n\t         * @param {?} _totalTime\n\t         */\n\t        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n\t            this._player = _player;\n\t            this._fromState = _fromState;\n\t            this._toState = _toState;\n\t            this._totalTime = _totalTime;\n\t        }\n\t        /**\n\t         * @param {?} phaseName\n\t         * @return {?}\n\t         */\n\t        AnimationTransition.prototype._createEvent = function (phaseName) {\n\t            return new AnimationTransitionEvent({\n\t                fromState: this._fromState,\n\t                toState: this._toState,\n\t                totalTime: this._totalTime,\n\t                phaseName: phaseName\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        AnimationTransition.prototype.onStart = function (callback) {\n\t            var _this = this;\n\t            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('start')); }, 'player.onStart'));\n\t            this._player.onStart(fn);\n\t        };\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        AnimationTransition.prototype.onDone = function (callback) {\n\t            var _this = this;\n\t            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('done')); }, 'player.onDone'));\n\t            this._player.onDone(fn);\n\t        };\n\t        return AnimationTransition;\n\t    }());\n\t\n\t    var DebugDomRootRenderer = (function () {\n\t        /**\n\t         * @param {?} _delegate\n\t         */\n\t        function DebugDomRootRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        /**\n\t         * @param {?} componentProto\n\t         * @return {?}\n\t         */\n\t        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n\t        };\n\t        return DebugDomRootRenderer;\n\t    }());\n\t    var DebugDomRenderer = (function () {\n\t        /**\n\t         * @param {?} _delegate\n\t         */\n\t        function DebugDomRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        /**\n\t         * @param {?} selectorOrNode\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var /** @type {?} */ nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugElement(nativeEl, null, debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} name\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n\t            var /** @type {?} */ nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n\t            debugEl.name = name;\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var /** @type {?} */ comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return comment;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} value\n\t         * @param {?=} debugInfo\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var /** @type {?} */ text = this._delegate.createText(parentElement, value, debugInfo);\n\t            var /** @type {?} */ debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return text;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            var /** @type {?} */ debugParent = getDebugNode(parentElement);\n\t            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n\t                var /** @type {?} */ debugElement_1 = debugParent;\n\t                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n\t            }\n\t            this._delegate.projectNodes(parentElement, nodes);\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n\t            var /** @type {?} */ debugNode = getDebugNode(node);\n\t            if (isPresent(debugNode)) {\n\t                var /** @type {?} */ debugParent = debugNode.parent;\n\t                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n\t                    var /** @type {?} */ debugViewRootNodes_1 = [];\n\t                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes_1.push(getDebugNode(rootNode)); });\n\t                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes_1);\n\t                }\n\t            }\n\t            this._delegate.attachViewAfter(node, viewRootNodes);\n\t        };\n\t        /**\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            viewRootNodes.forEach(function (node) {\n\t                var /** @type {?} */ debugNode = getDebugNode(node);\n\t                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n\t                    debugNode.parent.removeChild(debugNode);\n\t                }\n\t            });\n\t            this._delegate.detachView(viewRootNodes);\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @param {?} viewAllNodes\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            viewAllNodes = viewAllNodes || [];\n\t            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n\t            this._delegate.destroyView(hostElement, viewAllNodes);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl)) {\n\t                debugEl.listeners.push(new EventListener(name, callback));\n\t            }\n\t            return this._delegate.listen(renderElement, name, callback);\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._delegate.listenGlobal(target, name, callback);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.properties[propertyName] = propertyValue;\n\t            }\n\t            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} attributeName\n\t         * @param {?} attributeValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.attributes[attributeName] = attributeValue;\n\t            }\n\t            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} className\n\t         * @param {?} isAdd\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.classes[className] = isAdd;\n\t            }\n\t            this._delegate.setElementClass(renderElement, className, isAdd);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.styles[styleName] = styleValue;\n\t            }\n\t            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} methodName\n\t         * @param {?=} args\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            this._delegate.invokeElementMethod(renderElement, methodName, args);\n\t        };\n\t        /**\n\t         * @param {?} renderNode\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n\t        };\n\t        return DebugDomRenderer;\n\t    }());\n\t\n\t    var ViewType = {};\n\t    ViewType.HOST = 0;\n\t    ViewType.COMPONENT = 1;\n\t    ViewType.EMBEDDED = 2;\n\t    ViewType[ViewType.HOST] = \"HOST\";\n\t    ViewType[ViewType.COMPONENT] = \"COMPONENT\";\n\t    ViewType[ViewType.EMBEDDED] = \"EMBEDDED\";\n\t\n\t    var StaticNodeDebugInfo = (function () {\n\t        /**\n\t         * @param {?} providerTokens\n\t         * @param {?} componentToken\n\t         * @param {?} refTokens\n\t         */\n\t        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n\t            this.providerTokens = providerTokens;\n\t            this.componentToken = componentToken;\n\t            this.refTokens = refTokens;\n\t        }\n\t        return StaticNodeDebugInfo;\n\t    }());\n\t    var DebugContext = (function () {\n\t        /**\n\t         * @param {?} _view\n\t         * @param {?} _nodeIndex\n\t         * @param {?} _tplRow\n\t         * @param {?} _tplCol\n\t         */\n\t        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._tplRow = _tplRow;\n\t            this._tplCol = _tplCol;\n\t        }\n\t        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"context\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"component\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n\t                    return this.injector.get(staticNodeInfo.componentToken);\n\t                }\n\t                return null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ componentView = this._view;\n\t                while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n\t                    componentView = (componentView.parentView);\n\t                }\n\t                return componentView.parentElement;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._view.injector(this._nodeIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n\t                    return this._view.allNodes[this._nodeIndex];\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n\t                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"source\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"references\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var _this = this;\n\t                var /** @type {?} */ varValues = {};\n\t                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo)) {\n\t                    var /** @type {?} */ refs_1 = staticNodeInfo.refTokens;\n\t                    Object.keys(refs_1).forEach(function (refName) {\n\t                        var /** @type {?} */ refToken = refs_1[refName];\n\t                        var /** @type {?} */ varValue;\n\t                        if (isBlank(refToken)) {\n\t                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n\t                        }\n\t                        else {\n\t                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n\t                        }\n\t                        varValues[refName] = varValue;\n\t                    });\n\t                }\n\t                return varValues;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugContext;\n\t    }());\n\t\n\t    var ViewAnimationMap = (function () {\n\t        function ViewAnimationMap() {\n\t            this._map = new Map();\n\t            this._allPlayers = [];\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.find = function (element, animationName) {\n\t            var /** @type {?} */ playersByAnimation = this._map.get(element);\n\t            if (isPresent(playersByAnimation)) {\n\t                return playersByAnimation[animationName];\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n\t            var /** @type {?} */ el = this._map.get(element);\n\t            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @param {?} player\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n\t            var /** @type {?} */ playersByAnimation = this._map.get(element);\n\t            if (!isPresent(playersByAnimation)) {\n\t                playersByAnimation = {};\n\t            }\n\t            var /** @type {?} */ existingEntry = playersByAnimation[animationName];\n\t            if (isPresent(existingEntry)) {\n\t                this.remove(element, animationName);\n\t            }\n\t            playersByAnimation[animationName] = player;\n\t            this._allPlayers.push(player);\n\t            this._map.set(element, playersByAnimation);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @param {?=} targetPlayer\n\t         * @return {?}\n\t         */\n\t        ViewAnimationMap.prototype.remove = function (element, animationName, targetPlayer) {\n\t            if (targetPlayer === void 0) { targetPlayer = null; }\n\t            var /** @type {?} */ playersByAnimation = this._map.get(element);\n\t            if (playersByAnimation) {\n\t                var /** @type {?} */ player = playersByAnimation[animationName];\n\t                if (!targetPlayer || player === targetPlayer) {\n\t                    delete playersByAnimation[animationName];\n\t                    var /** @type {?} */ index = this._allPlayers.indexOf(player);\n\t                    this._allPlayers.splice(index, 1);\n\t                    if (Object.keys(playersByAnimation).length === 0) {\n\t                        this._map.delete(element);\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        return ViewAnimationMap;\n\t    }());\n\t\n\t    var AnimationViewContext = (function () {\n\t        /**\n\t         * @param {?} _animationQueue\n\t         */\n\t        function AnimationViewContext(_animationQueue) {\n\t            this._animationQueue = _animationQueue;\n\t            this._players = new ViewAnimationMap();\n\t        }\n\t        /**\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n\t            var /** @type {?} */ activeAnimationPlayers = this._players.getAllPlayers();\n\t            // we check for the length to avoid having GroupAnimationPlayer\n\t            // issue an unnecessary microtask when zero players are passed in\n\t            if (activeAnimationPlayers.length) {\n\t                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n\t            }\n\t            else {\n\t                callback();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} animationName\n\t         * @param {?} player\n\t         * @return {?}\n\t         */\n\t        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n\t            var _this = this;\n\t            this._animationQueue.enqueue(player);\n\t            this._players.set(element, animationName, player);\n\t            player.onDone(function () { return _this._players.remove(element, animationName, player); });\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?=} animationName\n\t         * @return {?}\n\t         */\n\t        AnimationViewContext.prototype.getAnimationPlayers = function (element, animationName) {\n\t            if (animationName === void 0) { animationName = null; }\n\t            var /** @type {?} */ players = [];\n\t            if (animationName) {\n\t                var /** @type {?} */ currentPlayer = this._players.find(element, animationName);\n\t                if (currentPlayer) {\n\t                    _recursePlayers(currentPlayer, players);\n\t                }\n\t            }\n\t            else {\n\t                this._players.findAllPlayersByElement(element).forEach(function (player) { return _recursePlayers(player, players); });\n\t            }\n\t            return players;\n\t        };\n\t        return AnimationViewContext;\n\t    }());\n\t    /**\n\t     * @param {?} player\n\t     * @param {?} collectedPlayers\n\t     * @return {?}\n\t     */\n\t    function _recursePlayers(player, collectedPlayers) {\n\t        if ((player instanceof AnimationGroupPlayer) || (player instanceof AnimationSequencePlayer)) {\n\t            player.players.forEach(function (player) { return _recursePlayers(player, collectedPlayers); });\n\t        }\n\t        else {\n\t            collectedPlayers.push(player);\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$15 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var ElementInjector = (function (_super) {\n\t        __extends$15(ElementInjector, _super);\n\t        /**\n\t         * @param {?} _view\n\t         * @param {?} _nodeIndex\n\t         */\n\t        function ElementInjector(_view, _nodeIndex) {\n\t            _super.call(this);\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t        }\n\t        /**\n\t         * @param {?} token\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        ElementInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n\t        };\n\t        return ElementInjector;\n\t    }(Injector));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$14 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n\t    /**\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ EMPTY_CONTEXT = new Object();\n\t    var /** @type {?} */ UNDEFINED$1 = new Object();\n\t    /**\n\t     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n\t     *\n\t     * @abstract\n\t     */\n\t    var AppView = (function () {\n\t        /**\n\t         * @param {?} clazz\n\t         * @param {?} componentType\n\t         * @param {?} type\n\t         * @param {?} viewUtils\n\t         * @param {?} parentView\n\t         * @param {?} parentIndex\n\t         * @param {?} parentElement\n\t         * @param {?} cdMode\n\t         * @param {?=} declaredViewContainer\n\t         */\n\t        function AppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentElement, cdMode, declaredViewContainer) {\n\t            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n\t            this.clazz = clazz;\n\t            this.componentType = componentType;\n\t            this.type = type;\n\t            this.viewUtils = viewUtils;\n\t            this.parentView = parentView;\n\t            this.parentIndex = parentIndex;\n\t            this.parentElement = parentElement;\n\t            this.cdMode = cdMode;\n\t            this.declaredViewContainer = declaredViewContainer;\n\t            this.numberOfChecks = 0;\n\t            this.ref = new ViewRef_(this, viewUtils.animationQueue);\n\t            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n\t                this.renderer = viewUtils.renderComponent(componentType);\n\t            }\n\t            else {\n\t                this.renderer = parentView.renderer;\n\t            }\n\t            this._directRenderer = this.renderer.directRenderer;\n\t        }\n\t        Object.defineProperty(AppView.prototype, \"animationContext\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                if (!this._animationContext) {\n\t                    this._animationContext = new AnimationViewContext(this.viewUtils.animationQueue);\n\t                }\n\t                return this._animationContext;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"destroyed\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.create = function (context) {\n\t            this.context = context;\n\t            return this.createInternal(null);\n\t        };\n\t        /**\n\t         * @param {?} rootSelectorOrNode\n\t         * @param {?} hostInjector\n\t         * @param {?} projectableNodes\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.createHostView = function (rootSelectorOrNode, hostInjector, projectableNodes) {\n\t            this.context = (EMPTY_CONTEXT);\n\t            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n\t            this._hostInjector = hostInjector;\n\t            this._hostProjectableNodes = projectableNodes;\n\t            return this.createInternal(rootSelectorOrNode);\n\t        };\n\t        /**\n\t         * Overwritten by implementations.\n\t         * Returns the ComponentRef for the host element for ViewType.HOST.\n\t         * @param {?} rootSelectorOrNode\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n\t        /**\n\t         * Overwritten by implementations.\n\t         * @param {?} templateNodeIndex\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.createEmbeddedViewInternal = function (templateNodeIndex) { return null; };\n\t        /**\n\t         * @param {?} lastRootNode\n\t         * @param {?} allNodes\n\t         * @param {?} disposables\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.init = function (lastRootNode, allNodes, disposables) {\n\t            this.lastRootNode = lastRootNode;\n\t            this.allNodes = allNodes;\n\t            this.disposables = disposables;\n\t            if (this.type === ViewType.COMPONENT) {\n\t                this.dirtyParentQueriesInternal();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} token\n\t         * @param {?} nodeIndex\n\t         * @param {?=} notFoundValue\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            var /** @type {?} */ result = UNDEFINED$1;\n\t            var /** @type {?} */ view = this;\n\t            while (result === UNDEFINED$1) {\n\t                if (isPresent(nodeIndex)) {\n\t                    result = view.injectorGetInternal(token, nodeIndex, UNDEFINED$1);\n\t                }\n\t                if (result === UNDEFINED$1 && view.type === ViewType.HOST) {\n\t                    result = view._hostInjector.get(token, notFoundValue);\n\t                }\n\t                nodeIndex = view.parentIndex;\n\t                view = view.parentView;\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} token\n\t         * @param {?} nodeIndex\n\t         * @param {?} notFoundResult\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n\t            return notFoundResult;\n\t        };\n\t        /**\n\t         * @param {?} nodeIndex\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.injector = function (nodeIndex) { return new ElementInjector(this, nodeIndex); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detachAndDestroy = function () {\n\t            if (this.viewContainer) {\n\t                this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n\t            }\n\t            else if (this.appRef) {\n\t                this.appRef.detachView(this.ref);\n\t            }\n\t            else if (this._hasExternalHostElement) {\n\t                this.detach();\n\t            }\n\t            this.destroy();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.destroy = function () {\n\t            var _this = this;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                return;\n\t            }\n\t            var /** @type {?} */ hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n\t            if (this.disposables) {\n\t                for (var /** @type {?} */ i = 0; i < this.disposables.length; i++) {\n\t                    this.disposables[i]();\n\t                }\n\t            }\n\t            this.destroyInternal();\n\t            this.dirtyParentQueriesInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n\t            }\n\t            else {\n\t                this.renderer.destroyView(hostElement, this.allNodes);\n\t            }\n\t            this.cdMode = ChangeDetectorStatus.Destroyed;\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.destroyInternal = function () { };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detachInternal = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detach = function () {\n\t            var _this = this;\n\t            this.detachInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this._renderDetach(); });\n\t            }\n\t            else {\n\t                this._renderDetach();\n\t            }\n\t            if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer &&\n\t                this.declaredViewContainer.projectedViews) {\n\t                var /** @type {?} */ projectedViews = this.declaredViewContainer.projectedViews;\n\t                var /** @type {?} */ index = projectedViews.indexOf(this);\n\t                // perf: pop is faster than splice!\n\t                if (index >= projectedViews.length - 1) {\n\t                    projectedViews.pop();\n\t                }\n\t                else {\n\t                    projectedViews.splice(index, 1);\n\t                }\n\t            }\n\t            this.appRef = null;\n\t            this.viewContainer = null;\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype._renderDetach = function () {\n\t            if (this._directRenderer) {\n\t                this.visitRootNodesInternal(this._directRenderer.remove, null);\n\t            }\n\t            else {\n\t                this.renderer.detachView(this.flatRootNodes);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} appRef\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.attachToAppRef = function (appRef) {\n\t            if (this.viewContainer) {\n\t                throw new Error('This view is already attached to a ViewContainer!');\n\t            }\n\t            this.appRef = appRef;\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} prevView\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.attachAfter = function (viewContainer, prevView) {\n\t            if (this.appRef) {\n\t                throw new Error('This view is already attached directly to the ApplicationRef!');\n\t            }\n\t            this._renderAttach(viewContainer, prevView);\n\t            this.viewContainer = viewContainer;\n\t            if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n\t                if (!this.declaredViewContainer.projectedViews) {\n\t                    this.declaredViewContainer.projectedViews = [];\n\t                }\n\t                this.declaredViewContainer.projectedViews.push(this);\n\t            }\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} prevView\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.moveAfter = function (viewContainer, prevView) {\n\t            this._renderAttach(viewContainer, prevView);\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} prevView\n\t         * @return {?}\n\t         */\n\t        AppView.prototype._renderAttach = function (viewContainer, prevView) {\n\t            var /** @type {?} */ prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n\t            if (this._directRenderer) {\n\t                var /** @type {?} */ nextSibling = this._directRenderer.nextSibling(prevNode);\n\t                if (nextSibling) {\n\t                    this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n\t                }\n\t                else {\n\t                    var /** @type {?} */ parentElement = this._directRenderer.parentElement(prevNode);\n\t                    if (parentElement) {\n\t                        this.visitRootNodesInternal(this._directRenderer.appendChild, parentElement);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n\t            }\n\t        };\n\t        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ nodes = [];\n\t                this.visitRootNodesInternal(addToArray, nodes);\n\t                return nodes;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} ngContentIndex\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.projectNodes = function (parentElement, ngContentIndex) {\n\t            if (this._directRenderer) {\n\t                this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n\t            }\n\t            else {\n\t                var /** @type {?} */ nodes = [];\n\t                this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n\t                this.renderer.projectNodes(parentElement, nodes);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} ngContentIndex\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.visitProjectedNodes = function (ngContentIndex, cb, c) {\n\t            switch (this.type) {\n\t                case ViewType.EMBEDDED:\n\t                    this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n\t                    break;\n\t                case ViewType.COMPONENT:\n\t                    if (this.parentView.type === ViewType.HOST) {\n\t                        var /** @type {?} */ nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n\t                        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t                            cb(nodes[i], c);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n\t                    }\n\t                    break;\n\t            }\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.visitRootNodesInternal = function (cb, c) { };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} nodeIndex\n\t         * @param {?} ngContentIndex\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, c) { };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.dirtyParentQueriesInternal = function () { };\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.internalDetectChanges = function (throwOnChange) {\n\t            if (this.cdMode !== ChangeDetectorStatus.Detached) {\n\t                this.detectChanges(throwOnChange);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detectChanges = function (throwOnChange) {\n\t            var /** @type {?} */ s = _scope_check(this.clazz);\n\t            if (this.cdMode === ChangeDetectorStatus.Checked ||\n\t                this.cdMode === ChangeDetectorStatus.Errored)\n\t                return;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                this.throwDestroyedError('detectChanges');\n\t            }\n\t            this.detectChangesInternal(throwOnChange);\n\t            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n\t                this.cdMode = ChangeDetectorStatus.Checked;\n\t            this.numberOfChecks++;\n\t            wtfLeave(s);\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.detectChangesInternal = function (throwOnChange) { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.markPathToRootAsCheckOnce = function () {\n\t            var /** @type {?} */ c = this;\n\t            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n\t                if (c.cdMode === ChangeDetectorStatus.Checked) {\n\t                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n\t                }\n\t                if (c.type === ViewType.COMPONENT) {\n\t                    c = c.parentView;\n\t                }\n\t                else {\n\t                    c = c.viewContainer ? c.viewContainer.parentView : null;\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.eventHandler = function (cb) {\n\t            return cb;\n\t        };\n\t        /**\n\t         * @param {?} details\n\t         * @return {?}\n\t         */\n\t        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n\t        return AppView;\n\t    }());\n\t    var DebugAppView = (function (_super) {\n\t        __extends$14(DebugAppView, _super);\n\t        /**\n\t         * @param {?} clazz\n\t         * @param {?} componentType\n\t         * @param {?} type\n\t         * @param {?} viewUtils\n\t         * @param {?} parentView\n\t         * @param {?} parentIndex\n\t         * @param {?} parentNode\n\t         * @param {?} cdMode\n\t         * @param {?} staticNodeDebugInfos\n\t         * @param {?=} declaredViewContainer\n\t         */\n\t        function DebugAppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, staticNodeDebugInfos, declaredViewContainer) {\n\t            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n\t            _super.call(this, clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, declaredViewContainer);\n\t            this.staticNodeDebugInfos = staticNodeDebugInfos;\n\t            this._currentDebugContext = null;\n\t        }\n\t        /**\n\t         * @param {?} context\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.create = function (context) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.create.call(this, context);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} rootSelectorOrNode\n\t         * @param {?} injector\n\t         * @param {?=} projectableNodes\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.createHostView = function (rootSelectorOrNode, injector, projectableNodes) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.createHostView.call(this, rootSelectorOrNode, injector, projectableNodes);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} token\n\t         * @param {?} nodeIndex\n\t         * @param {?=} notFoundResult\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.detach = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detach.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.destroy = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.destroy.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detectChanges.call(this, throwOnChange);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n\t        /**\n\t         * @param {?} nodeIndex\n\t         * @param {?} rowNum\n\t         * @param {?} colNum\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n\t            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n\t        };\n\t        /**\n\t         * @param {?} e\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype._rethrowWithContext = function (e) {\n\t            if (!(e instanceof ViewWrappedError)) {\n\t                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n\t                    this.cdMode = ChangeDetectorStatus.Errored;\n\t                }\n\t                if (isPresent(this._currentDebugContext)) {\n\t                    throw new ViewWrappedError(e, this._currentDebugContext);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        DebugAppView.prototype.eventHandler = function (cb) {\n\t            var _this = this;\n\t            var /** @type {?} */ superHandler = _super.prototype.eventHandler.call(this, cb);\n\t            return function (eventName, event) {\n\t                _this._resetDebug();\n\t                try {\n\t                    return superHandler.call(_this, eventName, event);\n\t                }\n\t                catch (e) {\n\t                    _this._rethrowWithContext(e);\n\t                    throw e;\n\t                }\n\t            };\n\t        };\n\t        return DebugAppView;\n\t    }(AppView));\n\t\n\t    /**\n\t     * A ViewContainer is created for elements that have a ViewContainerRef\n\t     * to keep track of the nested views.\n\t     */\n\t    var ViewContainer = (function () {\n\t        /**\n\t         * @param {?} index\n\t         * @param {?} parentIndex\n\t         * @param {?} parentView\n\t         * @param {?} nativeElement\n\t         */\n\t        function ViewContainer(index, parentIndex, parentView, nativeElement) {\n\t            this.index = index;\n\t            this.parentIndex = parentIndex;\n\t            this.parentView = parentView;\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        Object.defineProperty(ViewContainer.prototype, \"elementRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ElementRef(this.nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"vcRef\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return new ViewContainerRef_(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"parentInjector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.parentView.injector(this.parentIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"injector\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.parentView.injector(this.index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} throwOnChange\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.detectChangesInNestedViews = function (throwOnChange) {\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].detectChanges(throwOnChange);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.destroyNestedViews = function () {\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].destroy();\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} cb\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.visitNestedViewRootNodes = function (cb, c) {\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].visitRootNodesInternal(cb, c);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} nestedViewClass\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.mapNestedViews = function (nestedViewClass, callback) {\n\t            var /** @type {?} */ result = [];\n\t            if (this.nestedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n\t                    var /** @type {?} */ nestedView = this.nestedViews[i];\n\t                    if (nestedView.clazz === nestedViewClass) {\n\t                        result.push(callback(nestedView));\n\t                    }\n\t                }\n\t            }\n\t            if (this.projectedViews) {\n\t                for (var /** @type {?} */ i = 0; i < this.projectedViews.length; i++) {\n\t                    var /** @type {?} */ projectedView = this.projectedViews[i];\n\t                    if (projectedView.clazz === nestedViewClass) {\n\t                        result.push(callback(projectedView));\n\t                    }\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @param {?} currentIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.moveView = function (view, currentIndex) {\n\t            var /** @type {?} */ previousIndex = this.nestedViews.indexOf(view);\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var /** @type {?} */ nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            nestedViews.splice(previousIndex, 1);\n\t            nestedViews.splice(currentIndex, 0, view);\n\t            var /** @type {?} */ prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n\t            view.moveAfter(this, prevView);\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @param {?} viewIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.attachView = function (view, viewIndex) {\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var /** @type {?} */ nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            // perf: array.push is faster than array.splice!\n\t            if (viewIndex >= nestedViews.length) {\n\t                nestedViews.push(view);\n\t            }\n\t            else {\n\t                nestedViews.splice(viewIndex, 0, view);\n\t            }\n\t            var /** @type {?} */ prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n\t            view.attachAfter(this, prevView);\n\t        };\n\t        /**\n\t         * @param {?} viewIndex\n\t         * @return {?}\n\t         */\n\t        ViewContainer.prototype.detachView = function (viewIndex) {\n\t            var /** @type {?} */ view = this.nestedViews[viewIndex];\n\t            // perf: array.pop is faster than array.splice!\n\t            if (viewIndex >= this.nestedViews.length - 1) {\n\t                this.nestedViews.pop();\n\t            }\n\t            else {\n\t                this.nestedViews.splice(viewIndex, 1);\n\t            }\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            view.detach();\n\t            return view;\n\t        };\n\t        return ViewContainer;\n\t    }());\n\t\n\t    var /** @type {?} */ __core_private__ = {\n\t        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n\t        ChangeDetectorStatus: ChangeDetectorStatus,\n\t        constructDependencies: constructDependencies,\n\t        LifecycleHooks: LifecycleHooks,\n\t        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n\t        ReflectorReader: ReflectorReader,\n\t        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n\t        ComponentRef_: ComponentRef_,\n\t        ViewContainer: ViewContainer,\n\t        AppView: AppView,\n\t        DebugAppView: DebugAppView,\n\t        NgModuleInjector: NgModuleInjector,\n\t        registerModuleFactory: registerModuleFactory,\n\t        ViewType: ViewType,\n\t        view_utils: view_utils,\n\t        ViewMetadata: ViewMetadata,\n\t        DebugContext: DebugContext,\n\t        StaticNodeDebugInfo: StaticNodeDebugInfo,\n\t        devModeEqual: devModeEqual,\n\t        UNINITIALIZED: UNINITIALIZED,\n\t        ValueUnwrapper: ValueUnwrapper,\n\t        RenderDebugInfo: RenderDebugInfo,\n\t        TemplateRef_: TemplateRef_,\n\t        ReflectionCapabilities: ReflectionCapabilities,\n\t        makeDecorator: makeDecorator,\n\t        DebugDomRootRenderer: DebugDomRootRenderer,\n\t        Console: Console,\n\t        reflector: reflector,\n\t        Reflector: Reflector,\n\t        NoOpAnimationPlayer: NoOpAnimationPlayer,\n\t        AnimationPlayer: AnimationPlayer,\n\t        AnimationSequencePlayer: AnimationSequencePlayer,\n\t        AnimationGroupPlayer: AnimationGroupPlayer,\n\t        AnimationKeyframe: AnimationKeyframe,\n\t        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n\t        balanceAnimationKeyframes: balanceAnimationKeyframes,\n\t        flattenStyles: flattenStyles,\n\t        clearStyles: clearStyles,\n\t        renderStyles: renderStyles,\n\t        collectAndResolveStyles: collectAndResolveStyles,\n\t        APP_ID_RANDOM_PROVIDER: APP_ID_RANDOM_PROVIDER,\n\t        AnimationStyles: AnimationStyles,\n\t        ANY_STATE: ANY_STATE,\n\t        DEFAULT_STATE: DEFAULT_STATE,\n\t        EMPTY_STATE: EMPTY_STATE,\n\t        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n\t        ComponentStillLoadingError: ComponentStillLoadingError,\n\t        isPromise: isPromise,\n\t        isObservable: isObservable,\n\t        AnimationTransition: AnimationTransition\n\t    };\n\t\n\t    exports.createPlatform = createPlatform;\n\t    exports.assertPlatform = assertPlatform;\n\t    exports.destroyPlatform = destroyPlatform;\n\t    exports.getPlatform = getPlatform;\n\t    exports.PlatformRef = PlatformRef;\n\t    exports.ApplicationRef = ApplicationRef;\n\t    exports.enableProdMode = enableProdMode;\n\t    exports.isDevMode = isDevMode;\n\t    exports.createPlatformFactory = createPlatformFactory;\n\t    exports.NgProbeToken = NgProbeToken;\n\t    exports.APP_ID = APP_ID;\n\t    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n\t    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n\t    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n\t    exports.APP_INITIALIZER = APP_INITIALIZER;\n\t    exports.ApplicationInitStatus = ApplicationInitStatus;\n\t    exports.DebugElement = DebugElement;\n\t    exports.DebugNode = DebugNode;\n\t    exports.asNativeElements = asNativeElements;\n\t    exports.getDebugNode = getDebugNode;\n\t    exports.Testability = Testability;\n\t    exports.TestabilityRegistry = TestabilityRegistry;\n\t    exports.setTestabilityGetter = setTestabilityGetter;\n\t    exports.TRANSLATIONS = TRANSLATIONS;\n\t    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n\t    exports.LOCALE_ID = LOCALE_ID;\n\t    exports.ApplicationModule = ApplicationModule;\n\t    exports.wtfCreateScope = wtfCreateScope;\n\t    exports.wtfLeave = wtfLeave;\n\t    exports.wtfStartTimeRange = wtfStartTimeRange;\n\t    exports.wtfEndTimeRange = wtfEndTimeRange;\n\t    exports.Type = Type;\n\t    exports.EventEmitter = EventEmitter;\n\t    exports.ErrorHandler = ErrorHandler;\n\t    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n\t    exports.AnimationPlayer = AnimationPlayer;\n\t    exports.AnimationStyles = AnimationStyles;\n\t    exports.AnimationKeyframe = AnimationKeyframe;\n\t    exports.Sanitizer = Sanitizer;\n\t    exports.SecurityContext = SecurityContext;\n\t    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n\t    exports.Attribute = Attribute;\n\t    exports.ContentChild = ContentChild;\n\t    exports.ContentChildren = ContentChildren;\n\t    exports.Query = Query;\n\t    exports.ViewChild = ViewChild;\n\t    exports.ViewChildren = ViewChildren;\n\t    exports.Component = Component;\n\t    exports.Directive = Directive;\n\t    exports.HostBinding = HostBinding;\n\t    exports.HostListener = HostListener;\n\t    exports.Input = Input;\n\t    exports.Output = Output;\n\t    exports.Pipe = Pipe;\n\t    exports.AfterContentChecked = AfterContentChecked;\n\t    exports.AfterContentInit = AfterContentInit;\n\t    exports.AfterViewChecked = AfterViewChecked;\n\t    exports.AfterViewInit = AfterViewInit;\n\t    exports.DoCheck = DoCheck;\n\t    exports.OnChanges = OnChanges;\n\t    exports.OnDestroy = OnDestroy;\n\t    exports.OnInit = OnInit;\n\t    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n\t    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n\t    exports.NgModule = NgModule;\n\t    exports.ViewEncapsulation = ViewEncapsulation;\n\t    exports.Version = Version;\n\t    exports.VERSION = VERSION;\n\t    exports.Class = Class;\n\t    exports.forwardRef = forwardRef;\n\t    exports.resolveForwardRef = resolveForwardRef;\n\t    exports.Injector = Injector;\n\t    exports.ReflectiveInjector = ReflectiveInjector;\n\t    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n\t    exports.ReflectiveKey = ReflectiveKey;\n\t    exports.OpaqueToken = OpaqueToken;\n\t    exports.Inject = Inject;\n\t    exports.Optional = Optional;\n\t    exports.Injectable = Injectable;\n\t    exports.Self = Self;\n\t    exports.SkipSelf = SkipSelf;\n\t    exports.Host = Host;\n\t    exports.NgZone = NgZone;\n\t    exports.RenderComponentType = RenderComponentType;\n\t    exports.Renderer = Renderer;\n\t    exports.RootRenderer = RootRenderer;\n\t    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n\t    exports.Compiler = Compiler;\n\t    exports.CompilerFactory = CompilerFactory;\n\t    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n\t    exports.ComponentFactory = ComponentFactory;\n\t    exports.ComponentRef = ComponentRef;\n\t    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n\t    exports.ElementRef = ElementRef;\n\t    exports.NgModuleFactory = NgModuleFactory;\n\t    exports.NgModuleRef = NgModuleRef;\n\t    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n\t    exports.getModuleFactory = getModuleFactory;\n\t    exports.QueryList = QueryList;\n\t    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n\t    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n\t    exports.TemplateRef = TemplateRef;\n\t    exports.ViewContainerRef = ViewContainerRef;\n\t    exports.EmbeddedViewRef = EmbeddedViewRef;\n\t    exports.ViewRef = ViewRef;\n\t    exports.ChangeDetectionStrategy = ChangeDetectionStrategy;\n\t    exports.ChangeDetectorRef = ChangeDetectorRef;\n\t    exports.CollectionChangeRecord = CollectionChangeRecord;\n\t    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n\t    exports.IterableDiffers = IterableDiffers;\n\t    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n\t    exports.KeyValueDiffers = KeyValueDiffers;\n\t    exports.SimpleChange = SimpleChange;\n\t    exports.WrappedValue = WrappedValue;\n\t    exports.platformCore = platformCore;\n\t    exports.__core_private__ = __core_private__;\n\t    exports.AUTO_STYLE = AUTO_STYLE;\n\t    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n\t    exports.AnimationStateMetadata = AnimationStateMetadata;\n\t    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n\t    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n\t    exports.AnimationMetadata = AnimationMetadata;\n\t    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n\t    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n\t    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n\t    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n\t    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n\t    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n\t    exports.animate = animate;\n\t    exports.group = group;\n\t    exports.sequence = sequence;\n\t    exports.style = style;\n\t    exports.state = state;\n\t    exports.keyframes = keyframes;\n\t    exports.transition = transition;\n\t    exports.trigger = trigger;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(4);\n\tfunction getSymbolObservable(context) {\n\t    var $$observable;\n\t    var Symbol = context.Symbol;\n\t    if (typeof Symbol === 'function') {\n\t        if (Symbol.observable) {\n\t            $$observable = Symbol.observable;\n\t        }\n\t        else {\n\t            $$observable = Symbol('observable');\n\t            Symbol.observable = $$observable;\n\t        }\n\t    }\n\t    else {\n\t        $$observable = '@@observable';\n\t    }\n\t    return $$observable;\n\t}\n\texports.getSymbolObservable = getSymbolObservable;\n\texports.observable = getSymbolObservable(root_1.root);\n\t/**\n\t * @deprecated use observable instead\n\t */\n\texports.$$observable = exports.observable;\n\t//# sourceMappingURL=observable.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t// CommonJS / Node have global context exposed as \"global\" variable.\n\t// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n\t// the global \"global\" var for now.\n\tvar __window = typeof window !== 'undefined' && window;\n\tvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n\t    self instanceof WorkerGlobalScope && self;\n\tvar __global = typeof global !== 'undefined' && global;\n\tvar _root = __window || __global || __self;\n\texports.root = _root;\n\t// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n\t// This is needed when used with angular/tsickle which inserts a goog.module statement.\n\t// Wrap in IIFE\n\t(function () {\n\t    if (!_root) {\n\t        throw new Error('RxJS could not find any global context (window, self, global)');\n\t    }\n\t})();\n\t//# sourceMappingURL=root.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(6);\n\tvar Subscriber_1 = __webpack_require__(8);\n\tvar Subscription_1 = __webpack_require__(10);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(18);\n\tvar SubjectSubscription_1 = __webpack_require__(19);\n\tvar rxSubscriber_1 = __webpack_require__(17);\n\t/**\n\t * @class SubjectSubscriber<T>\n\t */\n\tvar SubjectSubscriber = (function (_super) {\n\t    __extends(SubjectSubscriber, _super);\n\t    function SubjectSubscriber(destination) {\n\t        _super.call(this, destination);\n\t        this.destination = destination;\n\t    }\n\t    return SubjectSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.SubjectSubscriber = SubjectSubscriber;\n\t/**\n\t * @class Subject<T>\n\t */\n\tvar Subject = (function (_super) {\n\t    __extends(Subject, _super);\n\t    function Subject() {\n\t        _super.call(this);\n\t        this.observers = [];\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this.hasError = false;\n\t        this.thrownError = null;\n\t    }\n\t    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n\t        return new SubjectSubscriber(this);\n\t    };\n\t    Subject.prototype.lift = function (operator) {\n\t        var subject = new AnonymousSubject(this, this);\n\t        subject.operator = operator;\n\t        return subject;\n\t    };\n\t    Subject.prototype.next = function (value) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        if (!this.isStopped) {\n\t            var observers = this.observers;\n\t            var len = observers.length;\n\t            var copy = observers.slice();\n\t            for (var i = 0; i < len; i++) {\n\t                copy[i].next(value);\n\t            }\n\t        }\n\t    };\n\t    Subject.prototype.error = function (err) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.hasError = true;\n\t        this.thrownError = err;\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].error(err);\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.complete = function () {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].complete();\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.unsubscribe = function () {\n\t        this.isStopped = true;\n\t        this.closed = true;\n\t        this.observers = null;\n\t    };\n\t    Subject.prototype._trySubscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else {\n\t            return _super.prototype._trySubscribe.call(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype._subscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else if (this.hasError) {\n\t            subscriber.error(this.thrownError);\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else if (this.isStopped) {\n\t            subscriber.complete();\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else {\n\t            this.observers.push(subscriber);\n\t            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype.asObservable = function () {\n\t        var observable = new Observable_1.Observable();\n\t        observable.source = this;\n\t        return observable;\n\t    };\n\t    Subject.create = function (destination, source) {\n\t        return new AnonymousSubject(destination, source);\n\t    };\n\t    return Subject;\n\t}(Observable_1.Observable));\n\texports.Subject = Subject;\n\t/**\n\t * @class AnonymousSubject<T>\n\t */\n\tvar AnonymousSubject = (function (_super) {\n\t    __extends(AnonymousSubject, _super);\n\t    function AnonymousSubject(destination, source) {\n\t        _super.call(this);\n\t        this.destination = destination;\n\t        this.source = source;\n\t    }\n\t    AnonymousSubject.prototype.next = function (value) {\n\t        var destination = this.destination;\n\t        if (destination && destination.next) {\n\t            destination.next(value);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.error = function (err) {\n\t        var destination = this.destination;\n\t        if (destination && destination.error) {\n\t            this.destination.error(err);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.complete = function () {\n\t        var destination = this.destination;\n\t        if (destination && destination.complete) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    AnonymousSubject.prototype._subscribe = function (subscriber) {\n\t        var source = this.source;\n\t        if (source) {\n\t            return this.source.subscribe(subscriber);\n\t        }\n\t        else {\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t    };\n\t    return AnonymousSubject;\n\t}(Subject));\n\texports.AnonymousSubject = AnonymousSubject;\n\t//# sourceMappingURL=Subject.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(4);\n\tvar toSubscriber_1 = __webpack_require__(7);\n\tvar observable_1 = __webpack_require__(3);\n\t/**\n\t * A representation of any set of values over any amount of time. This the most basic building block\n\t * of RxJS.\n\t *\n\t * @class Observable<T>\n\t */\n\tvar Observable = (function () {\n\t    /**\n\t     * @constructor\n\t     * @param {Function} subscribe the function that is  called when the Observable is\n\t     * initially subscribed to. This function is given a Subscriber, to which new values\n\t     * can be `next`ed, or an `error` method can be called to raise an error, or\n\t     * `complete` can be called to notify of a successful completion.\n\t     */\n\t    function Observable(subscribe) {\n\t        this._isScalar = false;\n\t        if (subscribe) {\n\t            this._subscribe = subscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Creates a new Observable, with this Observable as the source, and the passed\n\t     * operator defined as the new observable's operator.\n\t     * @method lift\n\t     * @param {Operator} operator the operator defining the operation to take on the observable\n\t     * @return {Observable} a new observable with the Operator applied\n\t     */\n\t    Observable.prototype.lift = function (operator) {\n\t        var observable = new Observable();\n\t        observable.source = this;\n\t        observable.operator = operator;\n\t        return observable;\n\t    };\n\t    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n\t        var operator = this.operator;\n\t        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\t        if (operator) {\n\t            operator.call(sink, this.source);\n\t        }\n\t        else {\n\t            sink.add(this._trySubscribe(sink));\n\t        }\n\t        if (sink.syncErrorThrowable) {\n\t            sink.syncErrorThrowable = false;\n\t            if (sink.syncErrorThrown) {\n\t                throw sink.syncErrorValue;\n\t            }\n\t        }\n\t        return sink;\n\t    };\n\t    Observable.prototype._trySubscribe = function (sink) {\n\t        try {\n\t            return this._subscribe(sink);\n\t        }\n\t        catch (err) {\n\t            sink.syncErrorThrown = true;\n\t            sink.syncErrorValue = err;\n\t            sink.error(err);\n\t        }\n\t    };\n\t    /**\n\t     * @method forEach\n\t     * @param {Function} next a handler for each value emitted by the observable\n\t     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n\t     * @return {Promise} a promise that either resolves on observable completion or\n\t     *  rejects with the handled error\n\t     */\n\t    Observable.prototype.forEach = function (next, PromiseCtor) {\n\t        var _this = this;\n\t        if (!PromiseCtor) {\n\t            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n\t                PromiseCtor = root_1.root.Rx.config.Promise;\n\t            }\n\t            else if (root_1.root.Promise) {\n\t                PromiseCtor = root_1.root.Promise;\n\t            }\n\t        }\n\t        if (!PromiseCtor) {\n\t            throw new Error('no Promise impl found');\n\t        }\n\t        return new PromiseCtor(function (resolve, reject) {\n\t            // Must be declared in a separate statement to avoid a RefernceError when\n\t            // accessing subscription below in the closure due to Temporal Dead Zone.\n\t            var subscription;\n\t            subscription = _this.subscribe(function (value) {\n\t                if (subscription) {\n\t                    // if there is a subscription, then we can surmise\n\t                    // the next handling is asynchronous. Any errors thrown\n\t                    // need to be rejected explicitly and unsubscribe must be\n\t                    // called manually\n\t                    try {\n\t                        next(value);\n\t                    }\n\t                    catch (err) {\n\t                        reject(err);\n\t                        subscription.unsubscribe();\n\t                    }\n\t                }\n\t                else {\n\t                    // if there is NO subscription, then we're getting a nexted\n\t                    // value synchronously during subscription. We can just call it.\n\t                    // If it errors, Observable's `subscribe` will ensure the\n\t                    // unsubscription logic is called, then synchronously rethrow the error.\n\t                    // After that, Promise will trap the error and send it\n\t                    // down the rejection path.\n\t                    next(value);\n\t                }\n\t            }, reject, resolve);\n\t        });\n\t    };\n\t    Observable.prototype._subscribe = function (subscriber) {\n\t        return this.source.subscribe(subscriber);\n\t    };\n\t    /**\n\t     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n\t     * @method Symbol.observable\n\t     * @return {Observable} this instance of the observable\n\t     */\n\t    Observable.prototype[observable_1.observable] = function () {\n\t        return this;\n\t    };\n\t    // HACK: Since TypeScript inherits static properties too, we have to\n\t    // fight against TypeScript here so Subject can have a different static create signature\n\t    /**\n\t     * Creates a new cold Observable by calling the Observable constructor\n\t     * @static true\n\t     * @owner Observable\n\t     * @method create\n\t     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n\t     * @return {Observable} a new cold observable\n\t     */\n\t    Observable.create = function (subscribe) {\n\t        return new Observable(subscribe);\n\t    };\n\t    return Observable;\n\t}());\n\texports.Observable = Observable;\n\t//# sourceMappingURL=Observable.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Subscriber_1 = __webpack_require__(8);\n\tvar rxSubscriber_1 = __webpack_require__(17);\n\tvar Observer_1 = __webpack_require__(16);\n\tfunction toSubscriber(nextOrObserver, error, complete) {\n\t    if (nextOrObserver) {\n\t        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n\t            return nextOrObserver;\n\t        }\n\t        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n\t            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n\t        }\n\t    }\n\t    if (!nextOrObserver && !error && !complete) {\n\t        return new Subscriber_1.Subscriber(Observer_1.empty);\n\t    }\n\t    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n\t}\n\texports.toSubscriber = toSubscriber;\n\t//# sourceMappingURL=toSubscriber.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar isFunction_1 = __webpack_require__(9);\n\tvar Subscription_1 = __webpack_require__(10);\n\tvar Observer_1 = __webpack_require__(16);\n\tvar rxSubscriber_1 = __webpack_require__(17);\n\t/**\n\t * Implements the {@link Observer} interface and extends the\n\t * {@link Subscription} class. While the {@link Observer} is the public API for\n\t * consuming the values of an {@link Observable}, all Observers get converted to\n\t * a Subscriber, in order to provide Subscription-like capabilities such as\n\t * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n\t * implementing operators, but it is rarely used as a public API.\n\t *\n\t * @class Subscriber<T>\n\t */\n\tvar Subscriber = (function (_super) {\n\t    __extends(Subscriber, _super);\n\t    /**\n\t     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n\t     * defined Observer or a `next` callback function.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     */\n\t    function Subscriber(destinationOrNext, error, complete) {\n\t        _super.call(this);\n\t        this.syncErrorValue = null;\n\t        this.syncErrorThrown = false;\n\t        this.syncErrorThrowable = false;\n\t        this.isStopped = false;\n\t        switch (arguments.length) {\n\t            case 0:\n\t                this.destination = Observer_1.empty;\n\t                break;\n\t            case 1:\n\t                if (!destinationOrNext) {\n\t                    this.destination = Observer_1.empty;\n\t                    break;\n\t                }\n\t                if (typeof destinationOrNext === 'object') {\n\t                    if (destinationOrNext instanceof Subscriber) {\n\t                        this.destination = destinationOrNext;\n\t                        this.destination.add(this);\n\t                    }\n\t                    else {\n\t                        this.syncErrorThrowable = true;\n\t                        this.destination = new SafeSubscriber(this, destinationOrNext);\n\t                    }\n\t                    break;\n\t                }\n\t            default:\n\t                this.syncErrorThrowable = true;\n\t                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n\t                break;\n\t        }\n\t    }\n\t    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n\t    /**\n\t     * A static factory for a Subscriber, given a (potentially partial) definition\n\t     * of an Observer.\n\t     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n\t     * Observer represented by the given arguments.\n\t     */\n\t    Subscriber.create = function (next, error, complete) {\n\t        var subscriber = new Subscriber(next, error, complete);\n\t        subscriber.syncErrorThrowable = false;\n\t        return subscriber;\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `next` from\n\t     * the Observable, with a value. The Observable may call this method 0 or more\n\t     * times.\n\t     * @param {T} [value] The `next` value.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.next = function (value) {\n\t        if (!this.isStopped) {\n\t            this._next(value);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `error` from\n\t     * the Observable, with an attached {@link Error}. Notifies the Observer that\n\t     * the Observable has experienced an error condition.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._error(err);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive a valueless notification of type\n\t     * `complete` from the Observable. Notifies the Observer that the Observable\n\t     * has finished sending push-based notifications.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._complete();\n\t        }\n\t    };\n\t    Subscriber.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.isStopped = true;\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    Subscriber.prototype._next = function (value) {\n\t        this.destination.next(value);\n\t    };\n\t    Subscriber.prototype._error = function (err) {\n\t        this.destination.error(err);\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._complete = function () {\n\t        this.destination.complete();\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._unsubscribeAndRecycle = function () {\n\t        var _a = this, _parent = _a._parent, _parents = _a._parents;\n\t        this._parent = null;\n\t        this._parents = null;\n\t        this.unsubscribe();\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this._parent = _parent;\n\t        this._parents = _parents;\n\t        return this;\n\t    };\n\t    return Subscriber;\n\t}(Subscription_1.Subscription));\n\texports.Subscriber = Subscriber;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SafeSubscriber = (function (_super) {\n\t    __extends(SafeSubscriber, _super);\n\t    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n\t        _super.call(this);\n\t        this._parentSubscriber = _parentSubscriber;\n\t        var next;\n\t        var context = this;\n\t        if (isFunction_1.isFunction(observerOrNext)) {\n\t            next = observerOrNext;\n\t        }\n\t        else if (observerOrNext) {\n\t            next = observerOrNext.next;\n\t            error = observerOrNext.error;\n\t            complete = observerOrNext.complete;\n\t            if (observerOrNext !== Observer_1.empty) {\n\t                context = Object.create(observerOrNext);\n\t                if (isFunction_1.isFunction(context.unsubscribe)) {\n\t                    this.add(context.unsubscribe.bind(context));\n\t                }\n\t                context.unsubscribe = this.unsubscribe.bind(this);\n\t            }\n\t        }\n\t        this._context = context;\n\t        this._next = next;\n\t        this._error = error;\n\t        this._complete = complete;\n\t    }\n\t    SafeSubscriber.prototype.next = function (value) {\n\t        if (!this.isStopped && this._next) {\n\t            var _parentSubscriber = this._parentSubscriber;\n\t            if (!_parentSubscriber.syncErrorThrowable) {\n\t                this.__tryOrUnsub(this._next, value);\n\t            }\n\t            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var _parentSubscriber = this._parentSubscriber;\n\t            if (this._error) {\n\t                if (!_parentSubscriber.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else if (!_parentSubscriber.syncErrorThrowable) {\n\t                this.unsubscribe();\n\t                throw err;\n\t            }\n\t            else {\n\t                _parentSubscriber.syncErrorValue = err;\n\t                _parentSubscriber.syncErrorThrown = true;\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.complete = function () {\n\t        var _this = this;\n\t        if (!this.isStopped) {\n\t            var _parentSubscriber = this._parentSubscriber;\n\t            if (this._complete) {\n\t                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n\t                if (!_parentSubscriber.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(wrappedComplete);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            this.unsubscribe();\n\t            throw err;\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            parent.syncErrorValue = err;\n\t            parent.syncErrorThrown = true;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    SafeSubscriber.prototype._unsubscribe = function () {\n\t        var _parentSubscriber = this._parentSubscriber;\n\t        this._context = null;\n\t        this._parentSubscriber = null;\n\t        _parentSubscriber.unsubscribe();\n\t    };\n\t    return SafeSubscriber;\n\t}(Subscriber));\n\t//# sourceMappingURL=Subscriber.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t//# sourceMappingURL=isFunction.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isArray_1 = __webpack_require__(11);\n\tvar isObject_1 = __webpack_require__(12);\n\tvar isFunction_1 = __webpack_require__(9);\n\tvar tryCatch_1 = __webpack_require__(13);\n\tvar errorObject_1 = __webpack_require__(14);\n\tvar UnsubscriptionError_1 = __webpack_require__(15);\n\t/**\n\t * Represents a disposable resource, such as the execution of an Observable. A\n\t * Subscription has one important method, `unsubscribe`, that takes no argument\n\t * and just disposes the resource held by the subscription.\n\t *\n\t * Additionally, subscriptions may be grouped together through the `add()`\n\t * method, which will attach a child Subscription to the current Subscription.\n\t * When a Subscription is unsubscribed, all its children (and its grandchildren)\n\t * will be unsubscribed as well.\n\t *\n\t * @class Subscription\n\t */\n\tvar Subscription = (function () {\n\t    /**\n\t     * @param {function(): void} [unsubscribe] A function describing how to\n\t     * perform the disposal of resources when the `unsubscribe` method is called.\n\t     */\n\t    function Subscription(unsubscribe) {\n\t        /**\n\t         * A flag to indicate whether this Subscription has already been unsubscribed.\n\t         * @type {boolean}\n\t         */\n\t        this.closed = false;\n\t        this._parent = null;\n\t        this._parents = null;\n\t        this._subscriptions = null;\n\t        if (unsubscribe) {\n\t            this._unsubscribe = unsubscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Disposes the resources held by the subscription. May, for instance, cancel\n\t     * an ongoing Observable execution or cancel any other type of work that\n\t     * started when the Subscription was created.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.unsubscribe = function () {\n\t        var hasErrors = false;\n\t        var errors;\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n\t        this.closed = true;\n\t        this._parent = null;\n\t        this._parents = null;\n\t        // null out _subscriptions first so any child subscriptions that attempt\n\t        // to remove themselves from this subscription will noop\n\t        this._subscriptions = null;\n\t        var index = -1;\n\t        var len = _parents ? _parents.length : 0;\n\t        // if this._parent is null, then so is this._parents, and we\n\t        // don't have to remove ourselves from any parent subscriptions.\n\t        while (_parent) {\n\t            _parent.remove(this);\n\t            // if this._parents is null or index >= len,\n\t            // then _parent is set to null, and the loop exits\n\t            _parent = ++index < len && _parents[index] || null;\n\t        }\n\t        if (isFunction_1.isFunction(_unsubscribe)) {\n\t            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n\t            if (trial === errorObject_1.errorObject) {\n\t                hasErrors = true;\n\t                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n\t                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n\t            }\n\t        }\n\t        if (isArray_1.isArray(_subscriptions)) {\n\t            index = -1;\n\t            len = _subscriptions.length;\n\t            while (++index < len) {\n\t                var sub = _subscriptions[index];\n\t                if (isObject_1.isObject(sub)) {\n\t                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n\t                    if (trial === errorObject_1.errorObject) {\n\t                        hasErrors = true;\n\t                        errors = errors || [];\n\t                        var err = errorObject_1.errorObject.e;\n\t                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n\t                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n\t                        }\n\t                        else {\n\t                            errors.push(err);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (hasErrors) {\n\t            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n\t        }\n\t    };\n\t    /**\n\t     * Adds a tear down to be called during the unsubscribe() of this\n\t     * Subscription.\n\t     *\n\t     * If the tear down being added is a subscription that is already\n\t     * unsubscribed, is the same reference `add` is being called on, or is\n\t     * `Subscription.EMPTY`, it will not be added.\n\t     *\n\t     * If this subscription is already in an `closed` state, the passed\n\t     * tear down logic will be executed immediately.\n\t     *\n\t     * @param {TeardownLogic} teardown The additional logic to execute on\n\t     * teardown.\n\t     * @return {Subscription} Returns the Subscription used or created to be\n\t     * added to the inner subscriptions list. This Subscription can be used with\n\t     * `remove()` to remove the passed teardown logic from the inner subscriptions\n\t     * list.\n\t     */\n\t    Subscription.prototype.add = function (teardown) {\n\t        if (!teardown || (teardown === Subscription.EMPTY)) {\n\t            return Subscription.EMPTY;\n\t        }\n\t        if (teardown === this) {\n\t            return this;\n\t        }\n\t        var subscription = teardown;\n\t        switch (typeof teardown) {\n\t            case 'function':\n\t                subscription = new Subscription(teardown);\n\t            case 'object':\n\t                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n\t                    return subscription;\n\t                }\n\t                else if (this.closed) {\n\t                    subscription.unsubscribe();\n\t                    return subscription;\n\t                }\n\t                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n\t                    var tmp = subscription;\n\t                    subscription = new Subscription();\n\t                    subscription._subscriptions = [tmp];\n\t                }\n\t                break;\n\t            default:\n\t                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n\t        }\n\t        var subscriptions = this._subscriptions || (this._subscriptions = []);\n\t        subscriptions.push(subscription);\n\t        subscription._addParent(this);\n\t        return subscription;\n\t    };\n\t    /**\n\t     * Removes a Subscription from the internal list of subscriptions that will\n\t     * unsubscribe during the unsubscribe process of this Subscription.\n\t     * @param {Subscription} subscription The subscription to remove.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.remove = function (subscription) {\n\t        var subscriptions = this._subscriptions;\n\t        if (subscriptions) {\n\t            var subscriptionIndex = subscriptions.indexOf(subscription);\n\t            if (subscriptionIndex !== -1) {\n\t                subscriptions.splice(subscriptionIndex, 1);\n\t            }\n\t        }\n\t    };\n\t    Subscription.prototype._addParent = function (parent) {\n\t        var _a = this, _parent = _a._parent, _parents = _a._parents;\n\t        if (!_parent || _parent === parent) {\n\t            // If we don't have a parent, or the new parent is the same as the\n\t            // current parent, then set this._parent to the new parent.\n\t            this._parent = parent;\n\t        }\n\t        else if (!_parents) {\n\t            // If there's already one parent, but not multiple, allocate an Array to\n\t            // store the rest of the parent Subscriptions.\n\t            this._parents = [parent];\n\t        }\n\t        else if (_parents.indexOf(parent) === -1) {\n\t            // Only add the new parent to the _parents list if it's not already there.\n\t            _parents.push(parent);\n\t        }\n\t    };\n\t    Subscription.EMPTY = (function (empty) {\n\t        empty.closed = true;\n\t        return empty;\n\t    }(new Subscription()));\n\t    return Subscription;\n\t}());\n\texports.Subscription = Subscription;\n\tfunction flattenUnsubscriptionErrors(errors) {\n\t    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n\t}\n\t//# sourceMappingURL=Subscription.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\t//# sourceMappingURL=isArray.js.map\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tfunction isObject(x) {\n\t    return x != null && typeof x === 'object';\n\t}\n\texports.isObject = isObject;\n\t//# sourceMappingURL=isObject.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar errorObject_1 = __webpack_require__(14);\n\tvar tryCatchTarget;\n\tfunction tryCatcher() {\n\t    try {\n\t        return tryCatchTarget.apply(this, arguments);\n\t    }\n\t    catch (e) {\n\t        errorObject_1.errorObject.e = e;\n\t        return errorObject_1.errorObject;\n\t    }\n\t}\n\tfunction tryCatch(fn) {\n\t    tryCatchTarget = fn;\n\t    return tryCatcher;\n\t}\n\texports.tryCatch = tryCatch;\n\t;\n\t//# sourceMappingURL=tryCatch.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t// typeof any so that it we don't have to cast when comparing a result to the error object\n\texports.errorObject = { e: {} };\n\t//# sourceMappingURL=errorObject.js.map\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when one or more errors have occurred during the\n\t * `unsubscribe` of a {@link Subscription}.\n\t */\n\tvar UnsubscriptionError = (function (_super) {\n\t    __extends(UnsubscriptionError, _super);\n\t    function UnsubscriptionError(errors) {\n\t        _super.call(this);\n\t        this.errors = errors;\n\t        var err = Error.call(this, errors ?\n\t            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n\t        this.name = err.name = 'UnsubscriptionError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return UnsubscriptionError;\n\t}(Error));\n\texports.UnsubscriptionError = UnsubscriptionError;\n\t//# sourceMappingURL=UnsubscriptionError.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.empty = {\n\t    closed: true,\n\t    next: function (value) { },\n\t    error: function (err) { throw err; },\n\t    complete: function () { }\n\t};\n\t//# sourceMappingURL=Observer.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(4);\n\tvar Symbol = root_1.root.Symbol;\n\texports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n\t    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\t/**\n\t * @deprecated use rxSubscriber instead\n\t */\n\texports.$$rxSubscriber = exports.rxSubscriber;\n\t//# sourceMappingURL=rxSubscriber.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when an action is invalid because the object has been\n\t * unsubscribed.\n\t *\n\t * @see {@link Subject}\n\t * @see {@link BehaviorSubject}\n\t *\n\t * @class ObjectUnsubscribedError\n\t */\n\tvar ObjectUnsubscribedError = (function (_super) {\n\t    __extends(ObjectUnsubscribedError, _super);\n\t    function ObjectUnsubscribedError() {\n\t        var err = _super.call(this, 'object unsubscribed');\n\t        this.name = err.name = 'ObjectUnsubscribedError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return ObjectUnsubscribedError;\n\t}(Error));\n\texports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n\t//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscription_1 = __webpack_require__(10);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SubjectSubscription = (function (_super) {\n\t    __extends(SubjectSubscription, _super);\n\t    function SubjectSubscription(subject, subscriber) {\n\t        _super.call(this);\n\t        this.subject = subject;\n\t        this.subscriber = subscriber;\n\t        this.closed = false;\n\t    }\n\t    SubjectSubscription.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var subject = this.subject;\n\t        var observers = subject.observers;\n\t        this.subject = null;\n\t        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n\t            return;\n\t        }\n\t        var subscriberIndex = observers.indexOf(this.subscriber);\n\t        if (subscriberIndex !== -1) {\n\t            observers.splice(subscriberIndex, 1);\n\t        }\n\t    };\n\t    return SubjectSubscription;\n\t}(Subscription_1.Subscription));\n\texports.SubjectSubscription = SubjectSubscription;\n\t//# sourceMappingURL=SubjectSubscription.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.4.10\n\t * (c) 2010-2017 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(2)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n\t}(this, function (exports,_angular_core) { 'use strict';\n\t\n\t    /**\n\t     * This class should not be used directly by an application developer. Instead, use\n\t     * {\\@link Location}.\n\t     *\n\t     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n\t     * agnostic.\n\t     * This means that we can have different implementation of `PlatformLocation` for the different\n\t     * platforms\n\t     * that angular supports. For example, the default `PlatformLocation` is {\\@link\n\t     * BrowserPlatformLocation},\n\t     * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n\t     *\n\t     * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n\t     * when\n\t     * they need to interact with the DOM apis like pushState, popState, etc...\n\t     *\n\t     * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n\t     * by\n\t     * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n\t     * Router} /\n\t     * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n\t     * class\n\t     * they are all platform independent.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var PlatformLocation = (function () {\n\t        function PlatformLocation() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.getBaseHrefFromDOM = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.onPopState = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.onHashChange = function (fn) { };\n\t        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.replaceState = function (state, title, url) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.pushState = function (state, title, url) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.forward = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        PlatformLocation.prototype.back = function () { };\n\t        return PlatformLocation;\n\t    }());\n\t    /**\n\t     * @whatItDoes indicates when a location is initialized\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ LOCATION_INITIALIZED = new _angular_core.OpaqueToken('Location Initialized');\n\t\n\t    /**\n\t     * `LocationStrategy` is responsible for representing and reading route state\n\t     * from the browser's URL. Angular provides two strategies:\n\t     * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n\t     *\n\t     * This is used under the hood of the {\\@link Location} service.\n\t     *\n\t     * Applications should use the {\\@link Router} or {\\@link Location} services to\n\t     * interact with application route state.\n\t     *\n\t     * For instance, {\\@link HashLocationStrategy} produces URLs like\n\t     * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n\t     * `http://example.com/foo` as an equivalent URL.\n\t     *\n\t     * See these two classes for more.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var LocationStrategy = (function () {\n\t        function LocationStrategy() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.path = function (includeHash) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} internal\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.prepareExternalUrl = function (internal) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.pushState = function (state, title, url, queryParams) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.replaceState = function (state, title, url, queryParams) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.forward = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.back = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.onPopState = function (fn) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        LocationStrategy.prototype.getBaseHref = function () { };\n\t        return LocationStrategy;\n\t    }());\n\t    /**\n\t     * The `APP_BASE_HREF` token represents the base href to be used with the\n\t     * {@link PathLocationStrategy}.\n\t     *\n\t     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n\t     * representing the URL prefix that should be preserved when generating and recognizing\n\t     * URLs.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * import {Component, NgModule} from '@angular/core';\n\t     * import {APP_BASE_HREF} from '@angular/common';\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n\t     * })\n\t     * class AppModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = (self);\n\t        }\n\t        else {\n\t            globalScope = (global);\n\t        }\n\t    }\n\t    else {\n\t        globalScope = (window);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var /** @type {?} */ _global = globalScope;\n\t    /**\n\t     * @param {?} type\n\t     * @return {?}\n\t     */\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    _global.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @return {?}\n\t     */\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return \"\" + token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return \"\" + token.name;\n\t        }\n\t        var /** @type {?} */ res = token.toString();\n\t        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    var NumberWrapper = (function () {\n\t        function NumberWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        NumberWrapper.parseIntAutoRadix = function (text) {\n\t            var /** @type {?} */ result = parseInt(text);\n\t            if (isNaN(result)) {\n\t                throw new Error('Invalid integer literal when parsing ' + text);\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n\t        return NumberWrapper;\n\t    }());\n\t    /**\n\t     * @param {?} o\n\t     * @return {?}\n\t     */\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    var /** @type {?} */ _symbolIterator = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (((globalScope)).Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n\t                    var /** @type {?} */ key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        ((Map)).prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t\n\t    /**\n\t     * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n\t     * \\@description\n\t     * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n\t     * to the URL's path or the URL's hash segment.\n\t     *\n\t     * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n\t     * `Location` only if you need to interact with or create normalized URLs outside of\n\t     * routing.\n\t     *\n\t     * `Location` is responsible for normalizing the URL against the application's base href.\n\t     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n\t     * trailing slash:\n\t     * - `/my/app/user/123` is normalized\n\t     * - `my/app/user/123` **is not** normalized\n\t     * - `/my/app/user/123/` **is not** normalized\n\t     *\n\t     * ### Example\n\t     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n\t     * \\@stable\n\t     */\n\t    var Location = (function () {\n\t        /**\n\t         * @param {?} platformStrategy\n\t         */\n\t        function Location(platformStrategy) {\n\t            var _this = this;\n\t            /** @internal */\n\t            this._subject = new _angular_core.EventEmitter();\n\t            this._platformStrategy = platformStrategy;\n\t            var browserBaseHref = this._platformStrategy.getBaseHref();\n\t            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n\t            this._platformStrategy.onPopState(function (ev) {\n\t                _this._subject.emit({\n\t                    'url': _this.path(true),\n\t                    'pop': true,\n\t                    'type': ev.type,\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        Location.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            return this.normalize(this._platformStrategy.path(includeHash));\n\t        };\n\t        /**\n\t         * Normalizes the given path and compares to the current normalized path.\n\t         * @param {?} path\n\t         * @param {?=} query\n\t         * @return {?}\n\t         */\n\t        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the normalized URL path without leading or\n\t         * trailing slashes.\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        Location.prototype.normalize = function (url) {\n\t            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the platform-specific external URL path.\n\t         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n\t         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n\t         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        Location.prototype.prepareExternalUrl = function (url) {\n\t            if (url && url[0] !== '/') {\n\t                url = '/' + url;\n\t            }\n\t            return this._platformStrategy.prepareExternalUrl(url);\n\t        };\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n\t         * new item onto the platform's history.\n\t         * @param {?} path\n\t         * @param {?=} query\n\t         * @return {?}\n\t         */\n\t        Location.prototype.go = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.pushState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and replaces\n\t         * the top item on the platform's history stack.\n\t         * @param {?} path\n\t         * @param {?=} query\n\t         * @return {?}\n\t         */\n\t        Location.prototype.replaceState = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.replaceState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Navigates forward in the platform's history.\n\t         * @return {?}\n\t         */\n\t        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n\t        /**\n\t         * Navigates back in the platform's history.\n\t         * @return {?}\n\t         */\n\t        Location.prototype.back = function () { this._platformStrategy.back(); };\n\t        /**\n\t         * Subscribe to the platform's `popState` events.\n\t         * @param {?} onNext\n\t         * @param {?=} onThrow\n\t         * @param {?=} onReturn\n\t         * @return {?}\n\t         */\n\t        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n\t            if (onThrow === void 0) { onThrow = null; }\n\t            if (onReturn === void 0) { onReturn = null; }\n\t            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n\t        };\n\t        /**\n\t         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n\t         * is.\n\t         * @param {?} params\n\t         * @return {?}\n\t         */\n\t        Location.normalizeQueryParams = function (params) {\n\t            return params && params[0] !== '?' ? '?' + params : params;\n\t        };\n\t        /**\n\t         * Given 2 parts of a url, join them with a slash if needed.\n\t         * @param {?} start\n\t         * @param {?} end\n\t         * @return {?}\n\t         */\n\t        Location.joinWithSlash = function (start, end) {\n\t            if (start.length == 0) {\n\t                return end;\n\t            }\n\t            if (end.length == 0) {\n\t                return start;\n\t            }\n\t            var /** @type {?} */ slashes = 0;\n\t            if (start.endsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (end.startsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (slashes == 2) {\n\t                return start + end.substring(1);\n\t            }\n\t            if (slashes == 1) {\n\t                return start + end;\n\t            }\n\t            return start + '/' + end;\n\t        };\n\t        /**\n\t         * If url has a trailing slash, remove it, otherwise return url as is.\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        Location.stripTrailingSlash = function (url) { return url.replace(/\\/$/, ''); };\n\t        Location.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Location.ctorParameters = function () { return [\n\t            { type: LocationStrategy, },\n\t        ]; };\n\t        return Location;\n\t    }());\n\t    /**\n\t     * @param {?} baseHref\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function _stripBaseHref(baseHref, url) {\n\t        return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n\t    }\n\t    /**\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function _stripIndexHtml(url) {\n\t        return url.replace(/\\/index.html$/, '');\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@whatItDoes Use URL hash for storing application location data.\n\t     * \\@description\n\t     * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n\t     * {\\@link Location} service to represent its state in the\n\t     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n\t     * of the browser's URL.\n\t     *\n\t     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n\t     * `example.com#/foo`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var HashLocationStrategy = (function (_super) {\n\t        __extends(HashLocationStrategy, _super);\n\t        /**\n\t         * @param {?} _platformLocation\n\t         * @param {?=} _baseHref\n\t         */\n\t        function HashLocationStrategy(_platformLocation, _baseHref) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            this._baseHref = '';\n\t            if (isPresent(_baseHref)) {\n\t                this._baseHref = _baseHref;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        /**\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            // the hash value is always prefixed with a `#`\n\t            // and if it is empty then it will stay empty\n\t            var /** @type {?} */ path = this._platformLocation.hash;\n\t            if (!isPresent(path))\n\t                path = '#';\n\t            return path.length > 0 ? path.substring(1) : path;\n\t        };\n\t        /**\n\t         * @param {?} internal\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            var /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n\t            return url.length > 0 ? ('#' + url) : url;\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} path\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n\t            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.pushState(state, title, url);\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} path\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n\t            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.replaceState(state, title, url);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        HashLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HashLocationStrategy.ctorParameters = function () { return [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ]; };\n\t        return HashLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@whatItDoes Use URL for storing application location data.\n\t     * \\@description\n\t     * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n\t     * {\\@link Location} service to represent its state in the\n\t     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n\t     * browser's URL.\n\t     *\n\t     * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n\t     * or add a base element to the document. This URL prefix that will be preserved\n\t     * when generating and recognizing URLs.\n\t     *\n\t     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var PathLocationStrategy = (function (_super) {\n\t        __extends$1(PathLocationStrategy, _super);\n\t        /**\n\t         * @param {?} _platformLocation\n\t         * @param {?=} href\n\t         */\n\t        function PathLocationStrategy(_platformLocation, href) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            if (isBlank(href)) {\n\t                href = this._platformLocation.getBaseHrefFromDOM();\n\t            }\n\t            if (isBlank(href)) {\n\t                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n\t            }\n\t            this._baseHref = href;\n\t        }\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        /**\n\t         * @param {?} internal\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            return Location.joinWithSlash(this._baseHref, internal);\n\t        };\n\t        /**\n\t         * @param {?=} includeHash\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            var /** @type {?} */ pathname = this._platformLocation.pathname +\n\t                Location.normalizeQueryParams(this._platformLocation.search);\n\t            var /** @type {?} */ hash = this._platformLocation.hash;\n\t            return hash && includeHash ? \"\" + pathname + hash : pathname;\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n\t            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.pushState(state, title, externalUrl);\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @param {?} queryParams\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n\t            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.replaceState(state, title, externalUrl);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        PathLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PathLocationStrategy.ctorParameters = function () { return [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ]; };\n\t        return PathLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var NgLocalization = (function () {\n\t        function NgLocalization() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgLocalization.prototype.getPluralCategory = function (value) { };\n\t        return NgLocalization;\n\t    }());\n\t    /**\n\t     * Returns the plural category for a given value.\n\t     * - \"=value\" when the case exists,\n\t     * - the plural category otherwise\n\t     *\n\t     * \\@internal\n\t     * @param {?} value\n\t     * @param {?} cases\n\t     * @param {?} ngLocalization\n\t     * @return {?}\n\t     */\n\t    function getPluralCategory(value, cases, ngLocalization) {\n\t        var /** @type {?} */ key = \"=\" + value;\n\t        if (cases.indexOf(key) > -1) {\n\t            return key;\n\t        }\n\t        key = ngLocalization.getPluralCategory(value);\n\t        if (cases.indexOf(key) > -1) {\n\t            return key;\n\t        }\n\t        if (cases.indexOf('other') > -1) {\n\t            return 'other';\n\t        }\n\t        throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n\t    }\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgLocaleLocalization = (function (_super) {\n\t        __extends$2(NgLocaleLocalization, _super);\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function NgLocaleLocalization(_locale) {\n\t            _super.call(this);\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n\t            var /** @type {?} */ plural = getPluralCase(this._locale, value);\n\t            switch (plural) {\n\t                case Plural.Zero:\n\t                    return 'zero';\n\t                case Plural.One:\n\t                    return 'one';\n\t                case Plural.Two:\n\t                    return 'two';\n\t                case Plural.Few:\n\t                    return 'few';\n\t                case Plural.Many:\n\t                    return 'many';\n\t                default:\n\t                    return 'other';\n\t            }\n\t        };\n\t        NgLocaleLocalization.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        NgLocaleLocalization.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return NgLocaleLocalization;\n\t    }(NgLocalization));\n\t    var Plural = {};\n\t    Plural.Zero = 0;\n\t    Plural.One = 1;\n\t    Plural.Two = 2;\n\t    Plural.Few = 3;\n\t    Plural.Many = 4;\n\t    Plural.Other = 5;\n\t    Plural[Plural.Zero] = \"Zero\";\n\t    Plural[Plural.One] = \"One\";\n\t    Plural[Plural.Two] = \"Two\";\n\t    Plural[Plural.Few] = \"Few\";\n\t    Plural[Plural.Many] = \"Many\";\n\t    Plural[Plural.Other] = \"Other\";\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * \\@experimental\n\t     * @param {?} locale\n\t     * @param {?} nLike\n\t     * @return {?}\n\t     */\n\t    function getPluralCase(locale, nLike) {\n\t        // TODO(vicb): lazy compute\n\t        if (typeof nLike === 'string') {\n\t            nLike = parseInt(/** @type {?} */ (nLike), 10);\n\t        }\n\t        var /** @type {?} */ n = (nLike);\n\t        var /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n\t        var /** @type {?} */ i = Math.floor(Math.abs(n));\n\t        var /** @type {?} */ v = nDecimal.length;\n\t        var /** @type {?} */ f = parseInt(nDecimal, 10);\n\t        var /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\t        var /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n\t        switch (lang) {\n\t            case 'af':\n\t            case 'asa':\n\t            case 'az':\n\t            case 'bem':\n\t            case 'bez':\n\t            case 'bg':\n\t            case 'brx':\n\t            case 'ce':\n\t            case 'cgg':\n\t            case 'chr':\n\t            case 'ckb':\n\t            case 'ee':\n\t            case 'el':\n\t            case 'eo':\n\t            case 'es':\n\t            case 'eu':\n\t            case 'fo':\n\t            case 'fur':\n\t            case 'gsw':\n\t            case 'ha':\n\t            case 'haw':\n\t            case 'hu':\n\t            case 'jgo':\n\t            case 'jmc':\n\t            case 'ka':\n\t            case 'kk':\n\t            case 'kkj':\n\t            case 'kl':\n\t            case 'ks':\n\t            case 'ksb':\n\t            case 'ky':\n\t            case 'lb':\n\t            case 'lg':\n\t            case 'mas':\n\t            case 'mgo':\n\t            case 'ml':\n\t            case 'mn':\n\t            case 'nb':\n\t            case 'nd':\n\t            case 'ne':\n\t            case 'nn':\n\t            case 'nnh':\n\t            case 'nyn':\n\t            case 'om':\n\t            case 'or':\n\t            case 'os':\n\t            case 'ps':\n\t            case 'rm':\n\t            case 'rof':\n\t            case 'rwk':\n\t            case 'saq':\n\t            case 'seh':\n\t            case 'sn':\n\t            case 'so':\n\t            case 'sq':\n\t            case 'ta':\n\t            case 'te':\n\t            case 'teo':\n\t            case 'tk':\n\t            case 'tr':\n\t            case 'ug':\n\t            case 'uz':\n\t            case 'vo':\n\t            case 'vun':\n\t            case 'wae':\n\t            case 'xog':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'agq':\n\t            case 'bas':\n\t            case 'cu':\n\t            case 'dav':\n\t            case 'dje':\n\t            case 'dua':\n\t            case 'dyo':\n\t            case 'ebu':\n\t            case 'ewo':\n\t            case 'guz':\n\t            case 'kam':\n\t            case 'khq':\n\t            case 'ki':\n\t            case 'kln':\n\t            case 'kok':\n\t            case 'ksf':\n\t            case 'lrc':\n\t            case 'lu':\n\t            case 'luo':\n\t            case 'luy':\n\t            case 'mer':\n\t            case 'mfe':\n\t            case 'mgh':\n\t            case 'mua':\n\t            case 'mzn':\n\t            case 'nmg':\n\t            case 'nus':\n\t            case 'qu':\n\t            case 'rn':\n\t            case 'rw':\n\t            case 'sbp':\n\t            case 'twq':\n\t            case 'vai':\n\t            case 'yav':\n\t            case 'yue':\n\t            case 'zgh':\n\t            case 'ak':\n\t            case 'ln':\n\t            case 'mg':\n\t            case 'pa':\n\t            case 'ti':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'am':\n\t            case 'as':\n\t            case 'bn':\n\t            case 'fa':\n\t            case 'gu':\n\t            case 'hi':\n\t            case 'kn':\n\t            case 'mr':\n\t            case 'zu':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ar':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'ast':\n\t            case 'ca':\n\t            case 'de':\n\t            case 'en':\n\t            case 'et':\n\t            case 'fi':\n\t            case 'fy':\n\t            case 'gl':\n\t            case 'it':\n\t            case 'nl':\n\t            case 'sv':\n\t            case 'sw':\n\t            case 'ur':\n\t            case 'yi':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'be':\n\t                if (n % 10 === 1 && !(n % 100 === 11))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n\t                    !(n % 100 >= 12 && n % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n\t                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'br':\n\t                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n\t                    return Plural.One;\n\t                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n\t                    return Plural.Two;\n\t                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n\t                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n\t                        n % 100 >= 90 && n % 100 <= 99))\n\t                    return Plural.Few;\n\t                if (!(n === 0) && n % 1e6 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'bs':\n\t            case 'hr':\n\t            case 'sr':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14) ||\n\t                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n\t                        !(f % 100 >= 12 && f % 100 <= 14))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'cs':\n\t            case 'sk':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'cy':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === 3)\n\t                    return Plural.Few;\n\t                if (n === 6)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'da':\n\t                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'dsb':\n\t            case 'hsb':\n\t                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n\t                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ff':\n\t            case 'fr':\n\t            case 'hy':\n\t            case 'kab':\n\t                if (i === 0 || i === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'fil':\n\t                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n\t                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n\t                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ga':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && n >= 3 && n <= 6)\n\t                    return Plural.Few;\n\t                if (n === Math.floor(n) && n >= 7 && n <= 10)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'gd':\n\t                if (n === 1 || n === 11)\n\t                    return Plural.One;\n\t                if (n === 2 || n === 12)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'gv':\n\t                if (v === 0 && i % 10 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 &&\n\t                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'he':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === 2 && v === 0)\n\t                    return Plural.Two;\n\t                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'is':\n\t                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ksh':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'kw':\n\t            case 'naq':\n\t            case 'se':\n\t            case 'smn':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                return Plural.Other;\n\t            case 'lag':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if ((i === 0 || i === 1) && !(n === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'lt':\n\t                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n\t                    !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.Few;\n\t                if (!(f === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'lv':\n\t            case 'prg':\n\t                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n\t                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n\t                    return Plural.Zero;\n\t                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n\t                    !(v === 2) && f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mk':\n\t                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mt':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pl':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pt':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ro':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (!(v === 0) || n === 0 ||\n\t                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ru':\n\t            case 'uk':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && i % 10 === 0 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'shi':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                if (n === Math.floor(n) && n >= 2 && n <= 10)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'si':\n\t                if (n === 0 || n === 1 || i === 0 && f === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'sl':\n\t                if (v === 0 && i % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'tzm':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            default:\n\t                return Plural.Other;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n\t     * - `string` - the CSS classes listed in the string (space delimited) are added,\n\t     * - `Array` - the CSS classes declared as Array elements are added,\n\t     * - `Object` - keys are CSS classes that get added when the expression given in the value\n\t     *              evaluates to a truthy value, otherwise they are removed.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgClass = (function () {\n\t        /**\n\t         * @param {?} _iterableDiffers\n\t         * @param {?} _keyValueDiffers\n\t         * @param {?} _ngEl\n\t         * @param {?} _renderer\n\t         */\n\t        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n\t            this._iterableDiffers = _iterableDiffers;\n\t            this._keyValueDiffers = _keyValueDiffers;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t            this._initialClasses = [];\n\t        }\n\t        Object.defineProperty(NgClass.prototype, \"klass\", {\n\t            /**\n\t             * @param {?} v\n\t             * @return {?}\n\t             */\n\t            set: function (v) {\n\t                this._applyInitialClasses(true);\n\t                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n\t                this._applyInitialClasses(false);\n\t                this._applyClasses(this._rawClass, false);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n\t            /**\n\t             * @param {?} v\n\t             * @return {?}\n\t             */\n\t            set: function (v) {\n\t                this._cleanupClasses(this._rawClass);\n\t                this._iterableDiffer = null;\n\t                this._keyValueDiffer = null;\n\t                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\t                if (this._rawClass) {\n\t                    if (isListLikeIterable(this._rawClass)) {\n\t                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                    else {\n\t                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype.ngDoCheck = function () {\n\t            if (this._iterableDiffer) {\n\t                var /** @type {?} */ changes = this._iterableDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyIterableChanges(changes);\n\t                }\n\t            }\n\t            else if (this._keyValueDiffer) {\n\t                var /** @type {?} */ changes = this._keyValueDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyKeyValueChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} rawClassVal\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n\t            this._applyClasses(rawClassVal, true);\n\t            this._applyInitialClasses(false);\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyKeyValueChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachRemovedItem(function (record) {\n\t                if (record.previousValue) {\n\t                    _this._toggleClass(record.key, false);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyIterableChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) {\n\t                if (typeof record.item === 'string') {\n\t                    _this._toggleClass(record.item, true);\n\t                }\n\t                else {\n\t                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n\t                }\n\t            });\n\t            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n\t        };\n\t        /**\n\t         * @param {?} isCleanup\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n\t            var _this = this;\n\t            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t        };\n\t        /**\n\t         * @param {?} rawClassVal\n\t         * @param {?} isCleanup\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n\t            var _this = this;\n\t            if (rawClassVal) {\n\t                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n\t                    ((rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t                }\n\t                else {\n\t                    Object.keys(rawClassVal).forEach(function (klass) {\n\t                        if (rawClassVal[klass] != null)\n\t                            _this._toggleClass(klass, !isCleanup);\n\t                    });\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} klass\n\t         * @param {?} enabled\n\t         * @return {?}\n\t         */\n\t        NgClass.prototype._toggleClass = function (klass, enabled) {\n\t            var _this = this;\n\t            klass = klass.trim();\n\t            if (klass) {\n\t                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n\t            }\n\t        };\n\t        NgClass.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgClass.ctorParameters = function () { return [\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ]; };\n\t        NgClass.propDecorators = {\n\t            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n\t            'ngClass': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgClass;\n\t    }());\n\t\n\t    var NgForRow = (function () {\n\t        /**\n\t         * @param {?} $implicit\n\t         * @param {?} index\n\t         * @param {?} count\n\t         */\n\t        function NgForRow($implicit, index, count) {\n\t            this.$implicit = $implicit;\n\t            this.index = index;\n\t            this.count = count;\n\t        }\n\t        Object.defineProperty(NgForRow.prototype, \"first\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.index === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"last\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.index === this.count - 1; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"even\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.index % 2 === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"odd\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return !this.even; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgForRow;\n\t    }());\n\t    /**\n\t     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n\t     * each instantiated template inherits from the outer context with the given loop variable set\n\t     * to the current item from the iterable.\n\t     *\n\t     * ### Local Variables\n\t     *\n\t     * `NgFor` provides several exported values that can be aliased to local variables:\n\t     *\n\t     * * `index` will be set to the current loop iteration for each template context.\n\t     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n\t     *   iteration.\n\t     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n\t     *   iteration.\n\t     * * `even` will be set to a boolean value indicating whether this item has an even index.\n\t     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n\t     *\n\t     * ### Change Propagation\n\t     *\n\t     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n\t     *\n\t     * * When an item is added, a new instance of the template is added to the DOM.\n\t     * * When an item is removed, its template instance is removed from the DOM.\n\t     * * When items are reordered, their respective templates are reordered in the DOM.\n\t     * * Otherwise, the DOM element for that item will remain the same.\n\t     *\n\t     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n\t     * those changes in the DOM. This has important implications for animations and any stateful\n\t     * controls\n\t     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n\t     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n\t     * as user input.\n\t     *\n\t     * It is possible for the identities of elements in the iterator to change while the data does not.\n\t     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n\t     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n\t     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n\t     * elements were deleted and all new elements inserted). This is an expensive operation and should\n\t     * be avoided if possible.\n\t     *\n\t     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n\t     * `trackBy` takes a function which has two arguments: `index` and `item`.\n\t     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     *\n\t     * With `<template>` element:\n\t     *\n\t     * ```\n\t     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n\t     *   <li>...</li>\n\t     * </template>\n\t     * ```\n\t     *\n\t     * ### Example\n\t     *\n\t     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n\t     * example.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgFor = (function () {\n\t        /**\n\t         * @param {?} _viewContainer\n\t         * @param {?} _template\n\t         * @param {?} _differs\n\t         * @param {?} _cdr\n\t         */\n\t        function NgFor(_viewContainer, _template, _differs, _cdr) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._differs = _differs;\n\t            this._cdr = _cdr;\n\t            this._differ = null;\n\t        }\n\t        Object.defineProperty(NgFor.prototype, \"ngForTrackBy\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._trackByFn; },\n\t            /**\n\t             * @param {?} fn\n\t             * @return {?}\n\t             */\n\t            set: function (fn) {\n\t                if (_angular_core.isDevMode() && fn != null && typeof fn !== 'function') {\n\t                    // TODO(vicb): use a log service once there is a public one available\n\t                    if ((console) && (console.warn)) {\n\t                        console.warn((\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \") +\n\t                            \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n\t                    }\n\t                }\n\t                this._trackByFn = fn;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (value) {\n\t                    this._template = value;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype.ngOnChanges = function (changes) {\n\t            if ('ngForOf' in changes) {\n\t                // React on ngForOf changes only once all inputs have been initialized\n\t                var /** @type {?} */ value = changes['ngForOf'].currentValue;\n\t                if (!this._differ && value) {\n\t                    try {\n\t                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n\t                    }\n\t                    catch (e) {\n\t                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n\t                if (changes)\n\t                    this._applyChanges(changes);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            var /** @type {?} */ insertTuples = [];\n\t            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n\t                if (item.previousIndex == null) {\n\t                    var /** @type {?} */ view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n\t                    var /** @type {?} */ tuple = new RecordViewTuple(item, view);\n\t                    insertTuples.push(tuple);\n\t                }\n\t                else if (currentIndex == null) {\n\t                    _this._viewContainer.remove(adjustedPreviousIndex);\n\t                }\n\t                else {\n\t                    var /** @type {?} */ view = _this._viewContainer.get(adjustedPreviousIndex);\n\t                    _this._viewContainer.move(view, currentIndex);\n\t                    var /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n\t                    insertTuples.push(tuple);\n\t                }\n\t            });\n\t            for (var /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n\t                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n\t            }\n\t            for (var /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n\t                var /** @type {?} */ viewRef = (this._viewContainer.get(i));\n\t                viewRef.context.index = i;\n\t                viewRef.context.count = ilen;\n\t            }\n\t            changes.forEachIdentityChange(function (record) {\n\t                var /** @type {?} */ viewRef = (_this._viewContainer.get(record.currentIndex));\n\t                viewRef.context.$implicit = record.item;\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @param {?} record\n\t         * @return {?}\n\t         */\n\t        NgFor.prototype._perViewChange = function (view, record) {\n\t            view.context.$implicit = record.item;\n\t        };\n\t        NgFor.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgFor.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ]; };\n\t        NgFor.propDecorators = {\n\t            'ngForOf': [{ type: _angular_core.Input },],\n\t            'ngForTrackBy': [{ type: _angular_core.Input },],\n\t            'ngForTemplate': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgFor;\n\t    }());\n\t    var RecordViewTuple = (function () {\n\t        /**\n\t         * @param {?} record\n\t         * @param {?} view\n\t         */\n\t        function RecordViewTuple(record, view) {\n\t            this.record = record;\n\t            this.view = view;\n\t        }\n\t        return RecordViewTuple;\n\t    }());\n\t\n\t    /**\n\t     * Removes or recreates a portion of the DOM tree based on an {expression}.\n\t     *\n\t     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n\t     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n\t     *\n\t     * ```\n\t     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n\t     *   <!-- Error message displayed when the errorCount property in the current context is greater\n\t     * than 0. -->\n\t     *   {{errorCount}} errors detected\n\t     * </div>\n\t     * ```\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<div *ngIf=\"condition\">...</div>`\n\t     * - `<div template=\"ngIf condition\">...</div>`\n\t     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgIf = (function () {\n\t        /**\n\t         * @param {?} _viewContainer\n\t         * @param {?} _template\n\t         */\n\t        function NgIf(_viewContainer, _template) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._hasView = false;\n\t        }\n\t        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n\t            /**\n\t             * @param {?} condition\n\t             * @return {?}\n\t             */\n\t            set: function (condition) {\n\t                if (condition && !this._hasView) {\n\t                    this._hasView = true;\n\t                    this._viewContainer.createEmbeddedView(this._template);\n\t                }\n\t                else if (!condition && this._hasView) {\n\t                    this._hasView = false;\n\t                    this._viewContainer.clear();\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgIf.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgIf.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t        ]; };\n\t        NgIf.propDecorators = {\n\t            'ngIf': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgIf;\n\t    }());\n\t\n\t    var SwitchView = (function () {\n\t        /**\n\t         * @param {?} _viewContainerRef\n\t         * @param {?} _templateRef\n\t         */\n\t        function SwitchView(_viewContainerRef, _templateRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t            this._templateRef = _templateRef;\n\t            this._created = false;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SwitchView.prototype.create = function () {\n\t            this._created = true;\n\t            this._viewContainerRef.createEmbeddedView(this._templateRef);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SwitchView.prototype.destroy = function () {\n\t            this._created = false;\n\t            this._viewContainerRef.clear();\n\t        };\n\t        /**\n\t         * @param {?} created\n\t         * @return {?}\n\t         */\n\t        SwitchView.prototype.enforceState = function (created) {\n\t            if (created && !this._created) {\n\t                this.create();\n\t            }\n\t            else if (!created && this._created) {\n\t                this.destroy();\n\t            }\n\t        };\n\t        return SwitchView;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n\t     *             expression.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     *     <container-element [ngSwitch]=\"switch_expression\">\n\t     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n\t     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n\t     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n\t     *         <!-- use a ng-container to group multiple root nodes -->\n\t     *         <inner-element></inner-element>\n\t     *         <inner-other-element></inner-other-element>\n\t     *       </ng-container>\n\t     *       <some-element *ngSwitchDefault>...</some-element>\n\t     *     </container-element>\n\t     * ```\n\t     * \\@description\n\t     *\n\t     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n\t     * switch expression.\n\t     *\n\t     * In other words:\n\t     * - you define a container element (where you place the directive with a switch expression on the\n\t     * `[ngSwitch]=\"...\"` attribute)\n\t     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n\t     * root elements.\n\t     *\n\t     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n\t     * be preserved at the location.\n\t     *\n\t     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n\t     * expression is evaluated.\n\t     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n\t     * stamped out.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgSwitch = (function () {\n\t        function NgSwitch() {\n\t            this._defaultUsed = false;\n\t            this._caseCount = 0;\n\t            this._lastCaseCheckIndex = 0;\n\t            this._lastCasesMatched = false;\n\t        }\n\t        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n\t            /**\n\t             * @param {?} newValue\n\t             * @return {?}\n\t             */\n\t            set: function (newValue) {\n\t                this._ngSwitch = newValue;\n\t                if (this._caseCount === 0) {\n\t                    this._updateDefaultCases(true);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._addDefault = function (view) {\n\t            if (!this._defaultViews) {\n\t                this._defaultViews = [];\n\t            }\n\t            this._defaultViews.push(view);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._matchCase = function (value) {\n\t            var /** @type {?} */ matched = value == this._ngSwitch;\n\t            this._lastCasesMatched = this._lastCasesMatched || matched;\n\t            this._lastCaseCheckIndex++;\n\t            if (this._lastCaseCheckIndex === this._caseCount) {\n\t                this._updateDefaultCases(!this._lastCasesMatched);\n\t                this._lastCaseCheckIndex = 0;\n\t                this._lastCasesMatched = false;\n\t            }\n\t            return matched;\n\t        };\n\t        /**\n\t         * @param {?} useDefault\n\t         * @return {?}\n\t         */\n\t        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n\t            if (this._defaultViews && useDefault !== this._defaultUsed) {\n\t                this._defaultUsed = useDefault;\n\t                for (var /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n\t                    var /** @type {?} */ defaultView = this._defaultViews[i];\n\t                    defaultView.enforceState(useDefault);\n\t                }\n\t            }\n\t        };\n\t        NgSwitch.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitch.ctorParameters = function () { return []; };\n\t        NgSwitch.propDecorators = {\n\t            'ngSwitch': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitch;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n\t     *             given expression evaluate to respectively the same/different value as the switch\n\t     *             expression.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     * </container-element>\n\t     * ```\n\t     * \\@description\n\t     *\n\t     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * If multiple match expressions match the switch expression value, all of them are displayed.\n\t     *\n\t     * See {\\@link NgSwitch} for more details and example.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgSwitchCase = (function () {\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} templateRef\n\t         * @param {?} ngSwitch\n\t         */\n\t        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n\t            this.ngSwitch = ngSwitch;\n\t            ngSwitch._addCase();\n\t            this._view = new SwitchView(viewContainer, templateRef);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n\t        NgSwitchCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchCase.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ]; };\n\t        NgSwitchCase.propDecorators = {\n\t            'ngSwitchCase': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitchCase;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n\t     * match the\n\t     *             switch expression.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n\t     * </container-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * See {\\@link NgSwitch} for more details and example.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgSwitchDefault = (function () {\n\t        /**\n\t         * @param {?} viewContainer\n\t         * @param {?} templateRef\n\t         * @param {?} ngSwitch\n\t         */\n\t        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n\t            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n\t        }\n\t        NgSwitchDefault.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchDefault.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ]; };\n\t        return NgSwitchDefault;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <template ngPluralCase=\"=0\">there is nothing</template>\n\t     *   <template ngPluralCase=\"=1\">there is one</template>\n\t     *   <template ngPluralCase=\"few\">there are a few</template>\n\t     * </some-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n\t     * that match the switch expression's pluralization category.\n\t     *\n\t     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n\t     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n\t     * expression:\n\t     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n\t     *   matches the switch expression exactly,\n\t     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n\t     *   value matches aren't found and the value maps to its category for the defined locale.\n\t     *\n\t     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgPlural = (function () {\n\t        /**\n\t         * @param {?} _localization\n\t         */\n\t        function NgPlural(_localization) {\n\t            this._localization = _localization;\n\t            this._caseViews = {};\n\t        }\n\t        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                this._switchValue = value;\n\t                this._updateView();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} switchView\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype._updateView = function () {\n\t            this._clearViews();\n\t            var /** @type {?} */ cases = Object.keys(this._caseViews);\n\t            var /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n\t            this._activateView(this._caseViews[key]);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype._clearViews = function () {\n\t            if (this._activeView)\n\t                this._activeView.destroy();\n\t        };\n\t        /**\n\t         * @param {?} view\n\t         * @return {?}\n\t         */\n\t        NgPlural.prototype._activateView = function (view) {\n\t            if (view) {\n\t                this._activeView = view;\n\t                this._activeView.create();\n\t            }\n\t        };\n\t        NgPlural.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPlural.ctorParameters = function () { return [\n\t            { type: NgLocalization, },\n\t        ]; };\n\t        NgPlural.propDecorators = {\n\t            'ngPlural': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgPlural;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n\t     *             given expression matches the plural expression according to CLDR rules.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <template ngPluralCase=\"=0\">...</template>\n\t     *   <template ngPluralCase=\"other\">...</template>\n\t     * </some-element>\n\t     * ```\n\t     *\n\t     * See {\\@link NgPlural} for more details and example.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgPluralCase = (function () {\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} template\n\t         * @param {?} viewContainer\n\t         * @param {?} ngPlural\n\t         */\n\t        function NgPluralCase(value, template, viewContainer, ngPlural) {\n\t            this.value = value;\n\t            var isANumber = !isNaN(Number(value));\n\t            ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n\t        }\n\t        NgPluralCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPluralCase.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n\t        ]; };\n\t        return NgPluralCase;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Update an HTML element styles.\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"objExp\">...</some-element>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * The styles are updated according to the value of the expression evaluation:\n\t     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n\t     * - values are the values assigned to those properties (expressed in the given unit).\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgStyle = (function () {\n\t        /**\n\t         * @param {?} _differs\n\t         * @param {?} _ngEl\n\t         * @param {?} _renderer\n\t         */\n\t        function NgStyle(_differs, _ngEl, _renderer) {\n\t            this._differs = _differs;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t        }\n\t        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n\t            /**\n\t             * @param {?} v\n\t             * @return {?}\n\t             */\n\t            set: function (v) {\n\t                this._ngStyle = v;\n\t                if (!this._differ && v) {\n\t                    this._differ = this._differs.find(v).create(null);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgStyle.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n\t                if (changes) {\n\t                    this._applyChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgStyle.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n\t            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t        };\n\t        /**\n\t         * @param {?} nameAndUnit\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n\t            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n\t            value = value && unit ? \"\" + value + unit : value;\n\t            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n\t        };\n\t        NgStyle.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgStyle.ctorParameters = function () { return [\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ]; };\n\t        NgStyle.propDecorators = {\n\t            'ngStyle': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgStyle;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     *\n\t     * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n\t     *\n\t     * \\@howToUse\n\t     * ```\n\t     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n\t     *           [ngOutletContext]=\"objectExpression\">\n\t     * </template>\n\t     * ```\n\t     *\n\t     * \\@description\n\t     *\n\t     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n\t     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n\t     * available within the `TemplateRef`.\n\t     *\n\t     * Note: using the key `$implicit` in the context object will set it's value as default.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var NgTemplateOutlet = (function () {\n\t        /**\n\t         * @param {?} _viewContainerRef\n\t         */\n\t        function NgTemplateOutlet(_viewContainerRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t        }\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n\t            /**\n\t             * @param {?} context\n\t             * @return {?}\n\t             */\n\t            set: function (context) { this._context = context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n\t            /**\n\t             * @param {?} templateRef\n\t             * @return {?}\n\t             */\n\t            set: function (templateRef) { this._templateRef = templateRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n\t            if (this._viewRef) {\n\t                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n\t            }\n\t            if (this._templateRef) {\n\t                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n\t            }\n\t        };\n\t        NgTemplateOutlet.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgTemplateOutlet.ctorParameters = function () { return [\n\t            { type: _angular_core.ViewContainerRef, },\n\t        ]; };\n\t        NgTemplateOutlet.propDecorators = {\n\t            'ngOutletContext': [{ type: _angular_core.Input },],\n\t            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgTemplateOutlet;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular directives that are likely to be used in each and every Angular\n\t     * application.\n\t     */\n\t    var /** @type {?} */ COMMON_DIRECTIVES = [\n\t        NgClass,\n\t        NgFor,\n\t        NgIf,\n\t        NgTemplateOutlet,\n\t        NgStyle,\n\t        NgSwitch,\n\t        NgSwitchCase,\n\t        NgSwitchDefault,\n\t        NgPlural,\n\t        NgPluralCase,\n\t    ];\n\t\n\t    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n\t    var /** @type {?} */ isObservable = _angular_core.__core_private__.isObservable;\n\t\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends$4(BaseError, _super);\n\t        /**\n\t         * @param {?} message\n\t         */\n\t        function BaseError(message) {\n\t            _super.call(this, message);\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            // TODO(bradfordcsmith): Remove this hack when\n\t            //     google/closure-compiler/issues/2102 is fixed.\n\t            var nativeError = new Error(message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.message; },\n\t            /**\n\t             * @param {?} message\n\t             * @return {?}\n\t             */\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return ((this._nativeError)).stack; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) { ((this._nativeError)).stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends$4(WrappedError, _super);\n\t        /**\n\t         * @param {?} message\n\t         * @param {?} error\n\t         */\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var InvalidPipeArgumentError = (function (_super) {\n\t        __extends$3(InvalidPipeArgumentError, _super);\n\t        /**\n\t         * @param {?} type\n\t         * @param {?} value\n\t         */\n\t        function InvalidPipeArgumentError(type, value) {\n\t            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n\t        }\n\t        return InvalidPipeArgumentError;\n\t    }(BaseError));\n\t\n\t    var ObservableStrategy = (function () {\n\t        function ObservableStrategy() {\n\t        }\n\t        /**\n\t         * @param {?} async\n\t         * @param {?} updateLatestValue\n\t         * @return {?}\n\t         */\n\t        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n\t        };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n\t        return ObservableStrategy;\n\t    }());\n\t    var PromiseStrategy = (function () {\n\t        function PromiseStrategy() {\n\t        }\n\t        /**\n\t         * @param {?} async\n\t         * @param {?} updateLatestValue\n\t         * @return {?}\n\t         */\n\t        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.then(updateLatestValue, function (e) { throw e; });\n\t        };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        PromiseStrategy.prototype.dispose = function (subscription) { };\n\t        /**\n\t         * @param {?} subscription\n\t         * @return {?}\n\t         */\n\t        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n\t        return PromiseStrategy;\n\t    }());\n\t    var /** @type {?} */ _promiseStrategy = new PromiseStrategy();\n\t    var /** @type {?} */ _observableStrategy = new ObservableStrategy();\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n\t     * \\@howToUse `observable_or_promise_expression | async`\n\t     * \\@description\n\t     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n\t     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n\t     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n\t     * potential memory leaks.\n\t     *\n\t     *\n\t     * ## Examples\n\t     *\n\t     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n\t     * promise.\n\t     *\n\t     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n\t     *\n\t     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n\t     * to the view. The Observable continuously updates the view with the current time.\n\t     *\n\t     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var AsyncPipe = (function () {\n\t        /**\n\t         * @param {?} _ref\n\t         */\n\t        function AsyncPipe(_ref) {\n\t            this._ref = _ref;\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t            this._strategy = null;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype.ngOnDestroy = function () {\n\t            if (this._subscription) {\n\t                this._dispose();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype.transform = function (obj) {\n\t            if (!this._obj) {\n\t                if (obj) {\n\t                    this._subscribe(obj);\n\t                }\n\t                this._latestReturnedValue = this._latestValue;\n\t                return this._latestValue;\n\t            }\n\t            if (obj !== this._obj) {\n\t                this._dispose();\n\t                return this.transform(obj);\n\t            }\n\t            if (this._latestValue === this._latestReturnedValue) {\n\t                return this._latestReturnedValue;\n\t            }\n\t            this._latestReturnedValue = this._latestValue;\n\t            return _angular_core.WrappedValue.wrap(this._latestValue);\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._subscribe = function (obj) {\n\t            var _this = this;\n\t            this._obj = obj;\n\t            this._strategy = this._selectStrategy(obj);\n\t            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._selectStrategy = function (obj) {\n\t            if (isPromise(obj)) {\n\t                return _promiseStrategy;\n\t            }\n\t            if (isObservable(obj)) {\n\t                return _observableStrategy;\n\t            }\n\t            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._dispose = function () {\n\t            this._strategy.dispose(this._subscription);\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t        };\n\t        /**\n\t         * @param {?} async\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n\t            if (async === this._obj) {\n\t                this._latestValue = value;\n\t                this._ref.markForCheck();\n\t            }\n\t        };\n\t        AsyncPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        AsyncPipe.ctorParameters = function () { return [\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ]; };\n\t        return AsyncPipe;\n\t    }());\n\t\n\t    var NumberFormatStyle = {};\n\t    NumberFormatStyle.Decimal = 0;\n\t    NumberFormatStyle.Percent = 1;\n\t    NumberFormatStyle.Currency = 2;\n\t    NumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\n\t    NumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\n\t    NumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n\t    var NumberFormatter = (function () {\n\t        function NumberFormatter() {\n\t        }\n\t        /**\n\t         * @param {?} num\n\t         * @param {?} locale\n\t         * @param {?} style\n\t         * @param {?=} __3\n\t         * @return {?}\n\t         */\n\t        NumberFormatter.format = function (num, locale, style, _a) {\n\t            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n\t            var /** @type {?} */ options = {\n\t                minimumIntegerDigits: minimumIntegerDigits,\n\t                minimumFractionDigits: minimumFractionDigits,\n\t                maximumFractionDigits: maximumFractionDigits,\n\t                style: NumberFormatStyle[style].toLowerCase()\n\t            };\n\t            if (style == NumberFormatStyle.Currency) {\n\t                options.currency = currency;\n\t                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n\t            }\n\t            return new Intl.NumberFormat(locale, options).format(num);\n\t        };\n\t        return NumberFormatter;\n\t    }());\n\t    var /** @type {?} */ DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\t    var /** @type {?} */ PATTERN_ALIASES = {\n\t        // Keys are quoted so they do not get renamed during closure compilation.\n\t        'yMMMdjms': datePartGetterFactory(combine([\n\t            digitCondition('year', 1),\n\t            nameCondition('month', 3),\n\t            digitCondition('day', 1),\n\t            digitCondition('hour', 1),\n\t            digitCondition('minute', 1),\n\t            digitCondition('second', 1),\n\t        ])),\n\t        'yMdjm': datePartGetterFactory(combine([\n\t            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n\t            digitCondition('hour', 1), digitCondition('minute', 1)\n\t        ])),\n\t        'yMMMMEEEEd': datePartGetterFactory(combine([\n\t            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n\t            digitCondition('day', 1)\n\t        ])),\n\t        'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n\t        'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n\t        'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n\t        'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n\t        'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n\t    };\n\t    var /** @type {?} */ DATE_FORMATS = {\n\t        // Keys are quoted so they do not get renamed.\n\t        'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n\t        'yy': datePartGetterFactory(digitCondition('year', 2)),\n\t        'y': datePartGetterFactory(digitCondition('year', 1)),\n\t        'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n\t        'MMM': datePartGetterFactory(nameCondition('month', 3)),\n\t        'MM': datePartGetterFactory(digitCondition('month', 2)),\n\t        'M': datePartGetterFactory(digitCondition('month', 1)),\n\t        'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n\t        'L': datePartGetterFactory(nameCondition('month', 1)),\n\t        'dd': datePartGetterFactory(digitCondition('day', 2)),\n\t        'd': datePartGetterFactory(digitCondition('day', 1)),\n\t        'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n\t        'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n\t        'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n\t        'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        'jj': datePartGetterFactory(digitCondition('hour', 2)),\n\t        'j': datePartGetterFactory(digitCondition('hour', 1)),\n\t        'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n\t        'm': datePartGetterFactory(digitCondition('minute', 1)),\n\t        'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n\t        's': datePartGetterFactory(digitCondition('second', 1)),\n\t        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n\t        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n\t        // fractions\n\t        'sss': datePartGetterFactory(digitCondition('second', 3)),\n\t        'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n\t        'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n\t        'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n\t        'E': datePartGetterFactory(nameCondition('weekday', 1)),\n\t        'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        'Z': timeZoneGetter('short'),\n\t        'z': timeZoneGetter('long'),\n\t        'ww': datePartGetterFactory({}),\n\t        // first Thursday of the year. not support ?\n\t        'w': datePartGetterFactory({}),\n\t        // of the year not support ?\n\t        'G': datePartGetterFactory(nameCondition('era', 1)),\n\t        'GG': datePartGetterFactory(nameCondition('era', 2)),\n\t        'GGG': datePartGetterFactory(nameCondition('era', 3)),\n\t        'GGGG': datePartGetterFactory(nameCondition('era', 4))\n\t    };\n\t    /**\n\t     * @param {?} inner\n\t     * @return {?}\n\t     */\n\t    function digitModifier(inner) {\n\t        return function (date, locale) {\n\t            var /** @type {?} */ result = inner(date, locale);\n\t            return result.length == 1 ? '0' + result : result;\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} inner\n\t     * @return {?}\n\t     */\n\t    function hourClockExtractor(inner) {\n\t        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n\t    }\n\t    /**\n\t     * @param {?} inner\n\t     * @return {?}\n\t     */\n\t    function hourExtractor(inner) {\n\t        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n\t    }\n\t    /**\n\t     * @param {?} date\n\t     * @param {?} locale\n\t     * @param {?} options\n\t     * @return {?}\n\t     */\n\t    function intlDateFormat(date, locale, options) {\n\t        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n\t    }\n\t    /**\n\t     * @param {?} timezone\n\t     * @return {?}\n\t     */\n\t    function timeZoneGetter(timezone) {\n\t        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n\t        var /** @type {?} */ options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n\t        return function (date, locale) {\n\t            var /** @type {?} */ result = intlDateFormat(date, locale, options);\n\t            // Then extract first 3 letters that related to hours\n\t            return result ? result.substring(3) : '';\n\t        };\n\t    }\n\t    /**\n\t     * @param {?} options\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function hour12Modify(options, value) {\n\t        options.hour12 = value;\n\t        return options;\n\t    }\n\t    /**\n\t     * @param {?} prop\n\t     * @param {?} len\n\t     * @return {?}\n\t     */\n\t    function digitCondition(prop, len) {\n\t        var /** @type {?} */ result = {};\n\t        result[prop] = len === 2 ? '2-digit' : 'numeric';\n\t        return result;\n\t    }\n\t    /**\n\t     * @param {?} prop\n\t     * @param {?} len\n\t     * @return {?}\n\t     */\n\t    function nameCondition(prop, len) {\n\t        var /** @type {?} */ result = {};\n\t        if (len < 4) {\n\t            result[prop] = len > 1 ? 'short' : 'narrow';\n\t        }\n\t        else {\n\t            result[prop] = 'long';\n\t        }\n\t        return result;\n\t    }\n\t    /**\n\t     * @param {?} options\n\t     * @return {?}\n\t     */\n\t    function combine(options) {\n\t        return (_a = ((Object))).assign.apply(_a, [{}].concat(options));\n\t        var _a;\n\t    }\n\t    /**\n\t     * @param {?} ret\n\t     * @return {?}\n\t     */\n\t    function datePartGetterFactory(ret) {\n\t        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n\t    }\n\t    var /** @type {?} */ DATE_FORMATTER_CACHE = new Map();\n\t    /**\n\t     * @param {?} format\n\t     * @param {?} date\n\t     * @param {?} locale\n\t     * @return {?}\n\t     */\n\t    function dateFormatter(format, date, locale) {\n\t        var /** @type {?} */ fn = PATTERN_ALIASES[format];\n\t        if (fn)\n\t            return fn(date, locale);\n\t        var /** @type {?} */ cacheKey = format;\n\t        var /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\t        if (!parts) {\n\t            parts = [];\n\t            var /** @type {?} */ match = void 0;\n\t            DATE_FORMATS_SPLIT.exec(format);\n\t            while (format) {\n\t                match = DATE_FORMATS_SPLIT.exec(format);\n\t                if (match) {\n\t                    parts = parts.concat(match.slice(1));\n\t                    format = parts.pop();\n\t                }\n\t                else {\n\t                    parts.push(format);\n\t                    format = null;\n\t                }\n\t            }\n\t            DATE_FORMATTER_CACHE.set(cacheKey, parts);\n\t        }\n\t        return parts.reduce(function (text, part) {\n\t            var /** @type {?} */ fn = DATE_FORMATS[part];\n\t            return text + (fn ? fn(date, locale) : partToTime(part));\n\t        }, '');\n\t    }\n\t    /**\n\t     * @param {?} part\n\t     * @return {?}\n\t     */\n\t    function partToTime(part) {\n\t        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n\t    }\n\t    var DateFormatter = (function () {\n\t        function DateFormatter() {\n\t        }\n\t        /**\n\t         * @param {?} date\n\t         * @param {?} locale\n\t         * @param {?} pattern\n\t         * @return {?}\n\t         */\n\t        DateFormatter.format = function (date, locale, pattern) {\n\t            return dateFormatter(pattern, date, locale);\n\t        };\n\t        return DateFormatter;\n\t    }());\n\t\n\t    var /** @type {?} */ ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a date according to locale rules.\n\t     * \\@howToUse `date_expression | date[:format]`\n\t     * \\@description\n\t     *\n\t     * Where:\n\t     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n\t     * (https://www.w3.org/TR/NOTE-datetime).\n\t     * - `format` indicates which date/time components to include. The format can be predefined as\n\t     *   shown below or custom as shown in the table.\n\t     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n\t     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n\t     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n\t     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n\t     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n\t     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n\t     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n\t     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n\t     *\n\t     *\n\t     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n\t     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n\t     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n\t     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n\t     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n\t     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n\t     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n\t     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n\t     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n\t     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n\t     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n\t     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n\t     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n\t     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n\t     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n\t     *\n\t     * In javascript, only the components specified will be respected (not the ordering,\n\t     * punctuations, ...) and details of the formatting will be dependent on the locale.\n\t     *\n\t     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n\t     *\n\t     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n\t     * applied and the formatted text will have the same day, month and year of the expression.\n\t     *\n\t     * WARNINGS:\n\t     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n\t     *   Instead users should treat the date as an immutable object and change the reference when the\n\t     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n\t     *   which would be an expensive operation).\n\t     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n\t     *   browsers.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n\t     * in the _local_ time and locale is 'en-US':\n\t     *\n\t     * ```\n\t     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n\t     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n\t     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n\t     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n\t     * ```\n\t     *\n\t     * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var DatePipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function DatePipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} pattern\n\t         * @return {?}\n\t         */\n\t        DatePipe.prototype.transform = function (value, pattern) {\n\t            if (pattern === void 0) { pattern = 'mediumDate'; }\n\t            var /** @type {?} */ date;\n\t            if (isBlank$1(value) || value !== value)\n\t                return null;\n\t            if (typeof value === 'string') {\n\t                value = value.trim();\n\t            }\n\t            if (isDate(value)) {\n\t                date = value;\n\t            }\n\t            else if (NumberWrapper.isNumeric(value)) {\n\t                date = new Date(parseFloat(value));\n\t            }\n\t            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n\t                /**\n\t                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n\t                * before Date creation to avoid time offset and errors in the new Date.\n\t                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n\t                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n\t                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n\t                * is applied\n\t                * Note: ISO months are 0 for January, 1 for February, ...\n\t                */\n\t                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n\t                date = new Date(y, m - 1, d);\n\t            }\n\t            else {\n\t                date = new Date(value);\n\t            }\n\t            if (!isDate(date)) {\n\t                var /** @type {?} */ match = void 0;\n\t                if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n\t                    date = isoStringToDate(match);\n\t                }\n\t                else {\n\t                    throw new InvalidPipeArgumentError(DatePipe, value);\n\t                }\n\t            }\n\t            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n\t        };\n\t        /** @internal */\n\t        DatePipe._ALIASES = {\n\t            'medium': 'yMMMdjms',\n\t            'short': 'yMdjm',\n\t            'fullDate': 'yMMMMEEEEd',\n\t            'longDate': 'yMMMMd',\n\t            'mediumDate': 'yMMMd',\n\t            'shortDate': 'yMd',\n\t            'mediumTime': 'jms',\n\t            'shortTime': 'jm'\n\t        };\n\t        DatePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DatePipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return DatePipe;\n\t    }());\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank$1(obj) {\n\t        return obj == null || obj === '';\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isDate(obj) {\n\t        return obj instanceof Date && !isNaN(obj.valueOf());\n\t    }\n\t    /**\n\t     * @param {?} match\n\t     * @return {?}\n\t     */\n\t    function isoStringToDate(match) {\n\t        var /** @type {?} */ date = new Date(0);\n\t        var /** @type {?} */ tzHour = 0;\n\t        var /** @type {?} */ tzMin = 0;\n\t        var /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n\t        var /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\t        if (match[9]) {\n\t            tzHour = toInt(match[9] + match[10]);\n\t            tzMin = toInt(match[9] + match[11]);\n\t        }\n\t        dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n\t        var /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n\t        var /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n\t        var /** @type {?} */ s = toInt(match[6] || '0');\n\t        var /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n\t        timeSetter.call(date, h, m, s, ms);\n\t        return date;\n\t    }\n\t    /**\n\t     * @param {?} str\n\t     * @return {?}\n\t     */\n\t    function toInt(str) {\n\t        return parseInt(str, 10);\n\t    }\n\t\n\t    var /** @type {?} */ _INTERPOLATION_REGEXP = /#/g;\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n\t     * \\@howToUse `expression | i18nPlural:mapping`\n\t     * \\@description\n\t     *\n\t     *  Where:\n\t     *  - `expression` is a number.\n\t     *  - `mapping` is an object that mimics the ICU format, see\n\t     *    http://userguide.icu-project.org/formatparse/messages\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var I18nPluralPipe = (function () {\n\t        /**\n\t         * @param {?} _localization\n\t         */\n\t        function I18nPluralPipe(_localization) {\n\t            this._localization = _localization;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} pluralMap\n\t         * @return {?}\n\t         */\n\t        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n\t            if (value == null)\n\t                return '';\n\t            if (typeof pluralMap !== 'object' || pluralMap === null) {\n\t                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n\t            }\n\t            var /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n\t            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n\t        };\n\t        I18nPluralPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nPluralPipe.ctorParameters = function () { return [\n\t            { type: NgLocalization, },\n\t        ]; };\n\t        return I18nPluralPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Generic selector that displays the string that matches the current value.\n\t     * \\@howToUse `expression | i18nSelect:mapping`\n\t     * \\@description\n\t     *\n\t     *  Where `mapping` is an object that indicates the text that should be displayed\n\t     *  for different values of the provided `expression`.\n\t     *  If none of the keys of the mapping match the value of the `expression`, then the content\n\t     *  of the `other` key is returned when present, otherwise an empty string is returned.\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n\t     *\n\t     *  \\@experimental\n\t     */\n\t    var I18nSelectPipe = (function () {\n\t        function I18nSelectPipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} mapping\n\t         * @return {?}\n\t         */\n\t        I18nSelectPipe.prototype.transform = function (value, mapping) {\n\t            if (value == null)\n\t                return '';\n\t            if (typeof mapping !== 'object' || typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n\t            }\n\t            if (mapping.hasOwnProperty(value)) {\n\t                return mapping[value];\n\t            }\n\t            if (mapping.hasOwnProperty('other')) {\n\t                return mapping['other'];\n\t            }\n\t            return '';\n\t        };\n\t        I18nSelectPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nSelectPipe.ctorParameters = function () { return []; };\n\t        return I18nSelectPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Converts value into JSON string.\n\t     * \\@howToUse `expression | json`\n\t     * \\@description\n\t     *\n\t     * Converts value into string using `JSON.stringify`. Useful for debugging.\n\t     *\n\t     * ### Example\n\t     * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var JsonPipe = (function () {\n\t        function JsonPipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n\t        JsonPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        JsonPipe.ctorParameters = function () { return []; };\n\t        return JsonPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Transforms string to lowercase.\n\t     * \\@howToUse `expression | lowercase`\n\t     * \\@description\n\t     *\n\t     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var LowerCasePipe = (function () {\n\t        function LowerCasePipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        LowerCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n\t            }\n\t            return value.toLowerCase();\n\t        };\n\t        LowerCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        LowerCasePipe.ctorParameters = function () { return []; };\n\t        return LowerCasePipe;\n\t    }());\n\t\n\t    var /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n\t    /**\n\t     * @param {?} pipe\n\t     * @param {?} locale\n\t     * @param {?} value\n\t     * @param {?} style\n\t     * @param {?} digits\n\t     * @param {?=} currency\n\t     * @param {?=} currencyAsSymbol\n\t     * @return {?}\n\t     */\n\t    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n\t        if (currency === void 0) { currency = null; }\n\t        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n\t        if (value == null)\n\t            return null;\n\t        // Convert strings to numbers\n\t        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n\t        if (typeof value !== 'number') {\n\t            throw new InvalidPipeArgumentError(pipe, value);\n\t        }\n\t        var /** @type {?} */ minInt;\n\t        var /** @type {?} */ minFraction;\n\t        var /** @type {?} */ maxFraction;\n\t        if (style !== NumberFormatStyle.Currency) {\n\t            // rely on Intl default for currency\n\t            minInt = 1;\n\t            minFraction = 0;\n\t            maxFraction = 3;\n\t        }\n\t        if (digits) {\n\t            var /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n\t            if (parts === null) {\n\t                throw new Error(digits + \" is not a valid digit info for number pipes\");\n\t            }\n\t            if (parts[1] != null) {\n\t                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n\t            }\n\t            if (parts[3] != null) {\n\t                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n\t            }\n\t            if (parts[5] != null) {\n\t                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n\t            }\n\t        }\n\t        return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n\t            minimumIntegerDigits: minInt,\n\t            minimumFractionDigits: minFraction,\n\t            maximumFractionDigits: maxFraction,\n\t            currency: currency,\n\t            currencyAsSymbol: currencyAsSymbol,\n\t        });\n\t    }\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a number according to locale rules.\n\t     * \\@howToUse `number_expression | number[:digitInfo]`\n\t     *\n\t     * Formats a number as text. Group sizing and separator and other locale-specific\n\t     * configurations are based on the active locale.\n\t     *\n\t     * where `expression` is a number:\n\t     *  - `digitInfo` is a `string` which has a following format: <br>\n\t     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n\t     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n\t     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n\t     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n\t     *\n\t     * For more information on the acceptable range for each of these numbers and other\n\t     * details see your native internationalization library.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var DecimalPipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function DecimalPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} digits\n\t         * @return {?}\n\t         */\n\t        DecimalPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n\t        };\n\t        DecimalPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DecimalPipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return DecimalPipe;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a number as a percentage according to locale rules.\n\t     * \\@howToUse `number_expression | percent[:digitInfo]`\n\t     *\n\t     * \\@description\n\t     *\n\t     * Formats a number as percentage.\n\t     *\n\t     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var PercentPipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function PercentPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} digits\n\t         * @return {?}\n\t         */\n\t        PercentPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n\t        };\n\t        PercentPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PercentPipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return PercentPipe;\n\t    }());\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Formats a number as currency using locale rules.\n\t     * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n\t     * \\@description\n\t     *\n\t     * Use `currency` to format a number as currency.\n\t     *\n\t     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n\t     *    as `USD` for the US dollar and `EUR` for the euro.\n\t     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n\t     *   - `true`: use symbol (e.g. `$`).\n\t     *   - `false`(default): use code (e.g. `USD`).\n\t     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var CurrencyPipe = (function () {\n\t        /**\n\t         * @param {?} _locale\n\t         */\n\t        function CurrencyPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?=} currencyCode\n\t         * @param {?=} symbolDisplay\n\t         * @param {?=} digits\n\t         * @return {?}\n\t         */\n\t        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n\t            if (currencyCode === void 0) { currencyCode = 'USD'; }\n\t            if (symbolDisplay === void 0) { symbolDisplay = false; }\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n\t        };\n\t        CurrencyPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CurrencyPipe.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ]; };\n\t        return CurrencyPipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n\t     * \\@howToUse `array_or_string_expression | slice:start[:end]`\n\t     * \\@description\n\t     *\n\t     * Where the input expression is a `List` or `String`, and:\n\t     * - `start`: The starting index of the subset to return.\n\t     *   - **a positive integer**: return the item at `start` index and all items after\n\t     *     in the list or string expression.\n\t     *   - **a negative integer**: return the item at `start` index from the end and all items after\n\t     *     in the list or string expression.\n\t     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n\t     *   - **if negative and greater than the size of the expression**: return entire list or string.\n\t     * - `end`: The ending index of the subset to return.\n\t     *   - **omitted**: return all items until the end.\n\t     *   - **if positive**: return all items before `end` index of the list or string.\n\t     *   - **if negative**: return all items before `end` index from the end of the list or string.\n\t     *\n\t     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n\t     * and `String.prototype.slice()`.\n\t     *\n\t     * When operating on a [List], the returned list is always a copy even when all\n\t     * the elements are being returned.\n\t     *\n\t     * When operating on a blank value, the pipe returns the blank value.\n\t     *\n\t     * ## List Example\n\t     *\n\t     * This `ngFor` example:\n\t     *\n\t     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n\t     *\n\t     * produces the following:\n\t     *\n\t     *     <li>b</li>\n\t     *     <li>c</li>\n\t     *\n\t     * ## String Examples\n\t     *\n\t     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var SlicePipe = (function () {\n\t        function SlicePipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} start\n\t         * @param {?=} end\n\t         * @return {?}\n\t         */\n\t        SlicePipe.prototype.transform = function (value, start, end) {\n\t            if (value == null)\n\t                return value;\n\t            if (!this.supports(value)) {\n\t                throw new InvalidPipeArgumentError(SlicePipe, value);\n\t            }\n\t            return value.slice(start, end);\n\t        };\n\t        /**\n\t         * @param {?} obj\n\t         * @return {?}\n\t         */\n\t        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n\t        SlicePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SlicePipe.ctorParameters = function () { return []; };\n\t        return SlicePipe;\n\t    }());\n\t\n\t    /**\n\t     * \\@ngModule CommonModule\n\t     * \\@whatItDoes Transforms string to uppercase.\n\t     * \\@howToUse `expression | uppercase`\n\t     * \\@description\n\t     *\n\t     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var UpperCasePipe = (function () {\n\t        function UpperCasePipe() {\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        UpperCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n\t            }\n\t            return value.toUpperCase();\n\t        };\n\t        UpperCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        UpperCasePipe.ctorParameters = function () { return []; };\n\t        return UpperCasePipe;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular pipes that are likely to be used in each and every application.\n\t     */\n\t    var /** @type {?} */ COMMON_PIPES = [\n\t        AsyncPipe,\n\t        UpperCasePipe,\n\t        LowerCasePipe,\n\t        JsonPipe,\n\t        SlicePipe,\n\t        DecimalPipe,\n\t        PercentPipe,\n\t        CurrencyPipe,\n\t        DatePipe,\n\t        I18nPluralPipe,\n\t        I18nSelectPipe,\n\t    ];\n\t\n\t    /**\n\t     * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgFor}, ...\n\t     *\n\t     * \\@stable\n\t     */\n\t    var CommonModule = (function () {\n\t        function CommonModule() {\n\t        }\n\t        CommonModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        providers: [\n\t                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n\t                        ],\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CommonModule.ctorParameters = function () { return []; };\n\t        return CommonModule;\n\t    }());\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.10');\n\t\n\t    exports.NgLocalization = NgLocalization;\n\t    exports.CommonModule = CommonModule;\n\t    exports.NgClass = NgClass;\n\t    exports.NgFor = NgFor;\n\t    exports.NgIf = NgIf;\n\t    exports.NgPlural = NgPlural;\n\t    exports.NgPluralCase = NgPluralCase;\n\t    exports.NgStyle = NgStyle;\n\t    exports.NgSwitch = NgSwitch;\n\t    exports.NgSwitchCase = NgSwitchCase;\n\t    exports.NgSwitchDefault = NgSwitchDefault;\n\t    exports.NgTemplateOutlet = NgTemplateOutlet;\n\t    exports.AsyncPipe = AsyncPipe;\n\t    exports.DatePipe = DatePipe;\n\t    exports.I18nPluralPipe = I18nPluralPipe;\n\t    exports.I18nSelectPipe = I18nSelectPipe;\n\t    exports.JsonPipe = JsonPipe;\n\t    exports.LowerCasePipe = LowerCasePipe;\n\t    exports.CurrencyPipe = CurrencyPipe;\n\t    exports.DecimalPipe = DecimalPipe;\n\t    exports.PercentPipe = PercentPipe;\n\t    exports.SlicePipe = SlicePipe;\n\t    exports.UpperCasePipe = UpperCasePipe;\n\t    exports.VERSION = VERSION;\n\t    exports.Version = _angular_core.Version;\n\t    exports.PlatformLocation = PlatformLocation;\n\t    exports.LOCATION_INITIALIZED = LOCATION_INITIALIZED;\n\t    exports.LocationStrategy = LocationStrategy;\n\t    exports.APP_BASE_HREF = APP_BASE_HREF;\n\t    exports.HashLocationStrategy = HashLocationStrategy;\n\t    exports.PathLocationStrategy = PathLocationStrategy;\n\t    exports.Location = Location;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! version: \"0.1.0\" */\n\t!function(t,e){if(true)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)(\"object\"==typeof exports?exports:t)[n]=r[n]}}(this,function(){return function(t){function e(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return t[n].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var r={};return e.m=t,e.c=r,e.p=\"/static/\",e(0)}([function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=r(12),i=function(){function t(){this.events={}}return t.prototype.publish=function(t,e,r){return void 0===r&&(r=1),this.getSubjectByEventName(t,r).next(e),this},t.prototype.subscribe=function(t,e,r){if(void 0===r&&(r=1),!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t,r).subscribe(e);return n},t.prototype.subscribeOnce=function(t,e){var r=this;if(!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t).subscribe(function(t){e(t),r.unsubscribe(n)});return n},t.prototype.unsubscribe=function(t){return t&&t.unsubscribe(),this},t.prototype.unsubscribeAll=function(t){return t&&t.forEach(function(t){t.unsubscribe()}),this},t.prototype.dispose=function(t){return this.events[t]?(this.getSubjectByEventName(t).unsubscribe(),delete this.events[t]):console.warn(\"The event [\"+t+\"] doesn't exist!\"),this},t.prototype.hasSubscribers=function(t){var e=!1;return this.events[t]&&this.getSubjectByEventName(t).observers.length>0&&(e=!0),e},t.prototype.getEvents=function(){return this.events},t.prototype.getSubjects=function(){return this.getEvents()},t.prototype.getSubjectByEventName=function(t,e){return void 0===e&&(e=1),this.events[t]||(this.events[t]=new n.ReplaySubject(e)),this.events[t]},t.prototype.isCallback=function(t){return!(!t||\"function\"!=typeof t)||(console.warn(\"Callback is missing! Subscription cancelled!\"),!1)},t}();e.RxPubSub=i},function(t,e,r){\"use strict\";function n(t){return t.reduce(function(t,e){return t.concat(e instanceof h.UnsubscriptionError?e.errors:e)},[])}var i=r(24),s=r(25),o=r(10),c=r(27),u=r(9),h=r(23),p=function(){function t(t){this.closed=!1,this._parent=null,this._parents=null,this._subscriptions=null,t&&(this._unsubscribe=t)}return t.prototype.unsubscribe=function(){var t,e=!1;if(!this.closed){var r=this,p=r._parent,a=r._parents,b=r._unsubscribe,f=r._subscriptions;this.closed=!0,this._parent=null,this._parents=null,this._subscriptions=null;for(var l=-1,d=a?a.length:0;p;)p.remove(this),p=++l<d&&a[l]||null;if(o.isFunction(b)){var y=c.tryCatch(b).call(this);y===u.errorObject&&(e=!0,t=t||(u.errorObject.e instanceof h.UnsubscriptionError?n(u.errorObject.e.errors):[u.errorObject.e]))}if(i.isArray(f))for(l=-1,d=f.length;++l<d;){var v=f[l];if(s.isObject(v)){var y=c.tryCatch(v.unsubscribe).call(v);if(y===u.errorObject){e=!0,t=t||[];var w=u.errorObject.e;w instanceof h.UnsubscriptionError?t=t.concat(n(w.errors)):t.push(w)}}}if(e)throw new h.UnsubscriptionError(t)}},t.prototype.add=function(e){if(!e||e===t.EMPTY)return t.EMPTY;if(e===this)return this;var r=e;switch(typeof e){case\"function\":r=new t(e);case\"object\":if(r.closed||\"function\"!=typeof r.unsubscribe)return r;if(this.closed)return r.unsubscribe(),r;if(\"function\"!=typeof r._addParent){var n=r;r=new t,r._subscriptions=[n]}break;default:throw new Error(\"unrecognized teardown \"+e+\" added to Subscription.\")}var i=this._subscriptions||(this._subscriptions=[]);return i.push(r),r._addParent(this),r},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var r=e.indexOf(t);r!==-1&&e.splice(r,1)}},t.prototype._addParent=function(t){var e=this,r=e._parent,n=e._parents;r&&r!==t?n?n.indexOf(t)===-1&&n.push(t):this._parents=[t]:this._parent=t},t.EMPTY=function(t){return t.closed=!0,t}(new t),t}();e.Subscription=p},function(t,e){(function(t){\"use strict\";var r=\"undefined\"!=typeof window&&window,n=\"undefined\"!=typeof self&&\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,i=\"undefined\"!=typeof t&&t,s=r||i||n;e.root=s,function(){if(!s)throw new Error(\"RxJS could not find any global context (window, self, global)\")}()}).call(e,function(){return this}())},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(10),s=r(1),o=r(6),c=r(4),u=function(t){function e(r,n,i){switch(t.call(this),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=o.empty;break;case 1:if(!r){this.destination=o.empty;break}if(\"object\"==typeof r){r instanceof e?(this.destination=r,this.destination.add(this)):(this.syncErrorThrowable=!0,this.destination=new h(this,r));break}default:this.syncErrorThrowable=!0,this.destination=new h(this,r,n,i)}}return n(e,t),e.prototype[c.rxSubscriber]=function(){return this},e.create=function(t,r,n){var i=new e(t,r,n);return i.syncErrorThrowable=!1,i},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this,e=t._parent,r=t._parents;return this._parent=null,this._parents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parent=e,this._parents=r,this},e}(s.Subscription);e.Subscriber=u;var h=function(t){function e(e,r,n,s){t.call(this),this._parentSubscriber=e;var c,u=this;i.isFunction(r)?c=r:r&&(c=r.next,n=r.error,s=r.complete,r!==o.empty&&(u=Object.create(r),i.isFunction(u.unsubscribe)&&this.add(u.unsubscribe.bind(u)),u.unsubscribe=this.unsubscribe.bind(this))),this._context=u,this._next=c,this._error=n,this._complete=s}return n(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber;if(this._error)e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else{if(!e.syncErrorThrowable)throw this.unsubscribe(),t;e.syncErrorValue=t,e.syncErrorThrown=!0,this.unsubscribe()}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var r=function(){return t._complete.call(t._context)};e.syncErrorThrowable?(this.__tryOrSetError(e,r),this.unsubscribe()):(this.__tryOrUnsub(r),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){throw this.unsubscribe(),t}},e.prototype.__tryOrSetError=function(t,e,r){try{e.call(this._context,r)}catch(e){return t.syncErrorValue=e,t.syncErrorThrown=!0,!0}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(u)},function(t,e,r){\"use strict\";var n=r(2),i=n.root.Symbol;e.rxSubscriber=\"function\"==typeof i&&\"function\"==typeof i.for?i.for(\"rxSubscriber\"):\"@@rxSubscriber\",e.$$rxSubscriber=e.rxSubscriber},function(t,e,r){\"use strict\";var n=r(2),i=r(26),s=r(22),o=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var r=new t;return r.source=this,r.operator=e,r},t.prototype.subscribe=function(t,e,r){var n=this.operator,s=i.toSubscriber(t,e,r);if(n?n.call(s,this.source):s.add(this._trySubscribe(s)),s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){t.syncErrorThrown=!0,t.syncErrorValue=e,t.error(e)}},t.prototype.forEach=function(t,e){var r=this;if(e||(n.root.Rx&&n.root.Rx.config&&n.root.Rx.config.Promise?e=n.root.Rx.config.Promise:n.root.Promise&&(e=n.root.Promise)),!e)throw new Error(\"no Promise impl found\");return new e(function(e,n){var i;i=r.subscribe(function(e){if(i)try{t(e)}catch(t){n(t),i.unsubscribe()}else t(e)},n,e)})},t.prototype._subscribe=function(t){return this.source.subscribe(t)},t.prototype[s.observable]=function(){return this},t.create=function(e){return new t(e)},t}();e.Observable=o},function(t,e){\"use strict\";e.empty={closed:!0,next:function(t){},error:function(t){throw t},complete:function(){}}},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this),this.subject=e,this.subscriber=r,this.closed=!1}return n(e,t),e.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,e=t.observers;if(this.subject=null,e&&0!==e.length&&!t.isStopped&&!t.closed){var r=e.indexOf(this.subscriber);r!==-1&&e.splice(r,1)}}},e}(i.Subscription);e.SubjectSubscription=s},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(){var e=t.call(this,\"object unsubscribed\");this.name=e.name=\"ObjectUnsubscribedError\",this.stack=e.stack,this.message=e.message}return r(e,t),e}(Error);e.ObjectUnsubscribedError=n},function(t,e){\"use strict\";e.errorObject={e:{}}},function(t,e){\"use strict\";function r(t){return\"function\"==typeof t}e.isFunction=r},function(t,e,r){\"use strict\";var n=r(5),i=function(){function t(t,e,r){this.kind=t,this.value=e,this.error=r,this.hasValue=\"N\"===t}return t.prototype.observe=function(t){switch(this.kind){case\"N\":return t.next&&t.next(this.value);case\"E\":return t.error&&t.error(this.error);case\"C\":return t.complete&&t.complete()}},t.prototype.do=function(t,e,r){var n=this.kind;switch(n){case\"N\":return t&&t(this.value);case\"E\":return e&&e(this.error);case\"C\":return r&&r()}},t.prototype.accept=function(t,e,r){return t&&\"function\"==typeof t.next?this.observe(t):this.do(t,e,r)},t.prototype.toObservable=function(){var t=this.kind;switch(t){case\"N\":return n.Observable.of(this.value);case\"E\":return n.Observable.throw(this.error);case\"C\":return n.Observable.empty()}throw new Error(\"unexpected notification kind value\")},t.createNext=function(e){return\"undefined\"!=typeof e?new t(\"N\",e):this.undefinedValueNotification},t.createError=function(e){return new t(\"E\",void 0,e)},t.createComplete=function(){return this.completeNotification},t.completeNotification=new t(\"C\"),t.undefinedValueNotification=new t(\"N\",void 0),t}();e.Notification=i},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(14),s=r(21),o=r(1),c=r(15),u=r(8),h=r(7),p=function(t){function e(e,r,n){void 0===e&&(e=Number.POSITIVE_INFINITY),void 0===r&&(r=Number.POSITIVE_INFINITY),t.call(this),this.scheduler=n,this._events=[],this._bufferSize=e<1?1:e,this._windowTime=r<1?1:r}return n(e,t),e.prototype.next=function(e){var r=this._getNow();this._events.push(new a(r,e)),this._trimBufferThenGetEvents(),t.prototype.next.call(this,e)},e.prototype._subscribe=function(t){var e,r=this._trimBufferThenGetEvents(),n=this.scheduler;if(this.closed)throw new u.ObjectUnsubscribedError;this.hasError?e=o.Subscription.EMPTY:this.isStopped?e=o.Subscription.EMPTY:(this.observers.push(t),e=new h.SubjectSubscription(this,t)),n&&t.add(t=new c.ObserveOnSubscriber(t,n));for(var i=r.length,s=0;s<i&&!t.closed;s++)t.next(r[s].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),e},e.prototype._getNow=function(){return(this.scheduler||s.queue).now()},e.prototype._trimBufferThenGetEvents=function(){for(var t=this._getNow(),e=this._bufferSize,r=this._windowTime,n=this._events,i=n.length,s=0;s<i&&!(t-n[s].time<r);)s++;return i>e&&(s=Math.max(s,i-e)),s>0&&n.splice(0,s),n},e}(i.Subject);e.ReplaySubject=p;var a=function(){function t(t,e){this.time=t,this.value=e}return t}()},function(t,e){\"use strict\";var r=function(){function t(e,r){void 0===r&&(r=t.now),this.SchedulerAction=e,this.now=r}return t.prototype.schedule=function(t,e,r){return void 0===e&&(e=0),new this.SchedulerAction(this,t).schedule(r,e)},t.now=Date.now?Date.now:function(){return+new Date},t}();e.Scheduler=r},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(5),s=r(3),o=r(1),c=r(8),u=r(7),h=r(4),p=function(t){function e(e){t.call(this,e),this.destination=e}return n(e,t),e}(s.Subscriber);e.SubjectSubscriber=p;var a=function(t){function e(){t.call(this),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}return n(e,t),e.prototype[h.rxSubscriber]=function(){return new p(this)},e.prototype.lift=function(t){var e=new b(this,this);return e.operator=t,e},e.prototype.next=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;if(!this.isStopped)for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].next(t)},e.prototype.error=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].error(t);this.observers.length=0},e.prototype.complete=function(){if(this.closed)throw new c.ObjectUnsubscribedError;this.isStopped=!0;for(var t=this.observers,e=t.length,r=t.slice(),n=0;n<e;n++)r[n].complete();this.observers.length=0},e.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},e.prototype._trySubscribe=function(e){if(this.closed)throw new c.ObjectUnsubscribedError;return t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;return this.hasError?(t.error(this.thrownError),o.Subscription.EMPTY):this.isStopped?(t.complete(),o.Subscription.EMPTY):(this.observers.push(t),new u.SubjectSubscription(this,t))},e.prototype.asObservable=function(){var t=new i.Observable;return t.source=this,t},e.create=function(t,e){return new b(t,e)},e}(i.Observable);e.Subject=a;var b=function(t){function e(e,r){t.call(this),this.destination=e,this.source=r}return n(e,t),e.prototype.next=function(t){var e=this.destination;e&&e.next&&e.next(t)},e.prototype.error=function(t){var e=this.destination;e&&e.error&&this.destination.error(t)},e.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},e.prototype._subscribe=function(t){var e=this.source;return e?this.source.subscribe(t):o.Subscription.EMPTY},e}(a);e.AnonymousSubject=b},function(t,e,r){\"use strict\";function n(t,e){return void 0===e&&(e=0),this.lift(new c(t,e))}var i=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},s=r(3),o=r(11);e.observeOn=n;var c=function(){function t(t,e){void 0===e&&(e=0),this.scheduler=t,this.delay=e}return t.prototype.call=function(t,e){return e.subscribe(new u(t,this.scheduler,this.delay))},t}();e.ObserveOnOperator=c;var u=function(t){function e(e,r,n){void 0===n&&(n=0),t.call(this,e),this.scheduler=r,this.delay=n}return i(e,t),e.dispatch=function(t){var e=t.notification,r=t.destination;e.observe(r),this.unsubscribe()},e.prototype.scheduleMessage=function(t){this.add(this.scheduler.schedule(e.dispatch,this.delay,new h(t,this.destination)))},e.prototype._next=function(t){this.scheduleMessage(o.Notification.createNext(t))},e.prototype._error=function(t){this.scheduleMessage(o.Notification.createError(t))},e.prototype._complete=function(){this.scheduleMessage(o.Notification.createComplete())},e}(s.Subscriber);e.ObserveOnSubscriber=u;var h=function(){function t(t,e){this.notification=t,this.destination=e}return t}();e.ObserveOnMessage=h},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this)}return n(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(i.Subscription);e.Action=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(2),s=r(16),o=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r,this.pending=!1}return n(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t,this.pending=!0;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,e)),this.delay=e,this.id=this.id||this.requestAsyncId(n,this.id,e),this},e.prototype.requestAsyncId=function(t,e,r){return void 0===r&&(r=0),i.root.setInterval(t.flush.bind(t,this),r)},e.prototype.recycleAsyncId=function(t,e,r){return void 0===r&&(r=0),null!==r&&this.delay===r&&this.pending===!1?e:i.root.clearInterval(e)&&void 0||void 0},e.prototype.execute=function(t,e){if(this.closed)return new Error(\"executing a cancelled action\");this.pending=!1;var r=this._execute(t,e);return r?r:void(this.pending===!1&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null)))},e.prototype._execute=function(t,e){var r=!1,n=void 0;try{this.work(t)}catch(t){r=!0,n=!!t&&t||new Error(t)}if(r)return this.unsubscribe(),n},e.prototype._unsubscribe=function(){var t=this.id,e=this.scheduler,r=e.actions,n=r.indexOf(this);this.work=null,this.delay=null,this.state=null,this.pending=!1,this.scheduler=null,n!==-1&&r.splice(n,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null))},e}(s.Action);e.AsyncAction=o},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(13),s=function(t){function e(){t.apply(this,arguments),this.actions=[],this.active=!1,this.scheduled=void 0}return n(e,t),e.prototype.flush=function(t){var e=this.actions;if(this.active)return void e.push(t);var r;this.active=!0;do if(r=t.execute(t.state,t.delay))break;while(t=e.shift());if(this.active=!1,r){for(;t=e.shift();)t.unsubscribe();throw r}},e}(i.Scheduler);e.AsyncScheduler=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(17),s=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r}return n(e,t),e.prototype.schedule=function(e,r){return void 0===r&&(r=0),r>0?t.prototype.schedule.call(this,e,r):(this.delay=r,this.state=e,this.scheduler.flush(this),this)},e.prototype.execute=function(e,r){return r>0||this.closed?t.prototype.execute.call(this,e,r):this._execute(e,r)},e.prototype.requestAsyncId=function(e,r,n){return void 0===n&&(n=0),null!==n&&n>0||null===n&&this.delay>0?t.prototype.requestAsyncId.call(this,e,r,n):e.flush(this)},e}(i.AsyncAction);e.QueueAction=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(18),s=function(t){function e(){t.apply(this,arguments)}return n(e,t),e}(i.AsyncScheduler);e.QueueScheduler=s},function(t,e,r){\"use strict\";var n=r(19),i=r(20);e.queue=new i.QueueScheduler(n.QueueAction)},function(t,e,r){\"use strict\";function n(t){var e,r=t.Symbol;return\"function\"==typeof r?r.observable?e=r.observable:(e=r(\"observable\"),r.observable=e):e=\"@@observable\",e}var i=r(2);e.getSymbolObservable=n,e.observable=n(i.root),e.$$observable=e.observable},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(e){t.call(this),this.errors=e;var r=Error.call(this,e?e.length+\" errors occurred during unsubscription:\\n  \"+e.map(function(t,e){return e+1+\") \"+t.toString()}).join(\"\\n  \"):\"\");this.name=r.name=\"UnsubscriptionError\",this.stack=r.stack,this.message=r.message}return r(e,t),e}(Error);e.UnsubscriptionError=n},function(t,e){\"use strict\";e.isArray=Array.isArray||function(t){return t&&\"number\"==typeof t.length}},function(t,e){\"use strict\";function r(t){return null!=t&&\"object\"==typeof t}e.isObject=r},function(t,e,r){\"use strict\";function n(t,e,r){if(t){if(t instanceof i.Subscriber)return t;if(t[s.rxSubscriber])return t[s.rxSubscriber]()}return t||e||r?new i.Subscriber(t,e,r):new i.Subscriber(o.empty)}var i=r(3),s=r(4),o=r(6);e.toSubscriber=n},function(t,e,r){\"use strict\";function n(){try{return s.apply(this,arguments)}catch(t){return o.errorObject.e=t,o.errorObject}}function i(t){return s=t,n}var s,o=r(9);e.tryCatch=i}])});\n\t//# sourceMappingURL=rx-pubsub.min.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar platform_browser_1 = __webpack_require__(23);\r\n\tvar TrustHtmlPipe = (function () {\r\n\t    function TrustHtmlPipe(sanitizer) {\r\n\t        this.sanitizer = sanitizer;\r\n\t    }\r\n\t    TrustHtmlPipe.prototype.transform = function (htmlString) {\r\n\t        return this.sanitizer.bypassSecurityTrustHtml(htmlString);\r\n\t    };\r\n\t    return TrustHtmlPipe;\r\n\t}());\r\n\tTrustHtmlPipe = __decorate([\r\n\t    core_1.Pipe({\r\n\t        name: 'trustHtml'\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [platform_browser_1.DomSanitizer])\r\n\t], TrustHtmlPipe);\r\n\texports.TrustHtmlPipe = TrustHtmlPipe;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * @license Angular v2.4.10\n\t * (c) 2010-2017 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(20), __webpack_require__(2)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}),global.ng.common,global.ng.core));\n\t}(this, function (exports,_angular_common,core) { 'use strict';\n\t\n\t    var /** @type {?} */ DebugDomRootRenderer = core.__core_private__.DebugDomRootRenderer;\n\t    var /** @type {?} */ NoOpAnimationPlayer = core.__core_private__.NoOpAnimationPlayer;\n\t\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var NoOpAnimationDriver = (function () {\n\t        function NoOpAnimationDriver() {\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        NoOpAnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            return new NoOpAnimationPlayer();\n\t        };\n\t        return NoOpAnimationDriver;\n\t    }());\n\t    /**\n\t     * \\@experimental\n\t     * @abstract\n\t     */\n\t    var AnimationDriver = (function () {\n\t        function AnimationDriver() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        AnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n\t        AnimationDriver.NOOP = new NoOpAnimationDriver();\n\t        return AnimationDriver;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ globalScope;\n\t    if (typeof window === 'undefined') {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = (self);\n\t        }\n\t        else {\n\t            globalScope = (global);\n\t        }\n\t    }\n\t    else {\n\t        globalScope = (window);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var /** @type {?} */ global$1 = globalScope;\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} token\n\t     * @return {?}\n\t     */\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return \"\" + token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return \"\" + token.name;\n\t        }\n\t        var /** @type {?} */ res = token.toString();\n\t        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    /**\n\t     * @param {?} global\n\t     * @param {?} path\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function setValueOnPath(global, path, value) {\n\t        var /** @type {?} */ parts = path.split('.');\n\t        var /** @type {?} */ obj = global;\n\t        while (parts.length > 1) {\n\t            var /** @type {?} */ name_1 = parts.shift();\n\t            if (obj.hasOwnProperty(name_1) && obj[name_1] != null) {\n\t                obj = obj[name_1];\n\t            }\n\t            else {\n\t                obj = obj[name_1] = {};\n\t            }\n\t        }\n\t        if (obj === undefined || obj === null) {\n\t            obj = {};\n\t        }\n\t        obj[parts.shift()] = value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ _DOM = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getDOM() {\n\t        return _DOM;\n\t    }\n\t    /**\n\t     * @param {?} adapter\n\t     * @return {?}\n\t     */\n\t    function setRootDomAdapter(adapter) {\n\t        if (!_DOM) {\n\t            _DOM = adapter;\n\t        }\n\t    }\n\t    /**\n\t     * Provides DOM operations in an environment-agnostic way.\n\t     *\n\t     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n\t     * can introduce XSS risks.\n\t     * @abstract\n\t     */\n\t    var DomAdapter = (function () {\n\t        function DomAdapter() {\n\t            this.resourceLoaderType = null;\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasProperty = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setProperty = function (el, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getProperty = function (el, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} methodName\n\t         * @param {?} args\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.invoke = function (el, methodName, args) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.logError = function (error) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.log = function (error) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.logGroup = function (error) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.logGroupEnd = function () { };\n\t        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n\t            /**\n\t             * Maps attribute names to their corresponding property names for cases\n\t             * where attribute name doesn't match property name.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._attrToPropMap; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) { this._attrToPropMap = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        ;\n\t        /**\n\t         * @abstract\n\t         * @param {?} templateHtml\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.parse = function (templateHtml) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.query = function (selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.querySelector = function (el /** TODO #9100 */, selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.querySelectorAll = function (el /** TODO #9100 */, selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.on = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.onAndCancel = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.dispatchEvent = function (el /** TODO #9100 */, evt) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createMouseEvent = function (eventType) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createEvent = function (eventType) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.preventDefault = function (evt) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isPrevented = function (evt) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getInnerHTML = function (el) { };\n\t        /**\n\t         * Returns content if el is a <template> element, null otherwise.\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getTemplateContent = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getOuterHTML = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.nodeName = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.nodeValue = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.type = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.content = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.firstChild = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.nextSibling = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.parentElement = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.childNodes = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.childNodesAsList = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.clearNodes = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.appendChild = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeChild = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} newNode\n\t         * @param {?} oldNode\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.replaceChild = function (el /** TODO #9100 */, newNode /** TODO #9100 */, oldNode) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.remove = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.insertBefore = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.insertAllBefore = function (el /** TODO #9100 */, nodes) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.insertAfter = function (el /** TODO #9100 */, node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setInnerHTML = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getText = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setText = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getValue = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setValue = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getChecked = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setChecked = function (el /** TODO #9100 */, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createComment = function (text) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} html\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createTemplate = function (html) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createElement = function (tagName /** TODO #9100 */, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} ns\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createElementNS = function (ns, tagName, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} text\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createTextNode = function (text, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} attrName\n\t         * @param {?} attrValue\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} css\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createStyleElement = function (css, doc) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createShadowRoot = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getShadowRoot = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getHost = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getDistributedNodes = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.clone /*<T extends Node>*/ = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getElementsByClassName = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getElementsByTagName = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.classList = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.addClass = function (element /** TODO #9100 */, className) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeClass = function (element /** TODO #9100 */, className) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasClass = function (element /** TODO #9100 */, className) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeStyle = function (element /** TODO #9100 */, styleName) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getStyle = function (element /** TODO #9100 */, styleName) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?=} styleValue\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.tagName = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.attributeMap = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasAttribute = function (element /** TODO #9100 */, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getAttribute = function (element /** TODO #9100 */, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setAttribute = function (element /** TODO #9100 */, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setAttributeNS = function (element /** TODO #9100 */, ns, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeAttribute = function (element /** TODO #9100 */, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.removeAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.templateAwareRoot = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.createHtmlDocument = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.defaultDoc = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getBoundingClientRect = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getTitle = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} newTitle\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setTitle = function (newTitle) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} n\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.elementMatches = function (n /** TODO #9100 */, selector) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isTemplateElement = function (el) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isTextNode = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isCommentNode = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isElementNode = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.hasShadowRoot = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.isShadowRoot = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.importIntoDoc /*<T extends Node>*/ = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.adoptNode /*<T extends Node>*/ = function (node) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getHref = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} event\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getEventKey = function (event) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} baseUrl\n\t         * @param {?} href\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.resolveAndSetHref = function (element /** TODO #9100 */, baseUrl, href) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsDOMEvents = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsNativeShadowDOM = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} target\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getGlobalEventTarget = function (target) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getHistory = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getLocation = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getBaseHref = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.resetBaseElement = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getUserAgent = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setData = function (element /** TODO #9100 */, name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getComputedStyle = function (element) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getData = function (element /** TODO #9100 */, name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setGlobalVar = function (name, value) { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsWebAnimation = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.performanceNow = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getAnimationPrefix = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getTransitionEnd = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsAnimation = function () { };\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.supportsCookies = function () { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.getCookie = function (name) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomAdapter.prototype.setCookie = function (name, value) { };\n\t        return DomAdapter;\n\t    }());\n\t\n\t    var WebAnimationsPlayer = (function () {\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} keyframes\n\t         * @param {?} options\n\t         * @param {?=} previousPlayers\n\t         */\n\t        function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n\t            var _this = this;\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            this.element = element;\n\t            this.keyframes = keyframes;\n\t            this.options = options;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._initialized = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            this._duration = options['duration'];\n\t            this.previousStyles = {};\n\t            previousPlayers.forEach(function (player) {\n\t                var styles = player._captureStyles();\n\t                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n\t            });\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.init = function () {\n\t            var _this = this;\n\t            if (this._initialized)\n\t                return;\n\t            this._initialized = true;\n\t            var /** @type {?} */ keyframes = this.keyframes.map(function (styles) {\n\t                var /** @type {?} */ formattedKeyframe = {};\n\t                Object.keys(styles).forEach(function (prop, index) {\n\t                    var /** @type {?} */ value = styles[prop];\n\t                    if (value == core.AUTO_STYLE) {\n\t                        value = _computeStyle(_this.element, prop);\n\t                    }\n\t                    if (value != undefined) {\n\t                        formattedKeyframe[prop] = value;\n\t                    }\n\t                });\n\t                return formattedKeyframe;\n\t            });\n\t            var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n\t            if (previousStyleProps.length) {\n\t                var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n\t                var /** @type {?} */ missingStyleProps_1 = [];\n\t                previousStyleProps.forEach(function (prop) {\n\t                    if (!isPresent(startingKeyframe_1[prop])) {\n\t                        missingStyleProps_1.push(prop);\n\t                    }\n\t                    startingKeyframe_1[prop] = _this.previousStyles[prop];\n\t                });\n\t                if (missingStyleProps_1.length) {\n\t                    var _loop_1 = function(i) {\n\t                        var /** @type {?} */ kf = keyframes[i];\n\t                        missingStyleProps_1.forEach(function (prop) { kf[prop] = _computeStyle(_this.element, prop); });\n\t                    };\n\t                    for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n\t                        _loop_1(i);\n\t                    }\n\t                }\n\t            }\n\t            this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n\t            this._finalKeyframe = _copyKeyframeStyles(keyframes[keyframes.length - 1]);\n\t            // this is required so that the player doesn't start to animate right away\n\t            this._resetDomPlayerState();\n\t            this._player.addEventListener('finish', function () { return _this._onFinish(); });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} element\n\t         * @param {?} keyframes\n\t         * @param {?} options\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n\t            // jscompiler doesn't seem to know animate is a native property because it's not fully\n\t            // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n\t            return (element['animate'](keyframes, options));\n\t        };\n\t        Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._player; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.play = function () {\n\t            this.init();\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._player.play();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.pause = function () {\n\t            this.init();\n\t            this._player.pause();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.finish = function () {\n\t            this.init();\n\t            this._onFinish();\n\t            this._player.finish();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.reset = function () {\n\t            this._resetDomPlayerState();\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._resetDomPlayerState = function () {\n\t            if (this._player) {\n\t                this._player.cancel();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.restart = function () {\n\t            this.reset();\n\t            this.play();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._resetDomPlayerState();\n\t                this._onFinish();\n\t                this._destroyed = true;\n\t            }\n\t        };\n\t        Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._duration; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} p\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.totalTime; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.totalTime; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        WebAnimationsPlayer.prototype._captureStyles = function () {\n\t            var _this = this;\n\t            var /** @type {?} */ styles = {};\n\t            if (this.hasStarted()) {\n\t                Object.keys(this._finalKeyframe).forEach(function (prop) {\n\t                    if (prop != 'offset') {\n\t                        styles[prop] =\n\t                            _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n\t                    }\n\t                });\n\t            }\n\t            return styles;\n\t        };\n\t        return WebAnimationsPlayer;\n\t    }());\n\t    /**\n\t     * @param {?} element\n\t     * @param {?} prop\n\t     * @return {?}\n\t     */\n\t    function _computeStyle(element, prop) {\n\t        return getDOM().getComputedStyle(element)[prop];\n\t    }\n\t    /**\n\t     * @param {?} styles\n\t     * @return {?}\n\t     */\n\t    function _copyKeyframeStyles(styles) {\n\t        var /** @type {?} */ newStyles = {};\n\t        Object.keys(styles).forEach(function (prop) {\n\t            if (prop != 'offset') {\n\t                newStyles[prop] = styles[prop];\n\t            }\n\t        });\n\t        return newStyles;\n\t    }\n\t\n\t    var WebAnimationsDriver = (function () {\n\t        function WebAnimationsDriver() {\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        WebAnimationsDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            var /** @type {?} */ formattedSteps = [];\n\t            var /** @type {?} */ startingStyleLookup = {};\n\t            if (isPresent(startingStyles)) {\n\t                startingStyleLookup = _populateStyles(startingStyles, {});\n\t            }\n\t            keyframes.forEach(function (keyframe) {\n\t                var /** @type {?} */ data = _populateStyles(keyframe.styles, startingStyleLookup);\n\t                data['offset'] = Math.max(0, Math.min(1, keyframe.offset));\n\t                formattedSteps.push(data);\n\t            });\n\t            // Styling passed into element.animate() must always be balanced.\n\t            // The special cases below can occur if only style() calls exist\n\t            // within an animation or when a style() calls are used prior\n\t            // to a group() animation being issued or if the renderer is\n\t            // invoked by the user directly.\n\t            if (formattedSteps.length == 0) {\n\t                formattedSteps = [startingStyleLookup, startingStyleLookup];\n\t            }\n\t            else if (formattedSteps.length == 1) {\n\t                var /** @type {?} */ start = startingStyleLookup;\n\t                var /** @type {?} */ end = formattedSteps[0];\n\t                end['offset'] = null;\n\t                formattedSteps = [start, end];\n\t            }\n\t            var /** @type {?} */ playerOptions = {\n\t                'duration': duration,\n\t                'delay': delay,\n\t                'fill': 'both' // we use `both` because it allows for styling at 0% to work with `delay`\n\t            };\n\t            // we check for this to avoid having a null|undefined value be present\n\t            // for the easing (which results in an error for certain browsers #9752)\n\t            if (easing) {\n\t                playerOptions['easing'] = easing;\n\t            }\n\t            // there may be a chance a NoOp player is returned depending\n\t            // on when the previous animation was cancelled\n\t            previousPlayers = previousPlayers.filter(filterWebAnimationPlayerFn);\n\t            return new WebAnimationsPlayer(element, formattedSteps, playerOptions, /** @type {?} */ (previousPlayers));\n\t        };\n\t        return WebAnimationsDriver;\n\t    }());\n\t    /**\n\t     * @param {?} styles\n\t     * @param {?} defaultStyles\n\t     * @return {?}\n\t     */\n\t    function _populateStyles(styles, defaultStyles) {\n\t        var /** @type {?} */ data = {};\n\t        styles.styles.forEach(function (entry) { Object.keys(entry).forEach(function (prop) { data[prop] = entry[prop]; }); });\n\t        Object.keys(defaultStyles).forEach(function (prop) {\n\t            if (!isPresent(data[prop])) {\n\t                data[prop] = defaultStyles[prop];\n\t            }\n\t        });\n\t        return data;\n\t    }\n\t    /**\n\t     * @param {?} player\n\t     * @return {?}\n\t     */\n\t    function filterWebAnimationPlayerFn(player) {\n\t        return player instanceof WebAnimationsPlayer;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides DOM operations in any browser environment.\n\t     *\n\t     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n\t     * can introduce XSS risks.\n\t     * @abstract\n\t     */\n\t    var GenericBrowserDomAdapter = (function (_super) {\n\t        __extends$1(GenericBrowserDomAdapter, _super);\n\t        function GenericBrowserDomAdapter() {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._animationPrefix = null;\n\t            this._transitionEnd = null;\n\t            try {\n\t                var element_1 = this.createElement('div', this.defaultDoc());\n\t                if (isPresent(this.getStyle(element_1, 'animationName'))) {\n\t                    this._animationPrefix = '';\n\t                }\n\t                else {\n\t                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\t                    for (var i = 0; i < domPrefixes.length; i++) {\n\t                        if (isPresent(this.getStyle(element_1, domPrefixes[i] + 'AnimationName'))) {\n\t                            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                var transEndEventNames_1 = {\n\t                    WebkitTransition: 'webkitTransitionEnd',\n\t                    MozTransition: 'transitionend',\n\t                    OTransition: 'oTransitionEnd otransitionend',\n\t                    transition: 'transitionend'\n\t                };\n\t                Object.keys(transEndEventNames_1).forEach(function (key) {\n\t                    if (isPresent(_this.getStyle(element_1, key))) {\n\t                        _this._transitionEnd = transEndEventNames_1[key];\n\t                    }\n\t                });\n\t            }\n\t            catch (e) {\n\t                this._animationPrefix = null;\n\t                this._transitionEnd = null;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return ((el)).getDistributedNodes(); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} baseUrl\n\t         * @param {?} href\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n\t            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n\t            return typeof ((this.defaultDoc().body)).createShadowRoot === 'function';\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n\t            return isPresent(this._animationPrefix) && isPresent(this._transitionEnd);\n\t        };\n\t        return GenericBrowserDomAdapter;\n\t    }(DomAdapter));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ _attrToPropMap = {\n\t        'class': 'className',\n\t        'innerHtml': 'innerHTML',\n\t        'readonly': 'readOnly',\n\t        'tabindex': 'tabIndex',\n\t    };\n\t    var /** @type {?} */ DOM_KEY_LOCATION_NUMPAD = 3;\n\t    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\t    var /** @type {?} */ _keyMap = {\n\t        // The following values are here for cross-browser compatibility and to match the W3C standard\n\t        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n\t        '\\b': 'Backspace',\n\t        '\\t': 'Tab',\n\t        '\\x7F': 'Delete',\n\t        '\\x1B': 'Escape',\n\t        'Del': 'Delete',\n\t        'Esc': 'Escape',\n\t        'Left': 'ArrowLeft',\n\t        'Right': 'ArrowRight',\n\t        'Up': 'ArrowUp',\n\t        'Down': 'ArrowDown',\n\t        'Menu': 'ContextMenu',\n\t        'Scroll': 'ScrollLock',\n\t        'Win': 'OS'\n\t    };\n\t    // There is a bug in Chrome for numeric keypad keys:\n\t    // https://code.google.com/p/chromium/issues/detail?id=155654\n\t    // 1, 2, 3 ... are reported as A, B, C ...\n\t    var /** @type {?} */ _chromeNumKeyPadMap = {\n\t        'A': '1',\n\t        'B': '2',\n\t        'C': '3',\n\t        'D': '4',\n\t        'E': '5',\n\t        'F': '6',\n\t        'G': '7',\n\t        'H': '8',\n\t        'I': '9',\n\t        'J': '*',\n\t        'K': '+',\n\t        'M': '-',\n\t        'N': '.',\n\t        'O': '/',\n\t        '\\x60': '0',\n\t        '\\x90': 'NumLock'\n\t    };\n\t    var BrowserDomAdapter = (function (_super) {\n\t        __extends(BrowserDomAdapter, _super);\n\t        function BrowserDomAdapter() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @param {?} templateHtml\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { ((el))[name] = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getProperty = function (el, name) { return ((el))[name]; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} methodName\n\t         * @param {?} args\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (_a = ((el)))[methodName].apply(_a, args); var _a; };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.logError = function (error) {\n\t            if (window.console) {\n\t                if (console.error) {\n\t                    console.error(error);\n\t                }\n\t                else {\n\t                    console.log(error);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.log = function (error) {\n\t            if (window.console) {\n\t                window.console.log && window.console.log(error);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} error\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.logGroup = function (error) {\n\t            if (window.console) {\n\t                window.console.group && window.console.group(error);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.logGroupEnd = function () {\n\t            if (window.console) {\n\t                window.console.groupEnd && window.console.groupEnd();\n\t            }\n\t        };\n\t        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return _attrToPropMap; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.querySelector = function (el, selector) {\n\t            return (el.querySelector(selector));\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @param {?} listener\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n\t            el.addEventListener(evt, listener, false);\n\t            // Needed to follow Dart's subscription semantic, until fix of\n\t            // https://code.google.com/p/dart/issues/detail?id=17406\n\t            return function () { el.removeEventListener(evt, listener, false); };\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n\t        /**\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n\t            var /** @type {?} */ evt = document.createEvent('MouseEvent');\n\t            evt.initEvent(eventType, true, true);\n\t            return evt;\n\t        };\n\t        /**\n\t         * @param {?} eventType\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createEvent = function (eventType) {\n\t            var /** @type {?} */ evt = document.createEvent('Event');\n\t            evt.initEvent(eventType, true, true);\n\t            return evt;\n\t        };\n\t        /**\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.preventDefault = function (evt) {\n\t            evt.preventDefault();\n\t            evt.returnValue = false;\n\t        };\n\t        /**\n\t         * @param {?} evt\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isPrevented = function (evt) {\n\t            return evt.defaultPrevented || isPresent(evt.returnValue) && !evt.returnValue;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n\t            return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.content = function (node) {\n\t            if (this.hasProperty(node, 'content')) {\n\t                return ((node)).content;\n\t            }\n\t            else {\n\t                return node;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n\t            var /** @type {?} */ childNodes = el.childNodes;\n\t            var /** @type {?} */ res = new Array(childNodes.length);\n\t            for (var /** @type {?} */ i = 0; i < childNodes.length; i++) {\n\t                res[i] = childNodes[i];\n\t            }\n\t            return res;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.clearNodes = function (el) {\n\t            while (el.firstChild) {\n\t                el.removeChild(el.firstChild);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} newChild\n\t         * @param {?} oldChild\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.remove = function (node) {\n\t            if (node.parentNode) {\n\t                node.parentNode.removeChild(node);\n\t            }\n\t            return node;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {\n\t            nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); });\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n\t        /**\n\t         * @param {?} el\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n\t        /**\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n\t        /**\n\t         * @param {?} html\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createTemplate = function (html) {\n\t            var /** @type {?} */ t = document.createElement('template');\n\t            t.innerHTML = html;\n\t            return t;\n\t        };\n\t        /**\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createElement(tagName);\n\t        };\n\t        /**\n\t         * @param {?} ns\n\t         * @param {?} tagName\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createElementNS(ns, tagName);\n\t        };\n\t        /**\n\t         * @param {?} text\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            return doc.createTextNode(text);\n\t        };\n\t        /**\n\t         * @param {?} attrName\n\t         * @param {?} attrValue\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            var /** @type {?} */ el = (doc.createElement('SCRIPT'));\n\t            el.setAttribute(attrName, attrValue);\n\t            return el;\n\t        };\n\t        /**\n\t         * @param {?} css\n\t         * @param {?=} doc\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n\t            if (doc === void 0) { doc = document; }\n\t            var /** @type {?} */ style = (doc.createElement('style'));\n\t            this.appendChild(style, this.createTextNode(css));\n\t            return style;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return ((el)).createShadowRoot(); };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return ((el)).shadowRoot; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getHost = function (el) { return ((el)).host; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n\t            return element.getElementsByClassName(name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n\t            return element.getElementsByTagName(name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} className\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasClass = function (element, className) {\n\t            return element.classList.contains(className);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n\t            element.style[styleName] = styleValue;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} stylename\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n\t            // IE requires '' instead of null\n\t            // see https://github.com/angular/angular/issues/7916\n\t            element.style[stylename] = '';\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} stylename\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} styleName\n\t         * @param {?=} styleValue\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n\t            if (styleValue === void 0) { styleValue = null; }\n\t            var /** @type {?} */ value = this.getStyle(element, styleName) || '';\n\t            return styleValue ? value == styleValue : value.length > 0;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.attributeMap = function (element) {\n\t            var /** @type {?} */ res = new Map();\n\t            var /** @type {?} */ elAttrs = element.attributes;\n\t            for (var /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n\t                var /** @type {?} */ attrib = elAttrs[i];\n\t                res.set(attrib.name, attrib.value);\n\t            }\n\t            return res;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n\t            return element.hasAttribute(attribute);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n\t            return element.hasAttributeNS(ns, attribute);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n\t            return element.getAttribute(attribute);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n\t            return element.getAttributeNS(ns, name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n\t            element.setAttributeNS(ns, name, value);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} attribute\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} ns\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n\t            element.removeAttributeNS(ns, name);\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.createHtmlDocument = function () {\n\t            return document.implementation.createHTMLDocument('fakeTitle');\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n\t            try {\n\t                return el.getBoundingClientRect();\n\t            }\n\t            catch (e) {\n\t                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\n\t        /**\n\t         * @param {?} newTitle\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\n\t        /**\n\t         * @param {?} n\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n\t            if (n instanceof HTMLElement) {\n\t                return n.matches && n.matches(selector) ||\n\t                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\n\t                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n\t            }\n\t            return false;\n\t        };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n\t            return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n\t            return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getHref = function (el) { return ((el)).href; };\n\t        /**\n\t         * @param {?} event\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getEventKey = function (event) {\n\t            var /** @type {?} */ key = event.key;\n\t            if (isBlank(key)) {\n\t                key = event.keyIdentifier;\n\t                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n\t                // Safari cf\n\t                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\t                if (isBlank(key)) {\n\t                    return 'Unidentified';\n\t                }\n\t                if (key.startsWith('U+')) {\n\t                    key = String.fromCharCode(parseInt(key.substring(2), 16));\n\t                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n\t                        // There is a bug in Chrome for numeric keypad keys:\n\t                        // https://code.google.com/p/chromium/issues/detail?id=155654\n\t                        // 1, 2, 3 ... are reported as A, B, C ...\n\t                        key = ((_chromeNumKeyPadMap))[key];\n\t                    }\n\t                }\n\t            }\n\t            return _keyMap[key] || key;\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\n\t            if (target === 'window') {\n\t                return window;\n\t            }\n\t            if (target === 'document') {\n\t                return document;\n\t            }\n\t            if (target === 'body') {\n\t                return document.body;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getBaseHref = function () {\n\t            var /** @type {?} */ href = getBaseElementHref();\n\t            return isBlank(href) ? null : relativePath(href);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setData = function (element, name, value) {\n\t            this.setAttribute(element, 'data-' + name, value);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getData = function (element, name) {\n\t            return this.getAttribute(element, 'data-' + name);\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n\t        /**\n\t         * @param {?} path\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(global$1, path, value); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n\t            return typeof ((Element)).prototype['animate'] === 'function';\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.performanceNow = function () {\n\t            // performance.now() is not available in all browsers, see\n\t            // http://caniuse.com/#search=performance.now\n\t            return window.performance && window.performance.now ? window.performance.now() :\n\t                new Date().getTime();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n\t        /**\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        BrowserDomAdapter.prototype.setCookie = function (name, value) {\n\t            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n\t            // not clear other cookies.\n\t            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n\t        };\n\t        return BrowserDomAdapter;\n\t    }(GenericBrowserDomAdapter));\n\t    var /** @type {?} */ baseElement = null;\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function getBaseElementHref() {\n\t        if (!baseElement) {\n\t            baseElement = document.querySelector('base');\n\t            if (!baseElement) {\n\t                return null;\n\t            }\n\t        }\n\t        return baseElement.getAttribute('href');\n\t    }\n\t    // based on urlUtils.js in AngularJS 1\n\t    var /** @type {?} */ urlParsingNode;\n\t    /**\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function relativePath(url) {\n\t        if (!urlParsingNode) {\n\t            urlParsingNode = document.createElement('a');\n\t        }\n\t        urlParsingNode.setAttribute('href', url);\n\t        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n\t            '/' + urlParsingNode.pathname;\n\t    }\n\t    /**\n\t     * @param {?} cookieStr\n\t     * @param {?} name\n\t     * @return {?}\n\t     */\n\t    function parseCookieValue(cookieStr, name) {\n\t        name = encodeURIComponent(name);\n\t        for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n\t            var cookie = _a[_i];\n\t            var /** @type {?} */ eqIndex = cookie.indexOf('=');\n\t            var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n\t            if (cookieName.trim() === name) {\n\t                return decodeURIComponent(cookieValue);\n\t            }\n\t        }\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     * @return {?}\n\t     */\n\t    function supportsState() {\n\t        return !!window.history.pushState;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n\t     * This class should not be used directly by an application developer. Instead, use\n\t     * {\\@link Location}.\n\t     */\n\t    var BrowserPlatformLocation = (function (_super) {\n\t        __extends$2(BrowserPlatformLocation, _super);\n\t        function BrowserPlatformLocation() {\n\t            _super.call(this);\n\t            this._init();\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype._init = function () {\n\t            this._location = getDOM().getLocation();\n\t            this._history = getDOM().getHistory();\n\t        };\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.onPopState = function (fn) {\n\t            getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n\t            getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n\t        };\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location.pathname; },\n\t            /**\n\t             * @param {?} newPath\n\t             * @return {?}\n\t             */\n\t            set: function (newPath) { this._location.pathname = newPath; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location.search; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._location.hash; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n\t            if (supportsState()) {\n\t                this._history.pushState(state, title, url);\n\t            }\n\t            else {\n\t                this._location.hash = url;\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} state\n\t         * @param {?} title\n\t         * @param {?} url\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n\t            if (supportsState()) {\n\t                this._history.replaceState(state, title, url);\n\t            }\n\t            else {\n\t                this._location.hash = url;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n\t        BrowserPlatformLocation.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserPlatformLocation.ctorParameters = function () { return []; };\n\t        return BrowserPlatformLocation;\n\t    }(_angular_common.PlatformLocation));\n\t\n\t    var BrowserGetTestability = (function () {\n\t        function BrowserGetTestability() {\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        BrowserGetTestability.init = function () { core.setTestabilityGetter(new BrowserGetTestability()); };\n\t        /**\n\t         * @param {?} registry\n\t         * @return {?}\n\t         */\n\t        BrowserGetTestability.prototype.addToWindow = function (registry) {\n\t            global$1.getAngularTestability = function (elem, findInAncestors) {\n\t                if (findInAncestors === void 0) { findInAncestors = true; }\n\t                var /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n\t                if (testability == null) {\n\t                    throw new Error('Could not find testability for element.');\n\t                }\n\t                return testability;\n\t            };\n\t            global$1.getAllAngularTestabilities = function () { return registry.getAllTestabilities(); };\n\t            global$1.getAllAngularRootElements = function () { return registry.getAllRootElements(); };\n\t            var /** @type {?} */ whenAllStable = function (callback /** TODO #9100 */) {\n\t                var /** @type {?} */ testabilities = global$1.getAllAngularTestabilities();\n\t                var /** @type {?} */ count = testabilities.length;\n\t                var /** @type {?} */ didWork = false;\n\t                var /** @type {?} */ decrement = function (didWork_ /** TODO #9100 */) {\n\t                    didWork = didWork || didWork_;\n\t                    count--;\n\t                    if (count == 0) {\n\t                        callback(didWork);\n\t                    }\n\t                };\n\t                testabilities.forEach(function (testability /** TODO #9100 */) {\n\t                    testability.whenStable(decrement);\n\t                });\n\t            };\n\t            if (!global$1['frameworkStabilizers']) {\n\t                global$1['frameworkStabilizers'] = [];\n\t            }\n\t            global$1['frameworkStabilizers'].push(whenAllStable);\n\t        };\n\t        /**\n\t         * @param {?} registry\n\t         * @param {?} elem\n\t         * @param {?} findInAncestors\n\t         * @return {?}\n\t         */\n\t        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            if (elem == null) {\n\t                return null;\n\t            }\n\t            var /** @type {?} */ t = registry.getTestability(elem);\n\t            if (isPresent(t)) {\n\t                return t;\n\t            }\n\t            else if (!findInAncestors) {\n\t                return null;\n\t            }\n\t            if (getDOM().isShadowRoot(elem)) {\n\t                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n\t            }\n\t            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n\t        };\n\t        return BrowserGetTestability;\n\t    }());\n\t\n\t    /**\n\t     * A service that can be used to get and set the title of a current HTML document.\n\t     *\n\t     * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n\t     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n\t     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n\t     * title value.\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var Title = (function () {\n\t        function Title() {\n\t        }\n\t        /**\n\t         * Get the title of the current HTML document.\n\t         * @return {?}\n\t         */\n\t        Title.prototype.getTitle = function () { return getDOM().getTitle(); };\n\t        /**\n\t         * Set the title of the current HTML document.\n\t         * @param {?} newTitle\n\t         * @return {?}\n\t         */\n\t        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(newTitle); };\n\t        return Title;\n\t    }());\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var /** @type {?} */ m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var /** @type {?} */ k1 = Object.keys(m1);\n\t            var /** @type {?} */ k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n\t                var /** @type {?} */ key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t\n\t    /**\n\t     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n\t     *\n\t     * Note: Document might not be available in the Application Context when Application and Rendering\n\t     * Contexts are not the same (e.g. when running the application into a Web Worker).\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ DOCUMENT = new core.OpaqueToken('DocumentToken');\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ EVENT_MANAGER_PLUGINS = new core.OpaqueToken('EventManagerPlugins');\n\t    /**\n\t     * \\@stable\n\t     */\n\t    var EventManager = (function () {\n\t        /**\n\t         * @param {?} plugins\n\t         * @param {?} _zone\n\t         */\n\t        function EventManager(plugins, _zone) {\n\t            var _this = this;\n\t            this._zone = _zone;\n\t            this._eventNameToPlugin = new Map();\n\t            plugins.forEach(function (p) { return p.manager = _this; });\n\t            this._plugins = plugins.slice().reverse();\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype.addEventListener = function (element, eventName, handler) {\n\t            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n\t            return plugin.addEventListener(element, eventName, handler);\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n\t            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n\t            return plugin.addGlobalEventListener(target, eventName, handler);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype.getZone = function () { return this._zone; };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        EventManager.prototype._findPluginFor = function (eventName) {\n\t            var /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n\t            if (plugin) {\n\t                return plugin;\n\t            }\n\t            var /** @type {?} */ plugins = this._plugins;\n\t            for (var /** @type {?} */ i = 0; i < plugins.length; i++) {\n\t                var /** @type {?} */ plugin_1 = plugins[i];\n\t                if (plugin_1.supports(eventName)) {\n\t                    this._eventNameToPlugin.set(eventName, plugin_1);\n\t                    return plugin_1;\n\t                }\n\t            }\n\t            throw new Error(\"No event manager plugin found for event \" + eventName);\n\t        };\n\t        EventManager.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        EventManager.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n\t            { type: core.NgZone, },\n\t        ]; };\n\t        return EventManager;\n\t    }());\n\t    /**\n\t     * @abstract\n\t     */\n\t    var EventManagerPlugin = (function () {\n\t        function EventManagerPlugin() {\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        EventManagerPlugin.prototype.supports = function (eventName) { };\n\t        /**\n\t         * @abstract\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) { };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n\t            var /** @type {?} */ target = getDOM().getGlobalEventTarget(element);\n\t            if (!target) {\n\t                throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n\t            }\n\t            return this.addEventListener(target, eventName, handler);\n\t        };\n\t        ;\n\t        return EventManagerPlugin;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var SharedStylesHost = (function () {\n\t        function SharedStylesHost() {\n\t            /** @internal */\n\t            this._stylesSet = new Set();\n\t        }\n\t        /**\n\t         * @param {?} styles\n\t         * @return {?}\n\t         */\n\t        SharedStylesHost.prototype.addStyles = function (styles) {\n\t            var _this = this;\n\t            var /** @type {?} */ additions = new Set();\n\t            styles.forEach(function (style) {\n\t                if (!_this._stylesSet.has(style)) {\n\t                    _this._stylesSet.add(style);\n\t                    additions.add(style);\n\t                }\n\t            });\n\t            this.onStylesAdded(additions);\n\t        };\n\t        /**\n\t         * @param {?} additions\n\t         * @return {?}\n\t         */\n\t        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n\t        SharedStylesHost.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SharedStylesHost.ctorParameters = function () { return []; };\n\t        return SharedStylesHost;\n\t    }());\n\t    var DomSharedStylesHost = (function (_super) {\n\t        __extends$4(DomSharedStylesHost, _super);\n\t        /**\n\t         * @param {?} _doc\n\t         */\n\t        function DomSharedStylesHost(_doc) {\n\t            _super.call(this);\n\t            this._doc = _doc;\n\t            this._hostNodes = new Set();\n\t            this._styleNodes = new Set();\n\t            this._hostNodes.add(_doc.head);\n\t        }\n\t        /**\n\t         * @param {?} styles\n\t         * @param {?} host\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n\t            var _this = this;\n\t            styles.forEach(function (style) {\n\t                var /** @type {?} */ styleEl = _this._doc.createElement('style');\n\t                styleEl.textContent = style;\n\t                _this._styleNodes.add(host.appendChild(styleEl));\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} hostNode\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.addHost = function (hostNode) {\n\t            this._addStylesToHost(this._stylesSet, hostNode);\n\t            this._hostNodes.add(hostNode);\n\t        };\n\t        /**\n\t         * @param {?} hostNode\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n\t        /**\n\t         * @param {?} additions\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n\t            var _this = this;\n\t            this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n\t        DomSharedStylesHost.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomSharedStylesHost.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n\t        ]; };\n\t        return DomSharedStylesHost;\n\t    }(SharedStylesHost));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ NAMESPACE_URIS = {\n\t        'xlink': 'http://www.w3.org/1999/xlink',\n\t        'svg': 'http://www.w3.org/2000/svg',\n\t        'xhtml': 'http://www.w3.org/1999/xhtml'\n\t    };\n\t    var /** @type {?} */ TEMPLATE_COMMENT_TEXT = 'template bindings={}';\n\t    var /** @type {?} */ TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/;\n\t    /**\n\t     * @abstract\n\t     */\n\t    var DomRootRenderer = (function () {\n\t        /**\n\t         * @param {?} document\n\t         * @param {?} eventManager\n\t         * @param {?} sharedStylesHost\n\t         * @param {?} animationDriver\n\t         * @param {?} appId\n\t         */\n\t        function DomRootRenderer(document, eventManager, sharedStylesHost, animationDriver, appId) {\n\t            this.document = document;\n\t            this.eventManager = eventManager;\n\t            this.sharedStylesHost = sharedStylesHost;\n\t            this.animationDriver = animationDriver;\n\t            this.appId = appId;\n\t            this.registeredComponents = new Map();\n\t        }\n\t        /**\n\t         * @param {?} componentProto\n\t         * @return {?}\n\t         */\n\t        DomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            var /** @type {?} */ renderer = this.registeredComponents.get(componentProto.id);\n\t            if (!renderer) {\n\t                renderer = new DomRenderer(this, componentProto, this.animationDriver, this.appId + \"-\" + componentProto.id);\n\t                this.registeredComponents.set(componentProto.id, renderer);\n\t            }\n\t            return renderer;\n\t        };\n\t        return DomRootRenderer;\n\t    }());\n\t    var DomRootRenderer_ = (function (_super) {\n\t        __extends$3(DomRootRenderer_, _super);\n\t        /**\n\t         * @param {?} _document\n\t         * @param {?} _eventManager\n\t         * @param {?} sharedStylesHost\n\t         * @param {?} animationDriver\n\t         * @param {?} appId\n\t         */\n\t        function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animationDriver, appId) {\n\t            _super.call(this, _document, _eventManager, sharedStylesHost, animationDriver, appId);\n\t        }\n\t        DomRootRenderer_.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomRootRenderer_.ctorParameters = function () { return [\n\t            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n\t            { type: EventManager, },\n\t            { type: DomSharedStylesHost, },\n\t            { type: AnimationDriver, },\n\t            { type: undefined, decorators: [{ type: core.Inject, args: [core.APP_ID,] },] },\n\t        ]; };\n\t        return DomRootRenderer_;\n\t    }(DomRootRenderer));\n\t    var /** @type {?} */ DIRECT_DOM_RENDERER = {\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        remove: function (node) {\n\t            if (node.parentNode) {\n\t                node.parentNode.removeChild(node);\n\t            }\n\t        },\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} parent\n\t         * @return {?}\n\t         */\n\t        appendChild: function (node, parent) { parent.appendChild(node); },\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} refNode\n\t         * @return {?}\n\t         */\n\t        insertBefore: function (node, refNode) { refNode.parentNode.insertBefore(node, refNode); },\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        nextSibling: function (node) { return node.nextSibling; },\n\t        /**\n\t         * @param {?} node\n\t         * @return {?}\n\t         */\n\t        parentElement: function (node) { return (node.parentNode); }\n\t    };\n\t    var DomRenderer = (function () {\n\t        /**\n\t         * @param {?} _rootRenderer\n\t         * @param {?} componentProto\n\t         * @param {?} _animationDriver\n\t         * @param {?} styleShimId\n\t         */\n\t        function DomRenderer(_rootRenderer, componentProto, _animationDriver, styleShimId) {\n\t            this._rootRenderer = _rootRenderer;\n\t            this.componentProto = componentProto;\n\t            this._animationDriver = _animationDriver;\n\t            this.directRenderer = DIRECT_DOM_RENDERER;\n\t            this._styles = flattenStyles(styleShimId, componentProto.styles, []);\n\t            if (componentProto.encapsulation !== core.ViewEncapsulation.Native) {\n\t                this._rootRenderer.sharedStylesHost.addStyles(this._styles);\n\t            }\n\t            if (this.componentProto.encapsulation === core.ViewEncapsulation.Emulated) {\n\t                this._contentAttr = shimContentAttribute(styleShimId);\n\t                this._hostAttr = shimHostAttribute(styleShimId);\n\t            }\n\t            else {\n\t                this._contentAttr = null;\n\t                this._hostAttr = null;\n\t            }\n\t        }\n\t        /**\n\t         * @param {?} selectorOrNode\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var /** @type {?} */ el;\n\t            if (typeof selectorOrNode === 'string') {\n\t                el = this._rootRenderer.document.querySelector(selectorOrNode);\n\t                if (!el) {\n\t                    throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n\t                }\n\t            }\n\t            else {\n\t                el = selectorOrNode;\n\t            }\n\t            while (el.firstChild) {\n\t                el.removeChild(el.firstChild);\n\t            }\n\t            return el;\n\t        };\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} name\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createElement = function (parent, name, debugInfo) {\n\t            var /** @type {?} */ el;\n\t            if (isNamespaced(name)) {\n\t                var /** @type {?} */ nsAndName = splitNamespace(name);\n\t                el = document.createElementNS((NAMESPACE_URIS)[nsAndName[0]], nsAndName[1]);\n\t            }\n\t            else {\n\t                el = document.createElement(name);\n\t            }\n\t            if (this._contentAttr) {\n\t                el.setAttribute(this._contentAttr, '');\n\t            }\n\t            if (parent) {\n\t                parent.appendChild(el);\n\t            }\n\t            return el;\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createViewRoot = function (hostElement) {\n\t            var /** @type {?} */ nodesParent;\n\t            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native) {\n\t                nodesParent = ((hostElement)).createShadowRoot();\n\t                for (var /** @type {?} */ i = 0; i < this._styles.length; i++) {\n\t                    var /** @type {?} */ styleEl = document.createElement('style');\n\t                    styleEl.textContent = this._styles[i];\n\t                    nodesParent.appendChild(styleEl);\n\t                }\n\t            }\n\t            else {\n\t                if (this._hostAttr) {\n\t                    hostElement.setAttribute(this._hostAttr, '');\n\t                }\n\t                nodesParent = hostElement;\n\t            }\n\t            return nodesParent;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var /** @type {?} */ comment = document.createComment(TEMPLATE_COMMENT_TEXT);\n\t            if (parentElement) {\n\t                parentElement.appendChild(comment);\n\t            }\n\t            return comment;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} value\n\t         * @param {?} debugInfo\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var /** @type {?} */ node = document.createTextNode(value);\n\t            if (parentElement) {\n\t                parentElement.appendChild(node);\n\t            }\n\t            return node;\n\t        };\n\t        /**\n\t         * @param {?} parentElement\n\t         * @param {?} nodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            if (!parentElement)\n\t                return;\n\t            appendNodes(parentElement, nodes);\n\t        };\n\t        /**\n\t         * @param {?} node\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) { moveNodesAfterSibling(node, viewRootNodes); };\n\t        /**\n\t         * @param {?} viewRootNodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n\t                var /** @type {?} */ node = viewRootNodes[i];\n\t                if (node.parentNode) {\n\t                    node.parentNode.removeChild(node);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} hostElement\n\t         * @param {?} viewAllNodes\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native && hostElement) {\n\t                this._rootRenderer.sharedStylesHost.removeHost(((hostElement)).shadowRoot);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\n\t        };\n\t        /**\n\t         * @param {?} target\n\t         * @param {?} name\n\t         * @param {?} callback\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            ((renderElement))[propertyName] = propertyValue;\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} attributeName\n\t         * @param {?} attributeValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var /** @type {?} */ attrNs;\n\t            var /** @type {?} */ attrNameWithoutNs = attributeName;\n\t            if (isNamespaced(attributeName)) {\n\t                var /** @type {?} */ nsAndName = splitNamespace(attributeName);\n\t                attrNameWithoutNs = nsAndName[1];\n\t                attributeName = nsAndName[0] + ':' + nsAndName[1];\n\t                attrNs = NAMESPACE_URIS[nsAndName[0]];\n\t            }\n\t            if (isPresent(attributeValue)) {\n\t                if (attrNs) {\n\t                    renderElement.setAttributeNS(attrNs, attributeName, attributeValue);\n\t                }\n\t                else {\n\t                    renderElement.setAttribute(attributeName, attributeValue);\n\t                }\n\t            }\n\t            else {\n\t                if (isPresent(attrNs)) {\n\t                    renderElement.removeAttributeNS(attrNs, attrNameWithoutNs);\n\t                }\n\t                else {\n\t                    renderElement.removeAttribute(attributeName);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} propertyName\n\t         * @param {?} propertyValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            if (renderElement.nodeType === Node.COMMENT_NODE) {\n\t                var /** @type {?} */ existingBindings = renderElement.nodeValue.replace(/\\n/g, '').match(TEMPLATE_BINDINGS_EXP);\n\t                var /** @type {?} */ parsedBindings = JSON.parse(existingBindings[1]);\n\t                parsedBindings[propertyName] = propertyValue;\n\t                renderElement.nodeValue =\n\t                    TEMPLATE_COMMENT_TEXT.replace('{}', JSON.stringify(parsedBindings, null, 2));\n\t            }\n\t            else {\n\t                this.setElementAttribute(renderElement, propertyName, propertyValue);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} className\n\t         * @param {?} isAdd\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            if (isAdd) {\n\t                renderElement.classList.add(className);\n\t            }\n\t            else {\n\t                renderElement.classList.remove(className);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} styleName\n\t         * @param {?} styleValue\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            if (isPresent(styleValue)) {\n\t                ((renderElement.style))[styleName] = stringify(styleValue);\n\t            }\n\t            else {\n\t                // IE requires '' instead of null\n\t                // see https://github.com/angular/angular/issues/7916\n\t                ((renderElement.style))[styleName] = '';\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} renderElement\n\t         * @param {?} methodName\n\t         * @param {?} args\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            ((renderElement))[methodName].apply(renderElement, args);\n\t        };\n\t        /**\n\t         * @param {?} renderNode\n\t         * @param {?} text\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.setText = function (renderNode, text) { renderNode.nodeValue = text; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} startingStyles\n\t         * @param {?} keyframes\n\t         * @param {?} duration\n\t         * @param {?} delay\n\t         * @param {?} easing\n\t         * @param {?=} previousPlayers\n\t         * @return {?}\n\t         */\n\t        DomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n\t            if (previousPlayers === void 0) { previousPlayers = []; }\n\t            if (this._rootRenderer.document.body.contains(element)) {\n\t                return this._animationDriver.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n\t            }\n\t            return new NoOpAnimationPlayer();\n\t        };\n\t        return DomRenderer;\n\t    }());\n\t    /**\n\t     * @param {?} sibling\n\t     * @param {?} nodes\n\t     * @return {?}\n\t     */\n\t    function moveNodesAfterSibling(sibling, nodes) {\n\t        var /** @type {?} */ parent = sibling.parentNode;\n\t        if (nodes.length > 0 && parent) {\n\t            var /** @type {?} */ nextSibling = sibling.nextSibling;\n\t            if (nextSibling) {\n\t                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t                    parent.insertBefore(nodes[i], nextSibling);\n\t                }\n\t            }\n\t            else {\n\t                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t                    parent.appendChild(nodes[i]);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} parent\n\t     * @param {?} nodes\n\t     * @return {?}\n\t     */\n\t    function appendNodes(parent, nodes) {\n\t        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n\t            parent.appendChild(nodes[i]);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} eventHandler\n\t     * @return {?}\n\t     */\n\t    function decoratePreventDefault(eventHandler) {\n\t        return function (event) {\n\t            var /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n\t            if (allowDefaultBehavior === false) {\n\t                // TODO(tbosch): move preventDefault into event plugins...\n\t                event.preventDefault();\n\t                event.returnValue = false;\n\t            }\n\t        };\n\t    }\n\t    var /** @type {?} */ COMPONENT_REGEX = /%COMP%/g;\n\t    var /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\n\t    var /** @type {?} */ HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n\t    var /** @type {?} */ CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n\t    /**\n\t     * @param {?} componentShortId\n\t     * @return {?}\n\t     */\n\t    function shimContentAttribute(componentShortId) {\n\t        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n\t    }\n\t    /**\n\t     * @param {?} componentShortId\n\t     * @return {?}\n\t     */\n\t    function shimHostAttribute(componentShortId) {\n\t        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n\t    }\n\t    /**\n\t     * @param {?} compId\n\t     * @param {?} styles\n\t     * @param {?} target\n\t     * @return {?}\n\t     */\n\t    function flattenStyles(compId, styles, target) {\n\t        for (var /** @type {?} */ i = 0; i < styles.length; i++) {\n\t            var /** @type {?} */ style = styles[i];\n\t            if (Array.isArray(style)) {\n\t                flattenStyles(compId, style, target);\n\t            }\n\t            else {\n\t                style = style.replace(COMPONENT_REGEX, compId);\n\t                target.push(style);\n\t            }\n\t        }\n\t        return target;\n\t    }\n\t    var /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\t    /**\n\t     * @param {?} name\n\t     * @return {?}\n\t     */\n\t    function isNamespaced(name) {\n\t        return name[0] === ':';\n\t    }\n\t    /**\n\t     * @param {?} name\n\t     * @return {?}\n\t     */\n\t    function splitNamespace(name) {\n\t        var /** @type {?} */ match = name.match(NS_PREFIX_RE);\n\t        return [match[1], match[2]];\n\t    }\n\t\n\t    var /** @type {?} */ CORE_TOKENS = {\n\t        'ApplicationRef': core.ApplicationRef,\n\t        'NgZone': core.NgZone,\n\t    };\n\t    var /** @type {?} */ INSPECT_GLOBAL_NAME = 'ng.probe';\n\t    var /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n\t    /**\n\t     * Returns a {\\@link DebugElement} for the given native DOM element, or\n\t     * null if the given native element does not have an Angular view associated\n\t     * with it.\n\t     * @param {?} element\n\t     * @return {?}\n\t     */\n\t    function inspectNativeElement(element) {\n\t        return core.getDebugNode(element);\n\t    }\n\t    /**\n\t     * Deprecated. Use the one from '\\@angular/core'.\n\t     * @deprecated\n\t     */\n\t    var NgProbeToken = (function () {\n\t        /**\n\t         * @param {?} name\n\t         * @param {?} token\n\t         */\n\t        function NgProbeToken(name, token) {\n\t            this.name = name;\n\t            this.token = token;\n\t        }\n\t        return NgProbeToken;\n\t    }());\n\t    /**\n\t     * @param {?} rootRenderer\n\t     * @param {?} extraTokens\n\t     * @param {?} coreTokens\n\t     * @return {?}\n\t     */\n\t    function _createConditionalRootRenderer(rootRenderer, extraTokens, coreTokens) {\n\t        return core.isDevMode() ?\n\t            _createRootRenderer(rootRenderer, (extraTokens || []).concat(coreTokens || [])) :\n\t            rootRenderer;\n\t    }\n\t    /**\n\t     * @param {?} rootRenderer\n\t     * @param {?} extraTokens\n\t     * @return {?}\n\t     */\n\t    function _createRootRenderer(rootRenderer, extraTokens) {\n\t        getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n\t        getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n\t        return new DebugDomRootRenderer(rootRenderer);\n\t    }\n\t    /**\n\t     * @param {?} tokens\n\t     * @return {?}\n\t     */\n\t    function _ngProbeTokensToMap(tokens) {\n\t        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n\t    }\n\t    /**\n\t     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n\t     */\n\t    var /** @type {?} */ ELEMENT_PROBE_PROVIDERS = [{\n\t            provide: core.RootRenderer,\n\t            useFactory: _createConditionalRootRenderer,\n\t            deps: [\n\t                DomRootRenderer, [NgProbeToken, new core.Optional()],\n\t                [core.NgProbeToken, new core.Optional()]\n\t            ]\n\t        }];\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var DomEventsPlugin = (function (_super) {\n\t        __extends$5(DomEventsPlugin, _super);\n\t        function DomEventsPlugin() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            element.addEventListener(eventName, /** @type {?} */ (handler), false);\n\t            return function () { return element.removeEventListener(eventName, /** @type {?} */ (handler), false); };\n\t        };\n\t        DomEventsPlugin.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomEventsPlugin.ctorParameters = function () { return []; };\n\t        return DomEventsPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ EVENT_NAMES = {\n\t        // pan\n\t        'pan': true,\n\t        'panstart': true,\n\t        'panmove': true,\n\t        'panend': true,\n\t        'pancancel': true,\n\t        'panleft': true,\n\t        'panright': true,\n\t        'panup': true,\n\t        'pandown': true,\n\t        // pinch\n\t        'pinch': true,\n\t        'pinchstart': true,\n\t        'pinchmove': true,\n\t        'pinchend': true,\n\t        'pinchcancel': true,\n\t        'pinchin': true,\n\t        'pinchout': true,\n\t        // press\n\t        'press': true,\n\t        'pressup': true,\n\t        // rotate\n\t        'rotate': true,\n\t        'rotatestart': true,\n\t        'rotatemove': true,\n\t        'rotateend': true,\n\t        'rotatecancel': true,\n\t        // swipe\n\t        'swipe': true,\n\t        'swipeleft': true,\n\t        'swiperight': true,\n\t        'swipeup': true,\n\t        'swipedown': true,\n\t        // tap\n\t        'tap': true,\n\t    };\n\t    /**\n\t     * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure\n\t     * Hammer gestures.\n\t     *\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ HAMMER_GESTURE_CONFIG = new core.OpaqueToken('HammerGestureConfig');\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var HammerGestureConfig = (function () {\n\t        function HammerGestureConfig() {\n\t            this.events = [];\n\t            this.overrides = {};\n\t        }\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        HammerGestureConfig.prototype.buildHammer = function (element) {\n\t            var /** @type {?} */ mc = new Hammer(element);\n\t            mc.get('pinch').set({ enable: true });\n\t            mc.get('rotate').set({ enable: true });\n\t            for (var eventName in this.overrides) {\n\t                mc.get(eventName).set(this.overrides[eventName]);\n\t            }\n\t            return mc;\n\t        };\n\t        HammerGestureConfig.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HammerGestureConfig.ctorParameters = function () { return []; };\n\t        return HammerGestureConfig;\n\t    }());\n\t    var HammerGesturesPlugin = (function (_super) {\n\t        __extends$6(HammerGesturesPlugin, _super);\n\t        /**\n\t         * @param {?} _config\n\t         */\n\t        function HammerGesturesPlugin(_config) {\n\t            _super.call(this);\n\t            this._config = _config;\n\t        }\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        HammerGesturesPlugin.prototype.supports = function (eventName) {\n\t            if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n\t                return false;\n\t            }\n\t            if (!((window)).Hammer) {\n\t                throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n\t            }\n\t            return true;\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            var _this = this;\n\t            var /** @type {?} */ zone = this.manager.getZone();\n\t            eventName = eventName.toLowerCase();\n\t            return zone.runOutsideAngular(function () {\n\t                // Creating the manager bind events, must be done outside of angular\n\t                var /** @type {?} */ mc = _this._config.buildHammer(element);\n\t                var /** @type {?} */ callback = function (eventObj) {\n\t                    zone.runGuarded(function () { handler(eventObj); });\n\t                };\n\t                mc.on(eventName, callback);\n\t                return function () { return mc.off(eventName, callback); };\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n\t        HammerGesturesPlugin.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HammerGesturesPlugin.ctorParameters = function () { return [\n\t            { type: HammerGestureConfig, decorators: [{ type: core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n\t        ]; };\n\t        return HammerGesturesPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\t    var /** @type {?} */ MODIFIER_KEY_GETTERS = {\n\t        'alt': function (event) { return event.altKey; },\n\t        'control': function (event) { return event.ctrlKey; },\n\t        'meta': function (event) { return event.metaKey; },\n\t        'shift': function (event) { return event.shiftKey; }\n\t    };\n\t    /**\n\t     * \\@experimental\n\t     */\n\t    var KeyEventsPlugin = (function (_super) {\n\t        __extends$7(KeyEventsPlugin, _super);\n\t        function KeyEventsPlugin() {\n\t            _super.call(this);\n\t        }\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\n\t        /**\n\t         * @param {?} element\n\t         * @param {?} eventName\n\t         * @param {?} handler\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n\t            var /** @type {?} */ parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n\t            var /** @type {?} */ outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\t            return this.manager.getZone().runOutsideAngular(function () {\n\t                return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} eventName\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.parseEventName = function (eventName) {\n\t            var /** @type {?} */ parts = eventName.toLowerCase().split('.');\n\t            var /** @type {?} */ domEventName = parts.shift();\n\t            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n\t                return null;\n\t            }\n\t            var /** @type {?} */ key = KeyEventsPlugin._normalizeKey(parts.pop());\n\t            var /** @type {?} */ fullKey = '';\n\t            MODIFIER_KEYS.forEach(function (modifierName) {\n\t                var /** @type {?} */ index = parts.indexOf(modifierName);\n\t                if (index > -1) {\n\t                    parts.splice(index, 1);\n\t                    fullKey += modifierName + '.';\n\t                }\n\t            });\n\t            fullKey += key;\n\t            if (parts.length != 0 || key.length === 0) {\n\t                // returning null instead of throwing to let another plugin process the event\n\t                return null;\n\t            }\n\t            var /** @type {?} */ result = {};\n\t            result['domEventName'] = domEventName;\n\t            result['fullKey'] = fullKey;\n\t            return result;\n\t        };\n\t        /**\n\t         * @param {?} event\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.getEventFullKey = function (event) {\n\t            var /** @type {?} */ fullKey = '';\n\t            var /** @type {?} */ key = getDOM().getEventKey(event);\n\t            key = key.toLowerCase();\n\t            if (key === ' ') {\n\t                key = 'space'; // for readability\n\t            }\n\t            else if (key === '.') {\n\t                key = 'dot'; // because '.' is used as a separator in event names\n\t            }\n\t            MODIFIER_KEYS.forEach(function (modifierName) {\n\t                if (modifierName != key) {\n\t                    var /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\t                    if (modifierGetter(event)) {\n\t                        fullKey += modifierName + '.';\n\t                    }\n\t                }\n\t            });\n\t            fullKey += key;\n\t            return fullKey;\n\t        };\n\t        /**\n\t         * @param {?} fullKey\n\t         * @param {?} handler\n\t         * @param {?} zone\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n\t            return function (event /** TODO #9100 */) {\n\t                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n\t                    zone.runGuarded(function () { return handler(event); });\n\t                }\n\t            };\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} keyName\n\t         * @return {?}\n\t         */\n\t        KeyEventsPlugin._normalizeKey = function (keyName) {\n\t            // TODO: switch to a Map if the mapping grows too much\n\t            switch (keyName) {\n\t                case 'esc':\n\t                    return 'escape';\n\t                default:\n\t                    return keyName;\n\t            }\n\t        };\n\t        KeyEventsPlugin.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        KeyEventsPlugin.ctorParameters = function () { return []; };\n\t        return KeyEventsPlugin;\n\t    }(EventManagerPlugin));\n\t\n\t    /**\n\t     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n\t     *\n\t     * This regular expression matches a subset of URLs that will not cause script\n\t     * execution if used in URL context within a HTML document. Specifically, this\n\t     * regular expression matches if (comment from here on and regex copied from\n\t     * Soy's EscapingConventions):\n\t     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n\t     * (2) or no protocol.  A protocol must be followed by a colon. The below\n\t     *     allows that by allowing colons only after one of the characters [/?#].\n\t     *     A colon after a hash (#) must be in the fragment.\n\t     *     Otherwise, a colon after a (?) must be in a query.\n\t     *     Otherwise, a colon after a single solidus (/) must be in a path.\n\t     *     Otherwise, a colon after a double solidus (//) must be in the authority\n\t     *     (before port).\n\t     *\n\t     * The pattern disallows &, used in HTML entity declarations before\n\t     * one of the characters in [/?#]. This disallows HTML entities used in the\n\t     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n\t     * It also disallows HTML entities in the first path part of a relative path,\n\t     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n\t     * that. More importantly, it disallows masking of a colon,\n\t     * e.g. \"javascript&#58;...\".\n\t     *\n\t     * This regular expression was taken from the Closure sanitization library.\n\t     */\n\t    var /** @type {?} */ SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\t    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n\t    var /** @type {?} */ DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\t    /**\n\t     * @param {?} url\n\t     * @return {?}\n\t     */\n\t    function sanitizeUrl(url) {\n\t        url = String(url);\n\t        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n\t            return url;\n\t        if (core.isDevMode()) {\n\t            getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n\t        }\n\t        return 'unsafe:' + url;\n\t    }\n\t    /**\n\t     * @param {?} srcset\n\t     * @return {?}\n\t     */\n\t    function sanitizeSrcset(srcset) {\n\t        srcset = String(srcset);\n\t        return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n\t    }\n\t\n\t    /** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\n\t    var /** @type {?} */ inertElement = null;\n\t    /** Lazily initialized to make sure the DOM adapter gets set before use. */\n\t    var /** @type {?} */ DOM = null;\n\t    /**\n\t     * Returns an HTML element that is guaranteed to not execute code when creating elements in it.\n\t     * @return {?}\n\t     */\n\t    function getInertElement() {\n\t        if (inertElement)\n\t            return inertElement;\n\t        DOM = getDOM();\n\t        // Prefer using <template> element if supported.\n\t        var /** @type {?} */ templateEl = DOM.createElement('template');\n\t        if ('content' in templateEl)\n\t            return templateEl;\n\t        var /** @type {?} */ doc = DOM.createHtmlDocument();\n\t        inertElement = DOM.querySelector(doc, 'body');\n\t        if (inertElement == null) {\n\t            // usually there should be only one body element in the document, but IE doesn't have any, so we\n\t            // need to create one.\n\t            var /** @type {?} */ html = DOM.createElement('html', doc);\n\t            inertElement = DOM.createElement('body', doc);\n\t            DOM.appendChild(html, inertElement);\n\t            DOM.appendChild(doc, html);\n\t        }\n\t        return inertElement;\n\t    }\n\t    /**\n\t     * @param {?} tags\n\t     * @return {?}\n\t     */\n\t    function tagSet(tags) {\n\t        var /** @type {?} */ res = {};\n\t        for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n\t            var t = _a[_i];\n\t            res[t] = true;\n\t        }\n\t        return res;\n\t    }\n\t    /**\n\t     * @param {...?} sets\n\t     * @return {?}\n\t     */\n\t    function merge() {\n\t        var sets = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            sets[_i - 0] = arguments[_i];\n\t        }\n\t        var /** @type {?} */ res = {};\n\t        for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n\t            var s = sets_1[_a];\n\t            for (var v in s) {\n\t                if (s.hasOwnProperty(v))\n\t                    res[v] = true;\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    // Good source of info about elements and attributes\n\t    // http://dev.w3.org/html5/spec/Overview.html#semantics\n\t    // http://simon.html5.org/html-elements\n\t    // Safe Void Elements - HTML5\n\t    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n\t    var /** @type {?} */ VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\t    // Elements that you can, intentionally, leave open (and which close themselves)\n\t    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n\t    var /** @type {?} */ OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n\t    var /** @type {?} */ OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n\t    var /** @type {?} */ OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\t    // Safe Block Elements - HTML5\n\t    var /** @type {?} */ BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n\t        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n\t        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\t    // Inline Elements - HTML5\n\t    var /** @type {?} */ INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n\t        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n\t        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\t    var /** @type {?} */ VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\t    // Attributes that have href and hence need to be sanitized\n\t    var /** @type {?} */ URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\t    // Attributes that have special href set hence need to be sanitized\n\t    var /** @type {?} */ SRCSET_ATTRS = tagSet('srcset');\n\t    var /** @type {?} */ HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n\t        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n\t        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n\t        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n\t        'valign,value,vspace,width');\n\t    // NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n\t    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n\t    // innerHTML is required, SVG attributes should be added here.\n\t    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n\t    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n\t    // are left out here.\n\t    var /** @type {?} */ VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n\t    /**\n\t     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n\t     * attributes.\n\t     */\n\t    var SanitizingHtmlSerializer = (function () {\n\t        function SanitizingHtmlSerializer() {\n\t            this.sanitizedSomething = false;\n\t            this.buf = [];\n\t        }\n\t        /**\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n\t            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n\t            // However this code never accesses properties off of `document` before deleting its contents\n\t            // again, so it shouldn't be vulnerable to DOM clobbering.\n\t            var /** @type {?} */ current = el.firstChild;\n\t            while (current) {\n\t                if (DOM.isElementNode(current)) {\n\t                    this.startElement(/** @type {?} */ (current));\n\t                }\n\t                else if (DOM.isTextNode(current)) {\n\t                    this.chars(DOM.nodeValue(current));\n\t                }\n\t                else {\n\t                    // Strip non-element, non-text nodes.\n\t                    this.sanitizedSomething = true;\n\t                }\n\t                if (DOM.firstChild(current)) {\n\t                    current = DOM.firstChild(current);\n\t                    continue;\n\t                }\n\t                while (current) {\n\t                    // Leaving the element. Walk up and to the right, closing tags as we go.\n\t                    if (DOM.isElementNode(current)) {\n\t                        this.endElement(/** @type {?} */ (current));\n\t                    }\n\t                    if (DOM.nextSibling(current)) {\n\t                        current = DOM.nextSibling(current);\n\t                        break;\n\t                    }\n\t                    current = DOM.parentElement(current);\n\t                }\n\t            }\n\t            return this.buf.join('');\n\t        };\n\t        /**\n\t         * @param {?} element\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n\t            var _this = this;\n\t            var /** @type {?} */ tagName = DOM.nodeName(element).toLowerCase();\n\t            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n\t                this.sanitizedSomething = true;\n\t                return;\n\t            }\n\t            this.buf.push('<');\n\t            this.buf.push(tagName);\n\t            DOM.attributeMap(element).forEach(function (value, attrName) {\n\t                var /** @type {?} */ lower = attrName.toLowerCase();\n\t                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n\t                    _this.sanitizedSomething = true;\n\t                    return;\n\t                }\n\t                // TODO(martinprobst): Special case image URIs for data:image/...\n\t                if (URI_ATTRS[lower])\n\t                    value = sanitizeUrl(value);\n\t                if (SRCSET_ATTRS[lower])\n\t                    value = sanitizeSrcset(value);\n\t                _this.buf.push(' ');\n\t                _this.buf.push(attrName);\n\t                _this.buf.push('=\"');\n\t                _this.buf.push(encodeEntities(value));\n\t                _this.buf.push('\"');\n\t            });\n\t            this.buf.push('>');\n\t        };\n\t        /**\n\t         * @param {?} current\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n\t            var /** @type {?} */ tagName = DOM.nodeName(current).toLowerCase();\n\t            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n\t                this.buf.push('</');\n\t                this.buf.push(tagName);\n\t                this.buf.push('>');\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} chars\n\t         * @return {?}\n\t         */\n\t        SanitizingHtmlSerializer.prototype.chars = function (chars /** TODO #9100 */) { this.buf.push(encodeEntities(chars)); };\n\t        return SanitizingHtmlSerializer;\n\t    }());\n\t    // Regular Expressions for parsing tags and attributes\n\t    var /** @type {?} */ SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t    // ! to ~ is the ASCII range.\n\t    var /** @type {?} */ NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\t    /**\n\t     * Escapes all potentially dangerous characters, so that the\n\t     * resulting string can be safely inserted into attribute or\n\t     * element text.\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function encodeEntities(value) {\n\t        return value.replace(/&/g, '&amp;')\n\t            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n\t            var /** @type {?} */ hi = match.charCodeAt(0);\n\t            var /** @type {?} */ low = match.charCodeAt(1);\n\t            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n\t        })\n\t            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n\t            .replace(/</g, '&lt;')\n\t            .replace(/>/g, '&gt;');\n\t    }\n\t    /**\n\t     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n\t     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n\t     *\n\t     * This is undesirable since we don't want to allow any of these custom attributes. This method\n\t     * strips them all.\n\t     * @param {?} el\n\t     * @return {?}\n\t     */\n\t    function stripCustomNsAttrs(el) {\n\t        DOM.attributeMap(el).forEach(function (_, attrName) {\n\t            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n\t                DOM.removeAttribute(el, attrName);\n\t            }\n\t        });\n\t        for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n\t            var n = _a[_i];\n\t            if (DOM.isElementNode(n))\n\t                stripCustomNsAttrs(/** @type {?} */ (n));\n\t        }\n\t    }\n\t    /**\n\t     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n\t     * the DOM in a browser environment.\n\t     * @param {?} unsafeHtmlInput\n\t     * @return {?}\n\t     */\n\t    function sanitizeHtml(unsafeHtmlInput) {\n\t        try {\n\t            var /** @type {?} */ containerEl = getInertElement();\n\t            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n\t            var /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n\t            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n\t            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n\t            var /** @type {?} */ mXSSAttempts = 5;\n\t            var /** @type {?} */ parsedHtml = unsafeHtml;\n\t            do {\n\t                if (mXSSAttempts === 0) {\n\t                    throw new Error('Failed to sanitize html because the input is unstable');\n\t                }\n\t                mXSSAttempts--;\n\t                unsafeHtml = parsedHtml;\n\t                DOM.setInnerHTML(containerEl, unsafeHtml);\n\t                if (((DOM.defaultDoc())).documentMode) {\n\t                    // strip custom-namespaced attributes on IE<=11\n\t                    stripCustomNsAttrs(containerEl);\n\t                }\n\t                parsedHtml = DOM.getInnerHTML(containerEl);\n\t            } while (unsafeHtml !== parsedHtml);\n\t            var /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n\t            var /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n\t            // Clear out the body element.\n\t            var /** @type {?} */ parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n\t            for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n\t                var child = _a[_i];\n\t                DOM.removeChild(parent_1, child);\n\t            }\n\t            if (core.isDevMode() && sanitizer.sanitizedSomething) {\n\t                DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n\t            }\n\t            return safeHtml;\n\t        }\n\t        catch (e) {\n\t            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n\t            inertElement = null;\n\t            throw e;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Regular expression for safe style values.\n\t     *\n\t     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n\t     *\n\t     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n\t     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n\t     * of XSS.\n\t     *\n\t     * The function expression checks only for XSS safety, not for CSS validity.\n\t     *\n\t     * This regular expression was taken from the Closure sanitization library, and augmented for\n\t     * transformation values.\n\t     */\n\t    var /** @type {?} */ VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n\t    var /** @type {?} */ TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n\t    var /** @type {?} */ COLOR_FNS = '(?:rgb|hsl)a?';\n\t    var /** @type {?} */ GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n\t    var /** @type {?} */ CSS3_FNS = '(?:calc|attr)';\n\t    var /** @type {?} */ FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n\t    var /** @type {?} */ SAFE_STYLE_VALUE = new RegExp((\"^(\" + VALUES + \"|\") +\n\t        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n\t        (FN_ARGS + \")$\"), 'g');\n\t    /**\n\t     * Matches a `url(...)` value with an arbitrary argument as long as it does\n\t     * not contain parentheses.\n\t     *\n\t     * The URL value still needs to be sanitized separately.\n\t     *\n\t     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n\t     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n\t     * by observing whether scroll bars are displayed, or character ranges used by a font face\n\t     * definition.\n\t     *\n\t     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n\t     * binding a URL value without further cooperation from the page will cause an information leak, and\n\t     * if so, it is just a leak, not a full blown XSS vulnerability.\n\t     *\n\t     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n\t     * code is permissive and allows URLs that sanitize otherwise.\n\t     */\n\t    var /** @type {?} */ URL_RE = /^url\\(([^)]+)\\)$/;\n\t    /**\n\t     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n\t     * that neither escape (\\) nor any other character that could result in\n\t     * breaking out of a string parsing context are allowed;\n\t     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n\t     *\n\t     * This code was taken from the Closure sanitization library.\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function hasBalancedQuotes(value) {\n\t        var /** @type {?} */ outsideSingle = true;\n\t        var /** @type {?} */ outsideDouble = true;\n\t        for (var /** @type {?} */ i = 0; i < value.length; i++) {\n\t            var /** @type {?} */ c = value.charAt(i);\n\t            if (c === '\\'' && outsideDouble) {\n\t                outsideSingle = !outsideSingle;\n\t            }\n\t            else if (c === '\"' && outsideSingle) {\n\t                outsideDouble = !outsideDouble;\n\t            }\n\t        }\n\t        return outsideSingle && outsideDouble;\n\t    }\n\t    /**\n\t     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n\t     * value) and returns a value that is safe to use in a browser environment.\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function sanitizeStyle(value) {\n\t        value = String(value).trim(); // Make sure it's actually a string.\n\t        if (!value)\n\t            return '';\n\t        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n\t        // reasoning behind this.\n\t        var /** @type {?} */ urlMatch = value.match(URL_RE);\n\t        if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n\t            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n\t            return value; // Safe style values.\n\t        }\n\t        if (core.isDevMode()) {\n\t            getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n\t        }\n\t        return 'unsafe';\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n\t     * values to be safe to use in the different DOM contexts.\n\t     *\n\t     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n\t     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n\t     * the website.\n\t     *\n\t     * In specific situations, it might be necessary to disable sanitization, for example if the\n\t     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n\t     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n\t     * methods, and then binding to that value from the template.\n\t     *\n\t     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n\t     * Cross Site Scripting (XSS) security bug!\n\t     *\n\t     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n\t     * close as possible to the source of the value, to make it easy to verify no security bug is\n\t     * created by its use.\n\t     *\n\t     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n\t     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n\t     * code. The sanitizer leaves safe values intact.\n\t     *\n\t     * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n\t     * sanitization for the value passed in. Carefully check and audit all values and code paths going\n\t     * into this call. Make sure any user data is appropriately escaped for this security context.\n\t     * For more detail, see the [Security Guide](http://g.co/ng/security).\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var DomSanitizer = (function () {\n\t        function DomSanitizer() {\n\t        }\n\t        /**\n\t         * Sanitizes a value for use in the given SecurityContext.\n\t         *\n\t         * If value is trusted for the context, this method will unwrap the contained safe value and use\n\t         * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n\t         * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n\t         * is responsible to make sure that the value can definitely be safely used in the given context.\n\t         * @abstract\n\t         * @param {?} context\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.sanitize = function (context, value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n\t         * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n\t         * leave safe HTML intact, so in most situations this method should not be used.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustHtml = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be safe style value (CSS).\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustStyle = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be safe JavaScript.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustScript = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n\t         * in hyperlinks or `<img src>`.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustUrl = function (value) { };\n\t        /**\n\t         * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n\t         * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n\t         *\n\t         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n\t         * security risks!\n\t         * @abstract\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizer.prototype.bypassSecurityTrustResourceUrl = function (value) { };\n\t        return DomSanitizer;\n\t    }());\n\t    var DomSanitizerImpl = (function (_super) {\n\t        __extends$8(DomSanitizerImpl, _super);\n\t        function DomSanitizerImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @param {?} ctx\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n\t            if (value == null)\n\t                return null;\n\t            switch (ctx) {\n\t                case core.SecurityContext.NONE:\n\t                    return value;\n\t                case core.SecurityContext.HTML:\n\t                    if (value instanceof SafeHtmlImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'HTML');\n\t                    return sanitizeHtml(String(value));\n\t                case core.SecurityContext.STYLE:\n\t                    if (value instanceof SafeStyleImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'Style');\n\t                    return sanitizeStyle(value);\n\t                case core.SecurityContext.SCRIPT:\n\t                    if (value instanceof SafeScriptImpl)\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    this.checkNotSafeValue(value, 'Script');\n\t                    throw new Error('unsafe value used in a script context');\n\t                case core.SecurityContext.URL:\n\t                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n\t                        // Allow resource URLs in URL contexts, they are strictly more trusted.\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    }\n\t                    this.checkNotSafeValue(value, 'URL');\n\t                    return sanitizeUrl(String(value));\n\t                case core.SecurityContext.RESOURCE_URL:\n\t                    if (value instanceof SafeResourceUrlImpl) {\n\t                        return value.changingThisBreaksApplicationSecurity;\n\t                    }\n\t                    this.checkNotSafeValue(value, 'ResourceURL');\n\t                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n\t                default:\n\t                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @param {?} expectedType\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n\t            if (value instanceof SafeValueImpl) {\n\t                throw new Error((\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \") +\n\t                    \"(see http://g.co/ng/security#xss)\");\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n\t            return new SafeResourceUrlImpl(value);\n\t        };\n\t        DomSanitizerImpl.decorators = [\n\t            { type: core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        DomSanitizerImpl.ctorParameters = function () { return []; };\n\t        return DomSanitizerImpl;\n\t    }(DomSanitizer));\n\t    /**\n\t     * @abstract\n\t     */\n\t    var SafeValueImpl = (function () {\n\t        /**\n\t         * @param {?} changingThisBreaksApplicationSecurity\n\t         */\n\t        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n\t            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n\t            // empty\n\t        }\n\t        /**\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        SafeValueImpl.prototype.getTypeName = function () { };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeValueImpl.prototype.toString = function () {\n\t            return (\"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity) +\n\t                \" (see http://g.co/ng/security#xss)\";\n\t        };\n\t        return SafeValueImpl;\n\t    }());\n\t    var SafeHtmlImpl = (function (_super) {\n\t        __extends$8(SafeHtmlImpl, _super);\n\t        function SafeHtmlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n\t        return SafeHtmlImpl;\n\t    }(SafeValueImpl));\n\t    var SafeStyleImpl = (function (_super) {\n\t        __extends$8(SafeStyleImpl, _super);\n\t        function SafeStyleImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n\t        return SafeStyleImpl;\n\t    }(SafeValueImpl));\n\t    var SafeScriptImpl = (function (_super) {\n\t        __extends$8(SafeScriptImpl, _super);\n\t        function SafeScriptImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n\t        return SafeScriptImpl;\n\t    }(SafeValueImpl));\n\t    var SafeUrlImpl = (function (_super) {\n\t        __extends$8(SafeUrlImpl, _super);\n\t        function SafeUrlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n\t        return SafeUrlImpl;\n\t    }(SafeValueImpl));\n\t    var SafeResourceUrlImpl = (function (_super) {\n\t        __extends$8(SafeResourceUrlImpl, _super);\n\t        function SafeResourceUrlImpl() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n\t        return SafeResourceUrlImpl;\n\t    }(SafeValueImpl));\n\t\n\t    var /** @type {?} */ INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n\t        { provide: core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n\t        { provide: _angular_common.PlatformLocation, useClass: BrowserPlatformLocation }\n\t    ];\n\t    /**\n\t     * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n\t     * Attacker-controlled data introduced by an unsanitized provider could expose your\n\t     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n\t     * @experimental\n\t     */\n\t    var /** @type {?} */ BROWSER_SANITIZATION_PROVIDERS = [\n\t        { provide: core.Sanitizer, useExisting: DomSanitizer },\n\t        { provide: DomSanitizer, useClass: DomSanitizerImpl },\n\t    ];\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ platformBrowser = core.createPlatformFactory(core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function initDomAdapter() {\n\t        BrowserDomAdapter.makeCurrent();\n\t        BrowserGetTestability.init();\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function errorHandler() {\n\t        return new core.ErrorHandler();\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _document() {\n\t        return getDOM().defaultDoc();\n\t    }\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function _resolveDefaultAnimationDriver() {\n\t        if (getDOM().supportsWebAnimation()) {\n\t            return new WebAnimationsDriver();\n\t        }\n\t        return AnimationDriver.NOOP;\n\t    }\n\t    /**\n\t     * The ng module for the browser.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var BrowserModule = (function () {\n\t        /**\n\t         * @param {?} parentModule\n\t         */\n\t        function BrowserModule(parentModule) {\n\t            if (parentModule) {\n\t                throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n\t            }\n\t        }\n\t        BrowserModule.decorators = [\n\t            { type: core.NgModule, args: [{\n\t                        providers: [\n\t                            BROWSER_SANITIZATION_PROVIDERS, { provide: core.ErrorHandler, useFactory: errorHandler, deps: [] },\n\t                            { provide: DOCUMENT, useFactory: _document, deps: [] },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n\t                            { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n\t                            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n\t                            { provide: DomRootRenderer, useClass: DomRootRenderer_ },\n\t                            { provide: core.RootRenderer, useExisting: DomRootRenderer },\n\t                            { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n\t                            { provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver }, DomSharedStylesHost,\n\t                            core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Title\n\t                        ],\n\t                        exports: [_angular_common.CommonModule, core.ApplicationModule]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        BrowserModule.ctorParameters = function () { return [\n\t            { type: BrowserModule, decorators: [{ type: core.Optional }, { type: core.SkipSelf },] },\n\t        ]; };\n\t        return BrowserModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * JS version of browser APIs. This library can only run in the browser.\n\t     */\n\t    var /** @type {?} */ win = typeof window !== 'undefined' && window || ({});\n\t\n\t    var ChangeDetectionPerfRecord = (function () {\n\t        /**\n\t         * @param {?} msPerTick\n\t         * @param {?} numTicks\n\t         */\n\t        function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n\t            this.msPerTick = msPerTick;\n\t            this.numTicks = numTicks;\n\t        }\n\t        return ChangeDetectionPerfRecord;\n\t    }());\n\t    /**\n\t     * Entry point for all Angular debug tools. This object corresponds to the `ng`\n\t     * global variable accessible in the dev console.\n\t     */\n\t    var AngularTools = (function () {\n\t        /**\n\t         * @param {?} ref\n\t         */\n\t        function AngularTools(ref) {\n\t            this.profiler = new AngularProfiler(ref);\n\t        }\n\t        return AngularTools;\n\t    }());\n\t    /**\n\t     * Entry point for all Angular profiling-related debug tools. This object\n\t     * corresponds to the `ng.profiler` in the dev console.\n\t     */\n\t    var AngularProfiler = (function () {\n\t        /**\n\t         * @param {?} ref\n\t         */\n\t        function AngularProfiler(ref) {\n\t            this.appRef = ref.injector.get(core.ApplicationRef);\n\t        }\n\t        /**\n\t         * Exercises change detection in a loop and then prints the average amount of\n\t         * time in milliseconds how long a single round of change detection takes for\n\t         * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n\t         * of 500 milliseconds.\n\t         *\n\t         * Optionally, a user may pass a `config` parameter containing a map of\n\t         * options. Supported options are:\n\t         *\n\t         * `record` (boolean) - causes the profiler to record a CPU profile while\n\t         * it exercises the change detector. Example:\n\t         *\n\t         * ```\n\t         * ng.profiler.timeChangeDetection({record: true})\n\t         * ```\n\t         * @param {?} config\n\t         * @return {?}\n\t         */\n\t        AngularProfiler.prototype.timeChangeDetection = function (config) {\n\t            var /** @type {?} */ record = config && config['record'];\n\t            var /** @type {?} */ profileName = 'Change Detection';\n\t            // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n\t            var /** @type {?} */ isProfilerAvailable = isPresent(win.console.profile);\n\t            if (record && isProfilerAvailable) {\n\t                win.console.profile(profileName);\n\t            }\n\t            var /** @type {?} */ start = getDOM().performanceNow();\n\t            var /** @type {?} */ numTicks = 0;\n\t            while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n\t                this.appRef.tick();\n\t                numTicks++;\n\t            }\n\t            var /** @type {?} */ end = getDOM().performanceNow();\n\t            if (record && isProfilerAvailable) {\n\t                // need to cast to <any> because type checker thinks there's no argument\n\t                // while in fact there is:\n\t                //\n\t                // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n\t                ((win.console.profileEnd))(profileName);\n\t            }\n\t            var /** @type {?} */ msPerTick = (end - start) / numTicks;\n\t            win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n\t            win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n\t            return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n\t        };\n\t        return AngularProfiler;\n\t    }());\n\t\n\t    var /** @type {?} */ context = (global$1);\n\t    /**\n\t     * Enabled Angular 2 debug tools that are accessible via your browser's\n\t     * developer console.\n\t     *\n\t     * Usage:\n\t     *\n\t     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n\t     * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n\t     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n\t     *    then hit Enter.\n\t     *\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     * @param {?} ref\n\t     * @return {?}\n\t     */\n\t    function enableDebugTools(ref) {\n\t        ((Object)).assign(context.ng, new AngularTools(ref));\n\t        return ref;\n\t    }\n\t    /**\n\t     * Disables Angular 2 tools.\n\t     *\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     * @return {?}\n\t     */\n\t    function disableDebugTools() {\n\t        if (context.ng) {\n\t            delete context.ng.profiler;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Predicates for use with {\\@link DebugElement}'s query functions.\n\t     *\n\t     * \\@experimental All debugging apis are currently experimental.\n\t     */\n\t    var By = (function () {\n\t        function By() {\n\t        }\n\t        /**\n\t         * Match all elements.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n\t         * @return {?}\n\t         */\n\t        By.all = function () { return function (debugElement) { return true; }; };\n\t        /**\n\t         * Match elements by the given CSS selector.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n\t         * @param {?} selector\n\t         * @return {?}\n\t         */\n\t        By.css = function (selector) {\n\t            return function (debugElement) {\n\t                return isPresent(debugElement.nativeElement) ?\n\t                    getDOM().elementMatches(debugElement.nativeElement, selector) :\n\t                    false;\n\t            };\n\t        };\n\t        /**\n\t         * Match elements that have the given directive present.\n\t         *\n\t         * ## Example\n\t         *\n\t         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n\t         * @param {?} type\n\t         * @return {?}\n\t         */\n\t        By.directive = function (type) {\n\t            return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n\t        };\n\t        return By;\n\t    }());\n\t\n\t    var /** @type {?} */ __platform_browser_private__ = {\n\t        BrowserPlatformLocation: BrowserPlatformLocation,\n\t        DomAdapter: DomAdapter,\n\t        BrowserDomAdapter: BrowserDomAdapter,\n\t        BrowserGetTestability: BrowserGetTestability,\n\t        getDOM: getDOM,\n\t        setRootDomAdapter: setRootDomAdapter,\n\t        DomRootRenderer_: DomRootRenderer_,\n\t        DomRootRenderer: DomRootRenderer,\n\t        NAMESPACE_URIS: NAMESPACE_URIS,\n\t        shimContentAttribute: shimContentAttribute,\n\t        shimHostAttribute: shimHostAttribute,\n\t        flattenStyles: flattenStyles,\n\t        splitNamespace: splitNamespace,\n\t        isNamespaced: isNamespaced,\n\t        DomSharedStylesHost: DomSharedStylesHost,\n\t        SharedStylesHost: SharedStylesHost,\n\t        ELEMENT_PROBE_PROVIDERS: ELEMENT_PROBE_PROVIDERS,\n\t        DomEventsPlugin: DomEventsPlugin,\n\t        KeyEventsPlugin: KeyEventsPlugin,\n\t        HammerGesturesPlugin: HammerGesturesPlugin,\n\t        initDomAdapter: initDomAdapter,\n\t        INTERNAL_BROWSER_PLATFORM_PROVIDERS: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n\t        BROWSER_SANITIZATION_PROVIDERS: BROWSER_SANITIZATION_PROVIDERS,\n\t        WebAnimationsDriver: WebAnimationsDriver\n\t    };\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new core.Version('2.4.10');\n\t\n\t    exports.BrowserModule = BrowserModule;\n\t    exports.platformBrowser = platformBrowser;\n\t    exports.Title = Title;\n\t    exports.disableDebugTools = disableDebugTools;\n\t    exports.enableDebugTools = enableDebugTools;\n\t    exports.AnimationDriver = AnimationDriver;\n\t    exports.By = By;\n\t    exports.NgProbeToken = NgProbeToken;\n\t    exports.DOCUMENT = DOCUMENT;\n\t    exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;\n\t    exports.EventManager = EventManager;\n\t    exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;\n\t    exports.HammerGestureConfig = HammerGestureConfig;\n\t    exports.DomSanitizer = DomSanitizer;\n\t    exports.VERSION = VERSION;\n\t    exports.__platform_browser_private__ = __platform_browser_private__;\n\t\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar rx_pubsub_1 = __webpack_require__(21);\r\n\tvar extend = __webpack_require__(25);\r\n\tvar xdom_util_1 = __webpack_require__(27);\r\n\tvar component_injector_1 = __webpack_require__(28);\r\n\tvar ModalWindowComponent = (function () {\r\n\t    function ModalWindowComponent(pubsub, componentInjector) {\r\n\t        this.pubsub = pubsub;\r\n\t        this.componentInjector = componentInjector;\r\n\t        this.animationClass = 'fade';\r\n\t        this.showModalClass = 'in';\r\n\t        this.bodyOpenModalClass = 'modal-open';\r\n\t        this.defaultButtonsProperties = {\r\n\t            visible: true,\r\n\t            cancel: {\r\n\t                visible: true,\r\n\t                label: 'Cancel',\r\n\t                event: false\r\n\t            },\r\n\t            success: {\r\n\t                visible: true,\r\n\t                label: 'Save',\r\n\t                event: false\r\n\t            }\r\n\t        };\r\n\t        this.defaultProperties = {\r\n\t            title: '',\r\n\t            show: false,\r\n\t            hide: false,\r\n\t            componentSelector: false,\r\n\t            componentInputs: false,\r\n\t            htmlContent: '',\r\n\t            overlayClick: true,\r\n\t            customClass: '',\r\n\t            buttons: {\r\n\t                visible: true,\r\n\t                cancel: {\r\n\t                    visible: true,\r\n\t                    label: 'Cancel',\r\n\t                    event: false\r\n\t                },\r\n\t                success: {\r\n\t                    visible: true,\r\n\t                    label: 'Save',\r\n\t                    event: false\r\n\t                }\r\n\t            }\r\n\t        };\r\n\t        this.properties = {};\r\n\t    }\r\n\t    Object.defineProperty(ModalWindowComponent.prototype, \"id\", {\r\n\t        set: function (eventName) {\r\n\t            if (eventName) {\r\n\t                this.eventName = eventName;\r\n\t                // remove previous subscription and create new one\r\n\t                this.unsubscribe();\r\n\t                this.subscribeToEvent();\r\n\t            }\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ModalWindowComponent.prototype.ngOnInit = function () {\r\n\t    };\r\n\t    ModalWindowComponent.prototype.ngOnDestroy = function () {\r\n\t        this.unsubscribe();\r\n\t        this.resetInjectedComponent();\r\n\t    };\r\n\t    ModalWindowComponent.prototype.cancelAction = function () {\r\n\t        if (this.properties.buttons.cancel.event) {\r\n\t            this.pubsub.publish(this.properties.buttons.cancel.event, true);\r\n\t        }\r\n\t        this.hide();\r\n\t    };\r\n\t    ModalWindowComponent.prototype.successAction = function () {\r\n\t        if (this.properties.buttons.success.event) {\r\n\t            this.pubsub.publish(this.properties.buttons.success.event, true);\r\n\t        }\r\n\t        else {\r\n\t            this.hide();\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.overlayClick = function () {\r\n\t        if (this.properties.overlayClick) {\r\n\t            this.cancelAction();\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.show = function () {\r\n\t        // add class to modal DOM element to make it visible\r\n\t        var modalDom = this.modalWindow.nativeElement;\r\n\t        if (!xdom_util_1.XDomUtil.hasClass(modalDom, this.showModalClass)) {\r\n\t            xdom_util_1.XDomUtil.addClass(modalDom, this.showModalClass);\r\n\t        }\r\n\t        // add class to modal body to disable the scrolling\r\n\t        var body = document.querySelector('body');\r\n\t        if (!xdom_util_1.XDomUtil.hasClass(body, this.bodyOpenModalClass)) {\r\n\t            xdom_util_1.XDomUtil.addClass(body, this.bodyOpenModalClass);\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.hide = function () {\r\n\t        var element = this.modalWindow.nativeElement;\r\n\t        xdom_util_1.XDomUtil.removeClass(element, this.showModalClass);\r\n\t        var body = document.querySelector('body');\r\n\t        xdom_util_1.XDomUtil.removeClass(body, this.bodyOpenModalClass);\r\n\t    };\r\n\t    ModalWindowComponent.prototype.subscribeToEvent = function () {\r\n\t        var _this = this;\r\n\t        this.eventSubscriber = this.pubsub.subscribe(this.eventName, function (data) {\r\n\t            _this.initModal(data);\r\n\t        });\r\n\t    };\r\n\t    ModalWindowComponent.prototype.initModal = function (properties) {\r\n\t        if (properties.show) {\r\n\t            // remove previously injected component\r\n\t            this.resetInjectedComponent();\r\n\t            // reset the properties\r\n\t            this.setProperties(properties);\r\n\t            // inject component\r\n\t            if (this.properties.componentSelector) {\r\n\t                this.injectedComponentRef = this.injectComponent(this.properties.componentSelector);\r\n\t                // set the components properties\r\n\t                this.setComponentProperties();\r\n\t            }\r\n\t            // display the modal\r\n\t            this.show();\r\n\t            // reset modal event subscriber\r\n\t            this.resetModalEventSubscriber();\r\n\t        }\r\n\t        else if (properties.hide) {\r\n\t            // remove previously injected component\r\n\t            this.resetInjectedComponent();\r\n\t            // reset the properties\r\n\t            this.setProperties(properties);\r\n\t            // hide the modal\r\n\t            this.hide();\r\n\t            // reset modal event subscriber\r\n\t            this.resetModalEventSubscriber();\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.unsubscribe = function () {\r\n\t        if (this.eventSubscriber) {\r\n\t            this.pubsub.unsubscribe(this.eventSubscriber);\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.injectComponent = function (componentSelector) {\r\n\t        var result;\r\n\t        if (componentSelector) {\r\n\t            result = this.componentInjector.inject(this.injectContainer, componentSelector);\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    ModalWindowComponent.prototype.setComponentProperties = function () {\r\n\t        if (this.properties.componentInputs && this.injectedComponentRef) {\r\n\t            this.componentInjector.setProperties(this.injectedComponentRef, this.properties.componentInputs);\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.resetInjectedComponent = function () {\r\n\t        if (this.injectedComponentRef) {\r\n\t            this.componentInjector.remove(this.injectedComponentRef);\r\n\t            this.injectedComponentRef = null;\r\n\t        }\r\n\t    };\r\n\t    ModalWindowComponent.prototype.setProperties = function (properties) {\r\n\t        this.properties = extend.deep({}, this.defaultProperties, properties);\r\n\t    };\r\n\t    ModalWindowComponent.prototype.resetModalEventSubscriber = function () {\r\n\t        // reset modal show/hide display\r\n\t        this.pubsub.publish(this.eventName, {});\r\n\t    };\r\n\t    return ModalWindowComponent;\r\n\t}());\r\n\t__decorate([\r\n\t    core_1.ViewChild('modalWindow'),\r\n\t    __metadata(\"design:type\", core_1.ElementRef)\r\n\t], ModalWindowComponent.prototype, \"modalWindow\", void 0);\r\n\t__decorate([\r\n\t    core_1.ViewChild('injectContainer', { read: core_1.ViewContainerRef }),\r\n\t    __metadata(\"design:type\", core_1.ViewContainerRef)\r\n\t], ModalWindowComponent.prototype, \"injectContainer\", void 0);\r\n\t__decorate([\r\n\t    core_1.Input(),\r\n\t    __metadata(\"design:type\", String)\r\n\t], ModalWindowComponent.prototype, \"animationClass\", void 0);\r\n\t__decorate([\r\n\t    core_1.Input(),\r\n\t    __metadata(\"design:type\", String),\r\n\t    __metadata(\"design:paramtypes\", [String])\r\n\t], ModalWindowComponent.prototype, \"id\", null);\r\n\tModalWindowComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-modal-window',\r\n\t        templateUrl: './modal-window.component.html',\r\n\t        styleUrls: ['./modal-window.component.css']\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub, component_injector_1.ComponentInjector])\r\n\t], ModalWindowComponent);\r\n\texports.ModalWindowComponent = ModalWindowComponent;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {(function(r){return function(){var h=function(g,m,h,n){n=function(e){return h[e]?m[e]:(h[e]=1,m[e]={},m[e]=g[e](m[e]))};g[1]=function(e){var g=n(2);var k=function(a){var b;if(a){var c={};if(\"object\"!==typeof a)c[a]=!0;else{Array.isArray(a)||(a=Object.keys(a));var e=0;for(b=a.length;e<b;e++){var d=a[e];c[d]=!0}}return c}};var c=function(a){var b=function(a){var c=arguments.length;for(var d=-1,e=Array(c);++d<c;)e[d]=arguments[d];b.options.target?c=b.options.target:(c=a,e.shift());return g(b.options,\n\tc,e)};a&&(b.isBase=!0);b.options={};Object.defineProperties(b,h);return b};var h={deep:{get:function(){var a=this.isBase?c():this;a.options.deep=!0;return a}},own:{get:function(){var a=this.isBase?c():this;a.options.own=!0;return a}},allowNull:{get:function(){var a=this.isBase?c():this;a.options.allowNull=!0;return a}},nullDeletes:{get:function(){var a=this.isBase?c():this;a.options.nullDeletes=!0;return a}},concat:{get:function(){var a=this.isBase?c():this;a.options.concat=!0;return a}},clone:{get:function(){var a=\n\tthis.isBase?c():this;a.options.target={};return a}},notDeep:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notDeep=k(b);return a}}},deepOnly:{get:function(){var a=this.isBase?c():this;return function(b){a.options.deepOnly=k(b);return a}}},keys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.keys=k(b);return a}}},notKeys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notKeys=k(b);return a}}},transform:{get:function(){var a=this.isBase?\n\tc():this;return function(b){\"function\"===typeof b?a.options.globalTransform=b:b&&\"object\"===typeof b&&(a.options.transforms=b);return a}}},filter:{get:function(){var a=this.isBase?c():this;return function(b){\"function\"===typeof b?a.options.globalFilter=b:b&&\"object\"===typeof b&&(a.options.filters=b);return a}}}};return e=c(!0)};g[2]=function(e){var g;var k=function(a){return Array.isArray(a)};var c=function(a){return a&&\"[object Object]\"===Object.prototype.toString.call(a)||k(a)};var h=function(a,\n\tb,c){if(a.deep)return a.notDeep?!a.notDeep[b]:!0;if(a.deepOnly)return a.deepOnly[b]||c&&h(a,c)};return e=g=function(a,b,e,m){var d,n;if(!b||\"object\"!==typeof b&&\"function\"!==typeof b)b={};var q=0;for(n=e.length;q<n;q++){var l=e[q];if(null!=l)for(d in l){var f=l[d];var p=b[d];if(!(f===b||void 0===f||null===f&&!a.allowNull&&!a.nullDeletes||a.keys&&!a.keys[d]||a.notKeys&&a.notKeys[d]||a.own&&!l.hasOwnProperty(d)||a.globalFilter&&!a.globalFilter(f,d,l)||a.filters&&a.filters[d]&&!a.filters[d](f,d,l)))if(null===\n\tf&&a.nullDeletes)delete b[d];else switch(a.globalTransform&&(f=a.globalTransform(f,d,l)),a.transforms&&a.transforms[d]&&(f=a.transforms[d](f,d,l)),!1){case !(a.concat&&k(f)&&k(p)):b[d]=p.concat(f);break;case !(h(a,d,m)&&c(f)):p=c(p)?p:k(f)?[]:{};b[d]=g(a,p,[f],d);break;default:b[d]=f}}}return b}};return n};h=h({},{},{});return function(){var g=h(1);null!=(\"undefined\"!==typeof module&&null!==module?module.exports:void 0)?module.exports=g: true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(25)], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return g}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):window.extend=g}()}})(this)();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(26)(module)))\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*! version: \"0.0.1\" */\n\t!function(e,t){if(true)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var o=t();for(var n in o)(\"object\"==typeof exports?exports:e)[n]=o[n]}}(this,function(){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p=\"/static/\",t(0)}([function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function e(){}return e.addClass=function(e,t){e.className=(e.className+\" \"+t).trim()},e.hasClass=function(e,t){return!(!t||(\" \"+e.className+\" \").indexOf(\" \"+t+\" \")==-1)},e.removeClass=function(e,t){var o=\" \"+e.className;e.className=o.replace(\" \"+t,\"\")},e}();t.XDomUtil=o}])});\n\t//# sourceMappingURL=xdom-util.min.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar ComponentInjector = (function () {\r\n\t    function ComponentInjector(resolver) {\r\n\t        this.resolver = resolver;\r\n\t    }\r\n\t    /**\r\n\t     * Inject a component into a ViewContainerRef element\r\n\t     * @param container ViewContainerRef element where to inject the component\r\n\t     * @param componentSelector string Selector of the component which should be injected\r\n\t     * @returns {ComponentRef<any>} Returns ComponentRef of the injected component\r\n\t     */\r\n\t    ComponentInjector.prototype.inject = function (container, componentSelector) {\r\n\t        var injectedComponent;\r\n\t        var componentFactory = this.getComponentFactory(componentSelector);\r\n\t        if (componentFactory) {\r\n\t            injectedComponent = this.injectComponentFactory(container, componentFactory);\r\n\t        }\r\n\t        else {\r\n\t            console.warn('Component [' + componentSelector + '] cannot be found! ' +\r\n\t                'Make sure it is included in the `entryComponents` list.');\r\n\t        }\r\n\t        return injectedComponent ? injectedComponent : null;\r\n\t    };\r\n\t    /**\r\n\t     * Set public properties of the component specified by the componentRef\r\n\t     * @param componentRef ComponentRef object where should be attached the properties\r\n\t     * @param properties Object which contains the keys (name of the property) and values (value of the property).\r\n\t     */\r\n\t    ComponentInjector.prototype.setProperties = function (componentRef, properties) {\r\n\t        if (componentRef) {\r\n\t            for (var property in properties) {\r\n\t                if (properties.hasOwnProperty(property)) {\r\n\t                    componentRef.instance[property] = properties[property];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Remove a component by its ComponentRef\r\n\t     * @param componentRef ComponentRef which should be removed\r\n\t     */\r\n\t    ComponentInjector.prototype.remove = function (componentRef) {\r\n\t        componentRef.destroy();\r\n\t        componentRef = null;\r\n\t    };\r\n\t    /**\r\n\t     * Get the component factory class from the _factories list based on its selector string name\r\n\t     * The list of the _factories is created based on the list of components listed in the entryComponents: [...]\r\n\t     * section of the @NgModule(...)\r\n\t     * @param componentSelector string Selector of the component\r\n\t     * @returns {ComponentFactory<any>|null} Returns the factory of the component or NULL if there is no such component\r\n\t     */\r\n\t    ComponentInjector.prototype.getComponentFactory = function (componentSelector) {\r\n\t        var componentFactory;\r\n\t        var factories = Array.from(this.resolver['_factories']);\r\n\t        var factory = factories.find(function (component) {\r\n\t            return component[1].selector === componentSelector;\r\n\t        });\r\n\t        if (factory) {\r\n\t            var factoryClass = factory[0];\r\n\t            componentFactory = this.resolver.resolveComponentFactory(factoryClass);\r\n\t        }\r\n\t        return componentFactory ? componentFactory : null;\r\n\t    };\r\n\t    /**\r\n\t     * Inject a componentFactory into a container element\r\n\t     * @param container ViewContainerRef container element where to inject the component\r\n\t     * @param componentFactory ComponentFactory which should be injected in the  container element\r\n\t     * @returns {ComponentRef<any>} returns ComponentRef of the injected componentFactory\r\n\t     */\r\n\t    ComponentInjector.prototype.injectComponentFactory = function (container, componentFactory) {\r\n\t        return container.createComponent(componentFactory);\r\n\t    };\r\n\t    return ComponentInjector;\r\n\t}());\r\n\tComponentInjector = __decorate([\r\n\t    core_1.Injectable(),\r\n\t    __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver])\r\n\t], ComponentInjector);\r\n\texports.ComponentInjector = ComponentInjector;\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar rx_pubsub_1 = __webpack_require__(21);\r\n\tvar ModalWindowService = (function () {\r\n\t    function ModalWindowService(pubsub) {\r\n\t        this.pubsub = pubsub;\r\n\t    }\r\n\t    ModalWindowService.prototype.showModal = function (modalId, options) {\r\n\t        if (options === void 0) { options = {}; }\r\n\t        options.show = true;\r\n\t        options.hide = null;\r\n\t        this.pubsub.publish(modalId, options);\r\n\t    };\r\n\t    ModalWindowService.prototype.hideModal = function (modalId) {\r\n\t        var options = { hide: true };\r\n\t        this.pubsub.publish(modalId, options);\r\n\t    };\r\n\t    ModalWindowService.prototype.resetEventsSubscribers = function (eventsList) {\r\n\t        var _this = this;\r\n\t        eventsList.forEach(function (eventName) {\r\n\t            if (eventName && _this.pubsub.hasSubscribers(eventName)) {\r\n\t                _this.pubsub.dispose(eventName);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    return ModalWindowService;\r\n\t}());\r\n\tModalWindowService = __decorate([\r\n\t    core_1.Injectable(),\r\n\t    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub])\r\n\t], ModalWindowService);\r\n\texports.ModalWindowService = ModalWindowService;\r\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// ng2-modal-module.js"," \tvar parentHotUpdateCallback = this[\"webpackHotUpdate\"];\n \tthis[\"webpackHotUpdate\"] = \r\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\thotAddUpdateChunk(chunkId, moreModules);\r\n \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\r\n \t}\r\n \t\r\n \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\r\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\r\n \t\tvar script = document.createElement(\"script\");\r\n \t\tscript.type = \"text/javascript\";\r\n \t\tscript.charset = \"utf-8\";\r\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\r\n \t\thead.appendChild(script);\r\n \t}\r\n \t\r\n \tfunction hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars\r\n \t\tif(typeof XMLHttpRequest === \"undefined\")\r\n \t\t\treturn callback(new Error(\"No browser support\"));\r\n \t\ttry {\r\n \t\t\tvar request = new XMLHttpRequest();\r\n \t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\r\n \t\t\trequest.open(\"GET\", requestPath, true);\r\n \t\t\trequest.timeout = 10000;\r\n \t\t\trequest.send(null);\r\n \t\t} catch(err) {\r\n \t\t\treturn callback(err);\r\n \t\t}\r\n \t\trequest.onreadystatechange = function() {\r\n \t\t\tif(request.readyState !== 4) return;\r\n \t\t\tif(request.status === 0) {\r\n \t\t\t\t// timeout\r\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\r\n \t\t\t} else if(request.status === 404) {\r\n \t\t\t\t// no update available\r\n \t\t\t\tcallback();\r\n \t\t\t} else if(request.status !== 200 && request.status !== 304) {\r\n \t\t\t\t// other failure\r\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\r\n \t\t\t} else {\r\n \t\t\t\t// success\r\n \t\t\t\ttry {\r\n \t\t\t\t\tvar update = JSON.parse(request.responseText);\r\n \t\t\t\t} catch(e) {\r\n \t\t\t\t\tcallback(e);\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tcallback(null, update);\r\n \t\t\t}\r\n \t\t};\r\n \t}\r\n\n \t\r\n \t\r\n \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n \tvar canDefineProperty = false;\r\n \ttry {\r\n \t\tObject.defineProperty({}, \"x\", {\r\n \t\t\tget: function() {}\r\n \t\t});\r\n \t\tcanDefineProperty = true;\r\n \t} catch(x) {\r\n \t\t// IE will fail on defineProperty\r\n \t}\r\n \t\r\n \tvar hotApplyOnUpdate = true;\r\n \tvar hotCurrentHash = \"0d0521551e07c2a73498\"; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentModuleData = {};\r\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n \t\r\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar me = installedModules[moduleId];\r\n \t\tif(!me) return __webpack_require__;\r\n \t\tvar fn = function(request) {\r\n \t\t\tif(me.hot.active) {\r\n \t\t\t\tif(installedModules[request]) {\r\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n \t\t\t\t\t\tme.children.push(request);\r\n \t\t\t\t} else hotCurrentParents = [moduleId];\r\n \t\t\t} else {\r\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n \t\t\t\thotCurrentParents = [];\r\n \t\t\t}\r\n \t\t\treturn __webpack_require__(request);\r\n \t\t};\r\n \t\tfor(var name in __webpack_require__) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n \t\t\t\tif(canDefineProperty) {\r\n \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n \t\t\t\t\t\treturn {\r\n \t\t\t\t\t\t\tconfigurable: true,\r\n \t\t\t\t\t\t\tenumerable: true,\r\n \t\t\t\t\t\t\tget: function() {\r\n \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n \t\t\t\t\t\t\t},\r\n \t\t\t\t\t\t\tset: function(value) {\r\n \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t};\r\n \t\t\t\t\t}(name)));\r\n \t\t\t\t} else {\r\n \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\tfunction ensure(chunkId, callback) {\r\n \t\t\tif(hotStatus === \"ready\")\r\n \t\t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotChunksLoading++;\r\n \t\t\t__webpack_require__.e(chunkId, function() {\r\n \t\t\t\ttry {\r\n \t\t\t\t\tcallback.call(null, fn);\r\n \t\t\t\t} finally {\r\n \t\t\t\t\tfinishChunkLoading();\r\n \t\t\t\t}\r\n \t\r\n \t\t\t\tfunction finishChunkLoading() {\r\n \t\t\t\t\thotChunksLoading--;\r\n \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\t\t\t\thotUpdateDownloaded();\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t}\r\n \t\tif(canDefineProperty) {\r\n \t\t\tObject.defineProperty(fn, \"e\", {\r\n \t\t\t\tenumerable: true,\r\n \t\t\t\tvalue: ensure\r\n \t\t\t});\r\n \t\t} else {\r\n \t\t\tfn.e = ensure;\r\n \t\t}\r\n \t\treturn fn;\r\n \t}\r\n \t\r\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar hot = {\r\n \t\t\t// private stuff\r\n \t\t\t_acceptedDependencies: {},\r\n \t\t\t_declinedDependencies: {},\r\n \t\t\t_selfAccepted: false,\r\n \t\t\t_selfDeclined: false,\r\n \t\t\t_disposeHandlers: [],\r\n \t\r\n \t\t\t// Module API\r\n \t\t\tactive: true,\r\n \t\t\taccept: function(dep, callback) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfAccepted = true;\r\n \t\t\t\telse if(typeof dep === \"function\")\r\n \t\t\t\t\thot._selfAccepted = dep;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n \t\t\t\telse\r\n \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n \t\t\t},\r\n \t\t\tdecline: function(dep) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfDeclined = true;\r\n \t\t\t\telse if(typeof dep === \"number\")\r\n \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n \t\t\t\telse\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n \t\t\t},\r\n \t\t\tdispose: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\taddDisposeHandler: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\tremoveDisposeHandler: function(callback) {\r\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t// Management API\r\n \t\t\tcheck: hotCheck,\r\n \t\t\tapply: hotApply,\r\n \t\t\tstatus: function(l) {\r\n \t\t\t\tif(!l) return hotStatus;\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\taddStatusHandler: function(l) {\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\tremoveStatusHandler: function(l) {\r\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t//inherit from previous dispose call\r\n \t\t\tdata: hotCurrentModuleData[moduleId]\r\n \t\t};\r\n \t\treturn hot;\r\n \t}\r\n \t\r\n \tvar hotStatusHandlers = [];\r\n \tvar hotStatus = \"idle\";\r\n \t\r\n \tfunction hotSetStatus(newStatus) {\r\n \t\thotStatus = newStatus;\r\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n \t}\r\n \t\r\n \t// while downloading\r\n \tvar hotWaitingFiles = 0;\r\n \tvar hotChunksLoading = 0;\r\n \tvar hotWaitingFilesMap = {};\r\n \tvar hotRequestedFilesMap = {};\r\n \tvar hotAvailibleFilesMap = {};\r\n \tvar hotCallback;\r\n \t\r\n \t// The update info\r\n \tvar hotUpdate, hotUpdateNewHash;\r\n \t\r\n \tfunction toModuleId(id) {\r\n \t\tvar isNumber = (+id) + \"\" === id;\r\n \t\treturn isNumber ? +id : id;\r\n \t}\r\n \t\r\n \tfunction hotCheck(apply, callback) {\r\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n \t\tif(typeof apply === \"function\") {\r\n \t\t\thotApplyOnUpdate = false;\r\n \t\t\tcallback = apply;\r\n \t\t} else {\r\n \t\t\thotApplyOnUpdate = apply;\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\thotSetStatus(\"check\");\r\n \t\thotDownloadManifest(function(err, update) {\r\n \t\t\tif(err) return callback(err);\r\n \t\t\tif(!update) {\r\n \t\t\t\thotSetStatus(\"idle\");\r\n \t\t\t\tcallback(null, null);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\r\n \t\t\thotRequestedFilesMap = {};\r\n \t\t\thotAvailibleFilesMap = {};\r\n \t\t\thotWaitingFilesMap = {};\r\n \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n \t\t\thotUpdateNewHash = update.h;\r\n \t\r\n \t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotCallback = callback;\r\n \t\t\thotUpdate = {};\r\n \t\t\tvar chunkId = 0;\r\n \t\t\t{ // eslint-disable-line no-lone-blocks\r\n \t\t\t\t/*globals chunkId */\r\n \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t}\r\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\thotUpdateDownloaded();\r\n \t\t\t}\r\n \t\t});\r\n \t}\r\n \t\r\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n \t\t\treturn;\r\n \t\thotRequestedFilesMap[chunkId] = false;\r\n \t\tfor(var moduleId in moreModules) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n \t\t\thotUpdateDownloaded();\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotEnsureUpdateChunk(chunkId) {\r\n \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n \t\t\thotWaitingFilesMap[chunkId] = true;\r\n \t\t} else {\r\n \t\t\thotRequestedFilesMap[chunkId] = true;\r\n \t\t\thotWaitingFiles++;\r\n \t\t\thotDownloadUpdateChunk(chunkId);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotUpdateDownloaded() {\r\n \t\thotSetStatus(\"ready\");\r\n \t\tvar callback = hotCallback;\r\n \t\thotCallback = null;\r\n \t\tif(!callback) return;\r\n \t\tif(hotApplyOnUpdate) {\r\n \t\t\thotApply(hotApplyOnUpdate, callback);\r\n \t\t} else {\r\n \t\t\tvar outdatedModules = [];\r\n \t\t\tfor(var id in hotUpdate) {\r\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcallback(null, outdatedModules);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotApply(options, callback) {\r\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n \t\tif(typeof options === \"function\") {\r\n \t\t\tcallback = options;\r\n \t\t\toptions = {};\r\n \t\t} else if(options && typeof options === \"object\") {\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t} else {\r\n \t\t\toptions = {};\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\r\n \t\tfunction getAffectedStuff(module) {\r\n \t\t\tvar outdatedModules = [module];\r\n \t\t\tvar outdatedDependencies = {};\r\n \t\r\n \t\t\tvar queue = outdatedModules.slice();\r\n \t\t\twhile(queue.length > 0) {\r\n \t\t\t\tvar moduleId = queue.pop();\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tif(!module || module.hot._selfAccepted)\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\tif(module.hot._selfDeclined) {\r\n \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n \t\t\t\t}\r\n \t\t\t\tif(moduleId === 0) {\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n \t\t\t\t\tvar parentId = module.parents[i];\r\n \t\t\t\t\tvar parent = installedModules[parentId];\r\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n \t\t\t\t\toutdatedModules.push(parentId);\r\n \t\t\t\t\tqueue.push(parentId);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\r\n \t\t\treturn [outdatedModules, outdatedDependencies];\r\n \t\t}\r\n \t\r\n \t\tfunction addAllToSet(a, b) {\r\n \t\t\tfor(var i = 0; i < b.length; i++) {\r\n \t\t\t\tvar item = b[i];\r\n \t\t\t\tif(a.indexOf(item) < 0)\r\n \t\t\t\t\ta.push(item);\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// at begin all updates modules are outdated\r\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n \t\tvar outdatedDependencies = {};\r\n \t\tvar outdatedModules = [];\r\n \t\tvar appliedUpdate = {};\r\n \t\tfor(var id in hotUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\tvar moduleId = toModuleId(id);\r\n \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n \t\t\t\tif(!result) {\r\n \t\t\t\t\tif(options.ignoreUnaccepted)\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n \t\t\t\t}\r\n \t\t\t\tif(result instanceof Error) {\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(result);\r\n \t\t\t\t}\r\n \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n \t\t\t\tfor(var moduleId in result[1]) {\r\n \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Store self accepted outdated modules to require them later by the module system\r\n \t\tvar outdatedSelfAcceptedModules = [];\r\n \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n \t\t\tvar moduleId = outdatedModules[i];\r\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n \t\t\t\toutdatedSelfAcceptedModules.push({\r\n \t\t\t\t\tmodule: moduleId,\r\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n \t\t\t\t});\r\n \t\t}\r\n \t\r\n \t\t// Now in \"dispose\" phase\r\n \t\thotSetStatus(\"dispose\");\r\n \t\tvar queue = outdatedModules.slice();\r\n \t\twhile(queue.length > 0) {\r\n \t\t\tvar moduleId = queue.pop();\r\n \t\t\tvar module = installedModules[moduleId];\r\n \t\t\tif(!module) continue;\r\n \t\r\n \t\t\tvar data = {};\r\n \t\r\n \t\t\t// Call dispose handlers\r\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n \t\t\t\tvar cb = disposeHandlers[j];\r\n \t\t\t\tcb(data);\r\n \t\t\t}\r\n \t\t\thotCurrentModuleData[moduleId] = data;\r\n \t\r\n \t\t\t// disable module (this disables requires from this module)\r\n \t\t\tmodule.hot.active = false;\r\n \t\r\n \t\t\t// remove module from cache\r\n \t\t\tdelete installedModules[moduleId];\r\n \t\r\n \t\t\t// remove \"parents\" references from all children\r\n \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n \t\t\t\tvar child = installedModules[module.children[j]];\r\n \t\t\t\tif(!child) continue;\r\n \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n \t\t\t\tif(idx >= 0) {\r\n \t\t\t\t\tchild.parents.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// remove outdated dependency from module children\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Not in \"apply\" phase\r\n \t\thotSetStatus(\"apply\");\r\n \t\r\n \t\thotCurrentHash = hotUpdateNewHash;\r\n \t\r\n \t\t// insert new code\r\n \t\tfor(var moduleId in appliedUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// call accept handlers\r\n \t\tvar error = null;\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tvar callbacks = [];\r\n \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n \t\t\t\t\tcallbacks.push(cb);\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n \t\t\t\t\tvar cb = callbacks[i];\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tcb(outdatedDependencies);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Load self accepted modules\r\n \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n \t\t\tvar moduleId = item.module;\r\n \t\t\thotCurrentParents = [moduleId];\r\n \t\t\ttry {\r\n \t\t\t\t__webpack_require__(moduleId);\r\n \t\t\t} catch(err) {\r\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\titem.errorHandler(err);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t} else if(!error)\r\n \t\t\t\t\terror = err;\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// handle errors in accept handlers and self accepted module load\r\n \t\tif(error) {\r\n \t\t\thotSetStatus(\"fail\");\r\n \t\t\treturn callback(error);\r\n \t\t}\r\n \t\r\n \t\thotSetStatus(\"idle\");\r\n \t\tcallback(null, outdatedModules);\r\n \t}\r\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false,\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: hotCurrentParents,\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d0521551e07c2a73498","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar modal_module_1 = require(\"./src/modal.module\");\r\nexports.ModalModule = modal_module_1.ModalModule;\r\nvar modal_window_service_1 = require(\"./src/services/modal-window.service\");\r\nexports.ModalWindowService = modal_window_service_1.ModalWindowService;\r\nvar modal_window_component_1 = require(\"./src/components/modal-window/modal-window.component\");\r\nexports.ModalWindowComponent = modal_window_component_1.ModalWindowComponent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar rx_pubsub_1 = require(\"rx-pubsub\");\r\nvar trust_html_pipe_1 = require(\"trust-html-pipe\");\r\nvar modal_window_component_1 = require(\"./components/modal-window/modal-window.component\");\r\nvar modal_window_service_1 = require(\"./services/modal-window.service\");\r\nvar ModalModule = (function () {\r\n    function ModalModule() {\r\n    }\r\n    return ModalModule;\r\n}());\r\nModalModule = __decorate([\r\n    core_1.NgModule({\r\n        imports: [\r\n            common_1.CommonModule\r\n        ],\r\n        declarations: [\r\n            modal_window_component_1.ModalWindowComponent,\r\n            trust_html_pipe_1.TrustHtmlPipe\r\n        ],\r\n        providers: [rx_pubsub_1.RxPubSub, modal_window_service_1.ModalWindowService],\r\n        exports: [modal_window_component_1.ModalWindowComponent]\r\n    })\r\n], ModalModule);\r\nexports.ModalModule = ModalModule;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modal.module.ts\n// module id = 1\n// module chunks = 0","/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/symbol/observable'), require('rxjs/Subject'), require('rxjs/Observable')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/symbol/observable', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.rxjs_symbol_observable,global.Rx,global.Rx));\n}(this, function (exports,rxjs_symbol_observable,rxjs_Subject,rxjs_Observable) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = (self);\n        }\n        else {\n            globalScope = (global);\n        }\n    }\n    else {\n        globalScope = (window);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var /** @type {?} */ global$1 = globalScope;\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var /** @type {?} */ res = token.toString();\n        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function print(obj) {\n        // tslint:disable-next-line:no-console\n        console.log(obj);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function warn(obj) {\n        console.warn(obj);\n    }\n    var /** @type {?} */ _symbolIterator = null;\n    /**\n     * @return {?}\n     */\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (((globalScope)).Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                    var /** @type {?} */ key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        ((Map)).prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    var /** @type {?} */ _nextClassId = 0;\n    var /** @type {?} */ Reflect = global$1.Reflect;\n    /**\n     * @param {?} annotation\n     * @return {?}\n     */\n    function extractAnnotation(annotation) {\n        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n            // it is a decorator, extract annotation\n            annotation = annotation.annotation;\n        }\n        return annotation;\n    }\n    /**\n     * @param {?} fnOrArray\n     * @param {?} key\n     * @return {?}\n     */\n    function applyParams(fnOrArray, key) {\n        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n            fnOrArray === Number || fnOrArray === Array) {\n            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n        }\n        if (typeof fnOrArray === 'function') {\n            return fnOrArray;\n        }\n        if (Array.isArray(fnOrArray)) {\n            var /** @type {?} */ annotations = fnOrArray;\n            var /** @type {?} */ annoLength = annotations.length - 1;\n            var /** @type {?} */ fn = fnOrArray[annoLength];\n            if (typeof fn !== 'function') {\n                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n            }\n            if (annoLength != fn.length) {\n                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n            }\n            var /** @type {?} */ paramsAnnotations = [];\n            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n                var /** @type {?} */ paramAnnotations = [];\n                paramsAnnotations.push(paramAnnotations);\n                var /** @type {?} */ annotation = annotations[i];\n                if (Array.isArray(annotation)) {\n                    for (var /** @type {?} */ j = 0; j < annotation.length; j++) {\n                        paramAnnotations.push(extractAnnotation(annotation[j]));\n                    }\n                }\n                else if (typeof annotation === 'function') {\n                    paramAnnotations.push(extractAnnotation(annotation));\n                }\n                else {\n                    paramAnnotations.push(annotation);\n                }\n            }\n            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n            return fn;\n        }\n        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n    }\n    /**\n     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n     *\n     * ## Basic Example\n     *\n     * ```\n     * var Greeter = ng.Class({\n     *   constructor: function(name) {\n     *     this.name = name;\n     *   },\n     *\n     *   greet: function() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class Greeter {\n     *   constructor(name) {\n     *     this.name = name;\n     *   }\n     *\n     *   greet() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * }\n     * ```\n     *\n     * or equivalent to ES5:\n     *\n     * ```\n     * var Greeter = function (name) {\n     *   this.name = name;\n     * }\n     *\n     * Greeter.prototype.greet = function () {\n     *   alert('Hello ' + this.name + '!');\n     * }\n     * ```\n     *\n     * ### Example with parameter annotations\n     *\n     * ```\n     * var MyService = ng.Class({\n     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n     *     ...\n     *   }]\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class MyService {\n     *   constructor(name: string, \\@Optional() myService: Service) {\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * ### Example with inheritance\n     *\n     * ```\n     * var Shape = ng.Class({\n     *   constructor: (color) {\n     *     this.color = color;\n     *   }\n     * });\n     *\n     * var Square = ng.Class({\n     *   extends: Shape,\n     *   constructor: function(color, size) {\n     *     Shape.call(this, color);\n     *     this.size = size;\n     *   }\n     * });\n     * ```\n     * \\@stable\n     * @param {?} clsDef\n     * @return {?}\n     */\n    function Class(clsDef) {\n        var /** @type {?} */ constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n        var /** @type {?} */ proto = constructor.prototype;\n        if (clsDef.hasOwnProperty('extends')) {\n            if (typeof clsDef.extends === 'function') {\n                ((constructor)).prototype = proto =\n                    Object.create(((clsDef.extends)).prototype);\n            }\n            else {\n                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n            }\n        }\n        for (var key in clsDef) {\n            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n                proto[key] = applyParams(clsDef[key], key);\n            }\n        }\n        if (this && this.annotations instanceof Array) {\n            Reflect.defineMetadata('annotations', this.annotations, constructor);\n        }\n        var /** @type {?} */ constructorName = constructor['name'];\n        if (!constructorName || constructorName === 'constructor') {\n            ((constructor))['overriddenName'] = \"class\" + _nextClassId++;\n        }\n        return (constructor);\n    }\n    /**\n     * @param {?} name\n     * @param {?} props\n     * @param {?=} parentClass\n     * @param {?=} chainFn\n     * @return {?}\n     */\n    function makeDecorator(name, props, parentClass, chainFn) {\n        if (chainFn === void 0) { chainFn = null; }\n        var /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n        /**\n         * @param {?} objOrType\n         * @return {?}\n         */\n        function DecoratorFactory(objOrType) {\n            if (!(Reflect && Reflect.getOwnMetadata)) {\n                throw 'reflect-metadata shim is required when using class decorators';\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call(this, objOrType);\n                return this;\n            }\n            var /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n            var /** @type {?} */ chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n            chainAnnotation.push(annotationInstance);\n            var /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n                var /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n                annotations.push(annotationInstance);\n                Reflect.defineMetadata('annotations', annotations, cls);\n                return cls;\n            });\n            TypeDecorator.annotations = chainAnnotation;\n            TypeDecorator.Class = Class;\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ((DecoratorFactory)).annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    /**\n     * @param {?} props\n     * @return {?}\n     */\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            props.forEach(function (prop, i) {\n                var /** @type {?} */ argVal = args[i];\n                if (Array.isArray(prop)) {\n                    // plain parameter\n                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n                }\n                else {\n                    for (var propName in prop) {\n                        _this[propName] =\n                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n                    }\n                }\n            });\n        };\n    }\n    /**\n     * @param {?} name\n     * @param {?} props\n     * @param {?=} parentClass\n     * @return {?}\n     */\n    function makeParamDecorator(name, props, parentClass) {\n        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n        /**\n         * @param {...?} args\n         * @return {?}\n         */\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var /** @type {?} */ annotationInstance = new ((_a = ((ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n            ((ParamDecorator)).annotation = annotationInstance;\n            return ParamDecorator;\n            /**\n             * @param {?} cls\n             * @param {?} unusedKey\n             * @param {?} index\n             * @return {?}\n             */\n            function ParamDecorator(cls, unusedKey, index) {\n                var /** @type {?} */ parameters = Reflect.getOwnMetadata('parameters', cls) || [];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                parameters[index] = parameters[index] || [];\n                parameters[index].push(annotationInstance);\n                Reflect.defineMetadata('parameters', parameters, cls);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    /**\n     * @param {?} name\n     * @param {?} props\n     * @param {?=} parentClass\n     * @return {?}\n     */\n    function makePropDecorator(name, props, parentClass) {\n        var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n        /**\n         * @param {...?} args\n         * @return {?}\n         */\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var /** @type {?} */ decoratorInstance = new ((_a = ((PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n            return function PropDecorator(target, name) {\n                var /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * Inject decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Inject = makeParamDecorator('Inject', [['token', undefined]]);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Optional = makeParamDecorator('Optional', []);\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Injectable = (makeDecorator('Injectable', []));\n    /**\n     * Self decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Self = makeParamDecorator('Self', []);\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ SkipSelf = makeParamDecorator('SkipSelf', []);\n    /**\n     * Host decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Host = makeParamDecorator('Host', []);\n\n    var OpaqueToken = (function () {\n        /**\n         * @param {?} _desc\n         */\n        function OpaqueToken(_desc) {\n            this._desc = _desc;\n        }\n        /**\n         * @return {?}\n         */\n        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n        OpaqueToken.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        OpaqueToken.ctorParameters = function () { return [\n            null,\n        ]; };\n        return OpaqueToken;\n    }());\n\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n    /**\n     * Base class for query metadata.\n     *\n     * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n     * more information.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var Query = (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *  @stable\n     *  @Annotation\n     */\n    var /** @type {?} */ ContentChildren = (makePropDecorator('ContentChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n        }\n    ], Query));\n    /**\n     * ContentChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ ContentChild = makePropDecorator('ContentChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: false,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ ViewChildren = makePropDecorator('ViewChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ ViewChild = makePropDecorator('ViewChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n\n    var ChangeDetectionStrategy = {};\n    ChangeDetectionStrategy.OnPush = 0;\n    ChangeDetectionStrategy.Default = 1;\n    ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\n    ChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n    var ChangeDetectorStatus = {};\n    ChangeDetectorStatus.CheckOnce = 0;\n    ChangeDetectorStatus.Checked = 1;\n    ChangeDetectorStatus.CheckAlways = 2;\n    ChangeDetectorStatus.Detached = 3;\n    ChangeDetectorStatus.Errored = 4;\n    ChangeDetectorStatus.Destroyed = 5;\n    ChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\n    ChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\n    ChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n    /**\n     * @param {?} changeDetectionStrategy\n     * @return {?}\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return isBlank(changeDetectionStrategy) ||\n            changeDetectionStrategy === ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * Directive decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Directive = (makeDecorator('Directive', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        providers: undefined,\n        exportAs: undefined,\n        queries: undefined\n    }));\n    /**\n     * Component decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Component = (makeDecorator('Component', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        exportAs: undefined,\n        moduleId: undefined,\n        providers: undefined,\n        viewProviders: undefined,\n        changeDetection: ChangeDetectionStrategy.Default,\n        queries: undefined,\n        templateUrl: undefined,\n        template: undefined,\n        styleUrls: undefined,\n        styles: undefined,\n        animations: undefined,\n        encapsulation: undefined,\n        interpolation: undefined,\n        entryComponents: undefined\n    }, Directive));\n    /**\n     * Pipe decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Pipe = (makeDecorator('Pipe', {\n        name: undefined,\n        pure: true,\n    }));\n    /**\n     * Input decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n    /**\n     * Output decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n    /**\n     * HostListener decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LifecycleHooks = {};\n    LifecycleHooks.OnInit = 0;\n    LifecycleHooks.OnDestroy = 1;\n    LifecycleHooks.DoCheck = 2;\n    LifecycleHooks.OnChanges = 3;\n    LifecycleHooks.AfterContentInit = 4;\n    LifecycleHooks.AfterContentChecked = 5;\n    LifecycleHooks.AfterViewInit = 6;\n    LifecycleHooks.AfterViewChecked = 7;\n    LifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\n    LifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\n    LifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\n    LifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\n    LifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\n    LifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\n    LifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\n    LifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\n    var /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n        LifecycleHooks.AfterViewChecked\n    ];\n    /**\n     * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n     *\n     * \\@description\n     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n     * and content children are checked if at least one of them has changed.\n     * The `changes` parameter contains the changed properties.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var OnChanges = (function () {\n        function OnChanges() {\n        }\n        /**\n         * @abstract\n         * @param {?} changes\n         * @return {?}\n         */\n        OnChanges.prototype.ngOnChanges = function (changes) { };\n        return OnChanges;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n     * initialized.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n     *\n     * \\@description\n     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n     * first time, and before any of its children have been checked. It is invoked only once when the\n     * directive is instantiated.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var OnInit = (function () {\n        function OnInit() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        OnInit.prototype.ngOnInit = function () { };\n        return OnInit;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n     *\n     * \\@description\n     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n     * algorithm. The default change detection algorithm looks for differences by comparing\n     * bound-property values by reference across change detection runs.\n     *\n     * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n     * detector detects changes.\n     *\n     * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n     * for collections.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var DoCheck = (function () {\n        function DoCheck() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DoCheck.prototype.ngDoCheck = function () { };\n        return DoCheck;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n     *\n     * \\@description\n     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n     * instance is destroyed.\n     *\n     * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var OnDestroy = (function () {\n        function OnDestroy() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        OnDestroy.prototype.ngOnDestroy = function () { };\n        return OnDestroy;\n    }());\n    /**\n     *\n     * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n     * initialized.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterContentInit = (function () {\n        function AfterContentInit() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterContentInit.prototype.ngAfterContentInit = function () { };\n        return AfterContentInit;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterContentChecked = (function () {\n        function AfterContentChecked() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterContentChecked.prototype.ngAfterContentChecked = function () { };\n        return AfterContentChecked;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n     * initialized.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterViewInit = (function () {\n        function AfterViewInit() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterViewInit.prototype.ngAfterViewInit = function () { };\n        return AfterViewInit;\n    }());\n    /**\n     * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n     * \\@howToUse\n     * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n     *\n     * \\@description\n     * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AfterViewChecked = (function () {\n        function AfterViewChecked() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AfterViewChecked.prototype.ngAfterViewChecked = function () { };\n        return AfterViewChecked;\n    }());\n\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     * @stable\n     */\n    var /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * NgModule decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var /** @type {?} */ NgModule = (makeDecorator('NgModule', {\n        providers: undefined,\n        declarations: undefined,\n        imports: undefined,\n        exports: undefined,\n        entryComponents: undefined,\n        bootstrap: undefined,\n        schemas: undefined,\n        id: undefined,\n    }));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewEncapsulation = {};\n    ViewEncapsulation.Emulated = 0;\n    ViewEncapsulation.Native = 1;\n    ViewEncapsulation.None = 2;\n    ViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\n    ViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\n    ViewEncapsulation[ViewEncapsulation.None] = \"None\";\n    /**\n     * Metadata properties available for configuring Views.\n     *\n     * For details on the `\\@Component` annotation, see {\\@link Component}.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   selector: 'greet',\n     *   template: 'Hello {{name}}!',\n     * })\n     * class Greet {\n     *   name: string;\n     *\n     *   constructor() {\n     *     this.name = 'World';\n     *   }\n     * }\n     * ```\n     *\n     * @deprecated Use Component instead.\n     *\n     * {\\@link Component}\n     */\n    var ViewMetadata = (function () {\n        /**\n         * @param {?=} __0\n         */\n        function ViewMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n            this.templateUrl = templateUrl;\n            this.template = template;\n            this.styleUrls = styleUrls;\n            this.styles = styles;\n            this.encapsulation = encapsulation;\n            this.animations = animations;\n            this.interpolation = interpolation;\n        }\n        return ViewMetadata;\n    }());\n\n    /**\n     * \\@whatItDoes Represents the version of Angular\n     *\n     * \\@stable\n     */\n    var Version = (function () {\n        /**\n         * @param {?} full\n         */\n        function Version(full) {\n            this.full = full;\n        }\n        Object.defineProperty(Version.prototype, \"major\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.full.split('.')[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Version.prototype, \"minor\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.full.split('.')[1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Version.prototype, \"patch\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.full.split('.').slice(2).join('.'); },\n            enumerable: true,\n            configurable: true\n        });\n        return Version;\n    }());\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new Version('2.4.10');\n\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * \\@experimental\n     * @param {?} forwardRefFn\n     * @return {?}\n     */\n    function forwardRef(forwardRefFn) {\n        ((forwardRefFn)).__forward_ref__ = forwardRef;\n        ((forwardRefFn)).toString = function () { return stringify(this()); };\n        return (((forwardRefFn)));\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {\\@link forwardRef}\n     * \\@experimental\n     * @param {?} type\n     * @return {?}\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return ((type))();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\n    var /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var _NullInjector = (function () {\n        function _NullInjector() {\n        }\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        _NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return _NullInjector;\n    }());\n    /**\n     * \\@whatItDoes Injector interface\n     * \\@howToUse\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * \\@description\n     * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * \\@stable\n     * @abstract\n     */\n    var Injector = (function () {\n        function Injector() {\n        }\n        /**\n         * Retrieves an instance from the injector based on the provided token.\n         * If not found:\n         * - Throws {\\@link NoProviderError} if no `notFoundValue` that is not equal to\n         * Injector.THROW_IF_NOT_FOUND is given\n         * - Returns the `notFoundValue` otherwise\n         * @abstract\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        Injector.prototype.get = function (token, notFoundValue) { };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new _NullInjector();\n        return Injector;\n    }());\n\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var BaseError = (function (_super) {\n        __extends$1(BaseError, _super);\n        /**\n         * @param {?} message\n         */\n        function BaseError(message) {\n            _super.call(this, message);\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            // TODO(bradfordcsmith): Remove this hack when\n            //     google/closure-compiler/issues/2102 is fixed.\n            var nativeError = new Error(message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.message; },\n            /**\n             * @param {?} message\n             * @return {?}\n             */\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return ((this._nativeError)).stack; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) { ((this._nativeError)).stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * \\@stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$1(WrappedError, _super);\n        /**\n         * @param {?} message\n         * @param {?} error\n         */\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @param {?} keys\n     * @return {?}\n     */\n    function findFirstClosedCycle(keys) {\n        var /** @type {?} */ res = [];\n        for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    /**\n     * @param {?} keys\n     * @return {?}\n     */\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n            var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    /**\n     * Base class for all errors arising from misconfigured providers.\n     * \\@stable\n     */\n    var AbstractProviderError = (function (_super) {\n        __extends(AbstractProviderError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} key\n         * @param {?} constructResolvingMessage\n         */\n        function AbstractProviderError(injector, key, constructResolvingMessage) {\n            _super.call(this, 'DI Error');\n            this.keys = [key];\n            this.injectors = [injector];\n            this.constructResolvingMessage = constructResolvingMessage;\n            this.message = this.constructResolvingMessage(this.keys);\n        }\n        /**\n         * @param {?} injector\n         * @param {?} key\n         * @return {?}\n         */\n        AbstractProviderError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n            this.message = this.constructResolvingMessage(this.keys);\n        };\n        return AbstractProviderError;\n    }(BaseError));\n    /**\n     * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n     * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var NoProviderError = (function (_super) {\n        __extends(NoProviderError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} key\n         */\n        function NoProviderError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                var first = stringify(keys[0].token);\n                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n            });\n        }\n        return NoProviderError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     * \\@stable\n     */\n    var CyclicDependencyError = (function (_super) {\n        __extends(CyclicDependencyError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} key\n         */\n        function CyclicDependencyError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n            });\n        }\n        return CyclicDependencyError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     * \\@stable\n     */\n    var InstantiationError = (function (_super) {\n        __extends(InstantiationError, _super);\n        /**\n         * @param {?} injector\n         * @param {?} originalException\n         * @param {?} originalStack\n         * @param {?} key\n         */\n        function InstantiationError(injector, originalException, originalStack, key) {\n            _super.call(this, 'DI Error', originalException);\n            this.keys = [key];\n            this.injectors = [injector];\n        }\n        /**\n         * @param {?} injector\n         * @param {?} key\n         * @return {?}\n         */\n        InstantiationError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n        };\n        Object.defineProperty(InstantiationError.prototype, \"message\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ first = stringify(this.keys[0].token);\n                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.keys[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return InstantiationError;\n    }(WrappedError));\n    /**\n     * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var InvalidProviderError = (function (_super) {\n        __extends(InvalidProviderError, _super);\n        /**\n         * @param {?} provider\n         */\n        function InvalidProviderError(provider) {\n            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n        }\n        return InvalidProviderError;\n    }(BaseError));\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var NoAnnotationError = (function (_super) {\n        __extends(NoAnnotationError, _super);\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} params\n         */\n        function NoAnnotationError(typeOrFunc, params) {\n            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n        }\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} params\n         * @return {?}\n         */\n        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n            var /** @type {?} */ signature = [];\n            for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n                var /** @type {?} */ parameter = params[i];\n                if (!parameter || parameter.length == 0) {\n                    signature.push('?');\n                }\n                else {\n                    signature.push(parameter.map(stringify).join(' '));\n                }\n            }\n            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n                signature.join(', ') + '). ' +\n                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n        };\n        return NoAnnotationError;\n    }(BaseError));\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     * \\@stable\n     */\n    var OutOfBoundsError = (function (_super) {\n        __extends(OutOfBoundsError, _super);\n        /**\n         * @param {?} index\n         */\n        function OutOfBoundsError(index) {\n            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n        }\n        return OutOfBoundsError;\n    }(BaseError));\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n        __extends(MixingMultiProvidersWithRegularProvidersError, _super);\n        /**\n         * @param {?} provider1\n         * @param {?} provider2\n         */\n        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n                provider2.toString());\n        }\n        return MixingMultiProvidersWithRegularProvidersError;\n    }(BaseError));\n\n    /**\n     * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * \\@experimental\n     */\n    var ReflectiveKey = (function () {\n        /**\n         * Private\n         * @param {?} token\n         * @param {?} id\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n        }\n        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n            /**\n             * Returns a stringified token.\n             * @return {?}\n             */\n            get: function () { return stringify(this.token); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Retrieves a `Key` for a token.\n         * @param {?} token\n         * @return {?}\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @return {?} the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    /**\n     * \\@internal\n     */\n    var KeyRegistry = (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        /**\n         * @param {?} token\n         * @return {?}\n         */\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Represents a type that a Component or other object is instances of.\n     *\n     * @description\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @stable\n     */\n    var /** @type {?} */ Type = Function;\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * Attention: This regex has to hold even if the code is minified!\n     */\n    var /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{\\s*(\"use strict\";)?\\s*(return\\s+)?\\S+\\.apply\\(this,\\s*arguments\\)/;\n    var ReflectionCapabilities = (function () {\n        /**\n         * @param {?=} reflect\n         */\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || global$1.Reflect;\n        }\n        /**\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        /**\n         * @param {?} t\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new (t.bind.apply(t, [void 0].concat(args)))();\n        }; };\n        /**\n         * \\@internal\n         * @param {?} paramTypes\n         * @param {?} paramAnnotations\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var /** @type {?} */ result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var /** @type {?} */ i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        /**\n         * @param {?} type\n         * @param {?} parentCtor\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(type.toString())) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n                return ((type)).parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var /** @type {?} */ paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var /** @type {?} */ paramAnnotations = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getOwnMetadata)) {\n                var /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n                var /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n                if (paramTypes || paramAnnotations) {\n                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n                }\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(((type.length))).fill(undefined);\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var /** @type {?} */ parentCtor = getParentCtor(type);\n            var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} parentCtor\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n                var /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getOwnMetadata) {\n                return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n            }\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n            var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @param {?} parentCtor\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (((typeOrFunc)).propMetadata &&\n                ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n                var /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (((typeOrFunc)).propDecorators &&\n                ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n                var /** @type {?} */ propDecorators_1 = ((typeOrFunc)).propDecorators;\n                var /** @type {?} */ propMetadata_1 = ({});\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getOwnMetadata) {\n                return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n            }\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n            var /** @type {?} */ propMetadata = {};\n            if (parentCtor !== Object) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var /** @type {?} */ decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, propMetadata[propName]);\n                    }\n                    decorators.push.apply(decorators, ownPropMetadata[propName]);\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        /**\n         * @param {?} type\n         * @param {?} lcProperty\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.getter = function (name) { return ((new Function('o', 'return o.' + name + ';'))); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return ((new Function('o', 'v', 'return o.' + name + ' = v;')));\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.method = function (name) {\n            var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return ((new Function('o', 'args', functionBody)));\n        };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        /**\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} runtime\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n        /**\n         * @param {?} enumIdentifier\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    /**\n     * @param {?} decoratorInvocations\n     * @return {?}\n     */\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var /** @type {?} */ decoratorType = decoratorInvocation.type;\n            var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n            var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n        });\n    }\n    /**\n     * @param {?} ctor\n     * @return {?}\n     */\n    function getParentCtor(ctor) {\n        var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n        var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * Provides read-only access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     * @abstract\n     */\n    var ReflectorReader = (function () {\n        function ReflectorReader() {\n        }\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.parameters = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.annotations = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.propMetadata = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        ReflectorReader.prototype.importUri = function (typeOrFunc) { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} runtime\n         * @return {?}\n         */\n        ReflectorReader.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { };\n        /**\n         * @abstract\n         * @param {?} identifier\n         * @param {?} name\n         * @return {?}\n         */\n        ReflectorReader.prototype.resolveEnum = function (identifier, name) { };\n        return ReflectorReader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = (function (_super) {\n        __extends$2(Reflector, _super);\n        /**\n         * @param {?} reflectionCapabilities\n         */\n        function Reflector(reflectionCapabilities) {\n            _super.call(this);\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        /**\n         * @param {?} caps\n         * @return {?}\n         */\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        /**\n         * @param {?} typeOrFunc\n         * @return {?}\n         */\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        /**\n         * @param {?} type\n         * @param {?} lcProperty\n         * @return {?}\n         */\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        /**\n         * @param {?} type\n         * @return {?}\n         */\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        /**\n         * @param {?} name\n         * @param {?} moduleUrl\n         * @param {?} runtime\n         * @return {?}\n         */\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n        };\n        /**\n         * @param {?} identifier\n         * @param {?} name\n         * @return {?}\n         */\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }(ReflectorReader));\n\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = (function () {\n        /**\n         * @param {?} key\n         * @param {?} optional\n         * @param {?} visibility\n         */\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        /**\n         * @param {?} key\n         * @return {?}\n         */\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var /** @type {?} */ _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = (function () {\n        /**\n         * @param {?} key\n         * @param {?} resolvedFactories\n         * @param {?} multiProvider\n         */\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n        }\n        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.resolvedFactories[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {\\@link\n     * Provider}.\n     * \\@experimental\n     */\n    var ResolvedReflectiveFactory = (function () {\n        /**\n         * @param {?} factory\n         * @param {?} dependencies\n         */\n        function ResolvedReflectiveFactory(factory, dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     * @param {?} provider\n     * @return {?}\n     */\n    function resolveReflectiveFactory(provider) {\n        var /** @type {?} */ factoryFn;\n        var /** @type {?} */ resolvedDeps;\n        if (provider.useClass) {\n            var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n     *\n     * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n     * convenience provider syntax.\n     * @param {?} provider\n     * @return {?}\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n    }\n    /**\n     * Resolve a list of Providers.\n     * @param {?} providers\n     * @return {?}\n     */\n    function resolveReflectiveProviders(providers) {\n        var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n        var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n        var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     * @param {?} providers\n     * @param {?} normalizedProvidersMap\n     * @return {?}\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n            var /** @type {?} */ provider = providers[i];\n            var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var /** @type {?} */ resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    /**\n     * @param {?} providers\n     * @param {?} res\n     * @return {?}\n     */\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n                res.push(/** @type {?} */ (b));\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw new InvalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @return {?}\n     */\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function _dependenciesFor(typeOrFunc) {\n        var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} metadata\n     * @param {?} params\n     * @return {?}\n     */\n    function _extractToken(typeOrFunc, metadata, params) {\n        var /** @type {?} */ token = null;\n        var /** @type {?} */ optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var /** @type {?} */ visibility = null;\n        for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n            var /** @type {?} */ paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?} optional\n     * @param {?} visibility\n     * @return {?}\n     */\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    // Threshold for the dynamic version\n    var /** @type {?} */ UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var ReflectiveInjector = (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {\\@link Injector#resolve} and {\\@link Injector#fromResolvedProviders}.\n         * @param {?} providers\n         * @param {?=} parent\n         * @return {?}\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * \\@experimental\n         * @param {?} providers\n         * @param {?=} parent\n         * @return {?}\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            return new ReflectiveInjector_(providers, parent);\n        };\n        /**\n         * Parent of this injector.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n         *\n         * ```typescript\n         * var parent = ReflectiveInjector.resolveAndCreate([]);\n         * var child = parent.resolveAndCreateChild([]);\n         * expect(child.parent).toBe(parent);\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.parent = function () { };\n        /**\n         * Resolves an array of providers and creates a child injector from those providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * The passed-in providers can be an array of `Type`, {\\@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n         * var child = parent.resolveAndCreateChild([ChildProvider]);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         *\n         * This function is slower than the corresponding `createChildFromResolved`\n         * because it needs to resolve the passed-in providers first.\n         * See {\\@link Injector#resolve} and {\\@link Injector#createChildFromResolved}.\n         * @abstract\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { };\n        /**\n         * Creates a child injector from previously resolved providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n         *\n         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n         * var child = parent.createChildFromResolved(childProviders);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         * @abstract\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.createChildFromResolved = function (providers) { };\n        /**\n         * Resolves a provider and instantiates an object in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         *\n         * var car = injector.resolveAndInstantiate(Car);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n         * ```\n         * @abstract\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { };\n        /**\n         * Instantiates an object using a resolved provider in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n         *\n         * ```typescript\n         * \\@Injectable()\n         * class Engine {\n         * }\n         *\n         * \\@Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n         * var car = injector.instantiateResolved(carProvider);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n         * ```\n         * @abstract\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.instantiateResolved = function (provider) { };\n        /**\n         * @abstract\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector.prototype.get = function (token, notFoundValue) { };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = (function () {\n        /**\n         * Private\n         * @param {?} _providers\n         * @param {?=} _parent\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            if (_parent === void 0) { _parent = null; }\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this._parent = _parent;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        /**\n         * @param {?} providers\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n            inj._parent = this;\n            return inj;\n        };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /**\n         * \\@internal\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw new CyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        /**\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        /**\n         * @param {?} provider\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n                for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        /**\n         * @param {?} provider\n         * @param {?} ResolvedReflectiveFactory\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n            var /** @type {?} */ deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var /** @type {?} */ obj;\n            try {\n                obj = factory.apply(void 0, deps);\n            }\n            catch (e) {\n                throw new InstantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        /**\n         * @param {?} dep\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        /**\n         * @param {?} key\n         * @param {?} visibility\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        /**\n         * @param {?} keyId\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /**\n         * \\@internal\n         * @param {?} key\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw new NoProviderError(this, key);\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} key\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /**\n         * \\@internal\n         * @param {?} key\n         * @param {?} notFoundValue\n         * @param {?} visibility\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var /** @type {?} */ inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this._parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var /** @type {?} */ inj_ = (inj);\n                var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_._parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        return ReflectiveInjector_;\n    }());\n    var /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n    /**\n     * @param {?} injector\n     * @param {?} fn\n     * @return {?}\n     */\n    function _mapProviders(injector, fn) {\n        var /** @type {?} */ res = new Array(injector._providers.length);\n        for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * \\@whatItDoes Provides a hook for centralized exception handling.\n     *\n     * \\@description\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * \\@NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * \\@stable\n     */\n    var ErrorHandler = (function () {\n        /**\n         * @param {?=} rethrowError\n         */\n        function ErrorHandler(rethrowError) {\n            if (rethrowError === void 0) { rethrowError = true; }\n            /**\n             * @internal\n             */\n            this._console = console;\n            this.rethrowError = rethrowError;\n        }\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype.handleError = function (error) {\n            var /** @type {?} */ originalError = this._findOriginalError(error);\n            var /** @type {?} */ originalStack = this._findOriginalStack(error);\n            var /** @type {?} */ context = this._findContext(error);\n            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n            if (originalError) {\n                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n            }\n            if (originalStack) {\n                this._console.error('ORIGINAL STACKTRACE:');\n                this._console.error(originalStack);\n            }\n            if (context) {\n                this._console.error('ERROR CONTEXT:');\n                this._console.error(context);\n            }\n            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n            if (this.rethrowError)\n                throw error;\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._extractMessage = function (error) {\n            return error instanceof Error ? error.message : error.toString();\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return error.context ? error.context :\n                    this._findContext(((error)).originalError);\n            }\n            return null;\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var /** @type {?} */ e = ((error)).originalError;\n            while (e && ((e)).originalError) {\n                e = ((e)).originalError;\n            }\n            return e;\n        };\n        /**\n         * \\@internal\n         * @param {?} error\n         * @return {?}\n         */\n        ErrorHandler.prototype._findOriginalStack = function (error) {\n            if (!(error instanceof Error))\n                return null;\n            var /** @type {?} */ e = error;\n            var /** @type {?} */ stack = e.stack;\n            while (e instanceof Error && ((e)).originalError) {\n                e = ((e)).originalError;\n                if (e instanceof Error && e.stack) {\n                    stack = e.stack;\n                }\n            }\n            return stack;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.merge = function (m1, m2) {\n            var /** @type {?} */ m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.equals = function (m1, m2) {\n            var /** @type {?} */ k1 = Object.keys(m1);\n            var /** @type {?} */ k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n                var /** @type {?} */ key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} condition\n         * @return {?}\n         */\n        ListWrapper.findLast = function (arr, condition) {\n            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n                if (condition(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} list\n         * @param {?} items\n         * @return {?}\n         */\n        ListWrapper.removeAll = function (list, items) {\n            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n                var /** @type {?} */ index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        /**\n         * @param {?} list\n         * @param {?} el\n         * @return {?}\n         */\n        ListWrapper.remove = function (list, el) {\n            var /** @type {?} */ index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        /**\n         * @param {?} list\n         * @return {?}\n         */\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return ((flat)).concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @param {?} comparator\n     * @return {?}\n     */\n    function areIterablesEqual(a, b, comparator) {\n        var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n        var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var /** @type {?} */ item1 = iterator1.next();\n            var /** @type {?} */ item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    /**\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n            var /** @type {?} */ item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n\n    /**\n     * Determine if the argument is shaped like a Promise\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     * @param {?} obj\n     * @return {?}\n     */\n    function isObservable(obj) {\n        return !!(obj && obj[rxjs_symbol_observable.$$observable]);\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var /** @type {?} */ APP_INITIALIZER = new OpaqueToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n     *\n     * \\@experimental\n     */\n    var ApplicationInitStatus = (function () {\n        /**\n         * @param {?} appInits\n         */\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this._done = false;\n            var asyncInitPromises = [];\n            if (appInits) {\n                for (var i = 0; i < appInits.length; i++) {\n                    var initResult = appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n            if (asyncInitPromises.length === 0) {\n                this._done = true;\n            }\n        }\n        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._done; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._donePromise; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationInitStatus.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var /** @type {?} */ APP_ID = new OpaqueToken('AppId');\n    /**\n     * @return {?}\n     */\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: /** @type {?} */ ([]),\n    };\n    /**\n     * @return {?}\n     */\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var /** @type {?} */ PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var /** @type {?} */ PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\n    var Console = (function () {\n        function Console() {\n        }\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Console.prototype.log = function (message) { print(message); };\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        Console.prototype.warn = function (message) { warn(message); };\n        Console.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Console.ctorParameters = function () { return []; };\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     *\n     * \\@stable\n     */\n    var ComponentStillLoadingError = (function (_super) {\n        __extends$4(ComponentStillLoadingError, _super);\n        /**\n         * @param {?} compType\n         */\n        function ComponentStillLoadingError(compType) {\n            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n            this.compType = compType;\n        }\n        return ComponentStillLoadingError;\n    }(BaseError));\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * \\@experimental\n     */\n    var ModuleWithComponentFactories = (function () {\n        /**\n         * @param {?} ngModuleFactory\n         * @param {?} componentFactories\n         */\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    /**\n     * @return {?}\n     */\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {\\@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `\\@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     * \\@stable\n     */\n    var Compiler = (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents`\n         * have to be inlined. Otherwise throws a {\\@link ComponentStillLoadingError}.\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {\\@link compileModuleSync} but also creates ComponentFactories for all components.\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {\\@link compileModuleAsync} but also creates ComponentFactories for all components.\n         * @param {?} moduleType\n         * @return {?}\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n         * the template of the given component.\n         * This is used by the `upgrade` library to compile the appropriate transclude content\n         * in the Angular 1 wrapper component.\n         * @param {?} component\n         * @return {?}\n         */\n        Compiler.prototype.getNgContentSelectors = function (component) { throw _throwError(); };\n        /**\n         * Clears all caches.\n         * @return {?}\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         * @param {?} type\n         * @return {?}\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        Compiler.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Compiler.ctorParameters = function () { return []; };\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * \\@experimental\n     * @abstract\n     */\n    var CompilerFactory = (function () {\n        function CompilerFactory() {\n        }\n        /**\n         * @abstract\n         * @param {?=} options\n         * @return {?}\n         */\n        CompilerFactory.prototype.createCompiler = function (options) { };\n        return CompilerFactory;\n    }());\n\n    var ElementRef = (function () {\n        /**\n         * @param {?} nativeElement\n         */\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * \\@Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n     *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * \\@stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$6(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         * @param {?=} isAsync\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * @param {?=} generatorOrNext\n         * @param {?=} error\n         * @param {?=} complete\n         * @return {?}\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var /** @type {?} */ schedulerFn;\n            var /** @type {?} */ errorFn = function (err) { return null; };\n            var /** @type {?} */ completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {\\@link runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {\\@link run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '\\@angular/core';\n     * import {NgIf} from '\\@angular/common';\n     *\n     * \\@Component({\n     *   selector: 'ng-zone-demo'.\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *       // reenter the Angular zone and display done\n     *       this._ngZone.run(() => {console.log('Outside Done!') });\n     *     }}));\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * \\@experimental\n     */\n    var NgZone = (function () {\n        /**\n         * @param {?} __0\n         */\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this._hasPendingMicrotasks = false;\n            this._hasPendingMacrotasks = false;\n            this._isStable = true;\n            this._nesting = 0;\n            this._onUnstable = new EventEmitter(false);\n            this._onMicrotaskEmpty = new EventEmitter(false);\n            this._onStable = new EventEmitter(false);\n            this._onErrorEvents = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error('Angular requires Zone.js prolyfill.');\n            }\n            Zone.assertZonePatched();\n            this.outer = this.inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            this.forkInnerZoneWithAngularBehavior();\n        }\n        /**\n         * @return {?}\n         */\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        /**\n         * @return {?}\n         */\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {\\@link runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         * @param {?} fn\n         * @return {?}\n         */\n        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         * @param {?} fn\n         * @return {?}\n         */\n        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {\\@link run} to reenter the Angular zone and do work that updates the application model.\n         * @param {?} fn\n         * @return {?}\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             * @return {?}\n             */\n            get: function () { return this._onUnstable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n            /**\n             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             * @return {?}\n             */\n            get: function () { return this._onMicrotaskEmpty; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onStable\", {\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             * @return {?}\n             */\n            get: function () { return this._onStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onError\", {\n            /**\n             * Notify that an error has been delivered.\n             * @return {?}\n             */\n            get: function () { return this._onErrorEvents; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"isStable\", {\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             * @return {?}\n             */\n            get: function () { return this._isStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._hasPendingMicrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._hasPendingMacrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.checkStable = function () {\n            var _this = this;\n            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n                try {\n                    this._nesting++;\n                    this._onMicrotaskEmpty.emit(null);\n                }\n                finally {\n                    this._nesting--;\n                    if (!this._hasPendingMicrotasks) {\n                        try {\n                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n                        }\n                        finally {\n                            this._isStable = true;\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n            var _this = this;\n            this.inner = this.inner.fork({\n                name: 'angular',\n                properties: /** @type {?} */ ({ 'isAngularZone': true }),\n                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onHasTask: function (delegate, current, target, hasTaskState) {\n                    delegate.hasTask(target, hasTaskState);\n                    if (current === target) {\n                        // We are only interested in hasTask events which originate from our zone\n                        // (A child hasTask event is not interesting to us)\n                        if (hasTaskState.change == 'microTask') {\n                            _this.setHasMicrotask(hasTaskState.microTask);\n                        }\n                        else if (hasTaskState.change == 'macroTask') {\n                            _this.setHasMacrotask(hasTaskState.macroTask);\n                        }\n                    }\n                },\n                onHandleError: function (delegate, current, target, error) {\n                    delegate.handleError(target, error);\n                    _this.triggerError(error);\n                    return false;\n                }\n            });\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.onEnter = function () {\n            this._nesting++;\n            if (this._isStable) {\n                this._isStable = false;\n                this._onUnstable.emit(null);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgZone.prototype.onLeave = function () {\n            this._nesting--;\n            this.checkStable();\n        };\n        /**\n         * @param {?} hasMicrotasks\n         * @return {?}\n         */\n        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n            this._hasPendingMicrotasks = hasMicrotasks;\n            this.checkStable();\n        };\n        /**\n         * @param {?} hasMacrotasks\n         * @return {?}\n         */\n        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n        return NgZone;\n    }());\n\n    var AnimationQueue = (function () {\n        /**\n         * @param {?} _zone\n         */\n        function AnimationQueue(_zone) {\n            this._zone = _zone;\n            this.entries = [];\n        }\n        /**\n         * @param {?} player\n         * @return {?}\n         */\n        AnimationQueue.prototype.enqueue = function (player) { this.entries.push(player); };\n        /**\n         * @return {?}\n         */\n        AnimationQueue.prototype.flush = function () {\n            var _this = this;\n            // given that each animation player may set aside\n            // microtasks and rely on DOM-based events, this\n            // will cause Angular to run change detection after\n            // each request. This sidesteps the issue. If a user\n            // hooks into an animation via (@anim.start) or (@anim.done)\n            // then those methods will automatically trigger change\n            // detection by wrapping themselves inside of a zone\n            if (this.entries.length) {\n                this._zone.runOutsideAngular(function () {\n                    // this code is wrapped into a single promise such that the\n                    // onStart and onDone player callbacks are triggered outside\n                    // of the digest cycle of animations\n                    Promise.resolve(null).then(function () { return _this._triggerAnimations(); });\n                });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationQueue.prototype._triggerAnimations = function () {\n            NgZone.assertNotInAngularZone();\n            while (this.entries.length) {\n                var /** @type {?} */ player = this.entries.shift();\n                // in the event that an animation throws an error then we do\n                // not want to re-run animations on any previous animations\n                // if they have already been kicked off beforehand\n                if (!player.hasStarted()) {\n                    player.play();\n                }\n            }\n        };\n        AnimationQueue.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        AnimationQueue.ctorParameters = function () { return [\n            { type: NgZone, },\n        ]; };\n        return AnimationQueue;\n    }());\n\n    var DefaultIterableDifferFactory = (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        /**\n         * @param {?} cdRef\n         * @param {?=} trackByFn\n         * @return {?}\n         */\n        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var /** @type {?} */ trackByIdentity = function (index, item) { return item; };\n    /**\n     * \\@stable\n     */\n    var DefaultIterableDiffer = (function () {\n        /**\n         * @param {?=} _trackByFn\n         */\n        function DefaultIterableDiffer(_trackByFn) {\n            this._trackByFn = _trackByFn;\n            this._length = null;\n            this._collection = null;\n            this._linkedRecords = null;\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = this._trackByFn || trackByIdentity;\n        }\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._collection; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var /** @type {?} */ nextIt = this._itHead;\n            var /** @type {?} */ nextRemove = this._removalsHead;\n            var /** @type {?} */ addRemoveOffset = 0;\n            var /** @type {?} */ moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var /** @type {?} */ record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var /** @type {?} */ currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var /** @type {?} */ localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                                var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var /** @type {?} */ index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var /** @type {?} */ previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} collection\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (isBlank(collection))\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        /**\n         * @param {?} collection\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var /** @type {?} */ record = this._itHead;\n            var /** @type {?} */ mayBeDirty = false;\n            var /** @type {?} */ index;\n            var /** @type {?} */ item;\n            var /** @type {?} */ itemTrackBy;\n            if (Array.isArray(collection)) {\n                var /** @type {?} */ list = collection;\n                this._length = collection.length;\n                for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n                    item = list[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item /** TODO #9100 */) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this._length = index;\n            }\n            this._truncate(record);\n            this._collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * \\@internal\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var /** @type {?} */ record = void 0;\n                var /** @type {?} */ nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * \\@internal\n         * @param {?} record\n         * @param {?} item\n         * @param {?} itemTrackBy\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var /** @type {?} */ previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * \\@internal\n         * @param {?} record\n         * @param {?} item\n         * @param {?} itemTrackBy\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {\\@link CollectionChangeRecord}s from the previous collection\n         *\n         * - `record` The first excess {\\@link CollectionChangeRecord}.\n         *\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var /** @type {?} */ nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var /** @type {?} */ prev = record._prevRemoved;\n            var /** @type {?} */ next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // todo(vicb)\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} prevRecord\n         * @param {?} index\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // todo(vicb)\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n            // todo(vicb)\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var /** @type {?} */ prev = record._prev;\n            var /** @type {?} */ next = record._next;\n            // todo(vicb)\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} toIndex\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // todo(vicb)\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // todo(vicb)\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // todo(vicb)\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @param {?} item\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        /**\n         * @return {?}\n         */\n        DefaultIterableDiffer.prototype.toString = function () {\n            var /** @type {?} */ list = [];\n            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n            var /** @type {?} */ previous = [];\n            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n            var /** @type {?} */ additions = [];\n            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n            var /** @type {?} */ moves = [];\n            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n            var /** @type {?} */ removals = [];\n            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n            var /** @type {?} */ identityChanges = [];\n            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n            return 'collection: ' + list.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'moves: ' + moves.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n' +\n                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n        };\n        return DefaultIterableDiffer;\n    }());\n    /**\n     * \\@stable\n     */\n    var CollectionChangeRecord = (function () {\n        /**\n         * @param {?} item\n         * @param {?} trackById\n         */\n        function CollectionChangeRecord(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        /**\n         * @return {?}\n         */\n        CollectionChangeRecord.prototype.toString = function () {\n            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                stringify(this.item) + '[' +\n                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n        };\n        return CollectionChangeRecord;\n    }());\n    var _DuplicateItemRecordList = (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        /**\n         * @param {?} trackById\n         * @param {?} afterIndex\n         * @return {?}\n         */\n        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n            var /** @type {?} */ record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {\\@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // todo(vicb)\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var /** @type {?} */ prev = record._prevDup;\n            var /** @type {?} */ next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        /**\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateMap.prototype.put = function (record) {\n            var /** @type {?} */ key = record.trackById;\n            var /** @type {?} */ duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n         * have already iterated over, we use the afterIndex to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the last `a` not the first or second.\n         * @param {?} trackById\n         * @param {?=} afterIndex\n         * @return {?}\n         */\n        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n            if (afterIndex === void 0) { afterIndex = null; }\n            var /** @type {?} */ key = trackById;\n            var /** @type {?} */ recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, afterIndex) : null;\n        };\n        /**\n         * Removes a {\\@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         * @param {?} record\n         * @return {?}\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var /** @type {?} */ key = record.trackById;\n            var /** @type {?} */ recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        /**\n         * @return {?}\n         */\n        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n        return _DuplicateMap;\n    }());\n    /**\n     * @param {?} item\n     * @param {?} addRemoveOffset\n     * @param {?} moveOffsets\n     * @return {?}\n     */\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var /** @type {?} */ previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var /** @type {?} */ moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    var DefaultKeyValueDifferFactory = (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        /**\n         * @param {?} cdRef\n         * @return {?}\n         */\n        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var /** @type {?} */ record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        /**\n         * @param {?} map\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + map + \"'\");\n            }\n            return this.check(map) ? this : null;\n        };\n        /**\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * @param {?} map\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var /** @type {?} */ records = this._records;\n            var /** @type {?} */ oldSeqRecord = this._mapHead;\n            var /** @type {?} */ lastOldSeqRecord = null;\n            var /** @type {?} */ lastNewSeqRecord = null;\n            var /** @type {?} */ seqChanged = false;\n            this._forEach(map, function (value, key) {\n                var /** @type {?} */ newSeqRecord;\n                if (oldSeqRecord && key === oldSeqRecord.key) {\n                    newSeqRecord = oldSeqRecord;\n                    _this._maybeAddToChanges(newSeqRecord, value);\n                }\n                else {\n                    seqChanged = true;\n                    if (oldSeqRecord !== null) {\n                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n                        _this._addToRemovals(oldSeqRecord);\n                    }\n                    if (records.has(key)) {\n                        newSeqRecord = records.get(key);\n                        _this._maybeAddToChanges(newSeqRecord, value);\n                    }\n                    else {\n                        newSeqRecord = new KeyValueChangeRecord(key);\n                        records.set(key, newSeqRecord);\n                        newSeqRecord.currentValue = value;\n                        _this._addToAdditions(newSeqRecord);\n                    }\n                }\n                if (seqChanged) {\n                    if (_this._isInRemovals(newSeqRecord)) {\n                        _this._removeFromRemovals(newSeqRecord);\n                    }\n                    if (lastNewSeqRecord == null) {\n                        _this._mapHead = newSeqRecord;\n                    }\n                    else {\n                        lastNewSeqRecord._next = newSeqRecord;\n                    }\n                }\n                lastOldSeqRecord = oldSeqRecord;\n                lastNewSeqRecord = newSeqRecord;\n                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n            });\n            this._truncate(lastOldSeqRecord, oldSeqRecord);\n            return this.isDirty;\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var /** @type {?} */ record = void 0;\n                // Record the state of the mapping\n                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = this._removalsTail = null;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} lastRecord\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n            while (record !== null) {\n                if (lastRecord === null) {\n                    this._mapHead = null;\n                }\n                else {\n                    lastRecord._next = null;\n                }\n                var /** @type {?} */ nextRecord = record._next;\n                this._addToRemovals(record);\n                lastRecord = record;\n                record = nextRecord;\n            }\n            for (var /** @type {?} */ rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n                rec.previousValue = rec.currentValue;\n                rec.currentValue = null;\n                this._records.delete(rec.key);\n            }\n        };\n        /**\n         * @param {?} record\n         * @param {?} newValue\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n            return record === this._removalsHead || record._nextRemoved !== null ||\n                record._prevRemoved !== null;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n            if (this._removalsHead === null) {\n                this._removalsHead = this._removalsTail = record;\n            }\n            else {\n                this._removalsTail._nextRemoved = record;\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = record;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} prev\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n            var /** @type {?} */ next = record._next;\n            if (prev === null) {\n                this._mapHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            record._next = null;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n            var /** @type {?} */ prev = record._prevRemoved;\n            var /** @type {?} */ next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            record._prevRemoved = record._nextRemoved = null;\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} record\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype.toString = function () {\n            var /** @type {?} */ items = [];\n            var /** @type {?} */ previous = [];\n            var /** @type {?} */ changes = [];\n            var /** @type {?} */ additions = [];\n            var /** @type {?} */ removals = [];\n            var /** @type {?} */ record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                items.push(stringify(record));\n            }\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                previous.push(stringify(record));\n            }\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                changes.push(stringify(record));\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                additions.push(stringify(record));\n            }\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                removals.push(stringify(record));\n            }\n            return 'map: ' + items.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'changes: ' + changes.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n';\n        };\n        /**\n         * \\@internal\n         * @param {?} obj\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    /**\n     * \\@stable\n     */\n    var KeyValueChangeRecord = (function () {\n        /**\n         * @param {?} key\n         */\n        function KeyValueChangeRecord(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        /**\n         * @return {?}\n         */\n        KeyValueChangeRecord.prototype.toString = function () {\n            return looseIdentical(this.previousValue, this.currentValue) ?\n                stringify(this.key) :\n                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n                    stringify(this.currentValue) + ']');\n        };\n        return KeyValueChangeRecord;\n    }());\n\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     * \\@stable\n     */\n    var IterableDiffers = (function () {\n        /**\n         * @param {?} factories\n         */\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        /**\n         * @param {?} factories\n         * @param {?=} parent\n         * @return {?}\n         */\n        IterableDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var /** @type {?} */ copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new IterableDiffers(factories);\n            }\n            else {\n                return new IterableDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n         * {\\@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {\\@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * \\@Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         * @param {?} factories\n         * @return {?}\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        /**\n         * @param {?} iterable\n         * @return {?}\n         */\n        IterableDiffers.prototype.find = function (iterable) {\n            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        return IterableDiffers;\n    }());\n\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     * \\@stable\n     */\n    var KeyValueDiffers = (function () {\n        /**\n         * @param {?} factories\n         */\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        /**\n         * @param {?} factories\n         * @param {?=} parent\n         * @return {?}\n         */\n        KeyValueDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var /** @type {?} */ copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new KeyValueDiffers(factories);\n            }\n            else {\n                return new KeyValueDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n         * {\\@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * \\@Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         * @param {?} factories\n         * @return {?}\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        /**\n         * @param {?} kv\n         * @return {?}\n         */\n        KeyValueDiffers.prototype.find = function (kv) {\n            var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n            }\n        };\n        return KeyValueDiffers;\n    }());\n\n    var /** @type {?} */ UNINITIALIZED = {\n        toString: function () { return 'CD_INIT_VALUE'; }\n    };\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function devModeEqual(a, b) {\n        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n    /**\n     * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n     * reference\n     * has not changed.\n     *\n     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     * \\@stable\n     */\n    var WrappedValue = (function () {\n        /**\n         * @param {?} wrapped\n         */\n        function WrappedValue(wrapped) {\n            this.wrapped = wrapped;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        return WrappedValue;\n    }());\n    /**\n     * Helper class for unwrapping WrappedValue s\n     */\n    var ValueUnwrapper = (function () {\n        function ValueUnwrapper() {\n            this.hasWrappedValue = false;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        ValueUnwrapper.prototype.unwrap = function (value) {\n            if (value instanceof WrappedValue) {\n                this.hasWrappedValue = true;\n                return value.wrapped;\n            }\n            return value;\n        };\n        /**\n         * @return {?}\n         */\n        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n        return ValueUnwrapper;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     * \\@stable\n     */\n    var SimpleChange = (function () {\n        /**\n         * @param {?} previousValue\n         * @param {?} currentValue\n         */\n        function SimpleChange(previousValue, currentValue) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         * @return {?}\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n        return SimpleChange;\n    }());\n\n    /**\n     * \\@stable\n     * @abstract\n     */\n    var ChangeDetectorRef = (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n         *\n         * ```typescript\n         * \\@Component({\n         *   selector: 'cmp',\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         * })\n         * class Cmp {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks ++\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'app',\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         *   template: `\n         *     <cmp><cmp>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.markForCheck = function () { };\n        /**\n         * Detaches the change detector from the change detector tree.\n         *\n         * The detached change detector will not be checked until it is reattached.\n         *\n         * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n         * local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.detach = function () { };\n        /**\n         * Checks the change detector and its children.\n         *\n         * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n         * change detection\n         * checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check\n         * every five seconds.\n         *\n         * See {\\@link ChangeDetectorRef#detach} for more information.\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.detectChanges = function () { };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't introduce\n         * other changes.\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.checkNoChanges = function () { };\n        /**\n         * Reattach the change detector to the change detector tree.\n         *\n         * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n         * checked during the next change detection run.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value)\n         *       this.ref.reattach();\n         *     else\n         *       this.ref.detach();\n         *   }\n         * }\n         *\n         * \\@Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class App {\n         *   live = true;\n         * }\n         * ```\n         * @abstract\n         * @return {?}\n         */\n        ChangeDetectorRef.prototype.reattach = function () { };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var /** @type {?} */ keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var /** @type {?} */ iterableDiff = [new DefaultIterableDifferFactory()];\n    var /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RenderComponentType = (function () {\n        /**\n         * @param {?} id\n         * @param {?} templateUrl\n         * @param {?} slotCount\n         * @param {?} encapsulation\n         * @param {?} styles\n         * @param {?} animations\n         */\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @abstract\n     */\n    var RenderDebugInfo = (function () {\n        function RenderDebugInfo() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.injector = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.component = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.providerTokens = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.references = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.context = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        RenderDebugInfo.prototype.source = function () { };\n        return RenderDebugInfo;\n    }());\n    /**\n     * \\@experimental\n     * @abstract\n     */\n    var Renderer = (function () {\n        function Renderer() {\n        }\n        /**\n         * @abstract\n         * @param {?} selectorOrNode\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?} name\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.createElement = function (parentElement, name, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} hostElement\n         * @return {?}\n         */\n        Renderer.prototype.createViewRoot = function (hostElement) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?} value\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        Renderer.prototype.createText = function (parentElement, value, debugInfo) { };\n        /**\n         * @abstract\n         * @param {?} parentElement\n         * @param {?} nodes\n         * @return {?}\n         */\n        Renderer.prototype.projectNodes = function (parentElement, nodes) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        Renderer.prototype.attachViewAfter = function (node, viewRootNodes) { };\n        /**\n         * @abstract\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        Renderer.prototype.detachView = function (viewRootNodes) { };\n        /**\n         * @abstract\n         * @param {?} hostElement\n         * @param {?} viewAllNodes\n         * @return {?}\n         */\n        Renderer.prototype.destroyView = function (hostElement, viewAllNodes) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        Renderer.prototype.listen = function (renderElement, name, callback) { };\n        /**\n         * @abstract\n         * @param {?} target\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        Renderer.prototype.listenGlobal = function (target, name, callback) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        Renderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} attributeName\n         * @param {?} attributeValue\n         * @return {?}\n         */\n        Renderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) { };\n        /**\n         * Used only in debug mode to serialize property changes to dom nodes as attributes.\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        Renderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} className\n         * @param {?} isAdd\n         * @return {?}\n         */\n        Renderer.prototype.setElementClass = function (renderElement, className, isAdd) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        Renderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) { };\n        /**\n         * @abstract\n         * @param {?} renderElement\n         * @param {?} methodName\n         * @param {?=} args\n         * @return {?}\n         */\n        Renderer.prototype.invokeElementMethod = function (renderElement, methodName, args) { };\n        /**\n         * @abstract\n         * @param {?} renderNode\n         * @param {?} text\n         * @return {?}\n         */\n        Renderer.prototype.setText = function (renderNode, text) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        Renderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n        return Renderer;\n    }());\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n     * respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     * \\@experimental\n     * @abstract\n     */\n    var RootRenderer = (function () {\n        function RootRenderer() {\n        }\n        /**\n         * @abstract\n         * @param {?} componentType\n         * @return {?}\n         */\n        RootRenderer.prototype.renderComponent = function (componentType) { };\n        return RootRenderer;\n    }());\n\n    var SecurityContext = {};\n    SecurityContext.NONE = 0;\n    SecurityContext.HTML = 1;\n    SecurityContext.STYLE = 2;\n    SecurityContext.SCRIPT = 3;\n    SecurityContext.URL = 4;\n    SecurityContext.RESOURCE_URL = 5;\n    SecurityContext[SecurityContext.NONE] = \"NONE\";\n    SecurityContext[SecurityContext.HTML] = \"HTML\";\n    SecurityContext[SecurityContext.STYLE] = \"STYLE\";\n    SecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\n    SecurityContext[SecurityContext.URL] = \"URL\";\n    SecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var Sanitizer = (function () {\n        function Sanitizer() {\n        }\n        /**\n         * @abstract\n         * @param {?} context\n         * @param {?} value\n         * @return {?}\n         */\n        Sanitizer.prototype.sanitize = function (context, value) { };\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An error thrown if application changes model breaking the top-down data flow.\n     *\n     * This exception is only thrown in dev mode.\n     *\n     * <!-- TODO: Add a link once the dev mode option is configurable -->\n     *\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'parent',\n     *   template: '<child [prop]=\"parentProp\"></child>',\n     * })\n     * class Parent {\n     *   parentProp = 'init';\n     * }\n     *\n     * \\@Directive({selector: 'child', inputs: ['prop']})\n     * class Child {\n     *   constructor(public parent: Parent) {}\n     *\n     *   set prop(v) {\n     *     // this updates the parent property, which is disallowed during change detection\n     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n     *     this.parent.parentProp = 'updated';\n     *   }\n     * }\n     * ```\n     * \\@stable\n     */\n    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n        __extends$7(ExpressionChangedAfterItHasBeenCheckedError, _super);\n        /**\n         * @param {?} oldValue\n         * @param {?} currValue\n         */\n        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (oldValue === UNINITIALIZED) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            _super.call(this, msg);\n        }\n        return ExpressionChangedAfterItHasBeenCheckedError;\n    }(BaseError));\n    /**\n     * Thrown when an exception was raised during view creation, change detection or destruction.\n     *\n     * This error wraps the original exception to attach additional contextual information that can\n     * be useful for debugging.\n     * \\@stable\n     */\n    var ViewWrappedError = (function (_super) {\n        __extends$7(ViewWrappedError, _super);\n        /**\n         * @param {?} originalError\n         * @param {?} context\n         */\n        function ViewWrappedError(originalError, context) {\n            _super.call(this, \"Error in \" + context.source, originalError);\n            this.context = context;\n        }\n        return ViewWrappedError;\n    }(WrappedError));\n    /**\n     * Thrown when a destroyed view is used.\n     *\n     * This error indicates a bug in the framework.\n     *\n     * This is an internal Angular error.\n     * \\@stable\n     */\n    var ViewDestroyedError = (function (_super) {\n        __extends$7(ViewDestroyedError, _super);\n        /**\n         * @param {?} details\n         */\n        function ViewDestroyedError(details) {\n            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n        }\n        return ViewDestroyedError;\n    }(BaseError));\n\n    var ViewUtils = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} sanitizer\n         * @param {?} animationQueue\n         */\n        function ViewUtils(_renderer, sanitizer, animationQueue) {\n            this._renderer = _renderer;\n            this.animationQueue = animationQueue;\n            this.sanitizer = sanitizer;\n        }\n        /**\n         * \\@internal\n         * @param {?} renderComponentType\n         * @return {?}\n         */\n        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n            return this._renderer.renderComponent(renderComponentType);\n        };\n        ViewUtils.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ViewUtils.ctorParameters = function () { return [\n            { type: RootRenderer, },\n            { type: Sanitizer, },\n            { type: AnimationQueue, },\n        ]; };\n        return ViewUtils;\n    }());\n    var /** @type {?} */ nextRenderComponentTypeId = 0;\n    /**\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     * @return {?}\n     */\n    function createRenderComponentType(templateUrl, slotCount, encapsulation, styles, animations) {\n        return new RenderComponentType(\"\" + nextRenderComponentTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n    }\n    /**\n     * @param {?} e\n     * @param {?} array\n     * @return {?}\n     */\n    function addToArray(e, array) {\n        array.push(e);\n    }\n    /**\n     * @param {?} valueCount\n     * @param {?} constAndInterp\n     * @return {?}\n     */\n    function interpolate(valueCount, constAndInterp) {\n        var /** @type {?} */ result = '';\n        for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    /**\n     * @param {?} valueCount\n     * @param {?} c0\n     * @param {?} a1\n     * @param {?} c1\n     * @param {?=} a2\n     * @param {?=} c2\n     * @param {?=} a3\n     * @param {?=} c3\n     * @param {?=} a4\n     * @param {?=} c4\n     * @param {?=} a5\n     * @param {?=} c5\n     * @param {?=} a6\n     * @param {?=} c6\n     * @param {?=} a7\n     * @param {?=} c7\n     * @param {?=} a8\n     * @param {?=} c8\n     * @param {?=} a9\n     * @param {?=} c9\n     * @return {?}\n     */\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    /**\n     * @param {?} throwOnChange\n     * @param {?} oldValue\n     * @param {?} newValue\n     * @return {?}\n     */\n    function checkBinding(throwOnChange, oldValue, newValue) {\n        if (throwOnChange) {\n            if (!devModeEqual(oldValue, newValue)) {\n                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n            }\n            return false;\n        }\n        else {\n            return !looseIdentical(oldValue, newValue);\n        }\n    }\n    /**\n     * @param {?} input\n     * @param {?} value\n     * @return {?}\n     */\n    function castByValue(input, value) {\n        return (input);\n    }\n    var /** @type {?} */ EMPTY_ARRAY = [];\n    var /** @type {?} */ EMPTY_MAP = {};\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy1(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0 = UNINITIALIZED;\n        return function (p0) {\n            if (!looseIdentical(v0, p0)) {\n                v0 = p0;\n                result = fn(p0);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy2(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0 = UNINITIALIZED;\n        var /** @type {?} */ v1 = UNINITIALIZED;\n        return function (p0, p1) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n                v0 = p0;\n                v1 = p1;\n                result = fn(p0, p1);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy3(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0 = UNINITIALIZED;\n        var /** @type {?} */ v1 = UNINITIALIZED;\n        var /** @type {?} */ v2 = UNINITIALIZED;\n        return function (p0, p1, p2) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                result = fn(p0, p1, p2);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy4(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3;\n        v0 = v1 = v2 = v3 = UNINITIALIZED;\n        return function (p0, p1, p2, p3) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                result = fn(p0, p1, p2, p3);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy5(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4;\n        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                result = fn(p0, p1, p2, p3, p4);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy6(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5;\n        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                result = fn(p0, p1, p2, p3, p4, p5);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy7(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                result = fn(p0, p1, p2, p3, p4, p5, p6);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy8(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy9(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function pureProxy10(fn) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ v0, /** @type {?} */ v1, /** @type {?} */ v2, /** @type {?} */ v3, /** @type {?} */ v4, /** @type {?} */ v5, /** @type {?} */ v6, /** @type {?} */ v7, /** @type {?} */ v8, /** @type {?} */ v9;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n                !looseIdentical(v9, p9)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                v9 = p9;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n            }\n            return result;\n        };\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} el\n     * @param {?} changes\n     * @return {?}\n     */\n    function setBindingDebugInfoForChanges(renderer, el, changes) {\n        Object.keys(changes).forEach(function (propName) {\n            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n        });\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} el\n     * @param {?} propName\n     * @param {?} value\n     * @return {?}\n     */\n    function setBindingDebugInfo(renderer, el, propName, value) {\n        try {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n        }\n        catch (e) {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n        }\n    }\n    var /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i - 0] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} parentElement\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n        var /** @type {?} */ el = renderer.createElement(parentElement, name, debugInfo);\n        for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n        }\n        return el;\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} elementName\n     * @param {?} attrs\n     * @param {?} rootSelectorOrNode\n     * @param {?=} debugInfo\n     * @return {?}\n     */\n    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n        var /** @type {?} */ hostElement;\n        if (isPresent(rootSelectorOrNode)) {\n            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                renderer.setElementAttribute(hostElement, attrs.get(i), attrs.get(i + 1));\n            }\n            renderer.setElementAttribute(hostElement, 'ng-version', VERSION.full);\n        }\n        else {\n            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n        }\n        return hostElement;\n    }\n    /**\n     * @param {?} view\n     * @param {?} element\n     * @param {?} eventNamesAndTargets\n     * @param {?} listener\n     * @return {?}\n     */\n    function subscribeToRenderElement(view, element, eventNamesAndTargets, listener) {\n        var /** @type {?} */ disposables = createEmptyInlineArray(eventNamesAndTargets.length / 2);\n        for (var /** @type {?} */ i = 0; i < eventNamesAndTargets.length; i += 2) {\n            var /** @type {?} */ eventName = eventNamesAndTargets.get(i);\n            var /** @type {?} */ eventTarget = eventNamesAndTargets.get(i + 1);\n            var /** @type {?} */ disposable = void 0;\n            if (eventTarget) {\n                disposable = view.renderer.listenGlobal(eventTarget, eventName, listener.bind(view, eventTarget + \":\" + eventName));\n            }\n            else {\n                disposable = view.renderer.listen(element, eventName, listener.bind(view, eventName));\n            }\n            disposables.set(i / 2, disposable);\n        }\n        return disposeInlineArray.bind(null, disposables);\n    }\n    /**\n     * @param {?} disposables\n     * @return {?}\n     */\n    function disposeInlineArray(disposables) {\n        for (var /** @type {?} */ i = 0; i < disposables.length; i++) {\n            disposables.get(i)();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    function noop() { }\n    /**\n     * @param {?} length\n     * @return {?}\n     */\n    function createEmptyInlineArray(length) {\n        var /** @type {?} */ ctor;\n        if (length <= 2) {\n            ctor = InlineArray2;\n        }\n        else if (length <= 4) {\n            ctor = InlineArray4;\n        }\n        else if (length <= 8) {\n            ctor = InlineArray8;\n        }\n        else if (length <= 16) {\n            ctor = InlineArray16;\n        }\n        else {\n            ctor = InlineArrayDynamic;\n        }\n        return new ctor(length);\n    }\n    var InlineArray0 = (function () {\n        function InlineArray0() {\n            this.length = 0;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray0.prototype.get = function (index) { return undefined; };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray0.prototype.set = function (index, value) { };\n        return InlineArray0;\n    }());\n    var InlineArray2 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         */\n        function InlineArray2(length, _v0, _v1) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray2.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray2.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n            }\n        };\n        return InlineArray2;\n    }());\n    var InlineArray4 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         * @param {?=} _v2\n         * @param {?=} _v3\n         */\n        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray4.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray4.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n            }\n        };\n        return InlineArray4;\n    }());\n    var InlineArray8 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         * @param {?=} _v2\n         * @param {?=} _v3\n         * @param {?=} _v4\n         * @param {?=} _v5\n         * @param {?=} _v6\n         * @param {?=} _v7\n         */\n        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray8.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray8.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n            }\n        };\n        return InlineArray8;\n    }());\n    var InlineArray16 = (function () {\n        /**\n         * @param {?} length\n         * @param {?=} _v0\n         * @param {?=} _v1\n         * @param {?=} _v2\n         * @param {?=} _v3\n         * @param {?=} _v4\n         * @param {?=} _v5\n         * @param {?=} _v6\n         * @param {?=} _v7\n         * @param {?=} _v8\n         * @param {?=} _v9\n         * @param {?=} _v10\n         * @param {?=} _v11\n         * @param {?=} _v12\n         * @param {?=} _v13\n         * @param {?=} _v14\n         * @param {?=} _v15\n         */\n        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n            this._v8 = _v8;\n            this._v9 = _v9;\n            this._v10 = _v10;\n            this._v11 = _v11;\n            this._v12 = _v12;\n            this._v13 = _v13;\n            this._v14 = _v14;\n            this._v15 = _v15;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArray16.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                case 8:\n                    return this._v8;\n                case 9:\n                    return this._v9;\n                case 10:\n                    return this._v10;\n                case 11:\n                    return this._v11;\n                case 12:\n                    return this._v12;\n                case 13:\n                    return this._v13;\n                case 14:\n                    return this._v14;\n                case 15:\n                    return this._v15;\n                default:\n                    return undefined;\n            }\n        };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArray16.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n                case 8:\n                    this._v8 = value;\n                    break;\n                case 9:\n                    this._v9 = value;\n                    break;\n                case 10:\n                    this._v10 = value;\n                    break;\n                case 11:\n                    this._v11 = value;\n                    break;\n                case 12:\n                    this._v12 = value;\n                    break;\n                case 13:\n                    this._v13 = value;\n                    break;\n                case 14:\n                    this._v14 = value;\n                    break;\n                case 15:\n                    this._v15 = value;\n                    break;\n            }\n        };\n        return InlineArray16;\n    }());\n    var InlineArrayDynamic = (function () {\n        /**\n         * @param {?} length\n         * @param {...?} values\n         */\n        function InlineArrayDynamic(length) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            this.length = length;\n            this._values = values;\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n        /**\n         * @param {?} index\n         * @param {?} value\n         * @return {?}\n         */\n        InlineArrayDynamic.prototype.set = function (index, value) { this._values[index] = value; };\n        return InlineArrayDynamic;\n    }());\n    var /** @type {?} */ EMPTY_INLINE_ARRAY = new InlineArray0();\n\n\n    var view_utils = Object.freeze({\n        ViewUtils: ViewUtils,\n        createRenderComponentType: createRenderComponentType,\n        addToArray: addToArray,\n        interpolate: interpolate,\n        inlineInterpolate: inlineInterpolate,\n        checkBinding: checkBinding,\n        castByValue: castByValue,\n        EMPTY_ARRAY: EMPTY_ARRAY,\n        EMPTY_MAP: EMPTY_MAP,\n        pureProxy1: pureProxy1,\n        pureProxy2: pureProxy2,\n        pureProxy3: pureProxy3,\n        pureProxy4: pureProxy4,\n        pureProxy5: pureProxy5,\n        pureProxy6: pureProxy6,\n        pureProxy7: pureProxy7,\n        pureProxy8: pureProxy8,\n        pureProxy9: pureProxy9,\n        pureProxy10: pureProxy10,\n        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n        setBindingDebugInfo: setBindingDebugInfo,\n        createRenderElement: createRenderElement,\n        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n        subscribeToRenderElement: subscribeToRenderElement,\n        noop: noop,\n        InlineArray2: InlineArray2,\n        InlineArray4: InlineArray4,\n        InlineArray8: InlineArray8,\n        InlineArray16: InlineArray16,\n        InlineArrayDynamic: InlineArrayDynamic,\n        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n     * method.\n     * \\@stable\n     * @abstract\n     */\n    var ComponentRef = (function () {\n        function ComponentRef() {\n        }\n        /**\n         * Location of the Host Element of this Component Instance.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.location = function () { };\n        /**\n         * The injector on which the component instance exists.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.injector = function () { };\n        /**\n         * The instance of the Component.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.instance = function () { };\n        /**\n         * The {\\@link ViewRef} of the Host View of this Component instance.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.hostView = function () { };\n        /**\n         * The {\\@link ChangeDetectorRef} of the Component instance.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.changeDetectorRef = function () { };\n        /**\n         * The component type.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.componentType = function () { };\n        /**\n         * Destroys the component instance and all of the data structures associated with it.\n         * @abstract\n         * @return {?}\n         */\n        ComponentRef.prototype.destroy = function () { };\n        /**\n         * Allows to register a callback that will be called when the component is destroyed.\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        ComponentRef.prototype.onDestroy = function (callback) { };\n        return ComponentRef;\n    }());\n    var ComponentRef_ = (function (_super) {\n        __extends$5(ComponentRef_, _super);\n        /**\n         * @param {?} _index\n         * @param {?} _parentView\n         * @param {?} _nativeElement\n         * @param {?} _component\n         */\n        function ComponentRef_(_index, _parentView, _nativeElement, _component) {\n            _super.call(this);\n            this._index = _index;\n            this._parentView = _parentView;\n            this._nativeElement = _nativeElement;\n            this._component = _component;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parentView.injector(this._index); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._component; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (this._component.constructor); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        ComponentRef_.prototype.destroy = function () { this._parentView.detachAndDestroy(); };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    /**\n     * \\@stable\n     */\n    var ComponentFactory = (function () {\n        /**\n         * @param {?} selector\n         * @param {?} _viewClass\n         * @param {?} _componentType\n         */\n        function ComponentFactory(selector, _viewClass, _componentType) {\n            this.selector = selector;\n            this._viewClass = _viewClass;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         * @param {?} injector\n         * @param {?=} projectableNodes\n         * @param {?=} rootSelectorOrNode\n         * @return {?}\n         */\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n            var /** @type {?} */ vu = injector.get(ViewUtils);\n            if (!projectableNodes) {\n                projectableNodes = [];\n            }\n            var /** @type {?} */ hostView = new this._viewClass(vu, null, null, null);\n            return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n        };\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var NoComponentFactoryError = (function (_super) {\n        __extends$8(NoComponentFactoryError, _super);\n        /**\n         * @param {?} component\n         */\n        function NoComponentFactoryError(component) {\n            _super.call(this, \"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n            this.component = component;\n        }\n        return NoComponentFactoryError;\n    }(BaseError));\n    var _NullComponentFactoryResolver = (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        /**\n         * @param {?} component\n         * @return {?}\n         */\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw new NoComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * \\@stable\n     * @abstract\n     */\n    var ComponentFactoryResolver = (function () {\n        function ComponentFactoryResolver() {\n        }\n        /**\n         * @abstract\n         * @param {?} component\n         * @return {?}\n         */\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) { };\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = (function () {\n        /**\n         * @param {?} factories\n         * @param {?} _parent\n         */\n        function CodegenComponentFactoryResolver(factories, _parent) {\n            this._parent = _parent;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        /**\n         * @param {?} component\n         * @return {?}\n         */\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var /** @type {?} */ result = this._factories.get(component);\n            if (!result) {\n                result = this._parent.resolveComponentFactory(component);\n            }\n            return result;\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n\n    var /** @type {?} */ trace;\n    var /** @type {?} */ events;\n    /**\n     * @return {?}\n     */\n    function detectWTF() {\n        var /** @type {?} */ wtf = ((global$1) /** TODO #9100 */)['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @param {?} signature\n     * @param {?=} flags\n     * @return {?}\n     */\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    /**\n     * @param {?} scope\n     * @param {?=} returnValue\n     * @return {?}\n     */\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    /**\n     * @param {?} rangeType\n     * @param {?} action\n     * @return {?}\n     */\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    /**\n     * @param {?} range\n     * @return {?}\n     */\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * True if WTF is enabled.\n     */\n    var /** @type {?} */ wtfEnabled = detectWTF();\n    /**\n     * @param {?=} arg0\n     * @param {?=} arg1\n     * @return {?}\n     */\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var /** @type {?} */ wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var /** @type {?} */ wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var /** @type {?} */ wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * \\@experimental\n     */\n    var Testability = (function () {\n        /**\n         * @param {?} _ngZone\n         */\n        function Testability(_ngZone) {\n            this._ngZone = _ngZone;\n            /** @internal */\n            this._pendingCount = 0;\n            /** @internal */\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            /** @internal */\n            this._callbacks = [];\n            this._watchAngularEvents();\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        (_this._callbacks.pop())(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Not Ready\n                this._didWork = true;\n            }\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        Testability.prototype.whenStable = function (callback) {\n            this._callbacks.push(callback);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * @return {?}\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * @deprecated use findProviders\n         * @param {?} using\n         * @param {?} provider\n         * @param {?} exactMatch\n         * @return {?}\n         */\n        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        /**\n         * @param {?} using\n         * @param {?} provider\n         * @param {?} exactMatch\n         * @return {?}\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone, },\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {\\@link Testability} instances for specific elements.\n     * \\@experimental\n     */\n    var TestabilityRegistry = (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * @param {?} token\n         * @param {?} testability\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * @param {?} elem\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n        /**\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * @param {?} elem\n         * @param {?=} findInAncestors\n         * @return {?}\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = (function () {\n        function _NoopGetTestability() {\n        }\n        /**\n         * @param {?} registry\n         * @return {?}\n         */\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        /**\n         * @param {?} registry\n         * @param {?} elem\n         * @param {?} findInAncestors\n         * @return {?}\n         */\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n     * \\@experimental\n     * @param {?} getter\n     * @return {?}\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var /** @type {?} */ _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ _devMode = true;\n    var /** @type {?} */ _runModeLocked = false;\n    var /** @type {?} */ _platform;\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * \\@stable\n     * @return {?}\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @return {?}\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * \\@experimental\n     */\n    var NgProbeToken = (function () {\n        /**\n         * @param {?} name\n         * @param {?} token\n         */\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @param {?} injector\n     * @return {?}\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var /** @type {?} */ inits = (injector.get(PLATFORM_INITIALIZER, null));\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @param {?} parentPlatformFactory\n     * @param {?} name\n     * @param {?=} providers\n     * @return {?}\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var /** @type {?} */ marker = new OpaqueToken(\"Platform: \" + name);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            if (!getPlatform()) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform\n     * which contains the given token as a provider.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @param {?} requiredToken\n     * @return {?}\n     */\n    function assertPlatform(requiredToken) {\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @return {?}\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @return {?}\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when {\\@link bootstrap}() is called, or\n     * explicitly by calling {\\@link createPlatform}().\n     *\n     * \\@stable\n     * @abstract\n     */\n    var PlatformRef = (function () {\n        function PlatformRef() {\n        }\n        /**\n         * Creates an instance of an `\\@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * \\@NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '\\@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * \\@experimental APIs related to application bootstrap are currently under review.\n         * @abstract\n         * @param {?} moduleFactory\n         * @return {?}\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) { };\n        /**\n         * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * \\@NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         * \\@stable\n         * @abstract\n         * @param {?} moduleType\n         * @param {?=} compilerOptions\n         * @return {?}\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) { };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { };\n        /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @abstract\n         * @return {?}\n         */\n        PlatformRef.prototype.injector = function () { };\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         * @abstract\n         * @return {?}\n         */\n        PlatformRef.prototype.destroy = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformRef.prototype.destroyed = function () { };\n        return PlatformRef;\n    }());\n    /**\n     * @param {?} errorHandler\n     * @param {?} callback\n     * @return {?}\n     */\n    function _callAndReportToErrorHandler(errorHandler, callback) {\n        try {\n            var /** @type {?} */ result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    errorHandler.handleError(e);\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            errorHandler.handleError(e);\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    var PlatformRef_ = (function (_super) {\n        __extends$3(PlatformRef_, _super);\n        /**\n         * @param {?} _injector\n         */\n        function PlatformRef_(_injector) {\n            _super.call(this);\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        PlatformRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        /**\n         * @param {?} moduleFactory\n         * @return {?}\n         */\n        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n        };\n        /**\n         * @param {?} moduleFactory\n         * @param {?} ngZone\n         * @return {?}\n         */\n        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            if (!ngZone)\n                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var /** @type {?} */ ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n                var /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n                var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n                return _callAndReportToErrorHandler(exceptionHandler, function () {\n                    var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * @param {?} moduleType\n         * @param {?=} compilerOptions\n         * @return {?}\n         */\n        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n        };\n        /**\n         * @param {?} moduleType\n         * @param {?=} compilerOptions\n         * @param {?} ngZone\n         * @param {?=} componentFactoryCallback\n         * @return {?}\n         */\n        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n            var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n            // ugly internal api hack: generate host component factories for all declared components and\n            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n            // factories.\n            if (componentFactoryCallback) {\n                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n                    .then(function (_a) {\n                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n                    componentFactoryCallback(componentFactories);\n                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n                });\n            }\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n        };\n        /**\n         * @param {?} moduleRef\n         * @return {?}\n         */\n        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n            var /** @type {?} */ appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef.bootstrapFactories.length > 0) {\n                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        PlatformRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        PlatformRef_.ctorParameters = function () { return [\n            { type: Injector, },\n        ]; };\n        return PlatformRef_;\n    }(PlatformRef));\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * For more about Angular applications, see the documentation for {\\@link bootstrap}.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var ApplicationRef = (function () {\n        function ApplicationRef() {\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the [componentType]'s\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * ### Example\n         * {\\@example core/ts/platform/platform.ts region='longform'}\n         * @abstract\n         * @param {?} componentFactory\n         * @return {?}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentFactory) { };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.tick = function () { };\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.componentTypes = function () { };\n        /**\n         * Get a list of components registered to this application.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.components = function () { };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         * @abstract\n         * @param {?} view\n         * @return {?}\n         */\n        ApplicationRef.prototype.attachView = function (view) { };\n        /**\n         * Detaches a view from dirty checking again.\n         * @abstract\n         * @param {?} view\n         * @return {?}\n         */\n        ApplicationRef.prototype.detachView = function (view) { };\n        /**\n         * Returns the number of attached views.\n         * @abstract\n         * @return {?}\n         */\n        ApplicationRef.prototype.viewCount = function () { };\n        return ApplicationRef;\n    }());\n    var ApplicationRef_ = (function (_super) {\n        __extends$3(ApplicationRef_, _super);\n        /**\n         * @param {?} _zone\n         * @param {?} _console\n         * @param {?} _injector\n         * @param {?} _exceptionHandler\n         * @param {?} _componentFactoryResolver\n         * @param {?} _initStatus\n         * @param {?} _testabilityRegistry\n         * @param {?} _testability\n         */\n        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n            var _this = this;\n            _super.call(this);\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._testabilityRegistry = _testabilityRegistry;\n            this._testability = _testability;\n            this._bootstrapListeners = [];\n            this._rootComponents = [];\n            this._rootComponentTypes = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        }\n        /**\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype.attachView = function (viewRef) {\n            var /** @type {?} */ view = ((viewRef)).internalView;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype.detachView = function (viewRef) {\n            var /** @type {?} */ view = ((viewRef)).internalView;\n            ListWrapper.remove(this._views, view);\n            view.detach();\n        };\n        /**\n         * @param {?} componentOrFactory\n         * @return {?}\n         */\n        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var /** @type {?} */ componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this._rootComponentTypes.push(componentFactory.componentType);\n            var /** @type {?} */ compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * @param {?} componentRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this._rootComponents.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var /** @type {?} */ listeners = (this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n                .concat(this._bootstrapListeners));\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        /**\n         * @param {?} componentRef\n         * @return {?}\n         */\n        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            ListWrapper.remove(this._rootComponents, componentRef);\n        };\n        /**\n         * @return {?}\n         */\n        ApplicationRef_.prototype.tick = function () {\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var /** @type {?} */ scope = ApplicationRef_._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.ref.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.ref.checkNoChanges(); });\n                }\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        ApplicationRef_.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._rootComponentTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._rootComponents; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationRef_.ctorParameters = function () { return [\n            { type: NgZone, },\n            { type: Console, },\n            { type: Injector, },\n            { type: ErrorHandler, },\n            { type: ComponentFactoryResolver, },\n            { type: ApplicationInitStatus, },\n            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n            { type: Testability, decorators: [{ type: Optional },] },\n        ]; };\n        return ApplicationRef_;\n    }(ApplicationRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var NgModuleRef = (function () {\n        function NgModuleRef() {\n        }\n        /**\n         * The injector that contains all of the providers of the NgModule.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.injector = function () { };\n        /**\n         * The ComponentFactoryResolver to get hold of the ComponentFactories\n         * declared in the `entryComponents` property of the module.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.componentFactoryResolver = function () { };\n        /**\n         * The NgModule instance.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.instance = function () { };\n        /**\n         * Destroys the module instance and all of the data structures associated with it.\n         * @abstract\n         * @return {?}\n         */\n        NgModuleRef.prototype.destroy = function () { };\n        /**\n         * Allows to register a callback that will be called when the module is destroyed.\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        NgModuleRef.prototype.onDestroy = function (callback) { };\n        return NgModuleRef;\n    }());\n    /**\n     * \\@experimental\n     */\n    var NgModuleFactory = (function () {\n        /**\n         * @param {?} _injectorClass\n         * @param {?} _moduleType\n         */\n        function NgModuleFactory(_injectorClass, _moduleType) {\n            this._injectorClass = _injectorClass;\n            this._moduleType = _moduleType;\n        }\n        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._moduleType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} parentInjector\n         * @return {?}\n         */\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            if (!parentInjector) {\n                parentInjector = Injector.NULL;\n            }\n            var /** @type {?} */ instance = new this._injectorClass(parentInjector);\n            instance.create();\n            return instance;\n        };\n        return NgModuleFactory;\n    }());\n    var /** @type {?} */ _UNDEFINED = new Object();\n    /**\n     * @abstract\n     */\n    var NgModuleInjector = (function (_super) {\n        __extends$9(NgModuleInjector, _super);\n        /**\n         * @param {?} parent\n         * @param {?} factories\n         * @param {?} bootstrapFactories\n         */\n        function NgModuleInjector(parent, factories, bootstrapFactories) {\n            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n            this.parent = parent;\n            this.bootstrapFactories = bootstrapFactories;\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * @return {?}\n         */\n        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        NgModuleInjector.prototype.createInternal = function () { };\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (token === Injector || token === ComponentFactoryResolver) {\n                return this;\n            }\n            var /** @type {?} */ result = this.getInternal(token, _UNDEFINED);\n            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n        };\n        /**\n         * @abstract\n         * @param {?} token\n         * @param {?} notFoundValue\n         * @return {?}\n         */\n        NgModuleInjector.prototype.getInternal = function (token, notFoundValue) { };\n        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgModuleInjector.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            this.destroyInternal();\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        NgModuleInjector.prototype.destroyInternal = function () { };\n        return NgModuleInjector;\n    }(CodegenComponentFactoryResolver));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     * \\@stable\n     * @abstract\n     */\n    var NgModuleFactoryLoader = (function () {\n        function NgModuleFactoryLoader() {\n        }\n        /**\n         * @abstract\n         * @param {?} path\n         * @return {?}\n         */\n        NgModuleFactoryLoader.prototype.load = function (path) { };\n        return NgModuleFactoryLoader;\n    }());\n    var /** @type {?} */ moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * \\@experimental\n     * @param {?} id\n     * @param {?} factory\n     * @return {?}\n     */\n    function registerModuleFactory(id, factory) {\n        var /** @type {?} */ existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * \\@experimental\n     * @param {?} id\n     * @return {?}\n     */\n    function getModuleFactory(id) {\n        var /** @type {?} */ factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * \\@Component({...})\n     * class Container {\n     *   \\@ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     * \\@stable\n     */\n    var QueryList = (function () {\n        function QueryList() {\n            this._dirty = true;\n            this._results = [];\n            this._emitter = new EventEmitter();\n        }\n        Object.defineProperty(QueryList.prototype, \"changes\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._emitter; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"length\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._results.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"first\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._results[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"last\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._results[this.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.find = function (fn) { return this._results.find(fn); };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         * @param {?} fn\n         * @param {?} init\n         * @return {?}\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         * @param {?} fn\n         * @return {?}\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype[getSymbolIterator()] = function () { return ((this._results))[getSymbolIterator()](); };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * @param {?} res\n         * @return {?}\n         */\n        QueryList.prototype.reset = function (res) {\n            this._results = ListWrapper.flatten(res);\n            this._dirty = false;\n        };\n        /**\n         * @return {?}\n         */\n        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n        /**\n         * internal\n         * @return {?}\n         */\n        QueryList.prototype.setDirty = function () { this._dirty = true; };\n        Object.defineProperty(QueryList.prototype, \"dirty\", {\n            /**\n             * internal\n             * @return {?}\n             */\n            get: function () { return this._dirty; },\n            enumerable: true,\n            configurable: true\n        });\n        return QueryList;\n    }());\n\n    var /** @type {?} */ _SEPARATOR = '#';\n    var /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * \\@experimental\n     * @abstract\n     */\n    var SystemJsNgModuleLoaderConfig = (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var /** @type {?} */ DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * \\@experimental\n     */\n    var SystemJsNgModuleLoader = (function () {\n        /**\n         * @param {?} _compiler\n         * @param {?=} config\n         */\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        /**\n         * @param {?} path\n         * @return {?}\n         */\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler, },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    /**\n     * @param {?} value\n     * @param {?} modulePath\n     * @param {?} exportName\n     * @return {?}\n     */\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n     * `TemplateRef` from a Component or a Directive via {\\@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use\n     * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n     * View Container.\n     * \\@stable\n     * @abstract\n     */\n    var TemplateRef = (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        TemplateRef.prototype.elementRef = function () { };\n        /**\n         * @abstract\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateRef.prototype.createEmbeddedView = function (context) { };\n        return TemplateRef;\n    }());\n    var TemplateRef_ = (function (_super) {\n        __extends$10(TemplateRef_, _super);\n        /**\n         * @param {?} _parentView\n         * @param {?} _nodeIndex\n         * @param {?} _nativeElement\n         */\n        function TemplateRef_(_parentView, _nodeIndex, _nativeElement) {\n            _super.call(this);\n            this._parentView = _parentView;\n            this._nodeIndex = _nodeIndex;\n            this._nativeElement = _nativeElement;\n        }\n        /**\n         * @param {?} context\n         * @return {?}\n         */\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            var /** @type {?} */ view = this._parentView.createEmbeddedViewInternal(this._nodeIndex);\n            view.create(context || ({}));\n            return view.ref;\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n     * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n     * \\@stable\n     * @abstract\n     */\n    var ViewContainerRef = (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * Anchor element that specifies the location of this container in the containing View.\n         * <!-- TODO: rename to anchorElement -->\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.element = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.injector = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.parentInjector = function () { };\n        /**\n         * Destroys all Views in this container.\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.clear = function () { };\n        /**\n         * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n         * @abstract\n         * @param {?} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.get = function (index) { };\n        /**\n         * Returns the number of Views currently attached to this container.\n         * @abstract\n         * @return {?}\n         */\n        ViewContainerRef.prototype.length = function () { };\n        /**\n         * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n         * into this container at the specified `index`.\n         *\n         * If `index` is not specified, the new View will be inserted as the last View in the container.\n         *\n         * Returns the {\\@link ViewRef} for the newly created View.\n         * @abstract\n         * @param {?} templateRef\n         * @param {?=} context\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) { };\n        /**\n         * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n         * specified `index`.\n         *\n         * The component is instantiated using its {\\@link ComponentFactory} which can be\n         * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n         *\n         * If `index` is not specified, the new View will be inserted as the last View in the container.\n         *\n         * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n         *\n         * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n         * @abstract\n         * @param {?} componentFactory\n         * @param {?=} index\n         * @param {?=} injector\n         * @param {?=} projectableNodes\n         * @return {?}\n         */\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) { };\n        /**\n         * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n         *\n         * If `index` is not specified, the new View will be inserted as the last View in the container.\n         *\n         * Returns the inserted {\\@link ViewRef}.\n         * @abstract\n         * @param {?} viewRef\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.insert = function (viewRef, index) { };\n        /**\n         * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n         *\n         * Returns the inserted {\\@link ViewRef}.\n         * @abstract\n         * @param {?} viewRef\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        ViewContainerRef.prototype.move = function (viewRef, currentIndex) { };\n        /**\n         * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n         * `-1` if this container doesn't contain the View.\n         * @abstract\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ViewContainerRef.prototype.indexOf = function (viewRef) { };\n        /**\n         * Destroys a View attached to this container at the specified `index`.\n         *\n         * If `index` is not specified, the last View in the container will be removed.\n         * @abstract\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.remove = function (index) { };\n        /**\n         * Use along with {\\@link #insert} to move a View within the current container.\n         *\n         * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n         * @abstract\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef.prototype.detach = function (index) { };\n        return ViewContainerRef;\n    }());\n    var ViewContainerRef_ = (function () {\n        /**\n         * @param {?} _element\n         */\n        function ViewContainerRef_(_element) {\n            this._element = _element;\n            /** @internal */\n            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n            /** @internal */\n            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n            /** @internal */\n            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n            /** @internal */\n            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n        }\n        /**\n         * @param {?} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ views = this._element.nestedViews;\n                return isPresent(views) ? views.length : 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._element.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._element.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._element.parentInjector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} templateRef\n         * @param {?=} context\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            if (context === void 0) { context = null; }\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context);\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        /**\n         * @param {?} componentFactory\n         * @param {?=} index\n         * @param {?=} injector\n         * @param {?=} projectableNodes\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n            if (index === void 0) { index = -1; }\n            if (injector === void 0) { injector = null; }\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            var /** @type {?} */ s = this._createComponentInContainerScope();\n            var /** @type {?} */ contextInjector = injector || this._element.parentInjector;\n            var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n            this.insert(componentRef.hostView, index);\n            return wtfLeave(s, componentRef);\n        };\n        /**\n         * @param {?} viewRef\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ s = this._insertScope();\n            if (index == -1)\n                index = this.length;\n            var /** @type {?} */ viewRef_ = (viewRef);\n            this._element.attachView(viewRef_.internalView, index);\n            return wtfLeave(s, viewRef_);\n        };\n        /**\n         * @param {?} viewRef\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            var /** @type {?} */ s = this._insertScope();\n            if (currentIndex == -1)\n                return;\n            var /** @type {?} */ viewRef_ = (viewRef);\n            this._element.moveView(viewRef_.internalView, currentIndex);\n            return wtfLeave(s, viewRef_);\n        };\n        /**\n         * @param {?} viewRef\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this.length ? this._element.nestedViews.indexOf(((viewRef)).internalView) :\n                -1;\n        };\n        /**\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.remove = function (index) {\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ s = this._removeScope();\n            if (index == -1)\n                index = this.length - 1;\n            var /** @type {?} */ view = this._element.detachView(index);\n            view.destroy();\n            // view is intentionally not returned to the client.\n            wtfLeave(s);\n        };\n        /**\n         * @param {?=} index\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.detach = function (index) {\n            if (index === void 0) { index = -1; }\n            var /** @type {?} */ s = this._detachScope();\n            if (index == -1)\n                index = this.length - 1;\n            var /** @type {?} */ view = this._element.detachView(index);\n            return wtfLeave(s, view.ref);\n        };\n        /**\n         * @return {?}\n         */\n        ViewContainerRef_.prototype.clear = function () {\n            for (var /** @type {?} */ i = this.length - 1; i >= 0; i--) {\n                this.remove(i);\n            }\n        };\n        return ViewContainerRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     * @abstract\n     */\n    var ViewRef = (function (_super) {\n        __extends$11(ViewRef, _super);\n        function ViewRef() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * Destroys the view and all of the data structures associated with it.\n         * @abstract\n         * @return {?}\n         */\n        ViewRef.prototype.destroy = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        ViewRef.prototype.destroyed = function () { };\n        /**\n         * @abstract\n         * @param {?} callback\n         * @return {?}\n         */\n        ViewRef.prototype.onDestroy = function (callback) { };\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {\\@link TemplateRef}s:\n     *\n     * Outer {\\@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n     * </ul>\n     * ```\n     *\n     * Inner {\\@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n     *\n     * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <template view-container-ref></template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * \\@experimental\n     * @abstract\n     */\n    var EmbeddedViewRef = (function (_super) {\n        __extends$11(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        EmbeddedViewRef.prototype.context = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        EmbeddedViewRef.prototype.rootNodes = function () { };\n        return EmbeddedViewRef;\n    }(ViewRef));\n    var ViewRef_ = (function () {\n        /**\n         * @param {?} _view\n         * @param {?} animationQueue\n         */\n        function ViewRef_(_view, animationQueue) {\n            this._view = _view;\n            this.animationQueue = animationQueue;\n            this._view = _view;\n            this._originalMode = this._view.cdMode;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.flatRootNodes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.detectChanges = function () {\n            this._view.detectChanges(false);\n            this.animationQueue.flush();\n        };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.reattach = function () {\n            this._view.cdMode = this._originalMode;\n            this.markForCheck();\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        /**\n         * @return {?}\n         */\n        ViewRef_.prototype.destroy = function () { this._view.detachAndDestroy(); };\n        return ViewRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var EventListener = (function () {\n        /**\n         * @param {?} name\n         * @param {?} callback\n         */\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        ;\n        return EventListener;\n    }());\n    /**\n     * \\@experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = (function () {\n        /**\n         * @param {?} nativeNode\n         * @param {?} parent\n         * @param {?} _debugInfo\n         */\n        function DebugNode(nativeNode, parent, _debugInfo) {\n            this._debugInfo = _debugInfo;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.injector : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.component : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.context : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._debugInfo ? this._debugInfo.references : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.providerTokens : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"source\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._debugInfo ? this._debugInfo.source : null; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * \\@experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = (function (_super) {\n        __extends$12(DebugElement, _super);\n        /**\n         * @param {?} nativeNode\n         * @param {?} parent\n         * @param {?} _debugInfo\n         */\n        function DebugElement(nativeNode, parent, _debugInfo) {\n            _super.call(this, nativeNode, parent, _debugInfo);\n            this.properties = {};\n            this.attributes = {};\n            this.classes = {};\n            this.styles = {};\n            this.childNodes = [];\n            this.nativeElement = nativeNode;\n        }\n        /**\n         * @param {?} child\n         * @return {?}\n         */\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        /**\n         * @param {?} child\n         * @return {?}\n         */\n        DebugElement.prototype.removeChild = function (child) {\n            var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        /**\n         * @param {?} child\n         * @param {?} newChildren\n         * @return {?}\n         */\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                var /** @type {?} */ previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n                var /** @type {?} */ nextChildren = this.childNodes.slice(siblingIndex + 1);\n                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n                for (var /** @type {?} */ i = 0; i < newChildren.length; ++i) {\n                    var /** @type {?} */ newChild = newChildren[i];\n                    if (newChild.parent) {\n                        newChild.parent.removeChild(newChild);\n                    }\n                    newChild.parent = this;\n                }\n            }\n        };\n        /**\n         * @param {?} predicate\n         * @return {?}\n         */\n        DebugElement.prototype.query = function (predicate) {\n            var /** @type {?} */ results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        /**\n         * @param {?} predicate\n         * @return {?}\n         */\n        DebugElement.prototype.queryAll = function (predicate) {\n            var /** @type {?} */ matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        /**\n         * @param {?} predicate\n         * @return {?}\n         */\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var /** @type {?} */ matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} eventName\n         * @param {?} eventObj\n         * @return {?}\n         */\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * \\@experimental\n     * @param {?} debugEls\n     * @return {?}\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    /**\n     * @param {?} element\n     * @param {?} predicate\n     * @param {?} matches\n     * @return {?}\n     */\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    /**\n     * @param {?} parentNode\n     * @param {?} predicate\n     * @param {?} matches\n     * @return {?}\n     */\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var /** @type {?} */ _nativeNodeToDebugNode = new Map();\n    /**\n     * \\@experimental\n     * @param {?} nativeNode\n     * @return {?}\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @return {?}\n     */\n    function _reflector() {\n        return reflector;\n    }\n    var /** @type {?} */ _CORE_PLATFORM_PROVIDERS = [\n        PlatformRef_,\n        { provide: PlatformRef, useExisting: PlatformRef_ },\n        { provide: Reflector, useFactory: _reflector, deps: [] },\n        { provide: ReflectorReader, useExisting: Reflector },\n        TestabilityRegistry,\n        Console,\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var /** @type {?} */ LOCALE_ID = new OpaqueToken('LocaleId');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var /** @type {?} */ TRANSLATIONS = new OpaqueToken('Translations');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var /** @type {?} */ TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\n    /**\n     * @return {?}\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    /**\n     * @return {?}\n     */\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    /**\n     * @param {?=} locale\n     * @return {?}\n     */\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * This module includes the providers of \\@angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * \\@experimental\n     */\n    var ApplicationModule = (function () {\n        function ApplicationModule() {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{\n                        providers: [\n                            ApplicationRef_,\n                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                            ApplicationInitStatus,\n                            Compiler,\n                            APP_ID_RANDOM_PROVIDER,\n                            ViewUtils,\n                            AnimationQueue,\n                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                            {\n                                provide: LOCALE_ID,\n                                useFactory: _localeFactory,\n                                deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                            },\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return []; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n    var /** @type {?} */ ANY_STATE = '*';\n    var /** @type {?} */ DEFAULT_STATE = '*';\n    var /** @type {?} */ EMPTY_STATE = 'void';\n\n    var AnimationGroupPlayer = (function () {\n        /**\n         * @param {?} _players\n         */\n        function AnimationGroupPlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            var count = 0;\n            var total = this._players.length;\n            if (total == 0) {\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else {\n                this._players.forEach(function (player) {\n                    player.parentPlayer = _this;\n                    player.onDone(function () {\n                        if (++count >= total) {\n                            _this._onFinish();\n                        }\n                    });\n                });\n            }\n        }\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._players.forEach(function (player) { return player.play(); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.setPosition = function (p) {\n            this._players.forEach(function (player) { player.setPosition(p); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationGroupPlayer.prototype.getPosition = function () {\n            var /** @type {?} */ min = 0;\n            this._players.forEach(function (player) {\n                var /** @type {?} */ p = player.getPosition();\n                min = Math.min(p, min);\n            });\n            return min;\n        };\n        Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._players; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupPlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `AnimationKeyframe` consists of a series of styles (contained within {\\@link AnimationStyles\n     * `AnimationStyles`})\n     * and an offset value indicating when those styles are applied within the `duration/delay/easing`\n     * timings.\n     * `AnimationKeyframe` is mostly an internal class which is designed to be used alongside {\\@link\n     * Renderer#animate-anchor `Renderer.animate`}.\n     *\n     * \\@experimental Animation support is experimental\n     */\n    var AnimationKeyframe = (function () {\n        /**\n         * @param {?} offset\n         * @param {?} styles\n         */\n        function AnimationKeyframe(offset, styles) {\n            this.offset = offset;\n            this.styles = styles;\n        }\n        return AnimationKeyframe;\n    }());\n\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationPlayer = (function () {\n        function AnimationPlayer() {\n        }\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationPlayer.prototype.onDone = function (fn) { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationPlayer.prototype.onStart = function (fn) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.init = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.hasStarted = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.play = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.pause = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.restart = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.finish = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.destroy = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.reset = function () { };\n        /**\n         * @abstract\n         * @param {?} p\n         * @return {?}\n         */\n        AnimationPlayer.prototype.setPosition = function (p) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        AnimationPlayer.prototype.getPosition = function () { };\n        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n            /**\n             * @return {?}\n             */\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            /**\n             * @param {?} player\n             * @return {?}\n             */\n            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationPlayer;\n    }());\n    var NoOpAnimationPlayer = (function () {\n        function NoOpAnimationPlayer() {\n            var _this = this;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._started = false;\n            this.parentPlayer = null;\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype._onFinish = function () {\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.init = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.play = function () {\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n            }\n            this._started = true;\n        };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.pause = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.restart = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.destroy = function () { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.reset = function () { };\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.setPosition = function (p) { };\n        /**\n         * @return {?}\n         */\n        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n        return NoOpAnimationPlayer;\n    }());\n\n    var AnimationSequencePlayer = (function () {\n        /**\n         * @param {?} _players\n         */\n        function AnimationSequencePlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._currentIndex = 0;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            this._players.forEach(function (player) { player.parentPlayer = _this; });\n            this._onNext(false);\n        }\n        /**\n         * @param {?} start\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype._onNext = function (start) {\n            var _this = this;\n            if (this._finished)\n                return;\n            if (this._players.length == 0) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else if (this._currentIndex >= this._players.length) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                this._onFinish();\n            }\n            else {\n                var /** @type {?} */ player = this._players[this._currentIndex++];\n                player.onDone(function () { return _this._onNext(true); });\n                this._activePlayer = player;\n                if (start) {\n                    player.play();\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._activePlayer.play();\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.restart = function () {\n            this.reset();\n            if (this._players.length > 0) {\n                this._players[0].restart();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n                this._activePlayer = new NoOpAnimationPlayer();\n            }\n        };\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.setPosition = function (p) { this._players[0].setPosition(p); };\n        /**\n         * @return {?}\n         */\n        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n        Object.defineProperty(AnimationSequencePlayer.prototype, \"players\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._players; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequencePlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var /** @type {?} */ AUTO_STYLE = '*';\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link trigger trigger\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationEntryMetadata = (function () {\n        /**\n         * @param {?} name\n         * @param {?} definitions\n         */\n        function AnimationEntryMetadata(name, definitions) {\n            this.name = name;\n            this.definitions = definitions;\n        }\n        return AnimationEntryMetadata;\n    }());\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationStateMetadata = (function () {\n        function AnimationStateMetadata() {\n        }\n        return AnimationStateMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link state state animation\n     * function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationStateDeclarationMetadata = (function (_super) {\n        __extends$13(AnimationStateDeclarationMetadata, _super);\n        /**\n         * @param {?} stateNameExpr\n         * @param {?} styles\n         */\n        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n            _super.call(this);\n            this.stateNameExpr = stateNameExpr;\n            this.styles = styles;\n        }\n        return AnimationStateDeclarationMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the\n     * {\\@link transition transition animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationStateTransitionMetadata = (function (_super) {\n        __extends$13(AnimationStateTransitionMetadata, _super);\n        /**\n         * @param {?} stateChangeExpr\n         * @param {?} steps\n         */\n        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n            _super.call(this);\n            this.stateChangeExpr = stateChangeExpr;\n            this.steps = steps;\n        }\n        return AnimationStateTransitionMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationMetadata = (function () {\n        function AnimationMetadata() {\n        }\n        return AnimationMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link keyframes keyframes\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationKeyframesSequenceMetadata = (function (_super) {\n        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n        /**\n         * @param {?} steps\n         */\n        function AnimationKeyframesSequenceMetadata(steps) {\n            _super.call(this);\n            this.steps = steps;\n        }\n        return AnimationKeyframesSequenceMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link style style animation\n     * function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationStyleMetadata = (function (_super) {\n        __extends$13(AnimationStyleMetadata, _super);\n        /**\n         * @param {?} styles\n         * @param {?=} offset\n         */\n        function AnimationStyleMetadata(styles, offset) {\n            if (offset === void 0) { offset = null; }\n            _super.call(this);\n            this.styles = styles;\n            this.offset = offset;\n        }\n        return AnimationStyleMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link animate animate\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationAnimateMetadata = (function (_super) {\n        __extends$13(AnimationAnimateMetadata, _super);\n        /**\n         * @param {?} timings\n         * @param {?} styles\n         */\n        function AnimationAnimateMetadata(timings, styles) {\n            _super.call(this);\n            this.timings = timings;\n            this.styles = styles;\n        }\n        return AnimationAnimateMetadata;\n    }(AnimationMetadata));\n    /**\n     * \\@experimental Animation support is experimental.\n     * @abstract\n     */\n    var AnimationWithStepsMetadata = (function (_super) {\n        __extends$13(AnimationWithStepsMetadata, _super);\n        function AnimationWithStepsMetadata() {\n            _super.call(this);\n        }\n        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n            /**\n             * @return {?}\n             */\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationWithStepsMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link sequence sequence\n     * animation function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationSequenceMetadata = (function (_super) {\n        __extends$13(AnimationSequenceMetadata, _super);\n        /**\n         * @param {?} _steps\n         */\n        function AnimationSequenceMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequenceMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {\\@link group group animation\n     * function} is called.\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationGroupMetadata = (function (_super) {\n        __extends$13(AnimationGroupMetadata, _super);\n        /**\n         * @param {?} _steps\n         */\n        function AnimationGroupMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n     * amount of\n     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n     * used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link transition\n     * transition}.\n     *\n     * ### Usage\n     *\n     * The `animate` function accepts two input parameters: `timing` and `styles`:\n     *\n     * - `timing` is a string based value that can be a combination of a duration with optional\n     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n     * delay=100, easing=ease-out`.\n     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n     * form.\n     * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n     * keyframes keyframes}.\n     * If left empty then the styles from the destination state will be collected and used (this is\n     * useful when\n     * describing an animation step that will complete an animation by {\\@link\n     * transition#the-final-animate-call animating to the final state}).\n     *\n     * ```typescript\n     * // various functions for specifying timing data\n     * animate(500, style(...))\n     * animate(\"1s\", style(...))\n     * animate(\"100ms 0.5s\", style(...))\n     * animate(\"5s ease\", style(...))\n     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n     *\n     * // either style() of keyframes() can be used\n     * animate(500, style({ background: \"red\" }))\n     * animate(500, keyframes([\n     *   style({ background: \"blue\" })),\n     *   style({ background: \"red\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} timing\n     * @param {?=} styles\n     * @return {?}\n     */\n    function animate(timing, styles) {\n        if (styles === void 0) { styles = null; }\n        var /** @type {?} */ stylesEntry = styles;\n        if (!isPresent(stylesEntry)) {\n            var /** @type {?} */ EMPTY_STYLE = {};\n            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n        }\n        return new AnimationAnimateMetadata(timing, stylesEntry);\n    }\n    /**\n     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n     * are useful when a series of styles must be animated/closed off\n     * at different statrting/ending times.\n     *\n     * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n     * transition}\n     * and it will only continue to the next instruction once all of the inner animation steps\n     * have completed.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `group` animation function can either consist\n     * of {\\@link style style} or {\\@link animate animate} function calls. Each call to `style()` or\n     * `animate()`\n     * within a group will be executed instantly (use {\\@link keyframes keyframes} or a\n     * {\\@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n     * time).\n     *\n     * ```typescript\n     * group([\n     *   animate(\"1s\", { background: \"black\" }))\n     *   animate(\"2s\", { color: \"white\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} steps\n     * @return {?}\n     */\n    function group(steps) {\n        return new AnimationGroupMetadata(steps);\n    }\n    /**\n     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n     * by default when an array is passed as animation data into {\\@link transition transition}.)\n     *\n     * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n     * transition}\n     * and it will only continue to the next instruction once each of the inner animation steps\n     * have completed.\n     *\n     * To perform animation styling in parallel with other animation steps then\n     * have a look at the {\\@link group group} animation function.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `sequence` animation function can either consist\n     * of {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply\n     * the\n     * provided styling data immediately while a call to `animate()` will apply its styling\n     * data over a given time depending on its timing data.\n     *\n     * ```typescript\n     * sequence([\n     *   style({ opacity: 0 })),\n     *   animate(\"1s\", { opacity: 1 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} steps\n     * @return {?}\n     */\n    function sequence(steps) {\n        return new AnimationSequenceMetadata(steps);\n    }\n    /**\n     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `style` declares a key/value object containing CSS properties/styles that can then\n     * be used for {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as\n     * styling data for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n     *\n     * ### Usage\n     *\n     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n     * pairs to be defined.\n     *\n     * ```typescript\n     * // string values are used for css properties\n     * style({ background: \"red\", color: \"blue\" })\n     *\n     * // numerical (pixel) values are also supported\n     * style({ width: 100, height: 0 })\n     * ```\n     *\n     * #### Auto-styles (using `*`)\n     *\n     * When an asterix (`*`) character is used as a value then it will be detected from the element\n     * being animated\n     * and applied as animation data when the animation starts.\n     *\n     * This feature proves useful for a state depending on layout and/or environment factors; in such\n     * cases\n     * the styles are calculated just before the animation starts.\n     *\n     * ```typescript\n     * // the steps below will animate from 0 to the\n     * // actual height of the element\n     * style({ height: 0 }),\n     * animate(\"1s\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} tokens\n     * @return {?}\n     */\n    function style(tokens) {\n        var /** @type {?} */ input;\n        var /** @type {?} */ offset = null;\n        if (typeof tokens === 'string') {\n            input = [(tokens)];\n        }\n        else {\n            if (Array.isArray(tokens)) {\n                input = (tokens);\n            }\n            else {\n                input = [(tokens)];\n            }\n            input.forEach(function (entry) {\n                var /** @type {?} */ entryOffset = ((entry) /** TODO #9100 */)['offset'];\n                if (isPresent(entryOffset)) {\n                    offset = offset == null ? parseFloat(entryOffset) : offset;\n                }\n            });\n        }\n        return new AnimationStyleMetadata(input, offset);\n    }\n    /**\n     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `state` declares an animation state within the given trigger. When a state is\n     * active within a component then its associated styles will persist on\n     * the element that the trigger is attached to (even when the animation ends).\n     *\n     * To animate between states, have a look at the animation {\\@link transition transition}\n     * DSL function. To register states to an animation trigger please have a look\n     * at the {\\@link trigger trigger} function.\n     *\n     * #### The `void` state\n     *\n     * The `void` state value is a reserved word that angular uses to determine when the element is not\n     * apart\n     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n     * associated element\n     * is void).\n     *\n     * #### The `*` (default) state\n     *\n     * The `*` state (when styled) is a fallback state that will be used if\n     * the state that is being animated is not declared within the trigger.\n     *\n     * ### Usage\n     *\n     * `state` will declare an animation state with its associated styles\n     * within the given trigger.\n     *\n     * - `stateNameExpr` can be one or more state names separated by commas.\n     * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n     * the state\n     * has been reached.\n     *\n     * ```typescript\n     * // \"void\" is a reserved name for a state and is used to represent\n     * // the state in which an element is detached from from the application.\n     * state(\"void\", style({ height: 0 }))\n     *\n     * // user-defined states\n     * state(\"closed\", style({ height: 0 }))\n     * state(\"open, visible\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     * @return {?}\n     */\n    function state(stateNameExpr, styles) {\n        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n    }\n    /**\n     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n     * by an `offset` value.\n     *\n     * ### Usage\n     *\n     * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n     * animation function. Instead of applying animations from where they are\n     * currently to their destination, keyframes can describe how each style entry is applied\n     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n     *\n     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n     * what percentage of the animate time the styles will be applied.\n     *\n     * ```typescript\n     * // the provided offset values describe when each backgroundColor value is applied.\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\", offset: 0 }),\n     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n     *   style({ backgroundColor: \"black\", offset: 1 })\n     * ]))\n     * ```\n     *\n     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n     * will\n     * be calculated automatically.\n     *\n     * ```typescript\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\" }) // offset = 0\n     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n     *   style({ backgroundColor: \"black\" }) // offset = 1\n     * ]))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} steps\n     * @return {?}\n     */\n    function keyframes(steps) {\n        return new AnimationKeyframesSequenceMetadata(steps);\n    }\n    /**\n     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n     * provided\n     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n     * which consists\n     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n     *\n     * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n     * to animate to\n     * a state value and persist its styles then one or more {\\@link state animation states} is expected\n     * to be defined.\n     *\n     * ### Usage\n     *\n     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n     * what the\n     * previous state is and what the current state has become. In other words, if a transition is\n     * defined that\n     * matches the old/current state criteria then the associated animation will be triggered.\n     *\n     * ```typescript\n     * // all transition/state changes are defined within an animation trigger\n     * trigger(\"myAnimationTrigger\", [\n     *   // if a state is defined then its styles will be persisted when the\n     *   // animation has fully completed itself\n     *   state(\"on\", style({ background: \"green\" })),\n     *   state(\"off\", style({ background: \"grey\" })),\n     *\n     *   // a transition animation that will be kicked off when the state value\n     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n     *   transition(\"on => off\", animate(500)),\n     *\n     *   // it is also possible to do run the same animation for both directions\n     *   transition(\"on <=> off\", animate(500)),\n     *\n     *   // or to define multiple states pairs separated by commas\n     *   transition(\"on => off, off => void\", animate(500)),\n     *\n     *   // this is a catch-all state change for when an element is inserted into\n     *   // the page and the destination state is unknown\n     *   transition(\"void => *\", [\n     *     style({ opacity: 0 }),\n     *     animate(500)\n     *   ]),\n     *\n     *   // this will capture a state change between any states\n     *   transition(\"* => *\", animate(\"1s 0s\")),\n     * ])\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * #### The final `animate` call\n     *\n     * If the final step within the transition steps is a call to `animate()` that **only**\n     * uses a timing value with **no style data** then it will be automatically used as the final\n     * animation\n     * arc for the element to animate itself to the final state. This involves an automatic mix of\n     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n     * applied state to be presented correctly.\n     *\n     * ```\n     * // start off by hiding the element, but make sure that it animates properly to whatever state\n     * // is currently active for \"myAnimationTrigger\"\n     * transition(\"void => *\", [\n     *   style({ opacity: 0 }),\n     *   animate(500)\n     * ])\n     * ```\n     *\n     * ### Transition Aliases (`:enter` and `:leave`)\n     *\n     * Given that enter (insertion) and leave (removal) animations are so common,\n     * the `transition` function accepts both `:enter` and `:leave` values which\n     * are aliases for the `void => *` and `* => void` state changes.\n     *\n     * ```\n     * transition(\":enter\", [\n     *   style({ opacity: 0 }),\n     *   animate(500, style({ opacity: 1 }))\n     * ])\n     * transition(\":leave\", [\n     *   animate(500, style({ opacity: 0 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     * @return {?}\n     */\n    function transition(stateChangeExpr, steps) {\n        var /** @type {?} */ animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n    }\n    /**\n     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {\\@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n     * transition transition}\n     * entries that will be evaluated when the expression bound to the trigger changes.\n     *\n     * Triggers are registered within the component annotation data under the\n     * {\\@link Component#animations-anchor animations section}. An animation trigger can\n     * be placed on an element within a template by referencing the name of the\n     * trigger followed by the expression value that the trigger is bound to\n     * (in the form of `[\\@triggerName]=\"expression\"`.\n     *\n     * ### Usage\n     *\n     * `trigger` will create an animation trigger reference based on the provided `name` value.\n     * The provided `animation` value is expected to be an array consisting of {\\@link state state} and\n     * {\\@link transition transition}\n     * declarations.\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-component',\n     *   templateUrl: 'my-component-tpl.html',\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *       state(...),\n     *       state(...),\n     *       transition(...),\n     *       transition(...)\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   myStatusExp = \"something\";\n     * }\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * \\@experimental Animation support is experimental.\n     * @param {?} name\n     * @param {?} animation\n     * @return {?}\n     */\n    function trigger(name, animation) {\n        return new AnimationEntryMetadata(name, animation);\n    }\n\n    /**\n     * @param {?} previousStyles\n     * @param {?} newStyles\n     * @param {?=} nullValue\n     * @return {?}\n     */\n    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n        if (nullValue === void 0) { nullValue = null; }\n        var /** @type {?} */ finalStyles = {};\n        Object.keys(newStyles).forEach(function (prop) {\n            var /** @type {?} */ value = newStyles[prop];\n            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n        });\n        Object.keys(previousStyles).forEach(function (prop) {\n            if (!isPresent(finalStyles[prop])) {\n                finalStyles[prop] = nullValue;\n            }\n        });\n        return finalStyles;\n    }\n    /**\n     * @param {?} collectedStyles\n     * @param {?} finalStateStyles\n     * @param {?} keyframes\n     * @return {?}\n     */\n    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n        var /** @type {?} */ limit = keyframes.length - 1;\n        var /** @type {?} */ firstKeyframe = keyframes[0];\n        // phase 1: copy all the styles from the first keyframe into the lookup map\n        var /** @type {?} */ flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n        var /** @type {?} */ extraFirstKeyframeStyles = {};\n        var /** @type {?} */ hasExtraFirstStyles = false;\n        Object.keys(collectedStyles).forEach(function (prop) {\n            var /** @type {?} */ value = (collectedStyles[prop]);\n            // if the style is already defined in the first keyframe then\n            // we do not replace it.\n            if (!flatenedFirstKeyframeStyles[prop]) {\n                flatenedFirstKeyframeStyles[prop] = value;\n                extraFirstKeyframeStyles[prop] = value;\n                hasExtraFirstStyles = true;\n            }\n        });\n        var /** @type {?} */ keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n        // phase 2: normalize the final keyframe\n        var /** @type {?} */ finalKeyframe = keyframes[limit];\n        finalKeyframe.styles.styles.unshift(finalStateStyles);\n        var /** @type {?} */ flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n        var /** @type {?} */ extraFinalKeyframeStyles = {};\n        var /** @type {?} */ hasExtraFinalStyles = false;\n        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFinalStyles = true;\n            }\n        });\n        if (hasExtraFinalStyles) {\n            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n        }\n        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFirstStyles = true;\n            }\n        });\n        if (hasExtraFirstStyles) {\n            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n        }\n        collectAndResolveStyles(collectedStyles, [finalStateStyles]);\n        return keyframes;\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    function clearStyles(styles) {\n        var /** @type {?} */ finalStyles = {};\n        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n        return finalStyles;\n    }\n    /**\n     * @param {?} collection\n     * @param {?} styles\n     * @return {?}\n     */\n    function collectAndResolveStyles(collection, styles) {\n        return styles.map(function (entry) {\n            var /** @type {?} */ stylesObj = {};\n            Object.keys(entry).forEach(function (prop) {\n                var /** @type {?} */ value = entry[prop];\n                if (value == FILL_STYLE_FLAG) {\n                    value = collection[prop];\n                    if (!isPresent(value)) {\n                        value = AUTO_STYLE;\n                    }\n                }\n                collection[prop] = value;\n                stylesObj[prop] = value;\n            });\n            return stylesObj;\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} styles\n     * @return {?}\n     */\n    function renderStyles(element, renderer, styles) {\n        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    function flattenStyles(styles) {\n        var /** @type {?} */ finalStyles = {};\n        styles.forEach(function (entry) {\n            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = (entry[prop]); });\n        });\n        return finalStyles;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `AnimationStyles` consists of a collection of key/value maps containing CSS-based style data\n     * that can either be used as initial styling data or apart of a series of keyframes within an\n     * animation.\n     * This class is mostly internal, and it is designed to be used alongside\n     * {\\@link AnimationKeyframe `AnimationKeyframe`} and {\\@link Renderer#animate-anchor\n     * `Renderer.animate`}.\n     *\n     * \\@experimental Animation support is experimental\n     */\n    var AnimationStyles = (function () {\n        /**\n         * @param {?} styles\n         */\n        function AnimationStyles(styles) {\n            this.styles = styles;\n        }\n        return AnimationStyles;\n    }());\n\n    /**\n     * An instance of this class is returned as an event parameter when an animation\n     * callback is captured for an animation either during the start or done phase.\n     *\n     * ```typescript\n     * \\@Component({\n     *   host: {\n     *     '[\\@myAnimationTrigger]': 'someExpression',\n     *     '(\\@myAnimationTrigger.start)': 'captureStartEvent($event)',\n     *     '(\\@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n     *   },\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *        // ...\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   someExpression: any = false;\n     *   captureStartEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     *\n     *   captureDoneEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     * }\n     * ```\n     *\n     * \\@experimental Animation support is experimental.\n     */\n    var AnimationTransitionEvent = (function () {\n        /**\n         * @param {?} __0\n         */\n        function AnimationTransitionEvent(_a) {\n            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n            this.fromState = fromState;\n            this.toState = toState;\n            this.totalTime = totalTime;\n            this.phaseName = phaseName;\n        }\n        return AnimationTransitionEvent;\n    }());\n\n    var AnimationTransition = (function () {\n        /**\n         * @param {?} _player\n         * @param {?} _fromState\n         * @param {?} _toState\n         * @param {?} _totalTime\n         */\n        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n            this._player = _player;\n            this._fromState = _fromState;\n            this._toState = _toState;\n            this._totalTime = _totalTime;\n        }\n        /**\n         * @param {?} phaseName\n         * @return {?}\n         */\n        AnimationTransition.prototype._createEvent = function (phaseName) {\n            return new AnimationTransitionEvent({\n                fromState: this._fromState,\n                toState: this._toState,\n                totalTime: this._totalTime,\n                phaseName: phaseName\n            });\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        AnimationTransition.prototype.onStart = function (callback) {\n            var _this = this;\n            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('start')); }, 'player.onStart'));\n            this._player.onStart(fn);\n        };\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        AnimationTransition.prototype.onDone = function (callback) {\n            var _this = this;\n            var /** @type {?} */ fn = (Zone.current.wrap(function () { return callback(_this._createEvent('done')); }, 'player.onDone'));\n            this._player.onDone(fn);\n        };\n        return AnimationTransition;\n    }());\n\n    var DebugDomRootRenderer = (function () {\n        /**\n         * @param {?} _delegate\n         */\n        function DebugDomRootRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        /**\n         * @param {?} componentProto\n         * @return {?}\n         */\n        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n        };\n        return DebugDomRootRenderer;\n    }());\n    var DebugDomRenderer = (function () {\n        /**\n         * @param {?} _delegate\n         */\n        function DebugDomRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        /**\n         * @param {?} selectorOrNode\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var /** @type {?} */ nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n            var /** @type {?} */ debugEl = new DebugElement(nativeEl, null, debugInfo);\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} name\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n            var /** @type {?} */ nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n            var /** @type {?} */ debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        /**\n         * @param {?} hostElement\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n        /**\n         * @param {?} parentElement\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var /** @type {?} */ comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n            var /** @type {?} */ debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return comment;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} value\n         * @param {?=} debugInfo\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var /** @type {?} */ text = this._delegate.createText(parentElement, value, debugInfo);\n            var /** @type {?} */ debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return text;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} nodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            var /** @type {?} */ debugParent = getDebugNode(parentElement);\n            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n                var /** @type {?} */ debugElement_1 = debugParent;\n                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n            }\n            this._delegate.projectNodes(parentElement, nodes);\n        };\n        /**\n         * @param {?} node\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var /** @type {?} */ debugNode = getDebugNode(node);\n            if (isPresent(debugNode)) {\n                var /** @type {?} */ debugParent = debugNode.parent;\n                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n                    var /** @type {?} */ debugViewRootNodes_1 = [];\n                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes_1.push(getDebugNode(rootNode)); });\n                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes_1);\n                }\n            }\n            this._delegate.attachViewAfter(node, viewRootNodes);\n        };\n        /**\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n            viewRootNodes.forEach(function (node) {\n                var /** @type {?} */ debugNode = getDebugNode(node);\n                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n                    debugNode.parent.removeChild(debugNode);\n                }\n            });\n            this._delegate.detachView(viewRootNodes);\n        };\n        /**\n         * @param {?} hostElement\n         * @param {?} viewAllNodes\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            viewAllNodes = viewAllNodes || [];\n            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n            this._delegate.destroyView(hostElement, viewAllNodes);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl)) {\n                debugEl.listeners.push(new EventListener(name, callback));\n            }\n            return this._delegate.listen(renderElement, name, callback);\n        };\n        /**\n         * @param {?} target\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._delegate.listenGlobal(target, name, callback);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.properties[propertyName] = propertyValue;\n            }\n            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} attributeName\n         * @param {?} attributeValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.attributes[attributeName] = attributeValue;\n            }\n            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} className\n         * @param {?} isAdd\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.classes[className] = isAdd;\n            }\n            this._delegate.setElementClass(renderElement, className, isAdd);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            var /** @type {?} */ debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.styles[styleName] = styleValue;\n            }\n            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} methodName\n         * @param {?=} args\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            this._delegate.invokeElementMethod(renderElement, methodName, args);\n        };\n        /**\n         * @param {?} renderNode\n         * @param {?} text\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n        };\n        return DebugDomRenderer;\n    }());\n\n    var ViewType = {};\n    ViewType.HOST = 0;\n    ViewType.COMPONENT = 1;\n    ViewType.EMBEDDED = 2;\n    ViewType[ViewType.HOST] = \"HOST\";\n    ViewType[ViewType.COMPONENT] = \"COMPONENT\";\n    ViewType[ViewType.EMBEDDED] = \"EMBEDDED\";\n\n    var StaticNodeDebugInfo = (function () {\n        /**\n         * @param {?} providerTokens\n         * @param {?} componentToken\n         * @param {?} refTokens\n         */\n        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n            this.providerTokens = providerTokens;\n            this.componentToken = componentToken;\n            this.refTokens = refTokens;\n        }\n        return StaticNodeDebugInfo;\n    }());\n    var DebugContext = (function () {\n        /**\n         * @param {?} _view\n         * @param {?} _nodeIndex\n         * @param {?} _tplRow\n         * @param {?} _tplCol\n         */\n        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n            this._tplRow = _tplRow;\n            this._tplCol = _tplCol;\n        }\n        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"context\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"component\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n                    return this.injector.get(staticNodeInfo.componentToken);\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ componentView = this._view;\n                while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n                    componentView = (componentView.parentView);\n                }\n                return componentView.parentElement;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._view.injector(this._nodeIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n                    return this._view.allNodes[this._nodeIndex];\n                }\n                else {\n                    return null;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"source\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"references\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var _this = this;\n                var /** @type {?} */ varValues = {};\n                var /** @type {?} */ staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo)) {\n                    var /** @type {?} */ refs_1 = staticNodeInfo.refTokens;\n                    Object.keys(refs_1).forEach(function (refName) {\n                        var /** @type {?} */ refToken = refs_1[refName];\n                        var /** @type {?} */ varValue;\n                        if (isBlank(refToken)) {\n                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n                        }\n                        else {\n                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n                        }\n                        varValues[refName] = varValue;\n                    });\n                }\n                return varValues;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugContext;\n    }());\n\n    var ViewAnimationMap = (function () {\n        function ViewAnimationMap() {\n            this._map = new Map();\n            this._allPlayers = [];\n        }\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.find = function (element, animationName) {\n            var /** @type {?} */ playersByAnimation = this._map.get(element);\n            if (isPresent(playersByAnimation)) {\n                return playersByAnimation[animationName];\n            }\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n            var /** @type {?} */ el = this._map.get(element);\n            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n        };\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @param {?} player\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n            var /** @type {?} */ playersByAnimation = this._map.get(element);\n            if (!isPresent(playersByAnimation)) {\n                playersByAnimation = {};\n            }\n            var /** @type {?} */ existingEntry = playersByAnimation[animationName];\n            if (isPresent(existingEntry)) {\n                this.remove(element, animationName);\n            }\n            playersByAnimation[animationName] = player;\n            this._allPlayers.push(player);\n            this._map.set(element, playersByAnimation);\n        };\n        /**\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @param {?=} targetPlayer\n         * @return {?}\n         */\n        ViewAnimationMap.prototype.remove = function (element, animationName, targetPlayer) {\n            if (targetPlayer === void 0) { targetPlayer = null; }\n            var /** @type {?} */ playersByAnimation = this._map.get(element);\n            if (playersByAnimation) {\n                var /** @type {?} */ player = playersByAnimation[animationName];\n                if (!targetPlayer || player === targetPlayer) {\n                    delete playersByAnimation[animationName];\n                    var /** @type {?} */ index = this._allPlayers.indexOf(player);\n                    this._allPlayers.splice(index, 1);\n                    if (Object.keys(playersByAnimation).length === 0) {\n                        this._map.delete(element);\n                    }\n                }\n            }\n        };\n        return ViewAnimationMap;\n    }());\n\n    var AnimationViewContext = (function () {\n        /**\n         * @param {?} _animationQueue\n         */\n        function AnimationViewContext(_animationQueue) {\n            this._animationQueue = _animationQueue;\n            this._players = new ViewAnimationMap();\n        }\n        /**\n         * @param {?} callback\n         * @return {?}\n         */\n        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n            var /** @type {?} */ activeAnimationPlayers = this._players.getAllPlayers();\n            // we check for the length to avoid having GroupAnimationPlayer\n            // issue an unnecessary microtask when zero players are passed in\n            if (activeAnimationPlayers.length) {\n                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n            }\n            else {\n                callback();\n            }\n        };\n        /**\n         * @param {?} element\n         * @param {?} animationName\n         * @param {?} player\n         * @return {?}\n         */\n        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n            var _this = this;\n            this._animationQueue.enqueue(player);\n            this._players.set(element, animationName, player);\n            player.onDone(function () { return _this._players.remove(element, animationName, player); });\n        };\n        /**\n         * @param {?} element\n         * @param {?=} animationName\n         * @return {?}\n         */\n        AnimationViewContext.prototype.getAnimationPlayers = function (element, animationName) {\n            if (animationName === void 0) { animationName = null; }\n            var /** @type {?} */ players = [];\n            if (animationName) {\n                var /** @type {?} */ currentPlayer = this._players.find(element, animationName);\n                if (currentPlayer) {\n                    _recursePlayers(currentPlayer, players);\n                }\n            }\n            else {\n                this._players.findAllPlayersByElement(element).forEach(function (player) { return _recursePlayers(player, players); });\n            }\n            return players;\n        };\n        return AnimationViewContext;\n    }());\n    /**\n     * @param {?} player\n     * @param {?} collectedPlayers\n     * @return {?}\n     */\n    function _recursePlayers(player, collectedPlayers) {\n        if ((player instanceof AnimationGroupPlayer) || (player instanceof AnimationSequencePlayer)) {\n            player.players.forEach(function (player) { return _recursePlayers(player, collectedPlayers); });\n        }\n        else {\n            collectedPlayers.push(player);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$15 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var ElementInjector = (function (_super) {\n        __extends$15(ElementInjector, _super);\n        /**\n         * @param {?} _view\n         * @param {?} _nodeIndex\n         */\n        function ElementInjector(_view, _nodeIndex) {\n            _super.call(this);\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n        }\n        /**\n         * @param {?} token\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        ElementInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n        };\n        return ElementInjector;\n    }(Injector));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$14 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n    /**\n     * @experimental\n     */\n    var /** @type {?} */ EMPTY_CONTEXT = new Object();\n    var /** @type {?} */ UNDEFINED$1 = new Object();\n    /**\n     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n     *\n     * @abstract\n     */\n    var AppView = (function () {\n        /**\n         * @param {?} clazz\n         * @param {?} componentType\n         * @param {?} type\n         * @param {?} viewUtils\n         * @param {?} parentView\n         * @param {?} parentIndex\n         * @param {?} parentElement\n         * @param {?} cdMode\n         * @param {?=} declaredViewContainer\n         */\n        function AppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentElement, cdMode, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            this.clazz = clazz;\n            this.componentType = componentType;\n            this.type = type;\n            this.viewUtils = viewUtils;\n            this.parentView = parentView;\n            this.parentIndex = parentIndex;\n            this.parentElement = parentElement;\n            this.cdMode = cdMode;\n            this.declaredViewContainer = declaredViewContainer;\n            this.numberOfChecks = 0;\n            this.ref = new ViewRef_(this, viewUtils.animationQueue);\n            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n                this.renderer = viewUtils.renderComponent(componentType);\n            }\n            else {\n                this.renderer = parentView.renderer;\n            }\n            this._directRenderer = this.renderer.directRenderer;\n        }\n        Object.defineProperty(AppView.prototype, \"animationContext\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                if (!this._animationContext) {\n                    this._animationContext = new AnimationViewContext(this.viewUtils.animationQueue);\n                }\n                return this._animationContext;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"destroyed\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} context\n         * @return {?}\n         */\n        AppView.prototype.create = function (context) {\n            this.context = context;\n            return this.createInternal(null);\n        };\n        /**\n         * @param {?} rootSelectorOrNode\n         * @param {?} hostInjector\n         * @param {?} projectableNodes\n         * @return {?}\n         */\n        AppView.prototype.createHostView = function (rootSelectorOrNode, hostInjector, projectableNodes) {\n            this.context = (EMPTY_CONTEXT);\n            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n            this._hostInjector = hostInjector;\n            this._hostProjectableNodes = projectableNodes;\n            return this.createInternal(rootSelectorOrNode);\n        };\n        /**\n         * Overwritten by implementations.\n         * Returns the ComponentRef for the host element for ViewType.HOST.\n         * @param {?} rootSelectorOrNode\n         * @return {?}\n         */\n        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n        /**\n         * Overwritten by implementations.\n         * @param {?} templateNodeIndex\n         * @return {?}\n         */\n        AppView.prototype.createEmbeddedViewInternal = function (templateNodeIndex) { return null; };\n        /**\n         * @param {?} lastRootNode\n         * @param {?} allNodes\n         * @param {?} disposables\n         * @return {?}\n         */\n        AppView.prototype.init = function (lastRootNode, allNodes, disposables) {\n            this.lastRootNode = lastRootNode;\n            this.allNodes = allNodes;\n            this.disposables = disposables;\n            if (this.type === ViewType.COMPONENT) {\n                this.dirtyParentQueriesInternal();\n            }\n        };\n        /**\n         * @param {?} token\n         * @param {?} nodeIndex\n         * @param {?=} notFoundValue\n         * @return {?}\n         */\n        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            var /** @type {?} */ result = UNDEFINED$1;\n            var /** @type {?} */ view = this;\n            while (result === UNDEFINED$1) {\n                if (isPresent(nodeIndex)) {\n                    result = view.injectorGetInternal(token, nodeIndex, UNDEFINED$1);\n                }\n                if (result === UNDEFINED$1 && view.type === ViewType.HOST) {\n                    result = view._hostInjector.get(token, notFoundValue);\n                }\n                nodeIndex = view.parentIndex;\n                view = view.parentView;\n            }\n            return result;\n        };\n        /**\n         * Overwritten by implementations\n         * @param {?} token\n         * @param {?} nodeIndex\n         * @param {?} notFoundResult\n         * @return {?}\n         */\n        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n            return notFoundResult;\n        };\n        /**\n         * @param {?} nodeIndex\n         * @return {?}\n         */\n        AppView.prototype.injector = function (nodeIndex) { return new ElementInjector(this, nodeIndex); };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.detachAndDestroy = function () {\n            if (this.viewContainer) {\n                this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n            }\n            else if (this.appRef) {\n                this.appRef.detachView(this.ref);\n            }\n            else if (this._hasExternalHostElement) {\n                this.detach();\n            }\n            this.destroy();\n        };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.destroy = function () {\n            var _this = this;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                return;\n            }\n            var /** @type {?} */ hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n            if (this.disposables) {\n                for (var /** @type {?} */ i = 0; i < this.disposables.length; i++) {\n                    this.disposables[i]();\n                }\n            }\n            this.destroyInternal();\n            this.dirtyParentQueriesInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n            }\n            else {\n                this.renderer.destroyView(hostElement, this.allNodes);\n            }\n            this.cdMode = ChangeDetectorStatus.Destroyed;\n        };\n        /**\n         * Overwritten by implementations\n         * @return {?}\n         */\n        AppView.prototype.destroyInternal = function () { };\n        /**\n         * Overwritten by implementations\n         * @return {?}\n         */\n        AppView.prototype.detachInternal = function () { };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.detach = function () {\n            var _this = this;\n            this.detachInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this._renderDetach(); });\n            }\n            else {\n                this._renderDetach();\n            }\n            if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer &&\n                this.declaredViewContainer.projectedViews) {\n                var /** @type {?} */ projectedViews = this.declaredViewContainer.projectedViews;\n                var /** @type {?} */ index = projectedViews.indexOf(this);\n                // perf: pop is faster than splice!\n                if (index >= projectedViews.length - 1) {\n                    projectedViews.pop();\n                }\n                else {\n                    projectedViews.splice(index, 1);\n                }\n            }\n            this.appRef = null;\n            this.viewContainer = null;\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @return {?}\n         */\n        AppView.prototype._renderDetach = function () {\n            if (this._directRenderer) {\n                this.visitRootNodesInternal(this._directRenderer.remove, null);\n            }\n            else {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n        };\n        /**\n         * @param {?} appRef\n         * @return {?}\n         */\n        AppView.prototype.attachToAppRef = function (appRef) {\n            if (this.viewContainer) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this.appRef = appRef;\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @param {?} viewContainer\n         * @param {?} prevView\n         * @return {?}\n         */\n        AppView.prototype.attachAfter = function (viewContainer, prevView) {\n            if (this.appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._renderAttach(viewContainer, prevView);\n            this.viewContainer = viewContainer;\n            if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n                if (!this.declaredViewContainer.projectedViews) {\n                    this.declaredViewContainer.projectedViews = [];\n                }\n                this.declaredViewContainer.projectedViews.push(this);\n            }\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @param {?} viewContainer\n         * @param {?} prevView\n         * @return {?}\n         */\n        AppView.prototype.moveAfter = function (viewContainer, prevView) {\n            this._renderAttach(viewContainer, prevView);\n            this.dirtyParentQueriesInternal();\n        };\n        /**\n         * @param {?} viewContainer\n         * @param {?} prevView\n         * @return {?}\n         */\n        AppView.prototype._renderAttach = function (viewContainer, prevView) {\n            var /** @type {?} */ prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n            if (this._directRenderer) {\n                var /** @type {?} */ nextSibling = this._directRenderer.nextSibling(prevNode);\n                if (nextSibling) {\n                    this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n                }\n                else {\n                    var /** @type {?} */ parentElement = this._directRenderer.parentElement(prevNode);\n                    if (parentElement) {\n                        this.visitRootNodesInternal(this._directRenderer.appendChild, parentElement);\n                    }\n                }\n            }\n            else {\n                this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n            }\n        };\n        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ nodes = [];\n                this.visitRootNodesInternal(addToArray, nodes);\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} parentElement\n         * @param {?} ngContentIndex\n         * @return {?}\n         */\n        AppView.prototype.projectNodes = function (parentElement, ngContentIndex) {\n            if (this._directRenderer) {\n                this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n            }\n            else {\n                var /** @type {?} */ nodes = [];\n                this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n                this.renderer.projectNodes(parentElement, nodes);\n            }\n        };\n        /**\n         * @param {?} ngContentIndex\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        AppView.prototype.visitProjectedNodes = function (ngContentIndex, cb, c) {\n            switch (this.type) {\n                case ViewType.EMBEDDED:\n                    this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n                    break;\n                case ViewType.COMPONENT:\n                    if (this.parentView.type === ViewType.HOST) {\n                        var /** @type {?} */ nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n                        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n                            cb(nodes[i], c);\n                        }\n                    }\n                    else {\n                        this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n                    }\n                    break;\n            }\n        };\n        /**\n         * Overwritten by implementations\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        AppView.prototype.visitRootNodesInternal = function (cb, c) { };\n        /**\n         * Overwritten by implementations\n         * @param {?} nodeIndex\n         * @param {?} ngContentIndex\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        AppView.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, c) { };\n        /**\n         * Overwritten by implementations\n         * @return {?}\n         */\n        AppView.prototype.dirtyParentQueriesInternal = function () { };\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        AppView.prototype.internalDetectChanges = function (throwOnChange) {\n            if (this.cdMode !== ChangeDetectorStatus.Detached) {\n                this.detectChanges(throwOnChange);\n            }\n        };\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        AppView.prototype.detectChanges = function (throwOnChange) {\n            var /** @type {?} */ s = _scope_check(this.clazz);\n            if (this.cdMode === ChangeDetectorStatus.Checked ||\n                this.cdMode === ChangeDetectorStatus.Errored)\n                return;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                this.throwDestroyedError('detectChanges');\n            }\n            this.detectChangesInternal(throwOnChange);\n            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n                this.cdMode = ChangeDetectorStatus.Checked;\n            this.numberOfChecks++;\n            wtfLeave(s);\n        };\n        /**\n         * Overwritten by implementations\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        AppView.prototype.detectChangesInternal = function (throwOnChange) { };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n        /**\n         * @return {?}\n         */\n        AppView.prototype.markPathToRootAsCheckOnce = function () {\n            var /** @type {?} */ c = this;\n            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n                if (c.cdMode === ChangeDetectorStatus.Checked) {\n                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n                }\n                if (c.type === ViewType.COMPONENT) {\n                    c = c.parentView;\n                }\n                else {\n                    c = c.viewContainer ? c.viewContainer.parentView : null;\n                }\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        AppView.prototype.eventHandler = function (cb) {\n            return cb;\n        };\n        /**\n         * @param {?} details\n         * @return {?}\n         */\n        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n        return AppView;\n    }());\n    var DebugAppView = (function (_super) {\n        __extends$14(DebugAppView, _super);\n        /**\n         * @param {?} clazz\n         * @param {?} componentType\n         * @param {?} type\n         * @param {?} viewUtils\n         * @param {?} parentView\n         * @param {?} parentIndex\n         * @param {?} parentNode\n         * @param {?} cdMode\n         * @param {?} staticNodeDebugInfos\n         * @param {?=} declaredViewContainer\n         */\n        function DebugAppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, staticNodeDebugInfos, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            _super.call(this, clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, declaredViewContainer);\n            this.staticNodeDebugInfos = staticNodeDebugInfos;\n            this._currentDebugContext = null;\n        }\n        /**\n         * @param {?} context\n         * @return {?}\n         */\n        DebugAppView.prototype.create = function (context) {\n            this._resetDebug();\n            try {\n                return _super.prototype.create.call(this, context);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} rootSelectorOrNode\n         * @param {?} injector\n         * @param {?=} projectableNodes\n         * @return {?}\n         */\n        DebugAppView.prototype.createHostView = function (rootSelectorOrNode, injector, projectableNodes) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            this._resetDebug();\n            try {\n                return _super.prototype.createHostView.call(this, rootSelectorOrNode, injector, projectableNodes);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} token\n         * @param {?} nodeIndex\n         * @param {?=} notFoundResult\n         * @return {?}\n         */\n        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            this._resetDebug();\n            try {\n                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DebugAppView.prototype.detach = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.detach.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DebugAppView.prototype.destroy = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.destroy.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n            this._resetDebug();\n            try {\n                _super.prototype.detectChanges.call(this, throwOnChange);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} rowNum\n         * @param {?} colNum\n         * @return {?}\n         */\n        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n        };\n        /**\n         * @param {?} e\n         * @return {?}\n         */\n        DebugAppView.prototype._rethrowWithContext = function (e) {\n            if (!(e instanceof ViewWrappedError)) {\n                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n                    this.cdMode = ChangeDetectorStatus.Errored;\n                }\n                if (isPresent(this._currentDebugContext)) {\n                    throw new ViewWrappedError(e, this._currentDebugContext);\n                }\n            }\n        };\n        /**\n         * @param {?} cb\n         * @return {?}\n         */\n        DebugAppView.prototype.eventHandler = function (cb) {\n            var _this = this;\n            var /** @type {?} */ superHandler = _super.prototype.eventHandler.call(this, cb);\n            return function (eventName, event) {\n                _this._resetDebug();\n                try {\n                    return superHandler.call(_this, eventName, event);\n                }\n                catch (e) {\n                    _this._rethrowWithContext(e);\n                    throw e;\n                }\n            };\n        };\n        return DebugAppView;\n    }(AppView));\n\n    /**\n     * A ViewContainer is created for elements that have a ViewContainerRef\n     * to keep track of the nested views.\n     */\n    var ViewContainer = (function () {\n        /**\n         * @param {?} index\n         * @param {?} parentIndex\n         * @param {?} parentView\n         * @param {?} nativeElement\n         */\n        function ViewContainer(index, parentIndex, parentView, nativeElement) {\n            this.index = index;\n            this.parentIndex = parentIndex;\n            this.parentView = parentView;\n            this.nativeElement = nativeElement;\n        }\n        Object.defineProperty(ViewContainer.prototype, \"elementRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ElementRef(this.nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"vcRef\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return new ViewContainerRef_(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"parentInjector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.parentView.injector(this.parentIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"injector\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.parentView.injector(this.index); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} throwOnChange\n         * @return {?}\n         */\n        ViewContainer.prototype.detectChangesInNestedViews = function (throwOnChange) {\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].detectChanges(throwOnChange);\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        ViewContainer.prototype.destroyNestedViews = function () {\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].destroy();\n                }\n            }\n        };\n        /**\n         * @param {?} cb\n         * @param {?} c\n         * @return {?}\n         */\n        ViewContainer.prototype.visitNestedViewRootNodes = function (cb, c) {\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].visitRootNodesInternal(cb, c);\n                }\n            }\n        };\n        /**\n         * @param {?} nestedViewClass\n         * @param {?} callback\n         * @return {?}\n         */\n        ViewContainer.prototype.mapNestedViews = function (nestedViewClass, callback) {\n            var /** @type {?} */ result = [];\n            if (this.nestedViews) {\n                for (var /** @type {?} */ i = 0; i < this.nestedViews.length; i++) {\n                    var /** @type {?} */ nestedView = this.nestedViews[i];\n                    if (nestedView.clazz === nestedViewClass) {\n                        result.push(callback(nestedView));\n                    }\n                }\n            }\n            if (this.projectedViews) {\n                for (var /** @type {?} */ i = 0; i < this.projectedViews.length; i++) {\n                    var /** @type {?} */ projectedView = this.projectedViews[i];\n                    if (projectedView.clazz === nestedViewClass) {\n                        result.push(callback(projectedView));\n                    }\n                }\n            }\n            return result;\n        };\n        /**\n         * @param {?} view\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        ViewContainer.prototype.moveView = function (view, currentIndex) {\n            var /** @type {?} */ previousIndex = this.nestedViews.indexOf(view);\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var /** @type {?} */ nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            nestedViews.splice(previousIndex, 1);\n            nestedViews.splice(currentIndex, 0, view);\n            var /** @type {?} */ prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n            view.moveAfter(this, prevView);\n        };\n        /**\n         * @param {?} view\n         * @param {?} viewIndex\n         * @return {?}\n         */\n        ViewContainer.prototype.attachView = function (view, viewIndex) {\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var /** @type {?} */ nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            // perf: array.push is faster than array.splice!\n            if (viewIndex >= nestedViews.length) {\n                nestedViews.push(view);\n            }\n            else {\n                nestedViews.splice(viewIndex, 0, view);\n            }\n            var /** @type {?} */ prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n            view.attachAfter(this, prevView);\n        };\n        /**\n         * @param {?} viewIndex\n         * @return {?}\n         */\n        ViewContainer.prototype.detachView = function (viewIndex) {\n            var /** @type {?} */ view = this.nestedViews[viewIndex];\n            // perf: array.pop is faster than array.splice!\n            if (viewIndex >= this.nestedViews.length - 1) {\n                this.nestedViews.pop();\n            }\n            else {\n                this.nestedViews.splice(viewIndex, 1);\n            }\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            view.detach();\n            return view;\n        };\n        return ViewContainer;\n    }());\n\n    var /** @type {?} */ __core_private__ = {\n        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n        ChangeDetectorStatus: ChangeDetectorStatus,\n        constructDependencies: constructDependencies,\n        LifecycleHooks: LifecycleHooks,\n        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n        ReflectorReader: ReflectorReader,\n        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n        ComponentRef_: ComponentRef_,\n        ViewContainer: ViewContainer,\n        AppView: AppView,\n        DebugAppView: DebugAppView,\n        NgModuleInjector: NgModuleInjector,\n        registerModuleFactory: registerModuleFactory,\n        ViewType: ViewType,\n        view_utils: view_utils,\n        ViewMetadata: ViewMetadata,\n        DebugContext: DebugContext,\n        StaticNodeDebugInfo: StaticNodeDebugInfo,\n        devModeEqual: devModeEqual,\n        UNINITIALIZED: UNINITIALIZED,\n        ValueUnwrapper: ValueUnwrapper,\n        RenderDebugInfo: RenderDebugInfo,\n        TemplateRef_: TemplateRef_,\n        ReflectionCapabilities: ReflectionCapabilities,\n        makeDecorator: makeDecorator,\n        DebugDomRootRenderer: DebugDomRootRenderer,\n        Console: Console,\n        reflector: reflector,\n        Reflector: Reflector,\n        NoOpAnimationPlayer: NoOpAnimationPlayer,\n        AnimationPlayer: AnimationPlayer,\n        AnimationSequencePlayer: AnimationSequencePlayer,\n        AnimationGroupPlayer: AnimationGroupPlayer,\n        AnimationKeyframe: AnimationKeyframe,\n        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n        balanceAnimationKeyframes: balanceAnimationKeyframes,\n        flattenStyles: flattenStyles,\n        clearStyles: clearStyles,\n        renderStyles: renderStyles,\n        collectAndResolveStyles: collectAndResolveStyles,\n        APP_ID_RANDOM_PROVIDER: APP_ID_RANDOM_PROVIDER,\n        AnimationStyles: AnimationStyles,\n        ANY_STATE: ANY_STATE,\n        DEFAULT_STATE: DEFAULT_STATE,\n        EMPTY_STATE: EMPTY_STATE,\n        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n        ComponentStillLoadingError: ComponentStillLoadingError,\n        isPromise: isPromise,\n        isObservable: isObservable,\n        AnimationTransition: AnimationTransition\n    };\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n    exports.AnimationPlayer = AnimationPlayer;\n    exports.AnimationStyles = AnimationStyles;\n    exports.AnimationKeyframe = AnimationKeyframe;\n    exports.Sanitizer = Sanitizer;\n    exports.SecurityContext = SecurityContext;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.AfterContentChecked = AfterContentChecked;\n    exports.AfterContentInit = AfterContentInit;\n    exports.AfterViewChecked = AfterViewChecked;\n    exports.AfterViewInit = AfterViewInit;\n    exports.DoCheck = DoCheck;\n    exports.OnChanges = OnChanges;\n    exports.OnDestroy = OnDestroy;\n    exports.OnInit = OnInit;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.ViewEncapsulation = ViewEncapsulation;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.Class = Class;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.OpaqueToken = OpaqueToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Injectable = Injectable;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectionStrategy = ChangeDetectionStrategy;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.CollectionChangeRecord = CollectionChangeRecord;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.__core_private__ = __core_private__;\n    exports.AUTO_STYLE = AUTO_STYLE;\n    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n    exports.AnimationStateMetadata = AnimationStateMetadata;\n    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n    exports.AnimationMetadata = AnimationMetadata;\n    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n    exports.animate = animate;\n    exports.group = group;\n    exports.sequence = sequence;\n    exports.style = style;\n    exports.state = state;\n    exports.keyframes = keyframes;\n    exports.transition = transition;\n    exports.trigger = trigger;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/core/bundles/core.umd.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 3\n// module chunks = 0","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subject.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 12\n// module chunks = 0","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 13\n// module chunks = 0","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ObjectUnsubscribedError.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/SubjectSubscription.js\n// module id = 19\n// module chunks = 0","/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n    /**\n     * This class should not be used directly by an application developer. Instead, use\n     * {\\@link Location}.\n     *\n     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n     * agnostic.\n     * This means that we can have different implementation of `PlatformLocation` for the different\n     * platforms\n     * that angular supports. For example, the default `PlatformLocation` is {\\@link\n     * BrowserPlatformLocation},\n     * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n     *\n     * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n     * when\n     * they need to interact with the DOM apis like pushState, popState, etc...\n     *\n     * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n     * by\n     * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n     * Router} /\n     * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n     * class\n     * they are all platform independent.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var PlatformLocation = (function () {\n        function PlatformLocation() {\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.getBaseHrefFromDOM = function () { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        PlatformLocation.prototype.onPopState = function (fn) { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        PlatformLocation.prototype.onHashChange = function (fn) { };\n        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        PlatformLocation.prototype.replaceState = function (state, title, url) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        PlatformLocation.prototype.pushState = function (state, title, url) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.forward = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        PlatformLocation.prototype.back = function () { };\n        return PlatformLocation;\n    }());\n    /**\n     * @whatItDoes indicates when a location is initialized\n     * @experimental\n     */\n    var /** @type {?} */ LOCATION_INITIALIZED = new _angular_core.OpaqueToken('Location Initialized');\n\n    /**\n     * `LocationStrategy` is responsible for representing and reading route state\n     * from the browser's URL. Angular provides two strategies:\n     * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n     *\n     * This is used under the hood of the {\\@link Location} service.\n     *\n     * Applications should use the {\\@link Router} or {\\@link Location} services to\n     * interact with application route state.\n     *\n     * For instance, {\\@link HashLocationStrategy} produces URLs like\n     * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n     * `http://example.com/foo` as an equivalent URL.\n     *\n     * See these two classes for more.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var LocationStrategy = (function () {\n        function LocationStrategy() {\n        }\n        /**\n         * @abstract\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        LocationStrategy.prototype.path = function (includeHash) { };\n        /**\n         * @abstract\n         * @param {?} internal\n         * @return {?}\n         */\n        LocationStrategy.prototype.prepareExternalUrl = function (internal) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        LocationStrategy.prototype.pushState = function (state, title, url, queryParams) { };\n        /**\n         * @abstract\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        LocationStrategy.prototype.replaceState = function (state, title, url, queryParams) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.forward = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.back = function () { };\n        /**\n         * @abstract\n         * @param {?} fn\n         * @return {?}\n         */\n        LocationStrategy.prototype.onPopState = function (fn) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        LocationStrategy.prototype.getBaseHref = function () { };\n        return LocationStrategy;\n    }());\n    /**\n     * The `APP_BASE_HREF` token represents the base href to be used with the\n     * {@link PathLocationStrategy}.\n     *\n     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n     * representing the URL prefix that should be preserved when generating and recognizing\n     * URLs.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {Component, NgModule} from '@angular/core';\n     * import {APP_BASE_HREF} from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var /** @type {?} */ APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = (self);\n        }\n        else {\n            globalScope = (global);\n        }\n    }\n    else {\n        globalScope = (window);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var /** @type {?} */ _global = globalScope;\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var /** @type {?} */ res = token.toString();\n        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var /** @type {?} */ result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        return NumberWrapper;\n    }());\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    var /** @type {?} */ _symbolIterator = null;\n    /**\n     * @return {?}\n     */\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (((globalScope)).Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                    var /** @type {?} */ key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        ((Map)).prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n     * \\@description\n     * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n     * to the URL's path or the URL's hash segment.\n     *\n     * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n     * `Location` only if you need to interact with or create normalized URLs outside of\n     * routing.\n     *\n     * `Location` is responsible for normalizing the URL against the application's base href.\n     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n     * trailing slash:\n     * - `/my/app/user/123` is normalized\n     * - `my/app/user/123` **is not** normalized\n     * - `/my/app/user/123/` **is not** normalized\n     *\n     * ### Example\n     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n     * \\@stable\n     */\n    var Location = (function () {\n        /**\n         * @param {?} platformStrategy\n         */\n        function Location(platformStrategy) {\n            var _this = this;\n            /** @internal */\n            this._subject = new _angular_core.EventEmitter();\n            this._platformStrategy = platformStrategy;\n            var browserBaseHref = this._platformStrategy.getBaseHref();\n            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n            this._platformStrategy.onPopState(function (ev) {\n                _this._subject.emit({\n                    'url': _this.path(true),\n                    'pop': true,\n                    'type': ev.type,\n                });\n            });\n        }\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        Location.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            return this.normalize(this._platformStrategy.path(includeHash));\n        };\n        /**\n         * Normalizes the given path and compares to the current normalized path.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n            if (query === void 0) { query = ''; }\n            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n        };\n        /**\n         * Given a string representing a URL, returns the normalized URL path without leading or\n         * trailing slashes.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.prototype.normalize = function (url) {\n            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n        };\n        /**\n         * Given a string representing a URL, returns the platform-specific external URL path.\n         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.prototype.prepareExternalUrl = function (url) {\n            if (url && url[0] !== '/') {\n                url = '/' + url;\n            }\n            return this._platformStrategy.prepareExternalUrl(url);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n         * new item onto the platform's history.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.go = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.pushState(null, '', path, query);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and replaces\n         * the top item on the platform's history stack.\n         * @param {?} path\n         * @param {?=} query\n         * @return {?}\n         */\n        Location.prototype.replaceState = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.replaceState(null, '', path, query);\n        };\n        /**\n         * Navigates forward in the platform's history.\n         * @return {?}\n         */\n        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n        /**\n         * Navigates back in the platform's history.\n         * @return {?}\n         */\n        Location.prototype.back = function () { this._platformStrategy.back(); };\n        /**\n         * Subscribe to the platform's `popState` events.\n         * @param {?} onNext\n         * @param {?=} onThrow\n         * @param {?=} onReturn\n         * @return {?}\n         */\n        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n            if (onThrow === void 0) { onThrow = null; }\n            if (onReturn === void 0) { onReturn = null; }\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n        };\n        /**\n         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n         * is.\n         * @param {?} params\n         * @return {?}\n         */\n        Location.normalizeQueryParams = function (params) {\n            return params && params[0] !== '?' ? '?' + params : params;\n        };\n        /**\n         * Given 2 parts of a url, join them with a slash if needed.\n         * @param {?} start\n         * @param {?} end\n         * @return {?}\n         */\n        Location.joinWithSlash = function (start, end) {\n            if (start.length == 0) {\n                return end;\n            }\n            if (end.length == 0) {\n                return start;\n            }\n            var /** @type {?} */ slashes = 0;\n            if (start.endsWith('/')) {\n                slashes++;\n            }\n            if (end.startsWith('/')) {\n                slashes++;\n            }\n            if (slashes == 2) {\n                return start + end.substring(1);\n            }\n            if (slashes == 1) {\n                return start + end;\n            }\n            return start + '/' + end;\n        };\n        /**\n         * If url has a trailing slash, remove it, otherwise return url as is.\n         * @param {?} url\n         * @return {?}\n         */\n        Location.stripTrailingSlash = function (url) { return url.replace(/\\/$/, ''); };\n        Location.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Location.ctorParameters = function () { return [\n            { type: LocationStrategy, },\n        ]; };\n        return Location;\n    }());\n    /**\n     * @param {?} baseHref\n     * @param {?} url\n     * @return {?}\n     */\n    function _stripBaseHref(baseHref, url) {\n        return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function _stripIndexHtml(url) {\n        return url.replace(/\\/index.html$/, '');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@whatItDoes Use URL hash for storing application location data.\n     * \\@description\n     * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n     * {\\@link Location} service to represent its state in the\n     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n     * of the browser's URL.\n     *\n     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n     * `example.com#/foo`.\n     *\n     * ### Example\n     *\n     * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n     *\n     * \\@stable\n     */\n    var HashLocationStrategy = (function (_super) {\n        __extends(HashLocationStrategy, _super);\n        /**\n         * @param {?} _platformLocation\n         * @param {?=} _baseHref\n         */\n        function HashLocationStrategy(_platformLocation, _baseHref) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            this._baseHref = '';\n            if (isPresent(_baseHref)) {\n                this._baseHref = _baseHref;\n            }\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            // the hash value is always prefixed with a `#`\n            // and if it is empty then it will stay empty\n            var /** @type {?} */ path = this._platformLocation.hash;\n            if (!isPresent(path))\n                path = '#';\n            return path.length > 0 ? path.substring(1) : path;\n        };\n        /**\n         * @param {?} internal\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            var /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n            return url.length > 0 ? ('#' + url) : url;\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} path\n         * @param {?} queryParams\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.pushState(state, title, url);\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} path\n         * @param {?} queryParams\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n            var /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.replaceState(state, title, url);\n        };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        /**\n         * @return {?}\n         */\n        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        HashLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HashLocationStrategy.ctorParameters = function () { return [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ]; };\n        return HashLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@whatItDoes Use URL for storing application location data.\n     * \\@description\n     * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n     * {\\@link Location} service to represent its state in the\n     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n     * browser's URL.\n     *\n     * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n     * or add a base element to the document. This URL prefix that will be preserved\n     * when generating and recognizing URLs.\n     *\n     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * ### Example\n     *\n     * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n     *\n     * \\@stable\n     */\n    var PathLocationStrategy = (function (_super) {\n        __extends$1(PathLocationStrategy, _super);\n        /**\n         * @param {?} _platformLocation\n         * @param {?=} href\n         */\n        function PathLocationStrategy(_platformLocation, href) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            if (isBlank(href)) {\n                href = this._platformLocation.getBaseHrefFromDOM();\n            }\n            if (isBlank(href)) {\n                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n            }\n            this._baseHref = href;\n        }\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        /**\n         * @param {?} internal\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            return Location.joinWithSlash(this._baseHref, internal);\n        };\n        /**\n         * @param {?=} includeHash\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            var /** @type {?} */ pathname = this._platformLocation.pathname +\n                Location.normalizeQueryParams(this._platformLocation.search);\n            var /** @type {?} */ hash = this._platformLocation.hash;\n            return hash && includeHash ? \"\" + pathname + hash : pathname;\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.pushState(state, title, externalUrl);\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @param {?} queryParams\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n            var /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.replaceState(state, title, externalUrl);\n        };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        /**\n         * @return {?}\n         */\n        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        PathLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        PathLocationStrategy.ctorParameters = function () { return [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ]; };\n        return PathLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@experimental\n     * @abstract\n     */\n    var NgLocalization = (function () {\n        function NgLocalization() {\n        }\n        /**\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        NgLocalization.prototype.getPluralCategory = function (value) { };\n        return NgLocalization;\n    }());\n    /**\n     * Returns the plural category for a given value.\n     * - \"=value\" when the case exists,\n     * - the plural category otherwise\n     *\n     * \\@internal\n     * @param {?} value\n     * @param {?} cases\n     * @param {?} ngLocalization\n     * @return {?}\n     */\n    function getPluralCategory(value, cases, ngLocalization) {\n        var /** @type {?} */ key = \"=\" + value;\n        if (cases.indexOf(key) > -1) {\n            return key;\n        }\n        key = ngLocalization.getPluralCategory(value);\n        if (cases.indexOf(key) > -1) {\n            return key;\n        }\n        if (cases.indexOf('other') > -1) {\n            return 'other';\n        }\n        throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n    }\n    /**\n     * Returns the plural case based on the locale\n     *\n     * \\@experimental\n     */\n    var NgLocaleLocalization = (function (_super) {\n        __extends$2(NgLocaleLocalization, _super);\n        /**\n         * @param {?} _locale\n         */\n        function NgLocaleLocalization(_locale) {\n            _super.call(this);\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n            var /** @type {?} */ plural = getPluralCase(this._locale, value);\n            switch (plural) {\n                case Plural.Zero:\n                    return 'zero';\n                case Plural.One:\n                    return 'one';\n                case Plural.Two:\n                    return 'two';\n                case Plural.Few:\n                    return 'few';\n                case Plural.Many:\n                    return 'many';\n                default:\n                    return 'other';\n            }\n        };\n        NgLocaleLocalization.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        NgLocaleLocalization.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return NgLocaleLocalization;\n    }(NgLocalization));\n    var Plural = {};\n    Plural.Zero = 0;\n    Plural.One = 1;\n    Plural.Two = 2;\n    Plural.Few = 3;\n    Plural.Many = 4;\n    Plural.Other = 5;\n    Plural[Plural.Zero] = \"Zero\";\n    Plural[Plural.One] = \"One\";\n    Plural[Plural.Two] = \"Two\";\n    Plural[Plural.Few] = \"Few\";\n    Plural[Plural.Many] = \"Many\";\n    Plural[Plural.Other] = \"Other\";\n    /**\n     * Returns the plural case based on the locale\n     *\n     * \\@experimental\n     * @param {?} locale\n     * @param {?} nLike\n     * @return {?}\n     */\n    function getPluralCase(locale, nLike) {\n        // TODO(vicb): lazy compute\n        if (typeof nLike === 'string') {\n            nLike = parseInt(/** @type {?} */ (nLike), 10);\n        }\n        var /** @type {?} */ n = (nLike);\n        var /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var /** @type {?} */ i = Math.floor(Math.abs(n));\n        var /** @type {?} */ v = nDecimal.length;\n        var /** @type {?} */ f = parseInt(nDecimal, 10);\n        var /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'agq':\n            case 'bas':\n            case 'cu':\n            case 'dav':\n            case 'dje':\n            case 'dua':\n            case 'dyo':\n            case 'ebu':\n            case 'ewo':\n            case 'guz':\n            case 'kam':\n            case 'khq':\n            case 'ki':\n            case 'kln':\n            case 'kok':\n            case 'ksf':\n            case 'lrc':\n            case 'lu':\n            case 'luo':\n            case 'luy':\n            case 'mer':\n            case 'mfe':\n            case 'mgh':\n            case 'mua':\n            case 'mzn':\n            case 'nmg':\n            case 'nus':\n            case 'qu':\n            case 'rn':\n            case 'rw':\n            case 'sbp':\n            case 'twq':\n            case 'vai':\n            case 'yav':\n            case 'yue':\n            case 'zgh':\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            default:\n                return Plural.Other;\n        }\n    }\n\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n     *\n     * \\@howToUse\n     * ```\n     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n     * - `string` - the CSS classes listed in the string (space delimited) are added,\n     * - `Array` - the CSS classes declared as Array elements are added,\n     * - `Object` - keys are CSS classes that get added when the expression given in the value\n     *              evaluates to a truthy value, otherwise they are removed.\n     *\n     * \\@stable\n     */\n    var NgClass = (function () {\n        /**\n         * @param {?} _iterableDiffers\n         * @param {?} _keyValueDiffers\n         * @param {?} _ngEl\n         * @param {?} _renderer\n         */\n        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n            this._iterableDiffers = _iterableDiffers;\n            this._keyValueDiffers = _keyValueDiffers;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n            this._initialClasses = [];\n        }\n        Object.defineProperty(NgClass.prototype, \"klass\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._applyInitialClasses(true);\n                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n                this._applyInitialClasses(false);\n                this._applyClasses(this._rawClass, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._cleanupClasses(this._rawClass);\n                this._iterableDiffer = null;\n                this._keyValueDiffer = null;\n                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n                if (this._rawClass) {\n                    if (isListLikeIterable(this._rawClass)) {\n                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n                    }\n                    else {\n                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgClass.prototype.ngDoCheck = function () {\n            if (this._iterableDiffer) {\n                var /** @type {?} */ changes = this._iterableDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyIterableChanges(changes);\n                }\n            }\n            else if (this._keyValueDiffer) {\n                var /** @type {?} */ changes = this._keyValueDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyKeyValueChanges(changes);\n                }\n            }\n        };\n        /**\n         * @param {?} rawClassVal\n         * @return {?}\n         */\n        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n            this._applyClasses(rawClassVal, true);\n            this._applyInitialClasses(false);\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgClass.prototype._applyKeyValueChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachRemovedItem(function (record) {\n                if (record.previousValue) {\n                    _this._toggleClass(record.key, false);\n                }\n            });\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgClass.prototype._applyIterableChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) {\n                if (typeof record.item === 'string') {\n                    _this._toggleClass(record.item, true);\n                }\n                else {\n                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n                }\n            });\n            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n        };\n        /**\n         * @param {?} isCleanup\n         * @return {?}\n         */\n        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n            var _this = this;\n            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n        };\n        /**\n         * @param {?} rawClassVal\n         * @param {?} isCleanup\n         * @return {?}\n         */\n        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n            var _this = this;\n            if (rawClassVal) {\n                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                    ((rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n                }\n                else {\n                    Object.keys(rawClassVal).forEach(function (klass) {\n                        if (rawClassVal[klass] != null)\n                            _this._toggleClass(klass, !isCleanup);\n                    });\n                }\n            }\n        };\n        /**\n         * @param {?} klass\n         * @param {?} enabled\n         * @return {?}\n         */\n        NgClass.prototype._toggleClass = function (klass, enabled) {\n            var _this = this;\n            klass = klass.trim();\n            if (klass) {\n                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n            }\n        };\n        NgClass.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n        ];\n        /** @nocollapse */\n        NgClass.ctorParameters = function () { return [\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ]; };\n        NgClass.propDecorators = {\n            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n            'ngClass': [{ type: _angular_core.Input },],\n        };\n        return NgClass;\n    }());\n\n    var NgForRow = (function () {\n        /**\n         * @param {?} $implicit\n         * @param {?} index\n         * @param {?} count\n         */\n        function NgForRow($implicit, index, count) {\n            this.$implicit = $implicit;\n            this.index = index;\n            this.count = count;\n        }\n        Object.defineProperty(NgForRow.prototype, \"first\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"last\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index === this.count - 1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"even\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.index % 2 === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"odd\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return !this.even; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgForRow;\n    }());\n    /**\n     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n     * each instantiated template inherits from the outer context with the given loop variable set\n     * to the current item from the iterable.\n     *\n     * ### Local Variables\n     *\n     * `NgFor` provides several exported values that can be aliased to local variables:\n     *\n     * * `index` will be set to the current loop iteration for each template context.\n     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n     *   iteration.\n     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n     *   iteration.\n     * * `even` will be set to a boolean value indicating whether this item has an even index.\n     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n     *\n     * ### Change Propagation\n     *\n     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n     *\n     * * When an item is added, a new instance of the template is added to the DOM.\n     * * When an item is removed, its template instance is removed from the DOM.\n     * * When items are reordered, their respective templates are reordered in the DOM.\n     * * Otherwise, the DOM element for that item will remain the same.\n     *\n     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n     * those changes in the DOM. This has important implications for animations and any stateful\n     * controls\n     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n     * as user input.\n     *\n     * It is possible for the identities of elements in the iterator to change while the data does not.\n     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n     * elements were deleted and all new elements inserted). This is an expensive operation and should\n     * be avoided if possible.\n     *\n     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n     * `trackBy` takes a function which has two arguments: `index` and `item`.\n     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n     *\n     * ### Syntax\n     *\n     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     *\n     * With `<template>` element:\n     *\n     * ```\n     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n     *   <li>...</li>\n     * </template>\n     * ```\n     *\n     * ### Example\n     *\n     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n     * example.\n     *\n     * \\@stable\n     */\n    var NgFor = (function () {\n        /**\n         * @param {?} _viewContainer\n         * @param {?} _template\n         * @param {?} _differs\n         * @param {?} _cdr\n         */\n        function NgFor(_viewContainer, _template, _differs, _cdr) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._differs = _differs;\n            this._cdr = _cdr;\n            this._differ = null;\n        }\n        Object.defineProperty(NgFor.prototype, \"ngForTrackBy\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._trackByFn; },\n            /**\n             * @param {?} fn\n             * @return {?}\n             */\n            set: function (fn) {\n                if (_angular_core.isDevMode() && fn != null && typeof fn !== 'function') {\n                    // TODO(vicb): use a log service once there is a public one available\n                    if ((console) && (console.warn)) {\n                        console.warn((\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \") +\n                            \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                    }\n                }\n                this._trackByFn = fn;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (value) {\n                    this._template = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgFor.prototype.ngOnChanges = function (changes) {\n            if ('ngForOf' in changes) {\n                // React on ngForOf changes only once all inputs have been initialized\n                var /** @type {?} */ value = changes['ngForOf'].currentValue;\n                if (!this._differ && value) {\n                    try {\n                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n                    }\n                    catch (e) {\n                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                    }\n                }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgFor.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n                if (changes)\n                    this._applyChanges(changes);\n            }\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgFor.prototype._applyChanges = function (changes) {\n            var _this = this;\n            var /** @type {?} */ insertTuples = [];\n            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n                if (item.previousIndex == null) {\n                    var /** @type {?} */ view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n                    var /** @type {?} */ tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n                else if (currentIndex == null) {\n                    _this._viewContainer.remove(adjustedPreviousIndex);\n                }\n                else {\n                    var /** @type {?} */ view = _this._viewContainer.get(adjustedPreviousIndex);\n                    _this._viewContainer.move(view, currentIndex);\n                    var /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n                    insertTuples.push(tuple);\n                }\n            });\n            for (var /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n            }\n            for (var /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n                var /** @type {?} */ viewRef = (this._viewContainer.get(i));\n                viewRef.context.index = i;\n                viewRef.context.count = ilen;\n            }\n            changes.forEachIdentityChange(function (record) {\n                var /** @type {?} */ viewRef = (_this._viewContainer.get(record.currentIndex));\n                viewRef.context.$implicit = record.item;\n            });\n        };\n        /**\n         * @param {?} view\n         * @param {?} record\n         * @return {?}\n         */\n        NgFor.prototype._perViewChange = function (view, record) {\n            view.context.$implicit = record.item;\n        };\n        NgFor.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n        ];\n        /** @nocollapse */\n        NgFor.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.ChangeDetectorRef, },\n        ]; };\n        NgFor.propDecorators = {\n            'ngForOf': [{ type: _angular_core.Input },],\n            'ngForTrackBy': [{ type: _angular_core.Input },],\n            'ngForTemplate': [{ type: _angular_core.Input },],\n        };\n        return NgFor;\n    }());\n    var RecordViewTuple = (function () {\n        /**\n         * @param {?} record\n         * @param {?} view\n         */\n        function RecordViewTuple(record, view) {\n            this.record = record;\n            this.view = view;\n        }\n        return RecordViewTuple;\n    }());\n\n    /**\n     * Removes or recreates a portion of the DOM tree based on an {expression}.\n     *\n     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n     *\n     * ```\n     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n     *   <!-- Error message displayed when the errorCount property in the current context is greater\n     * than 0. -->\n     *   {{errorCount}} errors detected\n     * </div>\n     * ```\n     *\n     * ### Syntax\n     *\n     * - `<div *ngIf=\"condition\">...</div>`\n     * - `<div template=\"ngIf condition\">...</div>`\n     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n     *\n     * \\@stable\n     */\n    var NgIf = (function () {\n        /**\n         * @param {?} _viewContainer\n         * @param {?} _template\n         */\n        function NgIf(_viewContainer, _template) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._hasView = false;\n        }\n        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n            /**\n             * @param {?} condition\n             * @return {?}\n             */\n            set: function (condition) {\n                if (condition && !this._hasView) {\n                    this._hasView = true;\n                    this._viewContainer.createEmbeddedView(this._template);\n                }\n                else if (!condition && this._hasView) {\n                    this._hasView = false;\n                    this._viewContainer.clear();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgIf.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n        ];\n        /** @nocollapse */\n        NgIf.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n        ]; };\n        NgIf.propDecorators = {\n            'ngIf': [{ type: _angular_core.Input },],\n        };\n        return NgIf;\n    }());\n\n    var SwitchView = (function () {\n        /**\n         * @param {?} _viewContainerRef\n         * @param {?} _templateRef\n         */\n        function SwitchView(_viewContainerRef, _templateRef) {\n            this._viewContainerRef = _viewContainerRef;\n            this._templateRef = _templateRef;\n            this._created = false;\n        }\n        /**\n         * @return {?}\n         */\n        SwitchView.prototype.create = function () {\n            this._created = true;\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\n        };\n        /**\n         * @return {?}\n         */\n        SwitchView.prototype.destroy = function () {\n            this._created = false;\n            this._viewContainerRef.clear();\n        };\n        /**\n         * @param {?} created\n         * @return {?}\n         */\n        SwitchView.prototype.enforceState = function (created) {\n            if (created && !this._created) {\n                this.create();\n            }\n            else if (!created && this._created) {\n                this.destroy();\n            }\n        };\n        return SwitchView;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n     *             expression.\n     *\n     * \\@howToUse\n     * ```\n     *     <container-element [ngSwitch]=\"switch_expression\">\n     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n     *         <!-- use a ng-container to group multiple root nodes -->\n     *         <inner-element></inner-element>\n     *         <inner-other-element></inner-other-element>\n     *       </ng-container>\n     *       <some-element *ngSwitchDefault>...</some-element>\n     *     </container-element>\n     * ```\n     * \\@description\n     *\n     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n     * switch expression.\n     *\n     * In other words:\n     * - you define a container element (where you place the directive with a switch expression on the\n     * `[ngSwitch]=\"...\"` attribute)\n     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n     * root elements.\n     *\n     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n     * be preserved at the location.\n     *\n     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n     * expression is evaluated.\n     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n     * stamped out.\n     *\n     * \\@stable\n     */\n    var NgSwitch = (function () {\n        function NgSwitch() {\n            this._defaultUsed = false;\n            this._caseCount = 0;\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n            /**\n             * @param {?} newValue\n             * @return {?}\n             */\n            set: function (newValue) {\n                this._ngSwitch = newValue;\n                if (this._caseCount === 0) {\n                    this._updateDefaultCases(true);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n        /**\n         * \\@internal\n         * @param {?} view\n         * @return {?}\n         */\n        NgSwitch.prototype._addDefault = function (view) {\n            if (!this._defaultViews) {\n                this._defaultViews = [];\n            }\n            this._defaultViews.push(view);\n        };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        NgSwitch.prototype._matchCase = function (value) {\n            var /** @type {?} */ matched = value == this._ngSwitch;\n            this._lastCasesMatched = this._lastCasesMatched || matched;\n            this._lastCaseCheckIndex++;\n            if (this._lastCaseCheckIndex === this._caseCount) {\n                this._updateDefaultCases(!this._lastCasesMatched);\n                this._lastCaseCheckIndex = 0;\n                this._lastCasesMatched = false;\n            }\n            return matched;\n        };\n        /**\n         * @param {?} useDefault\n         * @return {?}\n         */\n        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n            if (this._defaultViews && useDefault !== this._defaultUsed) {\n                this._defaultUsed = useDefault;\n                for (var /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n                    var /** @type {?} */ defaultView = this._defaultViews[i];\n                    defaultView.enforceState(useDefault);\n                }\n            }\n        };\n        NgSwitch.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitch.ctorParameters = function () { return []; };\n        NgSwitch.propDecorators = {\n            'ngSwitch': [{ type: _angular_core.Input },],\n        };\n        return NgSwitch;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n     *             given expression evaluate to respectively the same/different value as the switch\n     *             expression.\n     *\n     * \\@howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     * </container-element>\n     * ```\n     * \\@description\n     *\n     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n     * expression.\n     *\n     * If multiple match expressions match the switch expression value, all of them are displayed.\n     *\n     * See {\\@link NgSwitch} for more details and example.\n     *\n     * \\@stable\n     */\n    var NgSwitchCase = (function () {\n        /**\n         * @param {?} viewContainer\n         * @param {?} templateRef\n         * @param {?} ngSwitch\n         */\n        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n            this.ngSwitch = ngSwitch;\n            ngSwitch._addCase();\n            this._view = new SwitchView(viewContainer, templateRef);\n        }\n        /**\n         * @return {?}\n         */\n        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n        NgSwitchCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchCase.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        NgSwitchCase.propDecorators = {\n            'ngSwitchCase': [{ type: _angular_core.Input },],\n        };\n        return NgSwitchCase;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n     * match the\n     *             switch expression.\n     *\n     * \\@howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n     * </container-element>\n     * ```\n     *\n     * \\@description\n     *\n     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n     * expression.\n     *\n     * See {\\@link NgSwitch} for more details and example.\n     *\n     * \\@stable\n     */\n    var NgSwitchDefault = (function () {\n        /**\n         * @param {?} viewContainer\n         * @param {?} templateRef\n         * @param {?} ngSwitch\n         */\n        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n        }\n        NgSwitchDefault.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchDefault.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        return NgSwitchDefault;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <template ngPluralCase=\"=0\">there is nothing</template>\n     *   <template ngPluralCase=\"=1\">there is one</template>\n     *   <template ngPluralCase=\"few\">there are a few</template>\n     * </some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n     * that match the switch expression's pluralization category.\n     *\n     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n     * expression:\n     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n     *   matches the switch expression exactly,\n     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n     *   value matches aren't found and the value maps to its category for the defined locale.\n     *\n     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n     *\n     * \\@experimental\n     */\n    var NgPlural = (function () {\n        /**\n         * @param {?} _localization\n         */\n        function NgPlural(_localization) {\n            this._localization = _localization;\n            this._caseViews = {};\n        }\n        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._switchValue = value;\n                this._updateView();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} value\n         * @param {?} switchView\n         * @return {?}\n         */\n        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n        /**\n         * @return {?}\n         */\n        NgPlural.prototype._updateView = function () {\n            this._clearViews();\n            var /** @type {?} */ cases = Object.keys(this._caseViews);\n            var /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n            this._activateView(this._caseViews[key]);\n        };\n        /**\n         * @return {?}\n         */\n        NgPlural.prototype._clearViews = function () {\n            if (this._activeView)\n                this._activeView.destroy();\n        };\n        /**\n         * @param {?} view\n         * @return {?}\n         */\n        NgPlural.prototype._activateView = function (view) {\n            if (view) {\n                this._activeView = view;\n                this._activeView.create();\n            }\n        };\n        NgPlural.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n        ];\n        /** @nocollapse */\n        NgPlural.ctorParameters = function () { return [\n            { type: NgLocalization, },\n        ]; };\n        NgPlural.propDecorators = {\n            'ngPlural': [{ type: _angular_core.Input },],\n        };\n        return NgPlural;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n     *             given expression matches the plural expression according to CLDR rules.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <template ngPluralCase=\"=0\">...</template>\n     *   <template ngPluralCase=\"other\">...</template>\n     * </some-element>\n     * ```\n     *\n     * See {\\@link NgPlural} for more details and example.\n     *\n     * \\@experimental\n     */\n    var NgPluralCase = (function () {\n        /**\n         * @param {?} value\n         * @param {?} template\n         * @param {?} viewContainer\n         * @param {?} ngPlural\n         */\n        function NgPluralCase(value, template, viewContainer, ngPlural) {\n            this.value = value;\n            var isANumber = !isNaN(Number(value));\n            ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n        }\n        NgPluralCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n        ];\n        /** @nocollapse */\n        NgPluralCase.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.ViewContainerRef, },\n            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n        ]; };\n        return NgPluralCase;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Update an HTML element styles.\n     *\n     * \\@howToUse\n     * ```\n     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"objExp\">...</some-element>\n     * ```\n     *\n     * \\@description\n     *\n     * The styles are updated according to the value of the expression evaluation:\n     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n     * - values are the values assigned to those properties (expressed in the given unit).\n     *\n     * \\@stable\n     */\n    var NgStyle = (function () {\n        /**\n         * @param {?} _differs\n         * @param {?} _ngEl\n         * @param {?} _renderer\n         */\n        function NgStyle(_differs, _ngEl, _renderer) {\n            this._differs = _differs;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n        }\n        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n            /**\n             * @param {?} v\n             * @return {?}\n             */\n            set: function (v) {\n                this._ngStyle = v;\n                if (!this._differ && v) {\n                    this._differ = this._differs.find(v).create(null);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgStyle.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n                if (changes) {\n                    this._applyChanges(changes);\n                }\n            }\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgStyle.prototype._applyChanges = function (changes) {\n            var _this = this;\n            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        };\n        /**\n         * @param {?} nameAndUnit\n         * @param {?} value\n         * @return {?}\n         */\n        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n            value = value && unit ? \"\" + value + unit : value;\n            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n        };\n        NgStyle.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n        ];\n        /** @nocollapse */\n        NgStyle.ctorParameters = function () { return [\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ]; };\n        NgStyle.propDecorators = {\n            'ngStyle': [{ type: _angular_core.Input },],\n        };\n        return NgStyle;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     *\n     * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n     *\n     * \\@howToUse\n     * ```\n     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n     *           [ngOutletContext]=\"objectExpression\">\n     * </template>\n     * ```\n     *\n     * \\@description\n     *\n     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n     * available within the `TemplateRef`.\n     *\n     * Note: using the key `$implicit` in the context object will set it's value as default.\n     *\n     * \\@experimental\n     */\n    var NgTemplateOutlet = (function () {\n        /**\n         * @param {?} _viewContainerRef\n         */\n        function NgTemplateOutlet(_viewContainerRef) {\n            this._viewContainerRef = _viewContainerRef;\n        }\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n            /**\n             * @param {?} context\n             * @return {?}\n             */\n            set: function (context) { this._context = context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n            /**\n             * @param {?} templateRef\n             * @return {?}\n             */\n            set: function (templateRef) { this._templateRef = templateRef; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this._templateRef) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n            }\n        };\n        NgTemplateOutlet.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n        ];\n        /** @nocollapse */\n        NgTemplateOutlet.ctorParameters = function () { return [\n            { type: _angular_core.ViewContainerRef, },\n        ]; };\n        NgTemplateOutlet.propDecorators = {\n            'ngOutletContext': [{ type: _angular_core.Input },],\n            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n        };\n        return NgTemplateOutlet;\n    }());\n\n    /**\n     * A collection of Angular directives that are likely to be used in each and every Angular\n     * application.\n     */\n    var /** @type {?} */ COMMON_DIRECTIVES = [\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n    ];\n\n    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n    var /** @type {?} */ isObservable = _angular_core.__core_private__.isObservable;\n\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * \\@stable\n     */\n    var BaseError = (function (_super) {\n        __extends$4(BaseError, _super);\n        /**\n         * @param {?} message\n         */\n        function BaseError(message) {\n            _super.call(this, message);\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            // TODO(bradfordcsmith): Remove this hack when\n            //     google/closure-compiler/issues/2102 is fixed.\n            var nativeError = new Error(message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.message; },\n            /**\n             * @param {?} message\n             * @return {?}\n             */\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return ((this._nativeError)).stack; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) { ((this._nativeError)).stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * \\@stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$4(WrappedError, _super);\n        /**\n         * @param {?} message\n         * @param {?} error\n         */\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return (((this.originalError instanceof Error ? this.originalError : this._nativeError)))\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var InvalidPipeArgumentError = (function (_super) {\n        __extends$3(InvalidPipeArgumentError, _super);\n        /**\n         * @param {?} type\n         * @param {?} value\n         */\n        function InvalidPipeArgumentError(type, value) {\n            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n        }\n        return InvalidPipeArgumentError;\n    }(BaseError));\n\n    var ObservableStrategy = (function () {\n        function ObservableStrategy() {\n        }\n        /**\n         * @param {?} async\n         * @param {?} updateLatestValue\n         * @return {?}\n         */\n        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n        };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n        return ObservableStrategy;\n    }());\n    var PromiseStrategy = (function () {\n        function PromiseStrategy() {\n        }\n        /**\n         * @param {?} async\n         * @param {?} updateLatestValue\n         * @return {?}\n         */\n        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.then(updateLatestValue, function (e) { throw e; });\n        };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        PromiseStrategy.prototype.dispose = function (subscription) { };\n        /**\n         * @param {?} subscription\n         * @return {?}\n         */\n        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n        return PromiseStrategy;\n    }());\n    var /** @type {?} */ _promiseStrategy = new PromiseStrategy();\n    var /** @type {?} */ _observableStrategy = new ObservableStrategy();\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n     * \\@howToUse `observable_or_promise_expression | async`\n     * \\@description\n     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n     * potential memory leaks.\n     *\n     *\n     * ## Examples\n     *\n     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n     * promise.\n     *\n     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n     *\n     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n     * to the view. The Observable continuously updates the view with the current time.\n     *\n     * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n     *\n     * \\@stable\n     */\n    var AsyncPipe = (function () {\n        /**\n         * @param {?} _ref\n         */\n        function AsyncPipe(_ref) {\n            this._ref = _ref;\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n            this._strategy = null;\n        }\n        /**\n         * @return {?}\n         */\n        AsyncPipe.prototype.ngOnDestroy = function () {\n            if (this._subscription) {\n                this._dispose();\n            }\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype.transform = function (obj) {\n            if (!this._obj) {\n                if (obj) {\n                    this._subscribe(obj);\n                }\n                this._latestReturnedValue = this._latestValue;\n                return this._latestValue;\n            }\n            if (obj !== this._obj) {\n                this._dispose();\n                return this.transform(obj);\n            }\n            if (this._latestValue === this._latestReturnedValue) {\n                return this._latestReturnedValue;\n            }\n            this._latestReturnedValue = this._latestValue;\n            return _angular_core.WrappedValue.wrap(this._latestValue);\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype._subscribe = function (obj) {\n            var _this = this;\n            this._obj = obj;\n            this._strategy = this._selectStrategy(obj);\n            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        AsyncPipe.prototype._selectStrategy = function (obj) {\n            if (isPromise(obj)) {\n                return _promiseStrategy;\n            }\n            if (isObservable(obj)) {\n                return _observableStrategy;\n            }\n            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n        };\n        /**\n         * @return {?}\n         */\n        AsyncPipe.prototype._dispose = function () {\n            this._strategy.dispose(this._subscription);\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n        };\n        /**\n         * @param {?} async\n         * @param {?} value\n         * @return {?}\n         */\n        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n            if (async === this._obj) {\n                this._latestValue = value;\n                this._ref.markForCheck();\n            }\n        };\n        AsyncPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n        ];\n        /** @nocollapse */\n        AsyncPipe.ctorParameters = function () { return [\n            { type: _angular_core.ChangeDetectorRef, },\n        ]; };\n        return AsyncPipe;\n    }());\n\n    var NumberFormatStyle = {};\n    NumberFormatStyle.Decimal = 0;\n    NumberFormatStyle.Percent = 1;\n    NumberFormatStyle.Currency = 2;\n    NumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n    var NumberFormatter = (function () {\n        function NumberFormatter() {\n        }\n        /**\n         * @param {?} num\n         * @param {?} locale\n         * @param {?} style\n         * @param {?=} __3\n         * @return {?}\n         */\n        NumberFormatter.format = function (num, locale, style, _a) {\n            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n            var /** @type {?} */ options = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                minimumFractionDigits: minimumFractionDigits,\n                maximumFractionDigits: maximumFractionDigits,\n                style: NumberFormatStyle[style].toLowerCase()\n            };\n            if (style == NumberFormatStyle.Currency) {\n                options.currency = currency;\n                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n            }\n            return new Intl.NumberFormat(locale, options).format(num);\n        };\n        return NumberFormatter;\n    }());\n    var /** @type {?} */ DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n    var /** @type {?} */ PATTERN_ALIASES = {\n        // Keys are quoted so they do not get renamed during closure compilation.\n        'yMMMdjms': datePartGetterFactory(combine([\n            digitCondition('year', 1),\n            nameCondition('month', 3),\n            digitCondition('day', 1),\n            digitCondition('hour', 1),\n            digitCondition('minute', 1),\n            digitCondition('second', 1),\n        ])),\n        'yMdjm': datePartGetterFactory(combine([\n            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n            digitCondition('hour', 1), digitCondition('minute', 1)\n        ])),\n        'yMMMMEEEEd': datePartGetterFactory(combine([\n            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n            digitCondition('day', 1)\n        ])),\n        'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n        'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n        'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n        'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n        'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n    };\n    var /** @type {?} */ DATE_FORMATS = {\n        // Keys are quoted so they do not get renamed.\n        'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n        'yy': datePartGetterFactory(digitCondition('year', 2)),\n        'y': datePartGetterFactory(digitCondition('year', 1)),\n        'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n        'MMM': datePartGetterFactory(nameCondition('month', 3)),\n        'MM': datePartGetterFactory(digitCondition('month', 2)),\n        'M': datePartGetterFactory(digitCondition('month', 1)),\n        'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n        'L': datePartGetterFactory(nameCondition('month', 1)),\n        'dd': datePartGetterFactory(digitCondition('day', 2)),\n        'd': datePartGetterFactory(digitCondition('day', 1)),\n        'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n        'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n        'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n        'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'jj': datePartGetterFactory(digitCondition('hour', 2)),\n        'j': datePartGetterFactory(digitCondition('hour', 1)),\n        'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n        'm': datePartGetterFactory(digitCondition('minute', 1)),\n        'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n        's': datePartGetterFactory(digitCondition('second', 1)),\n        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n        // fractions\n        'sss': datePartGetterFactory(digitCondition('second', 3)),\n        'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n        'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n        'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n        'E': datePartGetterFactory(nameCondition('weekday', 1)),\n        'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        'Z': timeZoneGetter('short'),\n        'z': timeZoneGetter('long'),\n        'ww': datePartGetterFactory({}),\n        // first Thursday of the year. not support ?\n        'w': datePartGetterFactory({}),\n        // of the year not support ?\n        'G': datePartGetterFactory(nameCondition('era', 1)),\n        'GG': datePartGetterFactory(nameCondition('era', 2)),\n        'GGG': datePartGetterFactory(nameCondition('era', 3)),\n        'GGGG': datePartGetterFactory(nameCondition('era', 4))\n    };\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function digitModifier(inner) {\n        return function (date, locale) {\n            var /** @type {?} */ result = inner(date, locale);\n            return result.length == 1 ? '0' + result : result;\n        };\n    }\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function hourClockExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n    }\n    /**\n     * @param {?} inner\n     * @return {?}\n     */\n    function hourExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n    }\n    /**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} options\n     * @return {?}\n     */\n    function intlDateFormat(date, locale, options) {\n        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * @param {?} timezone\n     * @return {?}\n     */\n    function timeZoneGetter(timezone) {\n        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n        var /** @type {?} */ options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n        return function (date, locale) {\n            var /** @type {?} */ result = intlDateFormat(date, locale, options);\n            // Then extract first 3 letters that related to hours\n            return result ? result.substring(3) : '';\n        };\n    }\n    /**\n     * @param {?} options\n     * @param {?} value\n     * @return {?}\n     */\n    function hour12Modify(options, value) {\n        options.hour12 = value;\n        return options;\n    }\n    /**\n     * @param {?} prop\n     * @param {?} len\n     * @return {?}\n     */\n    function digitCondition(prop, len) {\n        var /** @type {?} */ result = {};\n        result[prop] = len === 2 ? '2-digit' : 'numeric';\n        return result;\n    }\n    /**\n     * @param {?} prop\n     * @param {?} len\n     * @return {?}\n     */\n    function nameCondition(prop, len) {\n        var /** @type {?} */ result = {};\n        if (len < 4) {\n            result[prop] = len > 1 ? 'short' : 'narrow';\n        }\n        else {\n            result[prop] = 'long';\n        }\n        return result;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    function combine(options) {\n        return (_a = ((Object))).assign.apply(_a, [{}].concat(options));\n        var _a;\n    }\n    /**\n     * @param {?} ret\n     * @return {?}\n     */\n    function datePartGetterFactory(ret) {\n        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n    }\n    var /** @type {?} */ DATE_FORMATTER_CACHE = new Map();\n    /**\n     * @param {?} format\n     * @param {?} date\n     * @param {?} locale\n     * @return {?}\n     */\n    function dateFormatter(format, date, locale) {\n        var /** @type {?} */ fn = PATTERN_ALIASES[format];\n        if (fn)\n            return fn(date, locale);\n        var /** @type {?} */ cacheKey = format;\n        var /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n        if (!parts) {\n            parts = [];\n            var /** @type {?} */ match = void 0;\n            DATE_FORMATS_SPLIT.exec(format);\n            while (format) {\n                match = DATE_FORMATS_SPLIT.exec(format);\n                if (match) {\n                    parts = parts.concat(match.slice(1));\n                    format = parts.pop();\n                }\n                else {\n                    parts.push(format);\n                    format = null;\n                }\n            }\n            DATE_FORMATTER_CACHE.set(cacheKey, parts);\n        }\n        return parts.reduce(function (text, part) {\n            var /** @type {?} */ fn = DATE_FORMATS[part];\n            return text + (fn ? fn(date, locale) : partToTime(part));\n        }, '');\n    }\n    /**\n     * @param {?} part\n     * @return {?}\n     */\n    function partToTime(part) {\n        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    }\n    var DateFormatter = (function () {\n        function DateFormatter() {\n        }\n        /**\n         * @param {?} date\n         * @param {?} locale\n         * @param {?} pattern\n         * @return {?}\n         */\n        DateFormatter.format = function (date, locale, pattern) {\n            return dateFormatter(pattern, date, locale);\n        };\n        return DateFormatter;\n    }());\n\n    var /** @type {?} */ ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a date according to locale rules.\n     * \\@howToUse `date_expression | date[:format]`\n     * \\@description\n     *\n     * Where:\n     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n     * (https://www.w3.org/TR/NOTE-datetime).\n     * - `format` indicates which date/time components to include. The format can be predefined as\n     *   shown below or custom as shown in the table.\n     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n     *\n     *\n     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n     *\n     * In javascript, only the components specified will be respected (not the ordering,\n     * punctuations, ...) and details of the formatting will be dependent on the locale.\n     *\n     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n     *\n     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n     * applied and the formatted text will have the same day, month and year of the expression.\n     *\n     * WARNINGS:\n     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n     *   Instead users should treat the date as an immutable object and change the reference when the\n     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n     *   which would be an expensive operation).\n     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n     *   browsers.\n     *\n     * ### Examples\n     *\n     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n     * in the _local_ time and locale is 'en-US':\n     *\n     * ```\n     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n     * ```\n     *\n     * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n     *\n     * \\@stable\n     */\n    var DatePipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function DatePipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} pattern\n         * @return {?}\n         */\n        DatePipe.prototype.transform = function (value, pattern) {\n            if (pattern === void 0) { pattern = 'mediumDate'; }\n            var /** @type {?} */ date;\n            if (isBlank$1(value) || value !== value)\n                return null;\n            if (typeof value === 'string') {\n                value = value.trim();\n            }\n            if (isDate(value)) {\n                date = value;\n            }\n            else if (NumberWrapper.isNumeric(value)) {\n                date = new Date(parseFloat(value));\n            }\n            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n                /**\n                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n                * before Date creation to avoid time offset and errors in the new Date.\n                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n                * is applied\n                * Note: ISO months are 0 for January, 1 for February, ...\n                */\n                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n                date = new Date(y, m - 1, d);\n            }\n            else {\n                date = new Date(value);\n            }\n            if (!isDate(date)) {\n                var /** @type {?} */ match = void 0;\n                if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                    date = isoStringToDate(match);\n                }\n                else {\n                    throw new InvalidPipeArgumentError(DatePipe, value);\n                }\n            }\n            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n        };\n        /** @internal */\n        DatePipe._ALIASES = {\n            'medium': 'yMMMdjms',\n            'short': 'yMdjm',\n            'fullDate': 'yMMMMEEEEd',\n            'longDate': 'yMMMMd',\n            'mediumDate': 'yMMMd',\n            'shortDate': 'yMd',\n            'mediumTime': 'jms',\n            'shortTime': 'jm'\n        };\n        DatePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n        ];\n        /** @nocollapse */\n        DatePipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return DatePipe;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank$1(obj) {\n        return obj == null || obj === '';\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isDate(obj) {\n        return obj instanceof Date && !isNaN(obj.valueOf());\n    }\n    /**\n     * @param {?} match\n     * @return {?}\n     */\n    function isoStringToDate(match) {\n        var /** @type {?} */ date = new Date(0);\n        var /** @type {?} */ tzHour = 0;\n        var /** @type {?} */ tzMin = 0;\n        var /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n        var /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n        if (match[9]) {\n            tzHour = toInt(match[9] + match[10]);\n            tzMin = toInt(match[9] + match[11]);\n        }\n        dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n        var /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n        var /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n        var /** @type {?} */ s = toInt(match[6] || '0');\n        var /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n        timeSetter.call(date, h, m, s, ms);\n        return date;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    function toInt(str) {\n        return parseInt(str, 10);\n    }\n\n    var /** @type {?} */ _INTERPOLATION_REGEXP = /#/g;\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n     * \\@howToUse `expression | i18nPlural:mapping`\n     * \\@description\n     *\n     *  Where:\n     *  - `expression` is a number.\n     *  - `mapping` is an object that mimics the ICU format, see\n     *    http://userguide.icu-project.org/formatparse/messages\n     *\n     *  ## Example\n     *\n     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n     *\n     * \\@experimental\n     */\n    var I18nPluralPipe = (function () {\n        /**\n         * @param {?} _localization\n         */\n        function I18nPluralPipe(_localization) {\n            this._localization = _localization;\n        }\n        /**\n         * @param {?} value\n         * @param {?} pluralMap\n         * @return {?}\n         */\n        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n            if (value == null)\n                return '';\n            if (typeof pluralMap !== 'object' || pluralMap === null) {\n                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n            }\n            var /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n        };\n        I18nPluralPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nPluralPipe.ctorParameters = function () { return [\n            { type: NgLocalization, },\n        ]; };\n        return I18nPluralPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Generic selector that displays the string that matches the current value.\n     * \\@howToUse `expression | i18nSelect:mapping`\n     * \\@description\n     *\n     *  Where `mapping` is an object that indicates the text that should be displayed\n     *  for different values of the provided `expression`.\n     *  If none of the keys of the mapping match the value of the `expression`, then the content\n     *  of the `other` key is returned when present, otherwise an empty string is returned.\n     *\n     *  ## Example\n     *\n     * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n     *\n     *  \\@experimental\n     */\n    var I18nSelectPipe = (function () {\n        function I18nSelectPipe() {\n        }\n        /**\n         * @param {?} value\n         * @param {?} mapping\n         * @return {?}\n         */\n        I18nSelectPipe.prototype.transform = function (value, mapping) {\n            if (value == null)\n                return '';\n            if (typeof mapping !== 'object' || typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n            }\n            if (mapping.hasOwnProperty(value)) {\n                return mapping[value];\n            }\n            if (mapping.hasOwnProperty('other')) {\n                return mapping['other'];\n            }\n            return '';\n        };\n        I18nSelectPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nSelectPipe.ctorParameters = function () { return []; };\n        return I18nSelectPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Converts value into JSON string.\n     * \\@howToUse `expression | json`\n     * \\@description\n     *\n     * Converts value into string using `JSON.stringify`. Useful for debugging.\n     *\n     * ### Example\n     * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n     *\n     * \\@stable\n     */\n    var JsonPipe = (function () {\n        function JsonPipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n        JsonPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n        ];\n        /** @nocollapse */\n        JsonPipe.ctorParameters = function () { return []; };\n        return JsonPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Transforms string to lowercase.\n     * \\@howToUse `expression | lowercase`\n     * \\@description\n     *\n     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * \\@stable\n     */\n    var LowerCasePipe = (function () {\n        function LowerCasePipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        LowerCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n            }\n            return value.toLowerCase();\n        };\n        LowerCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n        ];\n        /** @nocollapse */\n        LowerCasePipe.ctorParameters = function () { return []; };\n        return LowerCasePipe;\n    }());\n\n    var /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n    /**\n     * @param {?} pipe\n     * @param {?} locale\n     * @param {?} value\n     * @param {?} style\n     * @param {?} digits\n     * @param {?=} currency\n     * @param {?=} currencyAsSymbol\n     * @return {?}\n     */\n    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n        if (currency === void 0) { currency = null; }\n        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n        if (value == null)\n            return null;\n        // Convert strings to numbers\n        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n        if (typeof value !== 'number') {\n            throw new InvalidPipeArgumentError(pipe, value);\n        }\n        var /** @type {?} */ minInt;\n        var /** @type {?} */ minFraction;\n        var /** @type {?} */ maxFraction;\n        if (style !== NumberFormatStyle.Currency) {\n            // rely on Intl default for currency\n            minInt = 1;\n            minFraction = 0;\n            maxFraction = 3;\n        }\n        if (digits) {\n            var /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digits + \" is not a valid digit info for number pipes\");\n            }\n            if (parts[1] != null) {\n                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n            }\n            if (parts[3] != null) {\n                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n            }\n            if (parts[5] != null) {\n                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n            }\n        }\n        return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n            minimumIntegerDigits: minInt,\n            minimumFractionDigits: minFraction,\n            maximumFractionDigits: maxFraction,\n            currency: currency,\n            currencyAsSymbol: currencyAsSymbol,\n        });\n    }\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number according to locale rules.\n     * \\@howToUse `number_expression | number[:digitInfo]`\n     *\n     * Formats a number as text. Group sizing and separator and other locale-specific\n     * configurations are based on the active locale.\n     *\n     * where `expression` is a number:\n     *  - `digitInfo` is a `string` which has a following format: <br>\n     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n     *\n     * For more information on the acceptable range for each of these numbers and other\n     * details see your native internationalization library.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n     *\n     * \\@stable\n     */\n    var DecimalPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function DecimalPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} digits\n         * @return {?}\n         */\n        DecimalPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n        };\n        DecimalPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n        ];\n        /** @nocollapse */\n        DecimalPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return DecimalPipe;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number as a percentage according to locale rules.\n     * \\@howToUse `number_expression | percent[:digitInfo]`\n     *\n     * \\@description\n     *\n     * Formats a number as percentage.\n     *\n     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n     *\n     * \\@stable\n     */\n    var PercentPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function PercentPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} digits\n         * @return {?}\n         */\n        PercentPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n        };\n        PercentPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n        ];\n        /** @nocollapse */\n        PercentPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return PercentPipe;\n    }());\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Formats a number as currency using locale rules.\n     * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n     * \\@description\n     *\n     * Use `currency` to format a number as currency.\n     *\n     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n     *    as `USD` for the US dollar and `EUR` for the euro.\n     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n     *   - `true`: use symbol (e.g. `$`).\n     *   - `false`(default): use code (e.g. `USD`).\n     * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n     *\n     * \\@stable\n     */\n    var CurrencyPipe = (function () {\n        /**\n         * @param {?} _locale\n         */\n        function CurrencyPipe(_locale) {\n            this._locale = _locale;\n        }\n        /**\n         * @param {?} value\n         * @param {?=} currencyCode\n         * @param {?=} symbolDisplay\n         * @param {?=} digits\n         * @return {?}\n         */\n        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n            if (currencyCode === void 0) { currencyCode = 'USD'; }\n            if (symbolDisplay === void 0) { symbolDisplay = false; }\n            if (digits === void 0) { digits = null; }\n            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n        };\n        CurrencyPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n        ];\n        /** @nocollapse */\n        CurrencyPipe.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ]; };\n        return CurrencyPipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n     * \\@howToUse `array_or_string_expression | slice:start[:end]`\n     * \\@description\n     *\n     * Where the input expression is a `List` or `String`, and:\n     * - `start`: The starting index of the subset to return.\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * - `end`: The ending index of the subset to return.\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     *\n     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n     * and `String.prototype.slice()`.\n     *\n     * When operating on a [List], the returned list is always a copy even when all\n     * the elements are being returned.\n     *\n     * When operating on a blank value, the pipe returns the blank value.\n     *\n     * ## List Example\n     *\n     * This `ngFor` example:\n     *\n     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n     *\n     * produces the following:\n     *\n     *     <li>b</li>\n     *     <li>c</li>\n     *\n     * ## String Examples\n     *\n     * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n     *\n     * \\@stable\n     */\n    var SlicePipe = (function () {\n        function SlicePipe() {\n        }\n        /**\n         * @param {?} value\n         * @param {?} start\n         * @param {?=} end\n         * @return {?}\n         */\n        SlicePipe.prototype.transform = function (value, start, end) {\n            if (value == null)\n                return value;\n            if (!this.supports(value)) {\n                throw new InvalidPipeArgumentError(SlicePipe, value);\n            }\n            return value.slice(start, end);\n        };\n        /**\n         * @param {?} obj\n         * @return {?}\n         */\n        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n        SlicePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n        ];\n        /** @nocollapse */\n        SlicePipe.ctorParameters = function () { return []; };\n        return SlicePipe;\n    }());\n\n    /**\n     * \\@ngModule CommonModule\n     * \\@whatItDoes Transforms string to uppercase.\n     * \\@howToUse `expression | uppercase`\n     * \\@description\n     *\n     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n     *\n     * ### Example\n     *\n     * {\\@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * \\@stable\n     */\n    var UpperCasePipe = (function () {\n        function UpperCasePipe() {\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        UpperCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n            }\n            return value.toUpperCase();\n        };\n        UpperCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n        ];\n        /** @nocollapse */\n        UpperCasePipe.ctorParameters = function () { return []; };\n        return UpperCasePipe;\n    }());\n\n    /**\n     * A collection of Angular pipes that are likely to be used in each and every application.\n     */\n    var /** @type {?} */ COMMON_PIPES = [\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n    ];\n\n    /**\n     * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgFor}, ...\n     *\n     * \\@stable\n     */\n    var CommonModule = (function () {\n        function CommonModule() {\n        }\n        CommonModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        providers: [\n                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        CommonModule.ctorParameters = function () { return []; };\n        return CommonModule;\n    }());\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.10');\n\n    exports.NgLocalization = NgLocalization;\n    exports.CommonModule = CommonModule;\n    exports.NgClass = NgClass;\n    exports.NgFor = NgFor;\n    exports.NgIf = NgIf;\n    exports.NgPlural = NgPlural;\n    exports.NgPluralCase = NgPluralCase;\n    exports.NgStyle = NgStyle;\n    exports.NgSwitch = NgSwitch;\n    exports.NgSwitchCase = NgSwitchCase;\n    exports.NgSwitchDefault = NgSwitchDefault;\n    exports.NgTemplateOutlet = NgTemplateOutlet;\n    exports.AsyncPipe = AsyncPipe;\n    exports.DatePipe = DatePipe;\n    exports.I18nPluralPipe = I18nPluralPipe;\n    exports.I18nSelectPipe = I18nSelectPipe;\n    exports.JsonPipe = JsonPipe;\n    exports.LowerCasePipe = LowerCasePipe;\n    exports.CurrencyPipe = CurrencyPipe;\n    exports.DecimalPipe = DecimalPipe;\n    exports.PercentPipe = PercentPipe;\n    exports.SlicePipe = SlicePipe;\n    exports.UpperCasePipe = UpperCasePipe;\n    exports.VERSION = VERSION;\n    exports.Version = _angular_core.Version;\n    exports.PlatformLocation = PlatformLocation;\n    exports.LOCATION_INITIALIZED = LOCATION_INITIALIZED;\n    exports.LocationStrategy = LocationStrategy;\n    exports.APP_BASE_HREF = APP_BASE_HREF;\n    exports.HashLocationStrategy = HashLocationStrategy;\n    exports.PathLocationStrategy = PathLocationStrategy;\n    exports.Location = Location;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/common/bundles/common.umd.js\n// module id = 20\n// module chunks = 0","/*! version: \"0.1.0\" */\n!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)(\"object\"==typeof exports?exports:t)[n]=r[n]}}(this,function(){return function(t){function e(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return t[n].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var r={};return e.m=t,e.c=r,e.p=\"/static/\",e(0)}([function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=r(12),i=function(){function t(){this.events={}}return t.prototype.publish=function(t,e,r){return void 0===r&&(r=1),this.getSubjectByEventName(t,r).next(e),this},t.prototype.subscribe=function(t,e,r){if(void 0===r&&(r=1),!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t,r).subscribe(e);return n},t.prototype.subscribeOnce=function(t,e){var r=this;if(!this.isCallback(e))return!1;var n=this.getSubjectByEventName(t).subscribe(function(t){e(t),r.unsubscribe(n)});return n},t.prototype.unsubscribe=function(t){return t&&t.unsubscribe(),this},t.prototype.unsubscribeAll=function(t){return t&&t.forEach(function(t){t.unsubscribe()}),this},t.prototype.dispose=function(t){return this.events[t]?(this.getSubjectByEventName(t).unsubscribe(),delete this.events[t]):console.warn(\"The event [\"+t+\"] doesn't exist!\"),this},t.prototype.hasSubscribers=function(t){var e=!1;return this.events[t]&&this.getSubjectByEventName(t).observers.length>0&&(e=!0),e},t.prototype.getEvents=function(){return this.events},t.prototype.getSubjects=function(){return this.getEvents()},t.prototype.getSubjectByEventName=function(t,e){return void 0===e&&(e=1),this.events[t]||(this.events[t]=new n.ReplaySubject(e)),this.events[t]},t.prototype.isCallback=function(t){return!(!t||\"function\"!=typeof t)||(console.warn(\"Callback is missing! Subscription cancelled!\"),!1)},t}();e.RxPubSub=i},function(t,e,r){\"use strict\";function n(t){return t.reduce(function(t,e){return t.concat(e instanceof h.UnsubscriptionError?e.errors:e)},[])}var i=r(24),s=r(25),o=r(10),c=r(27),u=r(9),h=r(23),p=function(){function t(t){this.closed=!1,this._parent=null,this._parents=null,this._subscriptions=null,t&&(this._unsubscribe=t)}return t.prototype.unsubscribe=function(){var t,e=!1;if(!this.closed){var r=this,p=r._parent,a=r._parents,b=r._unsubscribe,f=r._subscriptions;this.closed=!0,this._parent=null,this._parents=null,this._subscriptions=null;for(var l=-1,d=a?a.length:0;p;)p.remove(this),p=++l<d&&a[l]||null;if(o.isFunction(b)){var y=c.tryCatch(b).call(this);y===u.errorObject&&(e=!0,t=t||(u.errorObject.e instanceof h.UnsubscriptionError?n(u.errorObject.e.errors):[u.errorObject.e]))}if(i.isArray(f))for(l=-1,d=f.length;++l<d;){var v=f[l];if(s.isObject(v)){var y=c.tryCatch(v.unsubscribe).call(v);if(y===u.errorObject){e=!0,t=t||[];var w=u.errorObject.e;w instanceof h.UnsubscriptionError?t=t.concat(n(w.errors)):t.push(w)}}}if(e)throw new h.UnsubscriptionError(t)}},t.prototype.add=function(e){if(!e||e===t.EMPTY)return t.EMPTY;if(e===this)return this;var r=e;switch(typeof e){case\"function\":r=new t(e);case\"object\":if(r.closed||\"function\"!=typeof r.unsubscribe)return r;if(this.closed)return r.unsubscribe(),r;if(\"function\"!=typeof r._addParent){var n=r;r=new t,r._subscriptions=[n]}break;default:throw new Error(\"unrecognized teardown \"+e+\" added to Subscription.\")}var i=this._subscriptions||(this._subscriptions=[]);return i.push(r),r._addParent(this),r},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var r=e.indexOf(t);r!==-1&&e.splice(r,1)}},t.prototype._addParent=function(t){var e=this,r=e._parent,n=e._parents;r&&r!==t?n?n.indexOf(t)===-1&&n.push(t):this._parents=[t]:this._parent=t},t.EMPTY=function(t){return t.closed=!0,t}(new t),t}();e.Subscription=p},function(t,e){(function(t){\"use strict\";var r=\"undefined\"!=typeof window&&window,n=\"undefined\"!=typeof self&&\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,i=\"undefined\"!=typeof t&&t,s=r||i||n;e.root=s,function(){if(!s)throw new Error(\"RxJS could not find any global context (window, self, global)\")}()}).call(e,function(){return this}())},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(10),s=r(1),o=r(6),c=r(4),u=function(t){function e(r,n,i){switch(t.call(this),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=o.empty;break;case 1:if(!r){this.destination=o.empty;break}if(\"object\"==typeof r){r instanceof e?(this.destination=r,this.destination.add(this)):(this.syncErrorThrowable=!0,this.destination=new h(this,r));break}default:this.syncErrorThrowable=!0,this.destination=new h(this,r,n,i)}}return n(e,t),e.prototype[c.rxSubscriber]=function(){return this},e.create=function(t,r,n){var i=new e(t,r,n);return i.syncErrorThrowable=!1,i},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this,e=t._parent,r=t._parents;return this._parent=null,this._parents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parent=e,this._parents=r,this},e}(s.Subscription);e.Subscriber=u;var h=function(t){function e(e,r,n,s){t.call(this),this._parentSubscriber=e;var c,u=this;i.isFunction(r)?c=r:r&&(c=r.next,n=r.error,s=r.complete,r!==o.empty&&(u=Object.create(r),i.isFunction(u.unsubscribe)&&this.add(u.unsubscribe.bind(u)),u.unsubscribe=this.unsubscribe.bind(this))),this._context=u,this._next=c,this._error=n,this._complete=s}return n(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber;if(this._error)e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else{if(!e.syncErrorThrowable)throw this.unsubscribe(),t;e.syncErrorValue=t,e.syncErrorThrown=!0,this.unsubscribe()}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var r=function(){return t._complete.call(t._context)};e.syncErrorThrowable?(this.__tryOrSetError(e,r),this.unsubscribe()):(this.__tryOrUnsub(r),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){throw this.unsubscribe(),t}},e.prototype.__tryOrSetError=function(t,e,r){try{e.call(this._context,r)}catch(e){return t.syncErrorValue=e,t.syncErrorThrown=!0,!0}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(u)},function(t,e,r){\"use strict\";var n=r(2),i=n.root.Symbol;e.rxSubscriber=\"function\"==typeof i&&\"function\"==typeof i.for?i.for(\"rxSubscriber\"):\"@@rxSubscriber\",e.$$rxSubscriber=e.rxSubscriber},function(t,e,r){\"use strict\";var n=r(2),i=r(26),s=r(22),o=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var r=new t;return r.source=this,r.operator=e,r},t.prototype.subscribe=function(t,e,r){var n=this.operator,s=i.toSubscriber(t,e,r);if(n?n.call(s,this.source):s.add(this._trySubscribe(s)),s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){t.syncErrorThrown=!0,t.syncErrorValue=e,t.error(e)}},t.prototype.forEach=function(t,e){var r=this;if(e||(n.root.Rx&&n.root.Rx.config&&n.root.Rx.config.Promise?e=n.root.Rx.config.Promise:n.root.Promise&&(e=n.root.Promise)),!e)throw new Error(\"no Promise impl found\");return new e(function(e,n){var i;i=r.subscribe(function(e){if(i)try{t(e)}catch(t){n(t),i.unsubscribe()}else t(e)},n,e)})},t.prototype._subscribe=function(t){return this.source.subscribe(t)},t.prototype[s.observable]=function(){return this},t.create=function(e){return new t(e)},t}();e.Observable=o},function(t,e){\"use strict\";e.empty={closed:!0,next:function(t){},error:function(t){throw t},complete:function(){}}},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this),this.subject=e,this.subscriber=r,this.closed=!1}return n(e,t),e.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,e=t.observers;if(this.subject=null,e&&0!==e.length&&!t.isStopped&&!t.closed){var r=e.indexOf(this.subscriber);r!==-1&&e.splice(r,1)}}},e}(i.Subscription);e.SubjectSubscription=s},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(){var e=t.call(this,\"object unsubscribed\");this.name=e.name=\"ObjectUnsubscribedError\",this.stack=e.stack,this.message=e.message}return r(e,t),e}(Error);e.ObjectUnsubscribedError=n},function(t,e){\"use strict\";e.errorObject={e:{}}},function(t,e){\"use strict\";function r(t){return\"function\"==typeof t}e.isFunction=r},function(t,e,r){\"use strict\";var n=r(5),i=function(){function t(t,e,r){this.kind=t,this.value=e,this.error=r,this.hasValue=\"N\"===t}return t.prototype.observe=function(t){switch(this.kind){case\"N\":return t.next&&t.next(this.value);case\"E\":return t.error&&t.error(this.error);case\"C\":return t.complete&&t.complete()}},t.prototype.do=function(t,e,r){var n=this.kind;switch(n){case\"N\":return t&&t(this.value);case\"E\":return e&&e(this.error);case\"C\":return r&&r()}},t.prototype.accept=function(t,e,r){return t&&\"function\"==typeof t.next?this.observe(t):this.do(t,e,r)},t.prototype.toObservable=function(){var t=this.kind;switch(t){case\"N\":return n.Observable.of(this.value);case\"E\":return n.Observable.throw(this.error);case\"C\":return n.Observable.empty()}throw new Error(\"unexpected notification kind value\")},t.createNext=function(e){return\"undefined\"!=typeof e?new t(\"N\",e):this.undefinedValueNotification},t.createError=function(e){return new t(\"E\",void 0,e)},t.createComplete=function(){return this.completeNotification},t.completeNotification=new t(\"C\"),t.undefinedValueNotification=new t(\"N\",void 0),t}();e.Notification=i},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(14),s=r(21),o=r(1),c=r(15),u=r(8),h=r(7),p=function(t){function e(e,r,n){void 0===e&&(e=Number.POSITIVE_INFINITY),void 0===r&&(r=Number.POSITIVE_INFINITY),t.call(this),this.scheduler=n,this._events=[],this._bufferSize=e<1?1:e,this._windowTime=r<1?1:r}return n(e,t),e.prototype.next=function(e){var r=this._getNow();this._events.push(new a(r,e)),this._trimBufferThenGetEvents(),t.prototype.next.call(this,e)},e.prototype._subscribe=function(t){var e,r=this._trimBufferThenGetEvents(),n=this.scheduler;if(this.closed)throw new u.ObjectUnsubscribedError;this.hasError?e=o.Subscription.EMPTY:this.isStopped?e=o.Subscription.EMPTY:(this.observers.push(t),e=new h.SubjectSubscription(this,t)),n&&t.add(t=new c.ObserveOnSubscriber(t,n));for(var i=r.length,s=0;s<i&&!t.closed;s++)t.next(r[s].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),e},e.prototype._getNow=function(){return(this.scheduler||s.queue).now()},e.prototype._trimBufferThenGetEvents=function(){for(var t=this._getNow(),e=this._bufferSize,r=this._windowTime,n=this._events,i=n.length,s=0;s<i&&!(t-n[s].time<r);)s++;return i>e&&(s=Math.max(s,i-e)),s>0&&n.splice(0,s),n},e}(i.Subject);e.ReplaySubject=p;var a=function(){function t(t,e){this.time=t,this.value=e}return t}()},function(t,e){\"use strict\";var r=function(){function t(e,r){void 0===r&&(r=t.now),this.SchedulerAction=e,this.now=r}return t.prototype.schedule=function(t,e,r){return void 0===e&&(e=0),new this.SchedulerAction(this,t).schedule(r,e)},t.now=Date.now?Date.now:function(){return+new Date},t}();e.Scheduler=r},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(5),s=r(3),o=r(1),c=r(8),u=r(7),h=r(4),p=function(t){function e(e){t.call(this,e),this.destination=e}return n(e,t),e}(s.Subscriber);e.SubjectSubscriber=p;var a=function(t){function e(){t.call(this),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}return n(e,t),e.prototype[h.rxSubscriber]=function(){return new p(this)},e.prototype.lift=function(t){var e=new b(this,this);return e.operator=t,e},e.prototype.next=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;if(!this.isStopped)for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].next(t)},e.prototype.error=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var e=this.observers,r=e.length,n=e.slice(),i=0;i<r;i++)n[i].error(t);this.observers.length=0},e.prototype.complete=function(){if(this.closed)throw new c.ObjectUnsubscribedError;this.isStopped=!0;for(var t=this.observers,e=t.length,r=t.slice(),n=0;n<e;n++)r[n].complete();this.observers.length=0},e.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},e.prototype._trySubscribe=function(e){if(this.closed)throw new c.ObjectUnsubscribedError;return t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){if(this.closed)throw new c.ObjectUnsubscribedError;return this.hasError?(t.error(this.thrownError),o.Subscription.EMPTY):this.isStopped?(t.complete(),o.Subscription.EMPTY):(this.observers.push(t),new u.SubjectSubscription(this,t))},e.prototype.asObservable=function(){var t=new i.Observable;return t.source=this,t},e.create=function(t,e){return new b(t,e)},e}(i.Observable);e.Subject=a;var b=function(t){function e(e,r){t.call(this),this.destination=e,this.source=r}return n(e,t),e.prototype.next=function(t){var e=this.destination;e&&e.next&&e.next(t)},e.prototype.error=function(t){var e=this.destination;e&&e.error&&this.destination.error(t)},e.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},e.prototype._subscribe=function(t){var e=this.source;return e?this.source.subscribe(t):o.Subscription.EMPTY},e}(a);e.AnonymousSubject=b},function(t,e,r){\"use strict\";function n(t,e){return void 0===e&&(e=0),this.lift(new c(t,e))}var i=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},s=r(3),o=r(11);e.observeOn=n;var c=function(){function t(t,e){void 0===e&&(e=0),this.scheduler=t,this.delay=e}return t.prototype.call=function(t,e){return e.subscribe(new u(t,this.scheduler,this.delay))},t}();e.ObserveOnOperator=c;var u=function(t){function e(e,r,n){void 0===n&&(n=0),t.call(this,e),this.scheduler=r,this.delay=n}return i(e,t),e.dispatch=function(t){var e=t.notification,r=t.destination;e.observe(r),this.unsubscribe()},e.prototype.scheduleMessage=function(t){this.add(this.scheduler.schedule(e.dispatch,this.delay,new h(t,this.destination)))},e.prototype._next=function(t){this.scheduleMessage(o.Notification.createNext(t))},e.prototype._error=function(t){this.scheduleMessage(o.Notification.createError(t))},e.prototype._complete=function(){this.scheduleMessage(o.Notification.createComplete())},e}(s.Subscriber);e.ObserveOnSubscriber=u;var h=function(){function t(t,e){this.notification=t,this.destination=e}return t}();e.ObserveOnMessage=h},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(1),s=function(t){function e(e,r){t.call(this)}return n(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(i.Subscription);e.Action=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(2),s=r(16),o=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r,this.pending=!1}return n(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t,this.pending=!0;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,e)),this.delay=e,this.id=this.id||this.requestAsyncId(n,this.id,e),this},e.prototype.requestAsyncId=function(t,e,r){return void 0===r&&(r=0),i.root.setInterval(t.flush.bind(t,this),r)},e.prototype.recycleAsyncId=function(t,e,r){return void 0===r&&(r=0),null!==r&&this.delay===r&&this.pending===!1?e:i.root.clearInterval(e)&&void 0||void 0},e.prototype.execute=function(t,e){if(this.closed)return new Error(\"executing a cancelled action\");this.pending=!1;var r=this._execute(t,e);return r?r:void(this.pending===!1&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null)))},e.prototype._execute=function(t,e){var r=!1,n=void 0;try{this.work(t)}catch(t){r=!0,n=!!t&&t||new Error(t)}if(r)return this.unsubscribe(),n},e.prototype._unsubscribe=function(){var t=this.id,e=this.scheduler,r=e.actions,n=r.indexOf(this);this.work=null,this.delay=null,this.state=null,this.pending=!1,this.scheduler=null,n!==-1&&r.splice(n,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null))},e}(s.Action);e.AsyncAction=o},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(13),s=function(t){function e(){t.apply(this,arguments),this.actions=[],this.active=!1,this.scheduled=void 0}return n(e,t),e.prototype.flush=function(t){var e=this.actions;if(this.active)return void e.push(t);var r;this.active=!0;do if(r=t.execute(t.state,t.delay))break;while(t=e.shift());if(this.active=!1,r){for(;t=e.shift();)t.unsubscribe();throw r}},e}(i.Scheduler);e.AsyncScheduler=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(17),s=function(t){function e(e,r){t.call(this,e,r),this.scheduler=e,this.work=r}return n(e,t),e.prototype.schedule=function(e,r){return void 0===r&&(r=0),r>0?t.prototype.schedule.call(this,e,r):(this.delay=r,this.state=e,this.scheduler.flush(this),this)},e.prototype.execute=function(e,r){return r>0||this.closed?t.prototype.execute.call(this,e,r):this._execute(e,r)},e.prototype.requestAsyncId=function(e,r,n){return void 0===n&&(n=0),null!==n&&n>0||null===n&&this.delay>0?t.prototype.requestAsyncId.call(this,e,r,n):e.flush(this)},e}(i.AsyncAction);e.QueueAction=s},function(t,e,r){\"use strict\";var n=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},i=r(18),s=function(t){function e(){t.apply(this,arguments)}return n(e,t),e}(i.AsyncScheduler);e.QueueScheduler=s},function(t,e,r){\"use strict\";var n=r(19),i=r(20);e.queue=new i.QueueScheduler(n.QueueAction)},function(t,e,r){\"use strict\";function n(t){var e,r=t.Symbol;return\"function\"==typeof r?r.observable?e=r.observable:(e=r(\"observable\"),r.observable=e):e=\"@@observable\",e}var i=r(2);e.getSymbolObservable=n,e.observable=n(i.root),e.$$observable=e.observable},function(t,e){\"use strict\";var r=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)},n=function(t){function e(e){t.call(this),this.errors=e;var r=Error.call(this,e?e.length+\" errors occurred during unsubscription:\\n  \"+e.map(function(t,e){return e+1+\") \"+t.toString()}).join(\"\\n  \"):\"\");this.name=r.name=\"UnsubscriptionError\",this.stack=r.stack,this.message=r.message}return r(e,t),e}(Error);e.UnsubscriptionError=n},function(t,e){\"use strict\";e.isArray=Array.isArray||function(t){return t&&\"number\"==typeof t.length}},function(t,e){\"use strict\";function r(t){return null!=t&&\"object\"==typeof t}e.isObject=r},function(t,e,r){\"use strict\";function n(t,e,r){if(t){if(t instanceof i.Subscriber)return t;if(t[s.rxSubscriber])return t[s.rxSubscriber]()}return t||e||r?new i.Subscriber(t,e,r):new i.Subscriber(o.empty)}var i=r(3),s=r(4),o=r(6);e.toSubscriber=n},function(t,e,r){\"use strict\";function n(){try{return s.apply(this,arguments)}catch(t){return o.errorObject.e=t,o.errorObject}}function i(t){return s=t,n}var s,o=r(9);e.tryCatch=i}])});\n//# sourceMappingURL=rx-pubsub.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rx-pubsub/dist/rx-pubsub.min.js\n// module id = 21\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar TrustHtmlPipe = (function () {\r\n    function TrustHtmlPipe(sanitizer) {\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    TrustHtmlPipe.prototype.transform = function (htmlString) {\r\n        return this.sanitizer.bypassSecurityTrustHtml(htmlString);\r\n    };\r\n    return TrustHtmlPipe;\r\n}());\r\nTrustHtmlPipe = __decorate([\r\n    core_1.Pipe({\r\n        name: 'trustHtml'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [platform_browser_1.DomSanitizer])\r\n], TrustHtmlPipe);\r\nexports.TrustHtmlPipe = TrustHtmlPipe;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/trust-html-pipe/src/trust-html.pipe.ts\n// module id = 22\n// module chunks = 0","/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}),global.ng.common,global.ng.core));\n}(this, function (exports,_angular_common,core) { 'use strict';\n\n    var /** @type {?} */ DebugDomRootRenderer = core.__core_private__.DebugDomRootRenderer;\n    var /** @type {?} */ NoOpAnimationPlayer = core.__core_private__.NoOpAnimationPlayer;\n\n    /**\n     * \\@experimental\n     */\n    var NoOpAnimationDriver = (function () {\n        function NoOpAnimationDriver() {\n        }\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        NoOpAnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            return new NoOpAnimationPlayer();\n        };\n        return NoOpAnimationDriver;\n    }());\n    /**\n     * \\@experimental\n     * @abstract\n     */\n    var AnimationDriver = (function () {\n        function AnimationDriver() {\n        }\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        AnimationDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) { };\n        AnimationDriver.NOOP = new NoOpAnimationDriver();\n        return AnimationDriver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = (self);\n        }\n        else {\n            globalScope = (global);\n        }\n    }\n    else {\n        globalScope = (window);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var /** @type {?} */ global$1 = globalScope;\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var /** @type {?} */ res = token.toString();\n        var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * @param {?} global\n     * @param {?} path\n     * @param {?} value\n     * @return {?}\n     */\n    function setValueOnPath(global, path, value) {\n        var /** @type {?} */ parts = path.split('.');\n        var /** @type {?} */ obj = global;\n        while (parts.length > 1) {\n            var /** @type {?} */ name_1 = parts.shift();\n            if (obj.hasOwnProperty(name_1) && obj[name_1] != null) {\n                obj = obj[name_1];\n            }\n            else {\n                obj = obj[name_1] = {};\n            }\n        }\n        if (obj === undefined || obj === null) {\n            obj = {};\n        }\n        obj[parts.shift()] = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ _DOM = null;\n    /**\n     * @return {?}\n     */\n    function getDOM() {\n        return _DOM;\n    }\n    /**\n     * @param {?} adapter\n     * @return {?}\n     */\n    function setRootDomAdapter(adapter) {\n        if (!_DOM) {\n            _DOM = adapter;\n        }\n    }\n    /**\n     * Provides DOM operations in an environment-agnostic way.\n     *\n     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     * @abstract\n     */\n    var DomAdapter = (function () {\n        function DomAdapter() {\n            this.resourceLoaderType = null;\n        }\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.hasProperty = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setProperty = function (el, name, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getProperty = function (el, name) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} methodName\n         * @param {?} args\n         * @return {?}\n         */\n        DomAdapter.prototype.invoke = function (el, methodName, args) { };\n        /**\n         * @abstract\n         * @param {?} error\n         * @return {?}\n         */\n        DomAdapter.prototype.logError = function (error) { };\n        /**\n         * @abstract\n         * @param {?} error\n         * @return {?}\n         */\n        DomAdapter.prototype.log = function (error) { };\n        /**\n         * @abstract\n         * @param {?} error\n         * @return {?}\n         */\n        DomAdapter.prototype.logGroup = function (error) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.logGroupEnd = function () { };\n        Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n            /**\n             * Maps attribute names to their corresponding property names for cases\n             * where attribute name doesn't match property name.\n             * @return {?}\n             */\n            get: function () { return this._attrToPropMap; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) { this._attrToPropMap = value; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        ;\n        /**\n         * @abstract\n         * @param {?} templateHtml\n         * @return {?}\n         */\n        DomAdapter.prototype.parse = function (templateHtml) { };\n        /**\n         * @abstract\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.query = function (selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.querySelector = function (el /** TODO #9100 */, selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.querySelectorAll = function (el /** TODO #9100 */, selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        DomAdapter.prototype.on = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        DomAdapter.prototype.onAndCancel = function (el /** TODO #9100 */, evt /** TODO #9100 */, listener) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} evt\n         * @return {?}\n         */\n        DomAdapter.prototype.dispatchEvent = function (el /** TODO #9100 */, evt) { };\n        /**\n         * @abstract\n         * @param {?} eventType\n         * @return {?}\n         */\n        DomAdapter.prototype.createMouseEvent = function (eventType) { };\n        /**\n         * @abstract\n         * @param {?} eventType\n         * @return {?}\n         */\n        DomAdapter.prototype.createEvent = function (eventType) { };\n        /**\n         * @abstract\n         * @param {?} evt\n         * @return {?}\n         */\n        DomAdapter.prototype.preventDefault = function (evt) { };\n        /**\n         * @abstract\n         * @param {?} evt\n         * @return {?}\n         */\n        DomAdapter.prototype.isPrevented = function (evt) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getInnerHTML = function (el) { };\n        /**\n         * Returns content if el is a <template> element, null otherwise.\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getTemplateContent = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getOuterHTML = function (el) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.nodeName = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.nodeValue = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.type = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.content = function (node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.firstChild = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.nextSibling = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.parentElement = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.childNodes = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.childNodesAsList = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.clearNodes = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.appendChild = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.removeChild = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} newNode\n         * @param {?} oldNode\n         * @return {?}\n         */\n        DomAdapter.prototype.replaceChild = function (el /** TODO #9100 */, newNode /** TODO #9100 */, oldNode) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.remove = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.insertBefore = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} nodes\n         * @return {?}\n         */\n        DomAdapter.prototype.insertAllBefore = function (el /** TODO #9100 */, nodes) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.insertAfter = function (el /** TODO #9100 */, node) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setInnerHTML = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getText = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setText = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getValue = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setValue = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getChecked = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setChecked = function (el /** TODO #9100 */, value) { };\n        /**\n         * @abstract\n         * @param {?} text\n         * @return {?}\n         */\n        DomAdapter.prototype.createComment = function (text) { };\n        /**\n         * @abstract\n         * @param {?} html\n         * @return {?}\n         */\n        DomAdapter.prototype.createTemplate = function (html) { };\n        /**\n         * @abstract\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createElement = function (tagName /** TODO #9100 */, doc) { };\n        /**\n         * @abstract\n         * @param {?} ns\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createElementNS = function (ns, tagName, doc) { };\n        /**\n         * @abstract\n         * @param {?} text\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createTextNode = function (text, doc) { };\n        /**\n         * @abstract\n         * @param {?} attrName\n         * @param {?} attrValue\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) { };\n        /**\n         * @abstract\n         * @param {?} css\n         * @param {?=} doc\n         * @return {?}\n         */\n        DomAdapter.prototype.createStyleElement = function (css, doc) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.createShadowRoot = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getShadowRoot = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getHost = function (el) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getDistributedNodes = function (el) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.clone /*<T extends Node>*/ = function (node) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getElementsByClassName = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getElementsByTagName = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.classList = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        DomAdapter.prototype.addClass = function (element /** TODO #9100 */, className) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        DomAdapter.prototype.removeClass = function (element /** TODO #9100 */, className) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        DomAdapter.prototype.hasClass = function (element /** TODO #9100 */, className) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        DomAdapter.prototype.setStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @return {?}\n         */\n        DomAdapter.prototype.removeStyle = function (element /** TODO #9100 */, styleName) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @return {?}\n         */\n        DomAdapter.prototype.getStyle = function (element /** TODO #9100 */, styleName) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?=} styleValue\n         * @return {?}\n         */\n        DomAdapter.prototype.hasStyle = function (element /** TODO #9100 */, styleName, styleValue) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.tagName = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.attributeMap = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.hasAttribute = function (element /** TODO #9100 */, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.hasAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.getAttribute = function (element /** TODO #9100 */, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.getAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setAttribute = function (element /** TODO #9100 */, name, value) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setAttributeNS = function (element /** TODO #9100 */, ns, name, value) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.removeAttribute = function (element /** TODO #9100 */, attribute) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        DomAdapter.prototype.removeAttributeNS = function (element /** TODO #9100 */, ns, attribute) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.templateAwareRoot = function (el) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.createHtmlDocument = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.defaultDoc = function () { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.getBoundingClientRect = function (el) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getTitle = function () { };\n        /**\n         * @abstract\n         * @param {?} newTitle\n         * @return {?}\n         */\n        DomAdapter.prototype.setTitle = function (newTitle) { };\n        /**\n         * @abstract\n         * @param {?} n\n         * @param {?} selector\n         * @return {?}\n         */\n        DomAdapter.prototype.elementMatches = function (n /** TODO #9100 */, selector) { };\n        /**\n         * @abstract\n         * @param {?} el\n         * @return {?}\n         */\n        DomAdapter.prototype.isTemplateElement = function (el) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isTextNode = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isCommentNode = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isElementNode = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.hasShadowRoot = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.isShadowRoot = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.importIntoDoc /*<T extends Node>*/ = function (node) { };\n        /**\n         * @abstract\n         * @param {?} node\n         * @return {?}\n         */\n        DomAdapter.prototype.adoptNode /*<T extends Node>*/ = function (node) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.getHref = function (element) { };\n        /**\n         * @abstract\n         * @param {?} event\n         * @return {?}\n         */\n        DomAdapter.prototype.getEventKey = function (event) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} baseUrl\n         * @param {?} href\n         * @return {?}\n         */\n        DomAdapter.prototype.resolveAndSetHref = function (element /** TODO #9100 */, baseUrl, href) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsDOMEvents = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsNativeShadowDOM = function () { };\n        /**\n         * @abstract\n         * @param {?} target\n         * @return {?}\n         */\n        DomAdapter.prototype.getGlobalEventTarget = function (target) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getHistory = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getLocation = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getBaseHref = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.resetBaseElement = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getUserAgent = function () { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setData = function (element /** TODO #9100 */, name, value) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @return {?}\n         */\n        DomAdapter.prototype.getComputedStyle = function (element) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getData = function (element /** TODO #9100 */, name) { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setGlobalVar = function (name, value) { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsWebAnimation = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.performanceNow = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getAnimationPrefix = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.getTransitionEnd = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsAnimation = function () { };\n        /**\n         * @abstract\n         * @return {?}\n         */\n        DomAdapter.prototype.supportsCookies = function () { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @return {?}\n         */\n        DomAdapter.prototype.getCookie = function (name) { };\n        /**\n         * @abstract\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        DomAdapter.prototype.setCookie = function (name, value) { };\n        return DomAdapter;\n    }());\n\n    var WebAnimationsPlayer = (function () {\n        /**\n         * @param {?} element\n         * @param {?} keyframes\n         * @param {?} options\n         * @param {?=} previousPlayers\n         */\n        function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n            var _this = this;\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            this.element = element;\n            this.keyframes = keyframes;\n            this.options = options;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._initialized = false;\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            this._duration = options['duration'];\n            this.previousStyles = {};\n            previousPlayers.forEach(function (player) {\n                var styles = player._captureStyles();\n                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n            });\n        }\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.init = function () {\n            var _this = this;\n            if (this._initialized)\n                return;\n            this._initialized = true;\n            var /** @type {?} */ keyframes = this.keyframes.map(function (styles) {\n                var /** @type {?} */ formattedKeyframe = {};\n                Object.keys(styles).forEach(function (prop, index) {\n                    var /** @type {?} */ value = styles[prop];\n                    if (value == core.AUTO_STYLE) {\n                        value = _computeStyle(_this.element, prop);\n                    }\n                    if (value != undefined) {\n                        formattedKeyframe[prop] = value;\n                    }\n                });\n                return formattedKeyframe;\n            });\n            var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n            if (previousStyleProps.length) {\n                var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n                var /** @type {?} */ missingStyleProps_1 = [];\n                previousStyleProps.forEach(function (prop) {\n                    if (!isPresent(startingKeyframe_1[prop])) {\n                        missingStyleProps_1.push(prop);\n                    }\n                    startingKeyframe_1[prop] = _this.previousStyles[prop];\n                });\n                if (missingStyleProps_1.length) {\n                    var _loop_1 = function(i) {\n                        var /** @type {?} */ kf = keyframes[i];\n                        missingStyleProps_1.forEach(function (prop) { kf[prop] = _computeStyle(_this.element, prop); });\n                    };\n                    for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n            this._finalKeyframe = _copyKeyframeStyles(keyframes[keyframes.length - 1]);\n            // this is required so that the player doesn't start to animate right away\n            this._resetDomPlayerState();\n            this._player.addEventListener('finish', function () { return _this._onFinish(); });\n        };\n        /**\n         * \\@internal\n         * @param {?} element\n         * @param {?} keyframes\n         * @param {?} options\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n            // jscompiler doesn't seem to know animate is a native property because it's not fully\n            // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n            return (element['animate'](keyframes, options));\n        };\n        Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._player; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.play = function () {\n            this.init();\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._player.play();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.pause = function () {\n            this.init();\n            this._player.pause();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.finish = function () {\n            this.init();\n            this._onFinish();\n            this._player.finish();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.reset = function () {\n            this._resetDomPlayerState();\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._resetDomPlayerState = function () {\n            if (this._player) {\n                this._player.cancel();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.restart = function () {\n            this.reset();\n            this.play();\n        };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._resetDomPlayerState();\n                this._onFinish();\n                this._destroyed = true;\n            }\n        };\n        Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._duration; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} p\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.totalTime; };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.totalTime; };\n        /**\n         * @return {?}\n         */\n        WebAnimationsPlayer.prototype._captureStyles = function () {\n            var _this = this;\n            var /** @type {?} */ styles = {};\n            if (this.hasStarted()) {\n                Object.keys(this._finalKeyframe).forEach(function (prop) {\n                    if (prop != 'offset') {\n                        styles[prop] =\n                            _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                    }\n                });\n            }\n            return styles;\n        };\n        return WebAnimationsPlayer;\n    }());\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @return {?}\n     */\n    function _computeStyle(element, prop) {\n        return getDOM().getComputedStyle(element)[prop];\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    function _copyKeyframeStyles(styles) {\n        var /** @type {?} */ newStyles = {};\n        Object.keys(styles).forEach(function (prop) {\n            if (prop != 'offset') {\n                newStyles[prop] = styles[prop];\n            }\n        });\n        return newStyles;\n    }\n\n    var WebAnimationsDriver = (function () {\n        function WebAnimationsDriver() {\n        }\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        WebAnimationsDriver.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            var /** @type {?} */ formattedSteps = [];\n            var /** @type {?} */ startingStyleLookup = {};\n            if (isPresent(startingStyles)) {\n                startingStyleLookup = _populateStyles(startingStyles, {});\n            }\n            keyframes.forEach(function (keyframe) {\n                var /** @type {?} */ data = _populateStyles(keyframe.styles, startingStyleLookup);\n                data['offset'] = Math.max(0, Math.min(1, keyframe.offset));\n                formattedSteps.push(data);\n            });\n            // Styling passed into element.animate() must always be balanced.\n            // The special cases below can occur if only style() calls exist\n            // within an animation or when a style() calls are used prior\n            // to a group() animation being issued or if the renderer is\n            // invoked by the user directly.\n            if (formattedSteps.length == 0) {\n                formattedSteps = [startingStyleLookup, startingStyleLookup];\n            }\n            else if (formattedSteps.length == 1) {\n                var /** @type {?} */ start = startingStyleLookup;\n                var /** @type {?} */ end = formattedSteps[0];\n                end['offset'] = null;\n                formattedSteps = [start, end];\n            }\n            var /** @type {?} */ playerOptions = {\n                'duration': duration,\n                'delay': delay,\n                'fill': 'both' // we use `both` because it allows for styling at 0% to work with `delay`\n            };\n            // we check for this to avoid having a null|undefined value be present\n            // for the easing (which results in an error for certain browsers #9752)\n            if (easing) {\n                playerOptions['easing'] = easing;\n            }\n            // there may be a chance a NoOp player is returned depending\n            // on when the previous animation was cancelled\n            previousPlayers = previousPlayers.filter(filterWebAnimationPlayerFn);\n            return new WebAnimationsPlayer(element, formattedSteps, playerOptions, /** @type {?} */ (previousPlayers));\n        };\n        return WebAnimationsDriver;\n    }());\n    /**\n     * @param {?} styles\n     * @param {?} defaultStyles\n     * @return {?}\n     */\n    function _populateStyles(styles, defaultStyles) {\n        var /** @type {?} */ data = {};\n        styles.styles.forEach(function (entry) { Object.keys(entry).forEach(function (prop) { data[prop] = entry[prop]; }); });\n        Object.keys(defaultStyles).forEach(function (prop) {\n            if (!isPresent(data[prop])) {\n                data[prop] = defaultStyles[prop];\n            }\n        });\n        return data;\n    }\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    function filterWebAnimationPlayerFn(player) {\n        return player instanceof WebAnimationsPlayer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides DOM operations in any browser environment.\n     *\n     * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n     * can introduce XSS risks.\n     * @abstract\n     */\n    var GenericBrowserDomAdapter = (function (_super) {\n        __extends$1(GenericBrowserDomAdapter, _super);\n        function GenericBrowserDomAdapter() {\n            var _this = this;\n            _super.call(this);\n            this._animationPrefix = null;\n            this._transitionEnd = null;\n            try {\n                var element_1 = this.createElement('div', this.defaultDoc());\n                if (isPresent(this.getStyle(element_1, 'animationName'))) {\n                    this._animationPrefix = '';\n                }\n                else {\n                    var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                    for (var i = 0; i < domPrefixes.length; i++) {\n                        if (isPresent(this.getStyle(element_1, domPrefixes[i] + 'AnimationName'))) {\n                            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                            break;\n                        }\n                    }\n                }\n                var transEndEventNames_1 = {\n                    WebkitTransition: 'webkitTransitionEnd',\n                    MozTransition: 'transitionend',\n                    OTransition: 'oTransitionEnd otransitionend',\n                    transition: 'transitionend'\n                };\n                Object.keys(transEndEventNames_1).forEach(function (key) {\n                    if (isPresent(_this.getStyle(element_1, key))) {\n                        _this._transitionEnd = transEndEventNames_1[key];\n                    }\n                });\n            }\n            catch (e) {\n                this._animationPrefix = null;\n                this._transitionEnd = null;\n            }\n        }\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return ((el)).getDistributedNodes(); };\n        /**\n         * @param {?} el\n         * @param {?} baseUrl\n         * @param {?} href\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n            el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n        };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n            return typeof ((this.defaultDoc().body)).createShadowRoot === 'function';\n        };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n        /**\n         * @return {?}\n         */\n        GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n            return isPresent(this._animationPrefix) && isPresent(this._transitionEnd);\n        };\n        return GenericBrowserDomAdapter;\n    }(DomAdapter));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ _attrToPropMap = {\n        'class': 'className',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    var /** @type {?} */ DOM_KEY_LOCATION_NUMPAD = 3;\n    // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n    var /** @type {?} */ _keyMap = {\n        // The following values are here for cross-browser compatibility and to match the W3C standard\n        // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n        '\\b': 'Backspace',\n        '\\t': 'Tab',\n        '\\x7F': 'Delete',\n        '\\x1B': 'Escape',\n        'Del': 'Delete',\n        'Esc': 'Escape',\n        'Left': 'ArrowLeft',\n        'Right': 'ArrowRight',\n        'Up': 'ArrowUp',\n        'Down': 'ArrowDown',\n        'Menu': 'ContextMenu',\n        'Scroll': 'ScrollLock',\n        'Win': 'OS'\n    };\n    // There is a bug in Chrome for numeric keypad keys:\n    // https://code.google.com/p/chromium/issues/detail?id=155654\n    // 1, 2, 3 ... are reported as A, B, C ...\n    var /** @type {?} */ _chromeNumKeyPadMap = {\n        'A': '1',\n        'B': '2',\n        'C': '3',\n        'D': '4',\n        'E': '5',\n        'F': '6',\n        'G': '7',\n        'H': '8',\n        'I': '9',\n        'J': '*',\n        'K': '+',\n        'M': '-',\n        'N': '.',\n        'O': '/',\n        '\\x60': '0',\n        '\\x90': 'NumLock'\n    };\n    var BrowserDomAdapter = (function (_super) {\n        __extends(BrowserDomAdapter, _super);\n        function BrowserDomAdapter() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} templateHtml\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n        /**\n         * @param {?} el\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setProperty = function (el, name, value) { ((el))[name] = value; };\n        /**\n         * @param {?} el\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getProperty = function (el, name) { return ((el))[name]; };\n        /**\n         * @param {?} el\n         * @param {?} methodName\n         * @param {?} args\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.invoke = function (el, methodName, args) { (_a = ((el)))[methodName].apply(_a, args); var _a; };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.logError = function (error) {\n            if (window.console) {\n                if (console.error) {\n                    console.error(error);\n                }\n                else {\n                    console.log(error);\n                }\n            }\n        };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.log = function (error) {\n            if (window.console) {\n                window.console.log && window.console.log(error);\n            }\n        };\n        /**\n         * @param {?} error\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.logGroup = function (error) {\n            if (window.console) {\n                window.console.group && window.console.group(error);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.logGroupEnd = function () {\n            if (window.console) {\n                window.console.groupEnd && window.console.groupEnd();\n            }\n        };\n        Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return _attrToPropMap; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.query = function (selector) { return document.querySelector(selector); };\n        /**\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.querySelector = function (el, selector) {\n            return (el.querySelector(selector));\n        };\n        /**\n         * @param {?} el\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n        /**\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n        /**\n         * @param {?} el\n         * @param {?} evt\n         * @param {?} listener\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n            el.addEventListener(evt, listener, false);\n            // Needed to follow Dart's subscription semantic, until fix of\n            // https://code.google.com/p/dart/issues/detail?id=17406\n            return function () { el.removeEventListener(evt, listener, false); };\n        };\n        /**\n         * @param {?} el\n         * @param {?} evt\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n        /**\n         * @param {?} eventType\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n            var /** @type {?} */ evt = document.createEvent('MouseEvent');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        /**\n         * @param {?} eventType\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createEvent = function (eventType) {\n            var /** @type {?} */ evt = document.createEvent('Event');\n            evt.initEvent(eventType, true, true);\n            return evt;\n        };\n        /**\n         * @param {?} evt\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.preventDefault = function (evt) {\n            evt.preventDefault();\n            evt.returnValue = false;\n        };\n        /**\n         * @param {?} evt\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isPrevented = function (evt) {\n            return evt.defaultPrevented || isPresent(evt.returnValue) && !evt.returnValue;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n            return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.content = function (node) {\n            if (this.hasProperty(node, 'content')) {\n                return ((node)).content;\n            }\n            else {\n                return node;\n            }\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n            var /** @type {?} */ childNodes = el.childNodes;\n            var /** @type {?} */ res = new Array(childNodes.length);\n            for (var /** @type {?} */ i = 0; i < childNodes.length; i++) {\n                res[i] = childNodes[i];\n            }\n            return res;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.clearNodes = function (el) {\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n        };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n        /**\n         * @param {?} el\n         * @param {?} newChild\n         * @param {?} oldChild\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.remove = function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n            return node;\n        };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.insertBefore = function (el, node) { el.parentNode.insertBefore(node, el); };\n        /**\n         * @param {?} el\n         * @param {?} nodes\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.insertAllBefore = function (el, nodes) {\n            nodes.forEach(function (n) { return el.parentNode.insertBefore(n, el); });\n        };\n        /**\n         * @param {?} el\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.insertAfter = function (el, node) { el.parentNode.insertBefore(node, el.nextSibling); };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n        /**\n         * @param {?} el\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n        /**\n         * @param {?} text\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createComment = function (text) { return document.createComment(text); };\n        /**\n         * @param {?} html\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createTemplate = function (html) {\n            var /** @type {?} */ t = document.createElement('template');\n            t.innerHTML = html;\n            return t;\n        };\n        /**\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElement(tagName);\n        };\n        /**\n         * @param {?} ns\n         * @param {?} tagName\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createElementNS(ns, tagName);\n        };\n        /**\n         * @param {?} text\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n            if (doc === void 0) { doc = document; }\n            return doc.createTextNode(text);\n        };\n        /**\n         * @param {?} attrName\n         * @param {?} attrValue\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n            if (doc === void 0) { doc = document; }\n            var /** @type {?} */ el = (doc.createElement('SCRIPT'));\n            el.setAttribute(attrName, attrValue);\n            return el;\n        };\n        /**\n         * @param {?} css\n         * @param {?=} doc\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n            if (doc === void 0) { doc = document; }\n            var /** @type {?} */ style = (doc.createElement('style'));\n            this.appendChild(style, this.createTextNode(css));\n            return style;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createShadowRoot = function (el) { return ((el)).createShadowRoot(); };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getShadowRoot = function (el) { return ((el)).shadowRoot; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getHost = function (el) { return ((el)).host; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n            return element.getElementsByClassName(name);\n        };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n            return element.getElementsByTagName(name);\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n        /**\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n        /**\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n        /**\n         * @param {?} element\n         * @param {?} className\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasClass = function (element, className) {\n            return element.classList.contains(className);\n        };\n        /**\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n            element.style[styleName] = styleValue;\n        };\n        /**\n         * @param {?} element\n         * @param {?} stylename\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            element.style[stylename] = '';\n        };\n        /**\n         * @param {?} element\n         * @param {?} stylename\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n        /**\n         * @param {?} element\n         * @param {?} styleName\n         * @param {?=} styleValue\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n            if (styleValue === void 0) { styleValue = null; }\n            var /** @type {?} */ value = this.getStyle(element, styleName) || '';\n            return styleValue ? value == styleValue : value.length > 0;\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.attributeMap = function (element) {\n            var /** @type {?} */ res = new Map();\n            var /** @type {?} */ elAttrs = element.attributes;\n            for (var /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n                var /** @type {?} */ attrib = elAttrs[i];\n                res.set(attrib.name, attrib.value);\n            }\n            return res;\n        };\n        /**\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n            return element.hasAttribute(attribute);\n        };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n            return element.hasAttributeNS(ns, attribute);\n        };\n        /**\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n            return element.getAttribute(attribute);\n        };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n            return element.getAttributeNS(ns, name);\n        };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n            element.setAttributeNS(ns, name, value);\n        };\n        /**\n         * @param {?} element\n         * @param {?} attribute\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n        /**\n         * @param {?} element\n         * @param {?} ns\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n            element.removeAttributeNS(ns, name);\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.createHtmlDocument = function () {\n            return document.implementation.createHTMLDocument('fakeTitle');\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.defaultDoc = function () { return document; };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n            try {\n                return el.getBoundingClientRect();\n            }\n            catch (e) {\n                return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getTitle = function () { return document.title; };\n        /**\n         * @param {?} newTitle\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setTitle = function (newTitle) { document.title = newTitle || ''; };\n        /**\n         * @param {?} n\n         * @param {?} selector\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n            if (n instanceof HTMLElement) {\n                return n.matches && n.matches(selector) ||\n                    n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                    n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n            }\n            return false;\n        };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n            return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n        };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n            return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n        };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getHref = function (el) { return ((el)).href; };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getEventKey = function (event) {\n            var /** @type {?} */ key = event.key;\n            if (isBlank(key)) {\n                key = event.keyIdentifier;\n                // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n                // Safari cf\n                // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n                if (isBlank(key)) {\n                    return 'Unidentified';\n                }\n                if (key.startsWith('U+')) {\n                    key = String.fromCharCode(parseInt(key.substring(2), 16));\n                    if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                        // There is a bug in Chrome for numeric keypad keys:\n                        // https://code.google.com/p/chromium/issues/detail?id=155654\n                        // 1, 2, 3 ... are reported as A, B, C ...\n                        key = ((_chromeNumKeyPadMap))[key];\n                    }\n                }\n            }\n            return _keyMap[key] || key;\n        };\n        /**\n         * @param {?} target\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getGlobalEventTarget = function (target) {\n            if (target === 'window') {\n                return window;\n            }\n            if (target === 'document') {\n                return document;\n            }\n            if (target === 'body') {\n                return document.body;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getBaseHref = function () {\n            var /** @type {?} */ href = getBaseElementHref();\n            return isBlank(href) ? null : relativePath(href);\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setData = function (element, name, value) {\n            this.setAttribute(element, 'data-' + name, value);\n        };\n        /**\n         * @param {?} element\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getData = function (element, name) {\n            return this.getAttribute(element, 'data-' + name);\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n        /**\n         * @param {?} path\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setGlobalVar = function (path, value) { setValueOnPath(global$1, path, value); };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n            return typeof ((Element)).prototype['animate'] === 'function';\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.performanceNow = function () {\n            // performance.now() is not available in all browsers, see\n            // http://caniuse.com/#search=performance.now\n            return window.performance && window.performance.now ? window.performance.now() :\n                new Date().getTime();\n        };\n        /**\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n        /**\n         * @param {?} name\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.getCookie = function (name) { return parseCookieValue(document.cookie, name); };\n        /**\n         * @param {?} name\n         * @param {?} value\n         * @return {?}\n         */\n        BrowserDomAdapter.prototype.setCookie = function (name, value) {\n            // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n            // not clear other cookies.\n            document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n        };\n        return BrowserDomAdapter;\n    }(GenericBrowserDomAdapter));\n    var /** @type {?} */ baseElement = null;\n    /**\n     * @return {?}\n     */\n    function getBaseElementHref() {\n        if (!baseElement) {\n            baseElement = document.querySelector('base');\n            if (!baseElement) {\n                return null;\n            }\n        }\n        return baseElement.getAttribute('href');\n    }\n    // based on urlUtils.js in AngularJS 1\n    var /** @type {?} */ urlParsingNode;\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function relativePath(url) {\n        if (!urlParsingNode) {\n            urlParsingNode = document.createElement('a');\n        }\n        urlParsingNode.setAttribute('href', url);\n        return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname;\n    }\n    /**\n     * @param {?} cookieStr\n     * @param {?} name\n     * @return {?}\n     */\n    function parseCookieValue(cookieStr, name) {\n        name = encodeURIComponent(name);\n        for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n            var cookie = _a[_i];\n            var /** @type {?} */ eqIndex = cookie.indexOf('=');\n            var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     * @return {?}\n     */\n    function supportsState() {\n        return !!window.history.pushState;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n     * This class should not be used directly by an application developer. Instead, use\n     * {\\@link Location}.\n     */\n    var BrowserPlatformLocation = (function (_super) {\n        __extends$2(BrowserPlatformLocation, _super);\n        function BrowserPlatformLocation() {\n            _super.call(this);\n            this._init();\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype._init = function () {\n            this._location = getDOM().getLocation();\n            this._history = getDOM().getHistory();\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"location\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.onPopState = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('popstate', fn, false);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n            getDOM().getGlobalEventTarget('window').addEventListener('hashchange', fn, false);\n        };\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location.pathname; },\n            /**\n             * @param {?} newPath\n             * @return {?}\n             */\n            set: function (newPath) { this._location.pathname = newPath; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location.search; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._location.hash; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.pushState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        /**\n         * @param {?} state\n         * @param {?} title\n         * @param {?} url\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n            if (supportsState()) {\n                this._history.replaceState(state, title, url);\n            }\n            else {\n                this._location.hash = url;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n        /**\n         * @return {?}\n         */\n        BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n        BrowserPlatformLocation.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        BrowserPlatformLocation.ctorParameters = function () { return []; };\n        return BrowserPlatformLocation;\n    }(_angular_common.PlatformLocation));\n\n    var BrowserGetTestability = (function () {\n        function BrowserGetTestability() {\n        }\n        /**\n         * @return {?}\n         */\n        BrowserGetTestability.init = function () { core.setTestabilityGetter(new BrowserGetTestability()); };\n        /**\n         * @param {?} registry\n         * @return {?}\n         */\n        BrowserGetTestability.prototype.addToWindow = function (registry) {\n            global$1.getAngularTestability = function (elem, findInAncestors) {\n                if (findInAncestors === void 0) { findInAncestors = true; }\n                var /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n                if (testability == null) {\n                    throw new Error('Could not find testability for element.');\n                }\n                return testability;\n            };\n            global$1.getAllAngularTestabilities = function () { return registry.getAllTestabilities(); };\n            global$1.getAllAngularRootElements = function () { return registry.getAllRootElements(); };\n            var /** @type {?} */ whenAllStable = function (callback /** TODO #9100 */) {\n                var /** @type {?} */ testabilities = global$1.getAllAngularTestabilities();\n                var /** @type {?} */ count = testabilities.length;\n                var /** @type {?} */ didWork = false;\n                var /** @type {?} */ decrement = function (didWork_ /** TODO #9100 */) {\n                    didWork = didWork || didWork_;\n                    count--;\n                    if (count == 0) {\n                        callback(didWork);\n                    }\n                };\n                testabilities.forEach(function (testability /** TODO #9100 */) {\n                    testability.whenStable(decrement);\n                });\n            };\n            if (!global$1['frameworkStabilizers']) {\n                global$1['frameworkStabilizers'] = [];\n            }\n            global$1['frameworkStabilizers'].push(whenAllStable);\n        };\n        /**\n         * @param {?} registry\n         * @param {?} elem\n         * @param {?} findInAncestors\n         * @return {?}\n         */\n        BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            if (elem == null) {\n                return null;\n            }\n            var /** @type {?} */ t = registry.getTestability(elem);\n            if (isPresent(t)) {\n                return t;\n            }\n            else if (!findInAncestors) {\n                return null;\n            }\n            if (getDOM().isShadowRoot(elem)) {\n                return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n            }\n            return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n        };\n        return BrowserGetTestability;\n    }());\n\n    /**\n     * A service that can be used to get and set the title of a current HTML document.\n     *\n     * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n     * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n     * title value.\n     *\n     * \\@experimental\n     */\n    var Title = (function () {\n        function Title() {\n        }\n        /**\n         * Get the title of the current HTML document.\n         * @return {?}\n         */\n        Title.prototype.getTitle = function () { return getDOM().getTitle(); };\n        /**\n         * Set the title of the current HTML document.\n         * @param {?} newTitle\n         * @return {?}\n         */\n        Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(newTitle); };\n        return Title;\n    }());\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.merge = function (m1, m2) {\n            var /** @type {?} */ m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.equals = function (m1, m2) {\n            var /** @type {?} */ k1 = Object.keys(m1);\n            var /** @type {?} */ k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n                var /** @type {?} */ key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n\n    /**\n     * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n     *\n     * Note: Document might not be available in the Application Context when Application and Rendering\n     * Contexts are not the same (e.g. when running the application into a Web Worker).\n     *\n     * @stable\n     */\n    var /** @type {?} */ DOCUMENT = new core.OpaqueToken('DocumentToken');\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ EVENT_MANAGER_PLUGINS = new core.OpaqueToken('EventManagerPlugins');\n    /**\n     * \\@stable\n     */\n    var EventManager = (function () {\n        /**\n         * @param {?} plugins\n         * @param {?} _zone\n         */\n        function EventManager(plugins, _zone) {\n            var _this = this;\n            this._zone = _zone;\n            this._eventNameToPlugin = new Map();\n            plugins.forEach(function (p) { return p.manager = _this; });\n            this._plugins = plugins.slice().reverse();\n        }\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManager.prototype.addEventListener = function (element, eventName, handler) {\n            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n            return plugin.addEventListener(element, eventName, handler);\n        };\n        /**\n         * @param {?} target\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n            var /** @type {?} */ plugin = this._findPluginFor(eventName);\n            return plugin.addGlobalEventListener(target, eventName, handler);\n        };\n        /**\n         * @return {?}\n         */\n        EventManager.prototype.getZone = function () { return this._zone; };\n        /**\n         * \\@internal\n         * @param {?} eventName\n         * @return {?}\n         */\n        EventManager.prototype._findPluginFor = function (eventName) {\n            var /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n            if (plugin) {\n                return plugin;\n            }\n            var /** @type {?} */ plugins = this._plugins;\n            for (var /** @type {?} */ i = 0; i < plugins.length; i++) {\n                var /** @type {?} */ plugin_1 = plugins[i];\n                if (plugin_1.supports(eventName)) {\n                    this._eventNameToPlugin.set(eventName, plugin_1);\n                    return plugin_1;\n                }\n            }\n            throw new Error(\"No event manager plugin found for event \" + eventName);\n        };\n        EventManager.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        EventManager.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n            { type: core.NgZone, },\n        ]; };\n        return EventManager;\n    }());\n    /**\n     * @abstract\n     */\n    var EventManagerPlugin = (function () {\n        function EventManagerPlugin() {\n        }\n        /**\n         * @abstract\n         * @param {?} eventName\n         * @return {?}\n         */\n        EventManagerPlugin.prototype.supports = function (eventName) { };\n        /**\n         * @abstract\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) { };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n            var /** @type {?} */ target = getDOM().getGlobalEventTarget(element);\n            if (!target) {\n                throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n            }\n            return this.addEventListener(target, eventName, handler);\n        };\n        ;\n        return EventManagerPlugin;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var SharedStylesHost = (function () {\n        function SharedStylesHost() {\n            /** @internal */\n            this._stylesSet = new Set();\n        }\n        /**\n         * @param {?} styles\n         * @return {?}\n         */\n        SharedStylesHost.prototype.addStyles = function (styles) {\n            var _this = this;\n            var /** @type {?} */ additions = new Set();\n            styles.forEach(function (style) {\n                if (!_this._stylesSet.has(style)) {\n                    _this._stylesSet.add(style);\n                    additions.add(style);\n                }\n            });\n            this.onStylesAdded(additions);\n        };\n        /**\n         * @param {?} additions\n         * @return {?}\n         */\n        SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n        /**\n         * @return {?}\n         */\n        SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n        SharedStylesHost.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        SharedStylesHost.ctorParameters = function () { return []; };\n        return SharedStylesHost;\n    }());\n    var DomSharedStylesHost = (function (_super) {\n        __extends$4(DomSharedStylesHost, _super);\n        /**\n         * @param {?} _doc\n         */\n        function DomSharedStylesHost(_doc) {\n            _super.call(this);\n            this._doc = _doc;\n            this._hostNodes = new Set();\n            this._styleNodes = new Set();\n            this._hostNodes.add(_doc.head);\n        }\n        /**\n         * @param {?} styles\n         * @param {?} host\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n            var _this = this;\n            styles.forEach(function (style) {\n                var /** @type {?} */ styleEl = _this._doc.createElement('style');\n                styleEl.textContent = style;\n                _this._styleNodes.add(host.appendChild(styleEl));\n            });\n        };\n        /**\n         * @param {?} hostNode\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.addHost = function (hostNode) {\n            this._addStylesToHost(this._stylesSet, hostNode);\n            this._hostNodes.add(hostNode);\n        };\n        /**\n         * @param {?} hostNode\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n        /**\n         * @param {?} additions\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n            var _this = this;\n            this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n        };\n        /**\n         * @return {?}\n         */\n        DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n        DomSharedStylesHost.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSharedStylesHost.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n        ]; };\n        return DomSharedStylesHost;\n    }(SharedStylesHost));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ NAMESPACE_URIS = {\n        'xlink': 'http://www.w3.org/1999/xlink',\n        'svg': 'http://www.w3.org/2000/svg',\n        'xhtml': 'http://www.w3.org/1999/xhtml'\n    };\n    var /** @type {?} */ TEMPLATE_COMMENT_TEXT = 'template bindings={}';\n    var /** @type {?} */ TEMPLATE_BINDINGS_EXP = /^template bindings=(.*)$/;\n    /**\n     * @abstract\n     */\n    var DomRootRenderer = (function () {\n        /**\n         * @param {?} document\n         * @param {?} eventManager\n         * @param {?} sharedStylesHost\n         * @param {?} animationDriver\n         * @param {?} appId\n         */\n        function DomRootRenderer(document, eventManager, sharedStylesHost, animationDriver, appId) {\n            this.document = document;\n            this.eventManager = eventManager;\n            this.sharedStylesHost = sharedStylesHost;\n            this.animationDriver = animationDriver;\n            this.appId = appId;\n            this.registeredComponents = new Map();\n        }\n        /**\n         * @param {?} componentProto\n         * @return {?}\n         */\n        DomRootRenderer.prototype.renderComponent = function (componentProto) {\n            var /** @type {?} */ renderer = this.registeredComponents.get(componentProto.id);\n            if (!renderer) {\n                renderer = new DomRenderer(this, componentProto, this.animationDriver, this.appId + \"-\" + componentProto.id);\n                this.registeredComponents.set(componentProto.id, renderer);\n            }\n            return renderer;\n        };\n        return DomRootRenderer;\n    }());\n    var DomRootRenderer_ = (function (_super) {\n        __extends$3(DomRootRenderer_, _super);\n        /**\n         * @param {?} _document\n         * @param {?} _eventManager\n         * @param {?} sharedStylesHost\n         * @param {?} animationDriver\n         * @param {?} appId\n         */\n        function DomRootRenderer_(_document, _eventManager, sharedStylesHost, animationDriver, appId) {\n            _super.call(this, _document, _eventManager, sharedStylesHost, animationDriver, appId);\n        }\n        DomRootRenderer_.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomRootRenderer_.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT,] },] },\n            { type: EventManager, },\n            { type: DomSharedStylesHost, },\n            { type: AnimationDriver, },\n            { type: undefined, decorators: [{ type: core.Inject, args: [core.APP_ID,] },] },\n        ]; };\n        return DomRootRenderer_;\n    }(DomRootRenderer));\n    var /** @type {?} */ DIRECT_DOM_RENDERER = {\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        remove: function (node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        },\n        /**\n         * @param {?} node\n         * @param {?} parent\n         * @return {?}\n         */\n        appendChild: function (node, parent) { parent.appendChild(node); },\n        /**\n         * @param {?} node\n         * @param {?} refNode\n         * @return {?}\n         */\n        insertBefore: function (node, refNode) { refNode.parentNode.insertBefore(node, refNode); },\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        nextSibling: function (node) { return node.nextSibling; },\n        /**\n         * @param {?} node\n         * @return {?}\n         */\n        parentElement: function (node) { return (node.parentNode); }\n    };\n    var DomRenderer = (function () {\n        /**\n         * @param {?} _rootRenderer\n         * @param {?} componentProto\n         * @param {?} _animationDriver\n         * @param {?} styleShimId\n         */\n        function DomRenderer(_rootRenderer, componentProto, _animationDriver, styleShimId) {\n            this._rootRenderer = _rootRenderer;\n            this.componentProto = componentProto;\n            this._animationDriver = _animationDriver;\n            this.directRenderer = DIRECT_DOM_RENDERER;\n            this._styles = flattenStyles(styleShimId, componentProto.styles, []);\n            if (componentProto.encapsulation !== core.ViewEncapsulation.Native) {\n                this._rootRenderer.sharedStylesHost.addStyles(this._styles);\n            }\n            if (this.componentProto.encapsulation === core.ViewEncapsulation.Emulated) {\n                this._contentAttr = shimContentAttribute(styleShimId);\n                this._hostAttr = shimHostAttribute(styleShimId);\n            }\n            else {\n                this._contentAttr = null;\n                this._hostAttr = null;\n            }\n        }\n        /**\n         * @param {?} selectorOrNode\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var /** @type {?} */ el;\n            if (typeof selectorOrNode === 'string') {\n                el = this._rootRenderer.document.querySelector(selectorOrNode);\n                if (!el) {\n                    throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n                }\n            }\n            else {\n                el = selectorOrNode;\n            }\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n            return el;\n        };\n        /**\n         * @param {?} parent\n         * @param {?} name\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.createElement = function (parent, name, debugInfo) {\n            var /** @type {?} */ el;\n            if (isNamespaced(name)) {\n                var /** @type {?} */ nsAndName = splitNamespace(name);\n                el = document.createElementNS((NAMESPACE_URIS)[nsAndName[0]], nsAndName[1]);\n            }\n            else {\n                el = document.createElement(name);\n            }\n            if (this._contentAttr) {\n                el.setAttribute(this._contentAttr, '');\n            }\n            if (parent) {\n                parent.appendChild(el);\n            }\n            return el;\n        };\n        /**\n         * @param {?} hostElement\n         * @return {?}\n         */\n        DomRenderer.prototype.createViewRoot = function (hostElement) {\n            var /** @type {?} */ nodesParent;\n            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native) {\n                nodesParent = ((hostElement)).createShadowRoot();\n                for (var /** @type {?} */ i = 0; i < this._styles.length; i++) {\n                    var /** @type {?} */ styleEl = document.createElement('style');\n                    styleEl.textContent = this._styles[i];\n                    nodesParent.appendChild(styleEl);\n                }\n            }\n            else {\n                if (this._hostAttr) {\n                    hostElement.setAttribute(this._hostAttr, '');\n                }\n                nodesParent = hostElement;\n            }\n            return nodesParent;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var /** @type {?} */ comment = document.createComment(TEMPLATE_COMMENT_TEXT);\n            if (parentElement) {\n                parentElement.appendChild(comment);\n            }\n            return comment;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} value\n         * @param {?} debugInfo\n         * @return {?}\n         */\n        DomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var /** @type {?} */ node = document.createTextNode(value);\n            if (parentElement) {\n                parentElement.appendChild(node);\n            }\n            return node;\n        };\n        /**\n         * @param {?} parentElement\n         * @param {?} nodes\n         * @return {?}\n         */\n        DomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            if (!parentElement)\n                return;\n            appendNodes(parentElement, nodes);\n        };\n        /**\n         * @param {?} node\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) { moveNodesAfterSibling(node, viewRootNodes); };\n        /**\n         * @param {?} viewRootNodes\n         * @return {?}\n         */\n        DomRenderer.prototype.detachView = function (viewRootNodes) {\n            for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n                var /** @type {?} */ node = viewRootNodes[i];\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n            }\n        };\n        /**\n         * @param {?} hostElement\n         * @param {?} viewAllNodes\n         * @return {?}\n         */\n        DomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            if (this.componentProto.encapsulation === core.ViewEncapsulation.Native && hostElement) {\n                this._rootRenderer.sharedStylesHost.removeHost(((hostElement)).shadowRoot);\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DomRenderer.prototype.listen = function (renderElement, name, callback) {\n            return this._rootRenderer.eventManager.addEventListener(renderElement, name, decoratePreventDefault(callback));\n        };\n        /**\n         * @param {?} target\n         * @param {?} name\n         * @param {?} callback\n         * @return {?}\n         */\n        DomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._rootRenderer.eventManager.addGlobalEventListener(target, name, decoratePreventDefault(callback));\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            ((renderElement))[propertyName] = propertyValue;\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} attributeName\n         * @param {?} attributeValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var /** @type {?} */ attrNs;\n            var /** @type {?} */ attrNameWithoutNs = attributeName;\n            if (isNamespaced(attributeName)) {\n                var /** @type {?} */ nsAndName = splitNamespace(attributeName);\n                attrNameWithoutNs = nsAndName[1];\n                attributeName = nsAndName[0] + ':' + nsAndName[1];\n                attrNs = NAMESPACE_URIS[nsAndName[0]];\n            }\n            if (isPresent(attributeValue)) {\n                if (attrNs) {\n                    renderElement.setAttributeNS(attrNs, attributeName, attributeValue);\n                }\n                else {\n                    renderElement.setAttribute(attributeName, attributeValue);\n                }\n            }\n            else {\n                if (isPresent(attrNs)) {\n                    renderElement.removeAttributeNS(attrNs, attrNameWithoutNs);\n                }\n                else {\n                    renderElement.removeAttribute(attributeName);\n                }\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} propertyName\n         * @param {?} propertyValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            if (renderElement.nodeType === Node.COMMENT_NODE) {\n                var /** @type {?} */ existingBindings = renderElement.nodeValue.replace(/\\n/g, '').match(TEMPLATE_BINDINGS_EXP);\n                var /** @type {?} */ parsedBindings = JSON.parse(existingBindings[1]);\n                parsedBindings[propertyName] = propertyValue;\n                renderElement.nodeValue =\n                    TEMPLATE_COMMENT_TEXT.replace('{}', JSON.stringify(parsedBindings, null, 2));\n            }\n            else {\n                this.setElementAttribute(renderElement, propertyName, propertyValue);\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} className\n         * @param {?} isAdd\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                renderElement.classList.add(className);\n            }\n            else {\n                renderElement.classList.remove(className);\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} styleName\n         * @param {?} styleValue\n         * @return {?}\n         */\n        DomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (isPresent(styleValue)) {\n                ((renderElement.style))[styleName] = stringify(styleValue);\n            }\n            else {\n                // IE requires '' instead of null\n                // see https://github.com/angular/angular/issues/7916\n                ((renderElement.style))[styleName] = '';\n            }\n        };\n        /**\n         * @param {?} renderElement\n         * @param {?} methodName\n         * @param {?} args\n         * @return {?}\n         */\n        DomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            ((renderElement))[methodName].apply(renderElement, args);\n        };\n        /**\n         * @param {?} renderNode\n         * @param {?} text\n         * @return {?}\n         */\n        DomRenderer.prototype.setText = function (renderNode, text) { renderNode.nodeValue = text; };\n        /**\n         * @param {?} element\n         * @param {?} startingStyles\n         * @param {?} keyframes\n         * @param {?} duration\n         * @param {?} delay\n         * @param {?} easing\n         * @param {?=} previousPlayers\n         * @return {?}\n         */\n        DomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            if (this._rootRenderer.document.body.contains(element)) {\n                return this._animationDriver.animate(element, startingStyles, keyframes, duration, delay, easing, previousPlayers);\n            }\n            return new NoOpAnimationPlayer();\n        };\n        return DomRenderer;\n    }());\n    /**\n     * @param {?} sibling\n     * @param {?} nodes\n     * @return {?}\n     */\n    function moveNodesAfterSibling(sibling, nodes) {\n        var /** @type {?} */ parent = sibling.parentNode;\n        if (nodes.length > 0 && parent) {\n            var /** @type {?} */ nextSibling = sibling.nextSibling;\n            if (nextSibling) {\n                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n                    parent.insertBefore(nodes[i], nextSibling);\n                }\n            }\n            else {\n                for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n                    parent.appendChild(nodes[i]);\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} parent\n     * @param {?} nodes\n     * @return {?}\n     */\n    function appendNodes(parent, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            parent.appendChild(nodes[i]);\n        }\n    }\n    /**\n     * @param {?} eventHandler\n     * @return {?}\n     */\n    function decoratePreventDefault(eventHandler) {\n        return function (event) {\n            var /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                // TODO(tbosch): move preventDefault into event plugins...\n                event.preventDefault();\n                event.returnValue = false;\n            }\n        };\n    }\n    var /** @type {?} */ COMPONENT_REGEX = /%COMP%/g;\n    var /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\n    var /** @type {?} */ HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n    var /** @type {?} */ CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n    /**\n     * @param {?} componentShortId\n     * @return {?}\n     */\n    function shimContentAttribute(componentShortId) {\n        return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    /**\n     * @param {?} componentShortId\n     * @return {?}\n     */\n    function shimHostAttribute(componentShortId) {\n        return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n    }\n    /**\n     * @param {?} compId\n     * @param {?} styles\n     * @param {?} target\n     * @return {?}\n     */\n    function flattenStyles(compId, styles, target) {\n        for (var /** @type {?} */ i = 0; i < styles.length; i++) {\n            var /** @type {?} */ style = styles[i];\n            if (Array.isArray(style)) {\n                flattenStyles(compId, style, target);\n            }\n            else {\n                style = style.replace(COMPONENT_REGEX, compId);\n                target.push(style);\n            }\n        }\n        return target;\n    }\n    var /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    function isNamespaced(name) {\n        return name[0] === ':';\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    function splitNamespace(name) {\n        var /** @type {?} */ match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n\n    var /** @type {?} */ CORE_TOKENS = {\n        'ApplicationRef': core.ApplicationRef,\n        'NgZone': core.NgZone,\n    };\n    var /** @type {?} */ INSPECT_GLOBAL_NAME = 'ng.probe';\n    var /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n    /**\n     * Returns a {\\@link DebugElement} for the given native DOM element, or\n     * null if the given native element does not have an Angular view associated\n     * with it.\n     * @param {?} element\n     * @return {?}\n     */\n    function inspectNativeElement(element) {\n        return core.getDebugNode(element);\n    }\n    /**\n     * Deprecated. Use the one from '\\@angular/core'.\n     * @deprecated\n     */\n    var NgProbeToken = (function () {\n        /**\n         * @param {?} name\n         * @param {?} token\n         */\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * @param {?} rootRenderer\n     * @param {?} extraTokens\n     * @param {?} coreTokens\n     * @return {?}\n     */\n    function _createConditionalRootRenderer(rootRenderer, extraTokens, coreTokens) {\n        return core.isDevMode() ?\n            _createRootRenderer(rootRenderer, (extraTokens || []).concat(coreTokens || [])) :\n            rootRenderer;\n    }\n    /**\n     * @param {?} rootRenderer\n     * @param {?} extraTokens\n     * @return {?}\n     */\n    function _createRootRenderer(rootRenderer, extraTokens) {\n        getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n        getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n        return new DebugDomRootRenderer(rootRenderer);\n    }\n    /**\n     * @param {?} tokens\n     * @return {?}\n     */\n    function _ngProbeTokensToMap(tokens) {\n        return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n    }\n    /**\n     * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n     */\n    var /** @type {?} */ ELEMENT_PROBE_PROVIDERS = [{\n            provide: core.RootRenderer,\n            useFactory: _createConditionalRootRenderer,\n            deps: [\n                DomRootRenderer, [NgProbeToken, new core.Optional()],\n                [core.NgProbeToken, new core.Optional()]\n            ]\n        }];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var DomEventsPlugin = (function (_super) {\n        __extends$5(DomEventsPlugin, _super);\n        function DomEventsPlugin() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            element.addEventListener(eventName, /** @type {?} */ (handler), false);\n            return function () { return element.removeEventListener(eventName, /** @type {?} */ (handler), false); };\n        };\n        DomEventsPlugin.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomEventsPlugin.ctorParameters = function () { return []; };\n        return DomEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ EVENT_NAMES = {\n        // pan\n        'pan': true,\n        'panstart': true,\n        'panmove': true,\n        'panend': true,\n        'pancancel': true,\n        'panleft': true,\n        'panright': true,\n        'panup': true,\n        'pandown': true,\n        // pinch\n        'pinch': true,\n        'pinchstart': true,\n        'pinchmove': true,\n        'pinchend': true,\n        'pinchcancel': true,\n        'pinchin': true,\n        'pinchout': true,\n        // press\n        'press': true,\n        'pressup': true,\n        // rotate\n        'rotate': true,\n        'rotatestart': true,\n        'rotatemove': true,\n        'rotateend': true,\n        'rotatecancel': true,\n        // swipe\n        'swipe': true,\n        'swipeleft': true,\n        'swiperight': true,\n        'swipeup': true,\n        'swipedown': true,\n        // tap\n        'tap': true,\n    };\n    /**\n     * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure\n     * Hammer gestures.\n     *\n     * @experimental\n     */\n    var /** @type {?} */ HAMMER_GESTURE_CONFIG = new core.OpaqueToken('HammerGestureConfig');\n    /**\n     * \\@experimental\n     */\n    var HammerGestureConfig = (function () {\n        function HammerGestureConfig() {\n            this.events = [];\n            this.overrides = {};\n        }\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        HammerGestureConfig.prototype.buildHammer = function (element) {\n            var /** @type {?} */ mc = new Hammer(element);\n            mc.get('pinch').set({ enable: true });\n            mc.get('rotate').set({ enable: true });\n            for (var eventName in this.overrides) {\n                mc.get(eventName).set(this.overrides[eventName]);\n            }\n            return mc;\n        };\n        HammerGestureConfig.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGestureConfig.ctorParameters = function () { return []; };\n        return HammerGestureConfig;\n    }());\n    var HammerGesturesPlugin = (function (_super) {\n        __extends$6(HammerGesturesPlugin, _super);\n        /**\n         * @param {?} _config\n         */\n        function HammerGesturesPlugin(_config) {\n            _super.call(this);\n            this._config = _config;\n        }\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        HammerGesturesPlugin.prototype.supports = function (eventName) {\n            if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n                return false;\n            }\n            if (!((window)).Hammer) {\n                throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n            }\n            return true;\n        };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var _this = this;\n            var /** @type {?} */ zone = this.manager.getZone();\n            eventName = eventName.toLowerCase();\n            return zone.runOutsideAngular(function () {\n                // Creating the manager bind events, must be done outside of angular\n                var /** @type {?} */ mc = _this._config.buildHammer(element);\n                var /** @type {?} */ callback = function (eventObj) {\n                    zone.runGuarded(function () { handler(eventObj); });\n                };\n                mc.on(eventName, callback);\n                return function () { return mc.off(eventName, callback); };\n            });\n        };\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n        HammerGesturesPlugin.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        HammerGesturesPlugin.ctorParameters = function () { return [\n            { type: HammerGestureConfig, decorators: [{ type: core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n        ]; };\n        return HammerGesturesPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n    var /** @type {?} */ MODIFIER_KEY_GETTERS = {\n        'alt': function (event) { return event.altKey; },\n        'control': function (event) { return event.ctrlKey; },\n        'meta': function (event) { return event.metaKey; },\n        'shift': function (event) { return event.shiftKey; }\n    };\n    /**\n     * \\@experimental\n     */\n    var KeyEventsPlugin = (function (_super) {\n        __extends$7(KeyEventsPlugin, _super);\n        function KeyEventsPlugin() {\n            _super.call(this);\n        }\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\n        /**\n         * @param {?} element\n         * @param {?} eventName\n         * @param {?} handler\n         * @return {?}\n         */\n        KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n            var /** @type {?} */ parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n            var /** @type {?} */ outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n            return this.manager.getZone().runOutsideAngular(function () {\n                return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n            });\n        };\n        /**\n         * @param {?} eventName\n         * @return {?}\n         */\n        KeyEventsPlugin.parseEventName = function (eventName) {\n            var /** @type {?} */ parts = eventName.toLowerCase().split('.');\n            var /** @type {?} */ domEventName = parts.shift();\n            if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n                return null;\n            }\n            var /** @type {?} */ key = KeyEventsPlugin._normalizeKey(parts.pop());\n            var /** @type {?} */ fullKey = '';\n            MODIFIER_KEYS.forEach(function (modifierName) {\n                var /** @type {?} */ index = parts.indexOf(modifierName);\n                if (index > -1) {\n                    parts.splice(index, 1);\n                    fullKey += modifierName + '.';\n                }\n            });\n            fullKey += key;\n            if (parts.length != 0 || key.length === 0) {\n                // returning null instead of throwing to let another plugin process the event\n                return null;\n            }\n            var /** @type {?} */ result = {};\n            result['domEventName'] = domEventName;\n            result['fullKey'] = fullKey;\n            return result;\n        };\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        KeyEventsPlugin.getEventFullKey = function (event) {\n            var /** @type {?} */ fullKey = '';\n            var /** @type {?} */ key = getDOM().getEventKey(event);\n            key = key.toLowerCase();\n            if (key === ' ') {\n                key = 'space'; // for readability\n            }\n            else if (key === '.') {\n                key = 'dot'; // because '.' is used as a separator in event names\n            }\n            MODIFIER_KEYS.forEach(function (modifierName) {\n                if (modifierName != key) {\n                    var /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                    if (modifierGetter(event)) {\n                        fullKey += modifierName + '.';\n                    }\n                }\n            });\n            fullKey += key;\n            return fullKey;\n        };\n        /**\n         * @param {?} fullKey\n         * @param {?} handler\n         * @param {?} zone\n         * @return {?}\n         */\n        KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n            return function (event /** TODO #9100 */) {\n                if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                    zone.runGuarded(function () { return handler(event); });\n                }\n            };\n        };\n        /**\n         * \\@internal\n         * @param {?} keyName\n         * @return {?}\n         */\n        KeyEventsPlugin._normalizeKey = function (keyName) {\n            // TODO: switch to a Map if the mapping grows too much\n            switch (keyName) {\n                case 'esc':\n                    return 'escape';\n                default:\n                    return keyName;\n            }\n        };\n        KeyEventsPlugin.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        KeyEventsPlugin.ctorParameters = function () { return []; };\n        return KeyEventsPlugin;\n    }(EventManagerPlugin));\n\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var /** @type {?} */ SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var /** @type {?} */ DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    /**\n     * @param {?} srcset\n     * @return {?}\n     */\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\n    var /** @type {?} */ inertElement = null;\n    /** Lazily initialized to make sure the DOM adapter gets set before use. */\n    var /** @type {?} */ DOM = null;\n    /**\n     * Returns an HTML element that is guaranteed to not execute code when creating elements in it.\n     * @return {?}\n     */\n    function getInertElement() {\n        if (inertElement)\n            return inertElement;\n        DOM = getDOM();\n        // Prefer using <template> element if supported.\n        var /** @type {?} */ templateEl = DOM.createElement('template');\n        if ('content' in templateEl)\n            return templateEl;\n        var /** @type {?} */ doc = DOM.createHtmlDocument();\n        inertElement = DOM.querySelector(doc, 'body');\n        if (inertElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so we\n            // need to create one.\n            var /** @type {?} */ html = DOM.createElement('html', doc);\n            inertElement = DOM.createElement('body', doc);\n            DOM.appendChild(html, inertElement);\n            DOM.appendChild(doc, html);\n        }\n        return inertElement;\n    }\n    /**\n     * @param {?} tags\n     * @return {?}\n     */\n    function tagSet(tags) {\n        var /** @type {?} */ res = {};\n        for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n            var t = _a[_i];\n            res[t] = true;\n        }\n        return res;\n    }\n    /**\n     * @param {...?} sets\n     * @return {?}\n     */\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i - 0] = arguments[_i];\n        }\n        var /** @type {?} */ res = {};\n        for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n            var s = sets_1[_a];\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var /** @type {?} */ VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var /** @type {?} */ OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var /** @type {?} */ OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var /** @type {?} */ OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var /** @type {?} */ BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var /** @type {?} */ INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var /** @type {?} */ VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var /** @type {?} */ URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var /** @type {?} */ SRCSET_ATTRS = tagSet('srcset');\n    var /** @type {?} */ HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var /** @type {?} */ VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = (function () {\n        function SanitizingHtmlSerializer() {\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        /**\n         * @param {?} el\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var /** @type {?} */ current = el.firstChild;\n            while (current) {\n                if (DOM.isElementNode(current)) {\n                    this.startElement(/** @type {?} */ (current));\n                }\n                else if (DOM.isTextNode(current)) {\n                    this.chars(DOM.nodeValue(current));\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (DOM.firstChild(current)) {\n                    current = DOM.firstChild(current);\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (DOM.isElementNode(current)) {\n                        this.endElement(/** @type {?} */ (current));\n                    }\n                    if (DOM.nextSibling(current)) {\n                        current = DOM.nextSibling(current);\n                        break;\n                    }\n                    current = DOM.parentElement(current);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * @param {?} element\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var _this = this;\n            var /** @type {?} */ tagName = DOM.nodeName(element).toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            DOM.attributeMap(element).forEach(function (value, attrName) {\n                var /** @type {?} */ lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    _this.sanitizedSomething = true;\n                    return;\n                }\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                _this.buf.push(' ');\n                _this.buf.push(attrName);\n                _this.buf.push('=\"');\n                _this.buf.push(encodeEntities(value));\n                _this.buf.push('\"');\n            });\n            this.buf.push('>');\n        };\n        /**\n         * @param {?} current\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var /** @type {?} */ tagName = DOM.nodeName(current).toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        /**\n         * @param {?} chars\n         * @return {?}\n         */\n        SanitizingHtmlSerializer.prototype.chars = function (chars /** TODO #9100 */) { this.buf.push(encodeEntities(chars)); };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var /** @type {?} */ SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var /** @type {?} */ NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param {?} value\n     * @return {?}\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var /** @type {?} */ hi = match.charCodeAt(0);\n            var /** @type {?} */ low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    function stripCustomNsAttrs(el) {\n        DOM.attributeMap(el).forEach(function (_, attrName) {\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                DOM.removeAttribute(el, attrName);\n            }\n        });\n        for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n            var n = _a[_i];\n            if (DOM.isElementNode(n))\n                stripCustomNsAttrs(/** @type {?} */ (n));\n        }\n    }\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     * @param {?} unsafeHtmlInput\n     * @return {?}\n     */\n    function sanitizeHtml(unsafeHtmlInput) {\n        try {\n            var /** @type {?} */ containerEl = getInertElement();\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var /** @type {?} */ mXSSAttempts = 5;\n            var /** @type {?} */ parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                DOM.setInnerHTML(containerEl, unsafeHtml);\n                if (((DOM.defaultDoc())).documentMode) {\n                    // strip custom-namespaced attributes on IE<=11\n                    stripCustomNsAttrs(containerEl);\n                }\n                parsedHtml = DOM.getInnerHTML(containerEl);\n            } while (unsafeHtml !== parsedHtml);\n            var /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n            var /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n            // Clear out the body element.\n            var /** @type {?} */ parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n            for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n                var child = _a[_i];\n                DOM.removeChild(parent_1, child);\n            }\n            if (core.isDevMode() && sanitizer.sanitizedSomething) {\n                DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        catch (e) {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            inertElement = null;\n            throw e;\n        }\n    }\n\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var /** @type {?} */ VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var /** @type {?} */ TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var /** @type {?} */ COLOR_FNS = '(?:rgb|hsl)a?';\n    var /** @type {?} */ GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var /** @type {?} */ CSS3_FNS = '(?:calc|attr)';\n    var /** @type {?} */ FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var /** @type {?} */ SAFE_STYLE_VALUE = new RegExp((\"^(\" + VALUES + \"|\") +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var /** @type {?} */ URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     * @param {?} value\n     * @return {?}\n     */\n    function hasBalancedQuotes(value) {\n        var /** @type {?} */ outsideSingle = true;\n        var /** @type {?} */ outsideDouble = true;\n        for (var /** @type {?} */ i = 0; i < value.length; i++) {\n            var /** @type {?} */ c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     * @param {?} value\n     * @return {?}\n     */\n    function sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var /** @type {?} */ urlMatch = value.match(URL_RE);\n        if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (core.isDevMode()) {\n            getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n     * values to be safe to use in the different DOM contexts.\n     *\n     * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n     * the website.\n     *\n     * In specific situations, it might be necessary to disable sanitization, for example if the\n     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n     * methods, and then binding to that value from the template.\n     *\n     * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n     * Cross Site Scripting (XSS) security bug!\n     *\n     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n     * close as possible to the source of the value, to make it easy to verify no security bug is\n     * created by its use.\n     *\n     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n     * code. The sanitizer leaves safe values intact.\n     *\n     * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n     * sanitization for the value passed in. Carefully check and audit all values and code paths going\n     * into this call. Make sure any user data is appropriately escaped for this security context.\n     * For more detail, see the [Security Guide](http://g.co/ng/security).\n     *\n     * \\@stable\n     * @abstract\n     */\n    var DomSanitizer = (function () {\n        function DomSanitizer() {\n        }\n        /**\n         * Sanitizes a value for use in the given SecurityContext.\n         *\n         * If value is trusted for the context, this method will unwrap the contained safe value and use\n         * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n         * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n         * is responsible to make sure that the value can definitely be safely used in the given context.\n         * @abstract\n         * @param {?} context\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.sanitize = function (context, value) { };\n        /**\n         * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n         * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n         * leave safe HTML intact, so in most situations this method should not be used.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustHtml = function (value) { };\n        /**\n         * Bypass security and trust the given value to be safe style value (CSS).\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustStyle = function (value) { };\n        /**\n         * Bypass security and trust the given value to be safe JavaScript.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustScript = function (value) { };\n        /**\n         * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n         * in hyperlinks or `<img src>`.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustUrl = function (value) { };\n        /**\n         * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n         * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n         *\n         * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n         * security risks!\n         * @abstract\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizer.prototype.bypassSecurityTrustResourceUrl = function (value) { };\n        return DomSanitizer;\n    }());\n    var DomSanitizerImpl = (function (_super) {\n        __extends$8(DomSanitizerImpl, _super);\n        function DomSanitizerImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} ctx\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n            if (value == null)\n                return null;\n            switch (ctx) {\n                case core.SecurityContext.NONE:\n                    return value;\n                case core.SecurityContext.HTML:\n                    if (value instanceof SafeHtmlImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'HTML');\n                    return sanitizeHtml(String(value));\n                case core.SecurityContext.STYLE:\n                    if (value instanceof SafeStyleImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Style');\n                    return sanitizeStyle(value);\n                case core.SecurityContext.SCRIPT:\n                    if (value instanceof SafeScriptImpl)\n                        return value.changingThisBreaksApplicationSecurity;\n                    this.checkNotSafeValue(value, 'Script');\n                    throw new Error('unsafe value used in a script context');\n                case core.SecurityContext.URL:\n                    if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                        // Allow resource URLs in URL contexts, they are strictly more trusted.\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'URL');\n                    return sanitizeUrl(String(value));\n                case core.SecurityContext.RESOURCE_URL:\n                    if (value instanceof SafeResourceUrlImpl) {\n                        return value.changingThisBreaksApplicationSecurity;\n                    }\n                    this.checkNotSafeValue(value, 'ResourceURL');\n                    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n                default:\n                    throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n            }\n        };\n        /**\n         * @param {?} value\n         * @param {?} expectedType\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n            if (value instanceof SafeValueImpl) {\n                throw new Error((\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \") +\n                    \"(see http://g.co/ng/security#xss)\");\n            }\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n            return new SafeResourceUrlImpl(value);\n        };\n        DomSanitizerImpl.decorators = [\n            { type: core.Injectable },\n        ];\n        /** @nocollapse */\n        DomSanitizerImpl.ctorParameters = function () { return []; };\n        return DomSanitizerImpl;\n    }(DomSanitizer));\n    /**\n     * @abstract\n     */\n    var SafeValueImpl = (function () {\n        /**\n         * @param {?} changingThisBreaksApplicationSecurity\n         */\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n            // empty\n        }\n        /**\n         * @abstract\n         * @return {?}\n         */\n        SafeValueImpl.prototype.getTypeName = function () { };\n        /**\n         * @return {?}\n         */\n        SafeValueImpl.prototype.toString = function () {\n            return (\"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity) +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = (function (_super) {\n        __extends$8(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = (function (_super) {\n        __extends$8(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = (function (_super) {\n        __extends$8(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = (function (_super) {\n        __extends$8(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = (function (_super) {\n        __extends$8(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n\n    var /** @type {?} */ INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n        { provide: core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n        { provide: _angular_common.PlatformLocation, useClass: BrowserPlatformLocation }\n    ];\n    /**\n     * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n     * Attacker-controlled data introduced by an unsanitized provider could expose your\n     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n     * @experimental\n     */\n    var /** @type {?} */ BROWSER_SANITIZATION_PROVIDERS = [\n        { provide: core.Sanitizer, useExisting: DomSanitizer },\n        { provide: DomSanitizer, useClass: DomSanitizerImpl },\n    ];\n    /**\n     * @stable\n     */\n    var /** @type {?} */ platformBrowser = core.createPlatformFactory(core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n    /**\n     * @return {?}\n     */\n    function initDomAdapter() {\n        BrowserDomAdapter.makeCurrent();\n        BrowserGetTestability.init();\n    }\n    /**\n     * @return {?}\n     */\n    function errorHandler() {\n        return new core.ErrorHandler();\n    }\n    /**\n     * @return {?}\n     */\n    function _document() {\n        return getDOM().defaultDoc();\n    }\n    /**\n     * @return {?}\n     */\n    function _resolveDefaultAnimationDriver() {\n        if (getDOM().supportsWebAnimation()) {\n            return new WebAnimationsDriver();\n        }\n        return AnimationDriver.NOOP;\n    }\n    /**\n     * The ng module for the browser.\n     *\n     * \\@stable\n     */\n    var BrowserModule = (function () {\n        /**\n         * @param {?} parentModule\n         */\n        function BrowserModule(parentModule) {\n            if (parentModule) {\n                throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n            }\n        }\n        BrowserModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [\n                            BROWSER_SANITIZATION_PROVIDERS, { provide: core.ErrorHandler, useFactory: errorHandler, deps: [] },\n                            { provide: DOCUMENT, useFactory: _document, deps: [] },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true },\n                            { provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true },\n                            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig },\n                            { provide: DomRootRenderer, useClass: DomRootRenderer_ },\n                            { provide: core.RootRenderer, useExisting: DomRootRenderer },\n                            { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n                            { provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver }, DomSharedStylesHost,\n                            core.Testability, EventManager, ELEMENT_PROBE_PROVIDERS, Title\n                        ],\n                        exports: [_angular_common.CommonModule, core.ApplicationModule]\n                    },] },\n        ];\n        /** @nocollapse */\n        BrowserModule.ctorParameters = function () { return [\n            { type: BrowserModule, decorators: [{ type: core.Optional }, { type: core.SkipSelf },] },\n        ]; };\n        return BrowserModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * JS version of browser APIs. This library can only run in the browser.\n     */\n    var /** @type {?} */ win = typeof window !== 'undefined' && window || ({});\n\n    var ChangeDetectionPerfRecord = (function () {\n        /**\n         * @param {?} msPerTick\n         * @param {?} numTicks\n         */\n        function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n            this.msPerTick = msPerTick;\n            this.numTicks = numTicks;\n        }\n        return ChangeDetectionPerfRecord;\n    }());\n    /**\n     * Entry point for all Angular debug tools. This object corresponds to the `ng`\n     * global variable accessible in the dev console.\n     */\n    var AngularTools = (function () {\n        /**\n         * @param {?} ref\n         */\n        function AngularTools(ref) {\n            this.profiler = new AngularProfiler(ref);\n        }\n        return AngularTools;\n    }());\n    /**\n     * Entry point for all Angular profiling-related debug tools. This object\n     * corresponds to the `ng.profiler` in the dev console.\n     */\n    var AngularProfiler = (function () {\n        /**\n         * @param {?} ref\n         */\n        function AngularProfiler(ref) {\n            this.appRef = ref.injector.get(core.ApplicationRef);\n        }\n        /**\n         * Exercises change detection in a loop and then prints the average amount of\n         * time in milliseconds how long a single round of change detection takes for\n         * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n         * of 500 milliseconds.\n         *\n         * Optionally, a user may pass a `config` parameter containing a map of\n         * options. Supported options are:\n         *\n         * `record` (boolean) - causes the profiler to record a CPU profile while\n         * it exercises the change detector. Example:\n         *\n         * ```\n         * ng.profiler.timeChangeDetection({record: true})\n         * ```\n         * @param {?} config\n         * @return {?}\n         */\n        AngularProfiler.prototype.timeChangeDetection = function (config) {\n            var /** @type {?} */ record = config && config['record'];\n            var /** @type {?} */ profileName = 'Change Detection';\n            // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n            var /** @type {?} */ isProfilerAvailable = isPresent(win.console.profile);\n            if (record && isProfilerAvailable) {\n                win.console.profile(profileName);\n            }\n            var /** @type {?} */ start = getDOM().performanceNow();\n            var /** @type {?} */ numTicks = 0;\n            while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n                this.appRef.tick();\n                numTicks++;\n            }\n            var /** @type {?} */ end = getDOM().performanceNow();\n            if (record && isProfilerAvailable) {\n                // need to cast to <any> because type checker thinks there's no argument\n                // while in fact there is:\n                //\n                // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n                ((win.console.profileEnd))(profileName);\n            }\n            var /** @type {?} */ msPerTick = (end - start) / numTicks;\n            win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n            win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n            return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n        };\n        return AngularProfiler;\n    }());\n\n    var /** @type {?} */ context = (global$1);\n    /**\n     * Enabled Angular 2 debug tools that are accessible via your browser's\n     * developer console.\n     *\n     * Usage:\n     *\n     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n     * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n     *    then hit Enter.\n     *\n     * \\@experimental All debugging apis are currently experimental.\n     * @param {?} ref\n     * @return {?}\n     */\n    function enableDebugTools(ref) {\n        ((Object)).assign(context.ng, new AngularTools(ref));\n        return ref;\n    }\n    /**\n     * Disables Angular 2 tools.\n     *\n     * \\@experimental All debugging apis are currently experimental.\n     * @return {?}\n     */\n    function disableDebugTools() {\n        if (context.ng) {\n            delete context.ng.profiler;\n        }\n    }\n\n    /**\n     * Predicates for use with {\\@link DebugElement}'s query functions.\n     *\n     * \\@experimental All debugging apis are currently experimental.\n     */\n    var By = (function () {\n        function By() {\n        }\n        /**\n         * Match all elements.\n         *\n         * ## Example\n         *\n         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n         * @return {?}\n         */\n        By.all = function () { return function (debugElement) { return true; }; };\n        /**\n         * Match elements by the given CSS selector.\n         *\n         * ## Example\n         *\n         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n         * @param {?} selector\n         * @return {?}\n         */\n        By.css = function (selector) {\n            return function (debugElement) {\n                return isPresent(debugElement.nativeElement) ?\n                    getDOM().elementMatches(debugElement.nativeElement, selector) :\n                    false;\n            };\n        };\n        /**\n         * Match elements that have the given directive present.\n         *\n         * ## Example\n         *\n         * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n         * @param {?} type\n         * @return {?}\n         */\n        By.directive = function (type) {\n            return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n        };\n        return By;\n    }());\n\n    var /** @type {?} */ __platform_browser_private__ = {\n        BrowserPlatformLocation: BrowserPlatformLocation,\n        DomAdapter: DomAdapter,\n        BrowserDomAdapter: BrowserDomAdapter,\n        BrowserGetTestability: BrowserGetTestability,\n        getDOM: getDOM,\n        setRootDomAdapter: setRootDomAdapter,\n        DomRootRenderer_: DomRootRenderer_,\n        DomRootRenderer: DomRootRenderer,\n        NAMESPACE_URIS: NAMESPACE_URIS,\n        shimContentAttribute: shimContentAttribute,\n        shimHostAttribute: shimHostAttribute,\n        flattenStyles: flattenStyles,\n        splitNamespace: splitNamespace,\n        isNamespaced: isNamespaced,\n        DomSharedStylesHost: DomSharedStylesHost,\n        SharedStylesHost: SharedStylesHost,\n        ELEMENT_PROBE_PROVIDERS: ELEMENT_PROBE_PROVIDERS,\n        DomEventsPlugin: DomEventsPlugin,\n        KeyEventsPlugin: KeyEventsPlugin,\n        HammerGesturesPlugin: HammerGesturesPlugin,\n        initDomAdapter: initDomAdapter,\n        INTERNAL_BROWSER_PLATFORM_PROVIDERS: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n        BROWSER_SANITIZATION_PROVIDERS: BROWSER_SANITIZATION_PROVIDERS,\n        WebAnimationsDriver: WebAnimationsDriver\n    };\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new core.Version('2.4.10');\n\n    exports.BrowserModule = BrowserModule;\n    exports.platformBrowser = platformBrowser;\n    exports.Title = Title;\n    exports.disableDebugTools = disableDebugTools;\n    exports.enableDebugTools = enableDebugTools;\n    exports.AnimationDriver = AnimationDriver;\n    exports.By = By;\n    exports.NgProbeToken = NgProbeToken;\n    exports.DOCUMENT = DOCUMENT;\n    exports.EVENT_MANAGER_PLUGINS = EVENT_MANAGER_PLUGINS;\n    exports.EventManager = EventManager;\n    exports.HAMMER_GESTURE_CONFIG = HAMMER_GESTURE_CONFIG;\n    exports.HammerGestureConfig = HammerGestureConfig;\n    exports.DomSanitizer = DomSanitizer;\n    exports.VERSION = VERSION;\n    exports.__platform_browser_private__ = __platform_browser_private__;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/platform-browser/bundles/platform-browser.umd.js\n// module id = 23\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar rx_pubsub_1 = require(\"rx-pubsub\");\r\nvar extend = require(\"smart-extend\");\r\nvar xdom_util_1 = require(\"xdom-util\");\r\nvar component_injector_1 = require(\"component-injector\");\r\nvar ModalWindowComponent = (function () {\r\n    function ModalWindowComponent(pubsub, componentInjector) {\r\n        this.pubsub = pubsub;\r\n        this.componentInjector = componentInjector;\r\n        this.animationClass = 'fade';\r\n        this.showModalClass = 'in';\r\n        this.bodyOpenModalClass = 'modal-open';\r\n        this.defaultButtonsProperties = {\r\n            visible: true,\r\n            cancel: {\r\n                visible: true,\r\n                label: 'Cancel',\r\n                event: false\r\n            },\r\n            success: {\r\n                visible: true,\r\n                label: 'Save',\r\n                event: false\r\n            }\r\n        };\r\n        this.defaultProperties = {\r\n            title: '',\r\n            show: false,\r\n            hide: false,\r\n            componentSelector: false,\r\n            componentInputs: false,\r\n            htmlContent: '',\r\n            overlayClick: true,\r\n            customClass: '',\r\n            buttons: {\r\n                visible: true,\r\n                cancel: {\r\n                    visible: true,\r\n                    label: 'Cancel',\r\n                    event: false\r\n                },\r\n                success: {\r\n                    visible: true,\r\n                    label: 'Save',\r\n                    event: false\r\n                }\r\n            }\r\n        };\r\n        this.properties = {};\r\n    }\r\n    Object.defineProperty(ModalWindowComponent.prototype, \"id\", {\r\n        set: function (eventName) {\r\n            if (eventName) {\r\n                this.eventName = eventName;\r\n                // remove previous subscription and create new one\r\n                this.unsubscribe();\r\n                this.subscribeToEvent();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ModalWindowComponent.prototype.ngOnInit = function () {\r\n    };\r\n    ModalWindowComponent.prototype.ngOnDestroy = function () {\r\n        this.unsubscribe();\r\n        this.resetInjectedComponent();\r\n    };\r\n    ModalWindowComponent.prototype.cancelAction = function () {\r\n        if (this.properties.buttons.cancel.event) {\r\n            this.pubsub.publish(this.properties.buttons.cancel.event, true);\r\n        }\r\n        this.hide();\r\n    };\r\n    ModalWindowComponent.prototype.successAction = function () {\r\n        if (this.properties.buttons.success.event) {\r\n            this.pubsub.publish(this.properties.buttons.success.event, true);\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.overlayClick = function () {\r\n        if (this.properties.overlayClick) {\r\n            this.cancelAction();\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.show = function () {\r\n        // add class to modal DOM element to make it visible\r\n        var modalDom = this.modalWindow.nativeElement;\r\n        if (!xdom_util_1.XDomUtil.hasClass(modalDom, this.showModalClass)) {\r\n            xdom_util_1.XDomUtil.addClass(modalDom, this.showModalClass);\r\n        }\r\n        // add class to modal body to disable the scrolling\r\n        var body = document.querySelector('body');\r\n        if (!xdom_util_1.XDomUtil.hasClass(body, this.bodyOpenModalClass)) {\r\n            xdom_util_1.XDomUtil.addClass(body, this.bodyOpenModalClass);\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.hide = function () {\r\n        var element = this.modalWindow.nativeElement;\r\n        xdom_util_1.XDomUtil.removeClass(element, this.showModalClass);\r\n        var body = document.querySelector('body');\r\n        xdom_util_1.XDomUtil.removeClass(body, this.bodyOpenModalClass);\r\n    };\r\n    ModalWindowComponent.prototype.subscribeToEvent = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.pubsub.subscribe(this.eventName, function (data) {\r\n            _this.initModal(data);\r\n        });\r\n    };\r\n    ModalWindowComponent.prototype.initModal = function (properties) {\r\n        if (properties.show) {\r\n            // remove previously injected component\r\n            this.resetInjectedComponent();\r\n            // reset the properties\r\n            this.setProperties(properties);\r\n            // inject component\r\n            if (this.properties.componentSelector) {\r\n                this.injectedComponentRef = this.injectComponent(this.properties.componentSelector);\r\n                // set the components properties\r\n                this.setComponentProperties();\r\n            }\r\n            // display the modal\r\n            this.show();\r\n            // reset modal event subscriber\r\n            this.resetModalEventSubscriber();\r\n        }\r\n        else if (properties.hide) {\r\n            // remove previously injected component\r\n            this.resetInjectedComponent();\r\n            // reset the properties\r\n            this.setProperties(properties);\r\n            // hide the modal\r\n            this.hide();\r\n            // reset modal event subscriber\r\n            this.resetModalEventSubscriber();\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.unsubscribe = function () {\r\n        if (this.eventSubscriber) {\r\n            this.pubsub.unsubscribe(this.eventSubscriber);\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.injectComponent = function (componentSelector) {\r\n        var result;\r\n        if (componentSelector) {\r\n            result = this.componentInjector.inject(this.injectContainer, componentSelector);\r\n        }\r\n        return result;\r\n    };\r\n    ModalWindowComponent.prototype.setComponentProperties = function () {\r\n        if (this.properties.componentInputs && this.injectedComponentRef) {\r\n            this.componentInjector.setProperties(this.injectedComponentRef, this.properties.componentInputs);\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.resetInjectedComponent = function () {\r\n        if (this.injectedComponentRef) {\r\n            this.componentInjector.remove(this.injectedComponentRef);\r\n            this.injectedComponentRef = null;\r\n        }\r\n    };\r\n    ModalWindowComponent.prototype.setProperties = function (properties) {\r\n        this.properties = extend.deep({}, this.defaultProperties, properties);\r\n    };\r\n    ModalWindowComponent.prototype.resetModalEventSubscriber = function () {\r\n        // reset modal show/hide display\r\n        this.pubsub.publish(this.eventName, {});\r\n    };\r\n    return ModalWindowComponent;\r\n}());\r\n__decorate([\r\n    core_1.ViewChild('modalWindow'),\r\n    __metadata(\"design:type\", core_1.ElementRef)\r\n], ModalWindowComponent.prototype, \"modalWindow\", void 0);\r\n__decorate([\r\n    core_1.ViewChild('injectContainer', { read: core_1.ViewContainerRef }),\r\n    __metadata(\"design:type\", core_1.ViewContainerRef)\r\n], ModalWindowComponent.prototype, \"injectContainer\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", String)\r\n], ModalWindowComponent.prototype, \"animationClass\", void 0);\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", String),\r\n    __metadata(\"design:paramtypes\", [String])\r\n], ModalWindowComponent.prototype, \"id\", null);\r\nModalWindowComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'app-modal-window',\r\n        templateUrl: './modal-window.component.html',\r\n        styleUrls: ['./modal-window.component.css']\r\n    }),\r\n    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub, component_injector_1.ComponentInjector])\r\n], ModalWindowComponent);\r\nexports.ModalWindowComponent = ModalWindowComponent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/modal-window/modal-window.component.ts\n// module id = 24\n// module chunks = 0","(function(r){return function(){var h=function(g,m,h,n){n=function(e){return h[e]?m[e]:(h[e]=1,m[e]={},m[e]=g[e](m[e]))};g[1]=function(e){var g=n(2);var k=function(a){var b;if(a){var c={};if(\"object\"!==typeof a)c[a]=!0;else{Array.isArray(a)||(a=Object.keys(a));var e=0;for(b=a.length;e<b;e++){var d=a[e];c[d]=!0}}return c}};var c=function(a){var b=function(a){var c=arguments.length;for(var d=-1,e=Array(c);++d<c;)e[d]=arguments[d];b.options.target?c=b.options.target:(c=a,e.shift());return g(b.options,\nc,e)};a&&(b.isBase=!0);b.options={};Object.defineProperties(b,h);return b};var h={deep:{get:function(){var a=this.isBase?c():this;a.options.deep=!0;return a}},own:{get:function(){var a=this.isBase?c():this;a.options.own=!0;return a}},allowNull:{get:function(){var a=this.isBase?c():this;a.options.allowNull=!0;return a}},nullDeletes:{get:function(){var a=this.isBase?c():this;a.options.nullDeletes=!0;return a}},concat:{get:function(){var a=this.isBase?c():this;a.options.concat=!0;return a}},clone:{get:function(){var a=\nthis.isBase?c():this;a.options.target={};return a}},notDeep:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notDeep=k(b);return a}}},deepOnly:{get:function(){var a=this.isBase?c():this;return function(b){a.options.deepOnly=k(b);return a}}},keys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.keys=k(b);return a}}},notKeys:{get:function(){var a=this.isBase?c():this;return function(b){a.options.notKeys=k(b);return a}}},transform:{get:function(){var a=this.isBase?\nc():this;return function(b){\"function\"===typeof b?a.options.globalTransform=b:b&&\"object\"===typeof b&&(a.options.transforms=b);return a}}},filter:{get:function(){var a=this.isBase?c():this;return function(b){\"function\"===typeof b?a.options.globalFilter=b:b&&\"object\"===typeof b&&(a.options.filters=b);return a}}}};return e=c(!0)};g[2]=function(e){var g;var k=function(a){return Array.isArray(a)};var c=function(a){return a&&\"[object Object]\"===Object.prototype.toString.call(a)||k(a)};var h=function(a,\nb,c){if(a.deep)return a.notDeep?!a.notDeep[b]:!0;if(a.deepOnly)return a.deepOnly[b]||c&&h(a,c)};return e=g=function(a,b,e,m){var d,n;if(!b||\"object\"!==typeof b&&\"function\"!==typeof b)b={};var q=0;for(n=e.length;q<n;q++){var l=e[q];if(null!=l)for(d in l){var f=l[d];var p=b[d];if(!(f===b||void 0===f||null===f&&!a.allowNull&&!a.nullDeletes||a.keys&&!a.keys[d]||a.notKeys&&a.notKeys[d]||a.own&&!l.hasOwnProperty(d)||a.globalFilter&&!a.globalFilter(f,d,l)||a.filters&&a.filters[d]&&!a.filters[d](f,d,l)))if(null===\nf&&a.nullDeletes)delete b[d];else switch(a.globalTransform&&(f=a.globalTransform(f,d,l)),a.transforms&&a.transforms[d]&&(f=a.transforms[d](f,d,l)),!1){case !(a.concat&&k(f)&&k(p)):b[d]=p.concat(f);break;case !(h(a,d,m)&&c(f)):p=c(p)?p:k(f)?[]:{};b[d]=g(a,p,[f],d);break;default:b[d]=f}}}return b}};return n};h=h({},{},{});return function(){var g=h(1);null!=(\"undefined\"!==typeof module&&null!==module?module.exports:void 0)?module.exports=g:\"function\"===typeof define&&define.amd?define([\"smart-extend\"],\nfunction(){return g}):window.extend=g}()}})(this)();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/smart-extend/lib/browser.js\n// module id = 25\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 26\n// module chunks = 0","/*! version: \"0.0.1\" */\n!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var o=t();for(var n in o)(\"object\"==typeof exports?exports:e)[n]=o[n]}}(this,function(){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p=\"/static/\",t(0)}([function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function e(){}return e.addClass=function(e,t){e.className=(e.className+\" \"+t).trim()},e.hasClass=function(e,t){return!(!t||(\" \"+e.className+\" \").indexOf(\" \"+t+\" \")==-1)},e.removeClass=function(e,t){var o=\" \"+e.className;e.className=o.replace(\" \"+t,\"\")},e}();t.XDomUtil=o}])});\n//# sourceMappingURL=xdom-util.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xdom-util/dist/xdom-util.min.js\n// module id = 27\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar ComponentInjector = (function () {\r\n    function ComponentInjector(resolver) {\r\n        this.resolver = resolver;\r\n    }\r\n    /**\r\n     * Inject a component into a ViewContainerRef element\r\n     * @param container ViewContainerRef element where to inject the component\r\n     * @param componentSelector string Selector of the component which should be injected\r\n     * @returns {ComponentRef<any>} Returns ComponentRef of the injected component\r\n     */\r\n    ComponentInjector.prototype.inject = function (container, componentSelector) {\r\n        var injectedComponent;\r\n        var componentFactory = this.getComponentFactory(componentSelector);\r\n        if (componentFactory) {\r\n            injectedComponent = this.injectComponentFactory(container, componentFactory);\r\n        }\r\n        else {\r\n            console.warn('Component [' + componentSelector + '] cannot be found! ' +\r\n                'Make sure it is included in the `entryComponents` list.');\r\n        }\r\n        return injectedComponent ? injectedComponent : null;\r\n    };\r\n    /**\r\n     * Set public properties of the component specified by the componentRef\r\n     * @param componentRef ComponentRef object where should be attached the properties\r\n     * @param properties Object which contains the keys (name of the property) and values (value of the property).\r\n     */\r\n    ComponentInjector.prototype.setProperties = function (componentRef, properties) {\r\n        if (componentRef) {\r\n            for (var property in properties) {\r\n                if (properties.hasOwnProperty(property)) {\r\n                    componentRef.instance[property] = properties[property];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Remove a component by its ComponentRef\r\n     * @param componentRef ComponentRef which should be removed\r\n     */\r\n    ComponentInjector.prototype.remove = function (componentRef) {\r\n        componentRef.destroy();\r\n        componentRef = null;\r\n    };\r\n    /**\r\n     * Get the component factory class from the _factories list based on its selector string name\r\n     * The list of the _factories is created based on the list of components listed in the entryComponents: [...]\r\n     * section of the @NgModule(...)\r\n     * @param componentSelector string Selector of the component\r\n     * @returns {ComponentFactory<any>|null} Returns the factory of the component or NULL if there is no such component\r\n     */\r\n    ComponentInjector.prototype.getComponentFactory = function (componentSelector) {\r\n        var componentFactory;\r\n        var factories = Array.from(this.resolver['_factories']);\r\n        var factory = factories.find(function (component) {\r\n            return component[1].selector === componentSelector;\r\n        });\r\n        if (factory) {\r\n            var factoryClass = factory[0];\r\n            componentFactory = this.resolver.resolveComponentFactory(factoryClass);\r\n        }\r\n        return componentFactory ? componentFactory : null;\r\n    };\r\n    /**\r\n     * Inject a componentFactory into a container element\r\n     * @param container ViewContainerRef container element where to inject the component\r\n     * @param componentFactory ComponentFactory which should be injected in the  container element\r\n     * @returns {ComponentRef<any>} returns ComponentRef of the injected componentFactory\r\n     */\r\n    ComponentInjector.prototype.injectComponentFactory = function (container, componentFactory) {\r\n        return container.createComponent(componentFactory);\r\n    };\r\n    return ComponentInjector;\r\n}());\r\nComponentInjector = __decorate([\r\n    core_1.Injectable(),\r\n    __metadata(\"design:paramtypes\", [core_1.ComponentFactoryResolver])\r\n], ComponentInjector);\r\nexports.ComponentInjector = ComponentInjector;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-injector/src/component-injector.ts\n// module id = 28\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar rx_pubsub_1 = require(\"rx-pubsub\");\r\nvar ModalWindowService = (function () {\r\n    function ModalWindowService(pubsub) {\r\n        this.pubsub = pubsub;\r\n    }\r\n    ModalWindowService.prototype.showModal = function (modalId, options) {\r\n        if (options === void 0) { options = {}; }\r\n        options.show = true;\r\n        options.hide = null;\r\n        this.pubsub.publish(modalId, options);\r\n    };\r\n    ModalWindowService.prototype.hideModal = function (modalId) {\r\n        var options = { hide: true };\r\n        this.pubsub.publish(modalId, options);\r\n    };\r\n    ModalWindowService.prototype.resetEventsSubscribers = function (eventsList) {\r\n        var _this = this;\r\n        eventsList.forEach(function (eventName) {\r\n            if (eventName && _this.pubsub.hasSubscribers(eventName)) {\r\n                _this.pubsub.dispose(eventName);\r\n            }\r\n        });\r\n    };\r\n    return ModalWindowService;\r\n}());\r\nModalWindowService = __decorate([\r\n    core_1.Injectable(),\r\n    __metadata(\"design:paramtypes\", [rx_pubsub_1.RxPubSub])\r\n], ModalWindowService);\r\nexports.ModalWindowService = ModalWindowService;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/services/modal-window.service.ts\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}